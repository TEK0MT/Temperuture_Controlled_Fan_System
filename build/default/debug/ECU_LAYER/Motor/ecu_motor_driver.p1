Version 4.0 HI-TECH Software Intermediate Code
"61 ECU_LAYER/Motor/../../MCAL_LAYER/GPIO/mcal_gpio.h
[; ;ECU_LAYER/Motor/../../MCAL_LAYER/GPIO/mcal_gpio.h: 61: typedef struct{
[s S101 :3 `uc 1 :3 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S101 . port pin logic direction ]
"18 ECU_LAYER/Motor/ecu_motor_driver.h
[; ;ECU_LAYER/Motor/ecu_motor_driver.h: 18: typedef struct{
[s S102 `S101 -> 2 `i ]
[n S102 . pins ]
"73 ECU_LAYER/Motor/../../MCAL_LAYER/GPIO/mcal_gpio.h
[; ;ECU_LAYER/Motor/../../MCAL_LAYER/GPIO/mcal_gpio.h: 73: uint8 gpio_pin_initialize(const pin_config_t *pin);
[v _gpio_pin_initialize `(uc ~T0 @X0 0 ef1`*CS101 ]
"25 ECU_LAYER/Motor/ecu_motor_driver.c
[; ;ECU_LAYER/Motor/ecu_motor_driver.c: 25:         ret = gpio_pin_write_logic(&(motor->pins[0]),GPIO_HIGH);
[c E1352 0 1 .. ]
[n E1352 . GPIO_LOW GPIO_HIGH  ]
"70 ECU_LAYER/Motor/../../MCAL_LAYER/GPIO/mcal_gpio.h
[; ;ECU_LAYER/Motor/../../MCAL_LAYER/GPIO/mcal_gpio.h: 70: uint8 gpio_pin_write_logic(const pin_config_t *pin,logic_t logic);
[v _gpio_pin_write_logic `(uc ~T0 @X0 0 ef2`*CS101`E1352 ]
"54 C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\../../../xc8/pic/include/proc/pic16f877a.h
[; <" INDF equ 00h ;# ">
"61
[; <" TMR0 equ 01h ;# ">
"68
[; <" PCL equ 02h ;# ">
"75
[; <" STATUS equ 03h ;# ">
"161
[; <" FSR equ 04h ;# ">
"168
[; <" PORTA equ 05h ;# ">
"218
[; <" PORTB equ 06h ;# ">
"280
[; <" PORTC equ 07h ;# ">
"342
[; <" PORTD equ 08h ;# ">
"404
[; <" PORTE equ 09h ;# ">
"436
[; <" PCLATH equ 0Ah ;# ">
"456
[; <" INTCON equ 0Bh ;# ">
"534
[; <" PIR1 equ 0Ch ;# ">
"596
[; <" PIR2 equ 0Dh ;# ">
"636
[; <" TMR1 equ 0Eh ;# ">
"643
[; <" TMR1L equ 0Eh ;# ">
"650
[; <" TMR1H equ 0Fh ;# ">
"657
[; <" T1CON equ 010h ;# ">
"732
[; <" TMR2 equ 011h ;# ">
"739
[; <" T2CON equ 012h ;# ">
"810
[; <" SSPBUF equ 013h ;# ">
"817
[; <" SSPCON equ 014h ;# ">
"887
[; <" CCPR1 equ 015h ;# ">
"894
[; <" CCPR1L equ 015h ;# ">
"901
[; <" CCPR1H equ 016h ;# ">
"908
[; <" CCP1CON equ 017h ;# ">
"966
[; <" RCSTA equ 018h ;# ">
"1061
[; <" TXREG equ 019h ;# ">
"1068
[; <" RCREG equ 01Ah ;# ">
"1075
[; <" CCPR2 equ 01Bh ;# ">
"1082
[; <" CCPR2L equ 01Bh ;# ">
"1089
[; <" CCPR2H equ 01Ch ;# ">
"1096
[; <" CCP2CON equ 01Dh ;# ">
"1154
[; <" ADRESH equ 01Eh ;# ">
"1161
[; <" ADCON0 equ 01Fh ;# ">
"1257
[; <" OPTION_REG equ 081h ;# ">
"1327
[; <" TRISA equ 085h ;# ">
"1377
[; <" TRISB equ 086h ;# ">
"1439
[; <" TRISC equ 087h ;# ">
"1501
[; <" TRISD equ 088h ;# ">
"1563
[; <" TRISE equ 089h ;# ">
"1620
[; <" PIE1 equ 08Ch ;# ">
"1682
[; <" PIE2 equ 08Dh ;# ">
"1722
[; <" PCON equ 08Eh ;# ">
"1756
[; <" SSPCON2 equ 091h ;# ">
"1818
[; <" PR2 equ 092h ;# ">
"1825
[; <" SSPADD equ 093h ;# ">
"1832
[; <" SSPSTAT equ 094h ;# ">
"2001
[; <" TXSTA equ 098h ;# ">
"2082
[; <" SPBRG equ 099h ;# ">
"2089
[; <" CMCON equ 09Ch ;# ">
"2159
[; <" CVRCON equ 09Dh ;# ">
"2224
[; <" ADRESL equ 09Eh ;# ">
"2231
[; <" ADCON1 equ 09Fh ;# ">
"2290
[; <" EEDATA equ 010Ch ;# ">
"2297
[; <" EEADR equ 010Dh ;# ">
"2304
[; <" EEDATH equ 010Eh ;# ">
"2311
[; <" EEADRH equ 010Fh ;# ">
"2318
[; <" EECON1 equ 018Ch ;# ">
"2363
[; <" EECON2 equ 018Dh ;# ">
"8 ECU_LAYER/Motor/ecu_motor_driver.c
[; ;ECU_LAYER/Motor/ecu_motor_driver.c: 8: uint8 motor_initialize(const motor_t *motor){
[v _motor_initialize `(uc ~T0 @X0 1 ef1`*CS102 ]
{
[e :U _motor_initialize ]
[v _motor `*CS102 ~T0 @X0 1 r1 ]
[f ]
"9
[; ;ECU_LAYER/Motor/ecu_motor_driver.c: 9:     uint8 ret = 0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"10
[; ;ECU_LAYER/Motor/ecu_motor_driver.c: 10:     if(motor == ((void*)0)){
[e $ ! == _motor -> -> -> 0 `i `*v `*CS102 104  ]
{
"11
[; ;ECU_LAYER/Motor/ecu_motor_driver.c: 11:         ret = 0x01;
[e = _ret -> -> 1 `i `uc ]
"12
[; ;ECU_LAYER/Motor/ecu_motor_driver.c: 12:     }
}
[e $U 105  ]
"13
[; ;ECU_LAYER/Motor/ecu_motor_driver.c: 13:     else{
[e :U 104 ]
{
"14
[; ;ECU_LAYER/Motor/ecu_motor_driver.c: 14:         ret = gpio_pin_initialize(&(motor->pins[0]));
[e = _ret ( _gpio_pin_initialize (1 &U *U + &U . *U _motor 0 * -> -> -> 0 `i `ui `ux -> -> # *U &U . *U _motor 0 `ui `ux ]
"15
[; ;ECU_LAYER/Motor/ecu_motor_driver.c: 15:         ret = gpio_pin_initialize(&(motor->pins[1]));
[e = _ret ( _gpio_pin_initialize (1 &U *U + &U . *U _motor 0 * -> -> -> 1 `i `ui `ux -> -> # *U &U . *U _motor 0 `ui `ux ]
"16
[; ;ECU_LAYER/Motor/ecu_motor_driver.c: 16:     }
}
[e :U 105 ]
"17
[; ;ECU_LAYER/Motor/ecu_motor_driver.c: 17:     return ret;
[e ) _ret ]
[e $UE 103  ]
"18
[; ;ECU_LAYER/Motor/ecu_motor_driver.c: 18: }
[e :UE 103 ]
}
"19
[; ;ECU_LAYER/Motor/ecu_motor_driver.c: 19: uint8 motor_turn_right(const motor_t *motor){
[v _motor_turn_right `(uc ~T0 @X0 1 ef1`*CS102 ]
{
[e :U _motor_turn_right ]
[v _motor `*CS102 ~T0 @X0 1 r1 ]
[f ]
"20
[; ;ECU_LAYER/Motor/ecu_motor_driver.c: 20:     uint8 ret = 0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"21
[; ;ECU_LAYER/Motor/ecu_motor_driver.c: 21:     if(motor == ((void*)0)){
[e $ ! == _motor -> -> -> 0 `i `*v `*CS102 107  ]
{
"22
[; ;ECU_LAYER/Motor/ecu_motor_driver.c: 22:         ret = 0x01;
[e = _ret -> -> 1 `i `uc ]
"23
[; ;ECU_LAYER/Motor/ecu_motor_driver.c: 23:     }
}
[e $U 108  ]
"24
[; ;ECU_LAYER/Motor/ecu_motor_driver.c: 24:     else{
[e :U 107 ]
{
"25
[; ;ECU_LAYER/Motor/ecu_motor_driver.c: 25:         ret = gpio_pin_write_logic(&(motor->pins[0]),GPIO_HIGH);
[e = _ret ( _gpio_pin_write_logic (2 , &U *U + &U . *U _motor 0 * -> -> -> 0 `i `ui `ux -> -> # *U &U . *U _motor 0 `ui `ux . `E1352 1 ]
"26
[; ;ECU_LAYER/Motor/ecu_motor_driver.c: 26:         ret = gpio_pin_write_logic(&(motor->pins[1]),GPIO_LOW);
[e = _ret ( _gpio_pin_write_logic (2 , &U *U + &U . *U _motor 0 * -> -> -> 1 `i `ui `ux -> -> # *U &U . *U _motor 0 `ui `ux . `E1352 0 ]
"27
[; ;ECU_LAYER/Motor/ecu_motor_driver.c: 27:     }
}
[e :U 108 ]
"28
[; ;ECU_LAYER/Motor/ecu_motor_driver.c: 28:     return ret;
[e ) _ret ]
[e $UE 106  ]
"29
[; ;ECU_LAYER/Motor/ecu_motor_driver.c: 29: }
[e :UE 106 ]
}
"30
[; ;ECU_LAYER/Motor/ecu_motor_driver.c: 30: uint8 motor_turn_left(const motor_t *motor){
[v _motor_turn_left `(uc ~T0 @X0 1 ef1`*CS102 ]
{
[e :U _motor_turn_left ]
[v _motor `*CS102 ~T0 @X0 1 r1 ]
[f ]
"31
[; ;ECU_LAYER/Motor/ecu_motor_driver.c: 31:     uint8 ret = 0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"32
[; ;ECU_LAYER/Motor/ecu_motor_driver.c: 32:     if(motor == ((void*)0)){
[e $ ! == _motor -> -> -> 0 `i `*v `*CS102 110  ]
{
"33
[; ;ECU_LAYER/Motor/ecu_motor_driver.c: 33:         ret = 0x01;
[e = _ret -> -> 1 `i `uc ]
"34
[; ;ECU_LAYER/Motor/ecu_motor_driver.c: 34:     }
}
[e $U 111  ]
"35
[; ;ECU_LAYER/Motor/ecu_motor_driver.c: 35:     else{
[e :U 110 ]
{
"36
[; ;ECU_LAYER/Motor/ecu_motor_driver.c: 36:         ret = gpio_pin_write_logic(&(motor->pins[0]),GPIO_LOW);
[e = _ret ( _gpio_pin_write_logic (2 , &U *U + &U . *U _motor 0 * -> -> -> 0 `i `ui `ux -> -> # *U &U . *U _motor 0 `ui `ux . `E1352 0 ]
"37
[; ;ECU_LAYER/Motor/ecu_motor_driver.c: 37:         ret = gpio_pin_write_logic(&(motor->pins[1]),GPIO_HIGH);
[e = _ret ( _gpio_pin_write_logic (2 , &U *U + &U . *U _motor 0 * -> -> -> 1 `i `ui `ux -> -> # *U &U . *U _motor 0 `ui `ux . `E1352 1 ]
"38
[; ;ECU_LAYER/Motor/ecu_motor_driver.c: 38:     }
}
[e :U 111 ]
"39
[; ;ECU_LAYER/Motor/ecu_motor_driver.c: 39:     return ret;
[e ) _ret ]
[e $UE 109  ]
"40
[; ;ECU_LAYER/Motor/ecu_motor_driver.c: 40: }
[e :UE 109 ]
}
"41
[; ;ECU_LAYER/Motor/ecu_motor_driver.c: 41: uint8 motor_turn_off(const motor_t *motor){
[v _motor_turn_off `(uc ~T0 @X0 1 ef1`*CS102 ]
{
[e :U _motor_turn_off ]
[v _motor `*CS102 ~T0 @X0 1 r1 ]
[f ]
"42
[; ;ECU_LAYER/Motor/ecu_motor_driver.c: 42:     uint8 ret = 0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"43
[; ;ECU_LAYER/Motor/ecu_motor_driver.c: 43:     if(motor == ((void*)0)){
[e $ ! == _motor -> -> -> 0 `i `*v `*CS102 113  ]
{
"44
[; ;ECU_LAYER/Motor/ecu_motor_driver.c: 44:         ret = 0x01;
[e = _ret -> -> 1 `i `uc ]
"45
[; ;ECU_LAYER/Motor/ecu_motor_driver.c: 45:     }
}
[e $U 114  ]
"46
[; ;ECU_LAYER/Motor/ecu_motor_driver.c: 46:     else{
[e :U 113 ]
{
"47
[; ;ECU_LAYER/Motor/ecu_motor_driver.c: 47:         ret = gpio_pin_write_logic(&(motor->pins[0]),GPIO_LOW);
[e = _ret ( _gpio_pin_write_logic (2 , &U *U + &U . *U _motor 0 * -> -> -> 0 `i `ui `ux -> -> # *U &U . *U _motor 0 `ui `ux . `E1352 0 ]
"48
[; ;ECU_LAYER/Motor/ecu_motor_driver.c: 48:         ret = gpio_pin_write_logic(&(motor->pins[1]),GPIO_LOW);
[e = _ret ( _gpio_pin_write_logic (2 , &U *U + &U . *U _motor 0 * -> -> -> 1 `i `ui `ux -> -> # *U &U . *U _motor 0 `ui `ux . `E1352 0 ]
"49
[; ;ECU_LAYER/Motor/ecu_motor_driver.c: 49:     }
}
[e :U 114 ]
"50
[; ;ECU_LAYER/Motor/ecu_motor_driver.c: 50:     return ret;
[e ) _ret ]
[e $UE 112  ]
"51
[; ;ECU_LAYER/Motor/ecu_motor_driver.c: 51: }
[e :UE 112 ]
}
