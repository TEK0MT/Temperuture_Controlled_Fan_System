

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Aug 16 14:41:41 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2,group=3
    49                           	psect	text34,local,class=CODE,merge=1,delta=2,group=1
    50                           	psect	text35,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text36,local,class=CODE,merge=1,delta=2,group=3
    52                           	psect	text37,local,class=CODE,merge=1,delta=2,group=3
    53                           	psect	text38,local,class=CODE,merge=1,delta=2,group=3
    54                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    55                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    56                           	psect	text41,local,class=CODE,merge=1,delta=2,group=3
    57                           	psect	text42,local,class=CODE,merge=1,delta=2
    58                           	psect	text43,local,class=CODE,merge=1,delta=2
    59                           	psect	text44,local,class=CODE,merge=1,delta=2
    60                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    61                           	dabs	1,0x7E,2
    62     0000                     
    63                           ; Generated 12/10/2023 GMT
    64                           ; 
    65                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    66                           ; All rights reserved.
    67                           ; 
    68                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    69                           ; 
    70                           ; Redistribution and use in source and binary forms, with or without modification, are
    71                           ; permitted provided that the following conditions are met:
    72                           ; 
    73                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    74                           ;        conditions and the following disclaimer.
    75                           ; 
    76                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    77                           ;        of conditions and the following disclaimer in the documentation and/or other
    78                           ;        materials provided with the distribution. Publication is not required when
    79                           ;        this file is used in an embedded application.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC16F877A Definitions
    95                           ; 
    96                           ; SFR Addresses
    97     0000                     	;# 
    98     0001                     	;# 
    99     0002                     	;# 
   100     0003                     	;# 
   101     0004                     	;# 
   102     0005                     	;# 
   103     0006                     	;# 
   104     0007                     	;# 
   105     0008                     	;# 
   106     0009                     	;# 
   107     000A                     	;# 
   108     000B                     	;# 
   109     000C                     	;# 
   110     000D                     	;# 
   111     000E                     	;# 
   112     000E                     	;# 
   113     000F                     	;# 
   114     0010                     	;# 
   115     0011                     	;# 
   116     0012                     	;# 
   117     0013                     	;# 
   118     0014                     	;# 
   119     0015                     	;# 
   120     0015                     	;# 
   121     0016                     	;# 
   122     0017                     	;# 
   123     0018                     	;# 
   124     0019                     	;# 
   125     001A                     	;# 
   126     001B                     	;# 
   127     001B                     	;# 
   128     001C                     	;# 
   129     001D                     	;# 
   130     001E                     	;# 
   131     001F                     	;# 
   132     0081                     	;# 
   133     0085                     	;# 
   134     0086                     	;# 
   135     0087                     	;# 
   136     0088                     	;# 
   137     0089                     	;# 
   138     008C                     	;# 
   139     008D                     	;# 
   140     008E                     	;# 
   141     0091                     	;# 
   142     0092                     	;# 
   143     0093                     	;# 
   144     0094                     	;# 
   145     0098                     	;# 
   146     0099                     	;# 
   147     009C                     	;# 
   148     009D                     	;# 
   149     009E                     	;# 
   150     009F                     	;# 
   151     010C                     	;# 
   152     010D                     	;# 
   153     010E                     	;# 
   154     010F                     	;# 
   155     018C                     	;# 
   156     018D                     	;# 
   157     0000                     	;# 
   158     0001                     	;# 
   159     0002                     	;# 
   160     0003                     	;# 
   161     0004                     	;# 
   162     0005                     	;# 
   163     0006                     	;# 
   164     0007                     	;# 
   165     0008                     	;# 
   166     0009                     	;# 
   167     000A                     	;# 
   168     000B                     	;# 
   169     000C                     	;# 
   170     000D                     	;# 
   171     000E                     	;# 
   172     000E                     	;# 
   173     000F                     	;# 
   174     0010                     	;# 
   175     0011                     	;# 
   176     0012                     	;# 
   177     0013                     	;# 
   178     0014                     	;# 
   179     0015                     	;# 
   180     0015                     	;# 
   181     0016                     	;# 
   182     0017                     	;# 
   183     0018                     	;# 
   184     0019                     	;# 
   185     001A                     	;# 
   186     001B                     	;# 
   187     001B                     	;# 
   188     001C                     	;# 
   189     001D                     	;# 
   190     001E                     	;# 
   191     001F                     	;# 
   192     0081                     	;# 
   193     0085                     	;# 
   194     0086                     	;# 
   195     0087                     	;# 
   196     0088                     	;# 
   197     0089                     	;# 
   198     008C                     	;# 
   199     008D                     	;# 
   200     008E                     	;# 
   201     0091                     	;# 
   202     0092                     	;# 
   203     0093                     	;# 
   204     0094                     	;# 
   205     0098                     	;# 
   206     0099                     	;# 
   207     009C                     	;# 
   208     009D                     	;# 
   209     009E                     	;# 
   210     009F                     	;# 
   211     010C                     	;# 
   212     010D                     	;# 
   213     010E                     	;# 
   214     010F                     	;# 
   215     018C                     	;# 
   216     018D                     	;# 
   217     0000                     	;# 
   218     0001                     	;# 
   219     0002                     	;# 
   220     0003                     	;# 
   221     0004                     	;# 
   222     0005                     	;# 
   223     0006                     	;# 
   224     0007                     	;# 
   225     0008                     	;# 
   226     0009                     	;# 
   227     000A                     	;# 
   228     000B                     	;# 
   229     000C                     	;# 
   230     000D                     	;# 
   231     000E                     	;# 
   232     000E                     	;# 
   233     000F                     	;# 
   234     0010                     	;# 
   235     0011                     	;# 
   236     0012                     	;# 
   237     0013                     	;# 
   238     0014                     	;# 
   239     0015                     	;# 
   240     0015                     	;# 
   241     0016                     	;# 
   242     0017                     	;# 
   243     0018                     	;# 
   244     0019                     	;# 
   245     001A                     	;# 
   246     001B                     	;# 
   247     001B                     	;# 
   248     001C                     	;# 
   249     001D                     	;# 
   250     001E                     	;# 
   251     001F                     	;# 
   252     0081                     	;# 
   253     0085                     	;# 
   254     0086                     	;# 
   255     0087                     	;# 
   256     0088                     	;# 
   257     0089                     	;# 
   258     008C                     	;# 
   259     008D                     	;# 
   260     008E                     	;# 
   261     0091                     	;# 
   262     0092                     	;# 
   263     0093                     	;# 
   264     0094                     	;# 
   265     0098                     	;# 
   266     0099                     	;# 
   267     009C                     	;# 
   268     009D                     	;# 
   269     009E                     	;# 
   270     009F                     	;# 
   271     010C                     	;# 
   272     010D                     	;# 
   273     010E                     	;# 
   274     010F                     	;# 
   275     018C                     	;# 
   276     018D                     	;# 
   277     0000                     	;# 
   278     0001                     	;# 
   279     0002                     	;# 
   280     0003                     	;# 
   281     0004                     	;# 
   282     0005                     	;# 
   283     0006                     	;# 
   284     0007                     	;# 
   285     0008                     	;# 
   286     0009                     	;# 
   287     000A                     	;# 
   288     000B                     	;# 
   289     000C                     	;# 
   290     000D                     	;# 
   291     000E                     	;# 
   292     000E                     	;# 
   293     000F                     	;# 
   294     0010                     	;# 
   295     0011                     	;# 
   296     0012                     	;# 
   297     0013                     	;# 
   298     0014                     	;# 
   299     0015                     	;# 
   300     0015                     	;# 
   301     0016                     	;# 
   302     0017                     	;# 
   303     0018                     	;# 
   304     0019                     	;# 
   305     001A                     	;# 
   306     001B                     	;# 
   307     001B                     	;# 
   308     001C                     	;# 
   309     001D                     	;# 
   310     001E                     	;# 
   311     001F                     	;# 
   312     0081                     	;# 
   313     0085                     	;# 
   314     0086                     	;# 
   315     0087                     	;# 
   316     0088                     	;# 
   317     0089                     	;# 
   318     008C                     	;# 
   319     008D                     	;# 
   320     008E                     	;# 
   321     0091                     	;# 
   322     0092                     	;# 
   323     0093                     	;# 
   324     0094                     	;# 
   325     0098                     	;# 
   326     0099                     	;# 
   327     009C                     	;# 
   328     009D                     	;# 
   329     009E                     	;# 
   330     009F                     	;# 
   331     010C                     	;# 
   332     010D                     	;# 
   333     010E                     	;# 
   334     010F                     	;# 
   335     018C                     	;# 
   336     018D                     	;# 
   337     0000                     	;# 
   338     0001                     	;# 
   339     0002                     	;# 
   340     0003                     	;# 
   341     0004                     	;# 
   342     0005                     	;# 
   343     0006                     	;# 
   344     0007                     	;# 
   345     0008                     	;# 
   346     0009                     	;# 
   347     000A                     	;# 
   348     000B                     	;# 
   349     000C                     	;# 
   350     000D                     	;# 
   351     000E                     	;# 
   352     000E                     	;# 
   353     000F                     	;# 
   354     0010                     	;# 
   355     0011                     	;# 
   356     0012                     	;# 
   357     0013                     	;# 
   358     0014                     	;# 
   359     0015                     	;# 
   360     0015                     	;# 
   361     0016                     	;# 
   362     0017                     	;# 
   363     0018                     	;# 
   364     0019                     	;# 
   365     001A                     	;# 
   366     001B                     	;# 
   367     001B                     	;# 
   368     001C                     	;# 
   369     001D                     	;# 
   370     001E                     	;# 
   371     001F                     	;# 
   372     0081                     	;# 
   373     0085                     	;# 
   374     0086                     	;# 
   375     0087                     	;# 
   376     0088                     	;# 
   377     0089                     	;# 
   378     008C                     	;# 
   379     008D                     	;# 
   380     008E                     	;# 
   381     0091                     	;# 
   382     0092                     	;# 
   383     0093                     	;# 
   384     0094                     	;# 
   385     0098                     	;# 
   386     0099                     	;# 
   387     009C                     	;# 
   388     009D                     	;# 
   389     009E                     	;# 
   390     009F                     	;# 
   391     010C                     	;# 
   392     010D                     	;# 
   393     010E                     	;# 
   394     010F                     	;# 
   395     018C                     	;# 
   396     018D                     	;# 
   397     0000                     	;# 
   398     0001                     	;# 
   399     0002                     	;# 
   400     0003                     	;# 
   401     0004                     	;# 
   402     0005                     	;# 
   403     0006                     	;# 
   404     0007                     	;# 
   405     0008                     	;# 
   406     0009                     	;# 
   407     000A                     	;# 
   408     000B                     	;# 
   409     000C                     	;# 
   410     000D                     	;# 
   411     000E                     	;# 
   412     000E                     	;# 
   413     000F                     	;# 
   414     0010                     	;# 
   415     0011                     	;# 
   416     0012                     	;# 
   417     0013                     	;# 
   418     0014                     	;# 
   419     0015                     	;# 
   420     0015                     	;# 
   421     0016                     	;# 
   422     0017                     	;# 
   423     0018                     	;# 
   424     0019                     	;# 
   425     001A                     	;# 
   426     001B                     	;# 
   427     001B                     	;# 
   428     001C                     	;# 
   429     001D                     	;# 
   430     001E                     	;# 
   431     001F                     	;# 
   432     0081                     	;# 
   433     0085                     	;# 
   434     0086                     	;# 
   435     0087                     	;# 
   436     0088                     	;# 
   437     0089                     	;# 
   438     008C                     	;# 
   439     008D                     	;# 
   440     008E                     	;# 
   441     0091                     	;# 
   442     0092                     	;# 
   443     0093                     	;# 
   444     0094                     	;# 
   445     0098                     	;# 
   446     0099                     	;# 
   447     009C                     	;# 
   448     009D                     	;# 
   449     009E                     	;# 
   450     009F                     	;# 
   451     010C                     	;# 
   452     010D                     	;# 
   453     010E                     	;# 
   454     010F                     	;# 
   455     018C                     	;# 
   456     018D                     	;# 
   457     0000                     	;# 
   458     0001                     	;# 
   459     0002                     	;# 
   460     0003                     	;# 
   461     0004                     	;# 
   462     0005                     	;# 
   463     0006                     	;# 
   464     0007                     	;# 
   465     0008                     	;# 
   466     0009                     	;# 
   467     000A                     	;# 
   468     000B                     	;# 
   469     000C                     	;# 
   470     000D                     	;# 
   471     000E                     	;# 
   472     000E                     	;# 
   473     000F                     	;# 
   474     0010                     	;# 
   475     0011                     	;# 
   476     0012                     	;# 
   477     0013                     	;# 
   478     0014                     	;# 
   479     0015                     	;# 
   480     0015                     	;# 
   481     0016                     	;# 
   482     0017                     	;# 
   483     0018                     	;# 
   484     0019                     	;# 
   485     001A                     	;# 
   486     001B                     	;# 
   487     001B                     	;# 
   488     001C                     	;# 
   489     001D                     	;# 
   490     001E                     	;# 
   491     001F                     	;# 
   492     0081                     	;# 
   493     0085                     	;# 
   494     0086                     	;# 
   495     0087                     	;# 
   496     0088                     	;# 
   497     0089                     	;# 
   498     008C                     	;# 
   499     008D                     	;# 
   500     008E                     	;# 
   501     0091                     	;# 
   502     0092                     	;# 
   503     0093                     	;# 
   504     0094                     	;# 
   505     0098                     	;# 
   506     0099                     	;# 
   507     009C                     	;# 
   508     009D                     	;# 
   509     009E                     	;# 
   510     009F                     	;# 
   511     010C                     	;# 
   512     010D                     	;# 
   513     010E                     	;# 
   514     010F                     	;# 
   515     018C                     	;# 
   516     018D                     	;# 
   517     0000                     	;# 
   518     0001                     	;# 
   519     0002                     	;# 
   520     0003                     	;# 
   521     0004                     	;# 
   522     0005                     	;# 
   523     0006                     	;# 
   524     0007                     	;# 
   525     0008                     	;# 
   526     0009                     	;# 
   527     000A                     	;# 
   528     000B                     	;# 
   529     000C                     	;# 
   530     000D                     	;# 
   531     000E                     	;# 
   532     000E                     	;# 
   533     000F                     	;# 
   534     0010                     	;# 
   535     0011                     	;# 
   536     0012                     	;# 
   537     0013                     	;# 
   538     0014                     	;# 
   539     0015                     	;# 
   540     0015                     	;# 
   541     0016                     	;# 
   542     0017                     	;# 
   543     0018                     	;# 
   544     0019                     	;# 
   545     001A                     	;# 
   546     001B                     	;# 
   547     001B                     	;# 
   548     001C                     	;# 
   549     001D                     	;# 
   550     001E                     	;# 
   551     001F                     	;# 
   552     0081                     	;# 
   553     0085                     	;# 
   554     0086                     	;# 
   555     0087                     	;# 
   556     0088                     	;# 
   557     0089                     	;# 
   558     008C                     	;# 
   559     008D                     	;# 
   560     008E                     	;# 
   561     0091                     	;# 
   562     0092                     	;# 
   563     0093                     	;# 
   564     0094                     	;# 
   565     0098                     	;# 
   566     0099                     	;# 
   567     009C                     	;# 
   568     009D                     	;# 
   569     009E                     	;# 
   570     009F                     	;# 
   571     010C                     	;# 
   572     010D                     	;# 
   573     010E                     	;# 
   574     010F                     	;# 
   575     018C                     	;# 
   576     018D                     	;# 
   577     0000                     	;# 
   578     0001                     	;# 
   579     0002                     	;# 
   580     0003                     	;# 
   581     0004                     	;# 
   582     0005                     	;# 
   583     0006                     	;# 
   584     0007                     	;# 
   585     0008                     	;# 
   586     0009                     	;# 
   587     000A                     	;# 
   588     000B                     	;# 
   589     000C                     	;# 
   590     000D                     	;# 
   591     000E                     	;# 
   592     000E                     	;# 
   593     000F                     	;# 
   594     0010                     	;# 
   595     0011                     	;# 
   596     0012                     	;# 
   597     0013                     	;# 
   598     0014                     	;# 
   599     0015                     	;# 
   600     0015                     	;# 
   601     0016                     	;# 
   602     0017                     	;# 
   603     0018                     	;# 
   604     0019                     	;# 
   605     001A                     	;# 
   606     001B                     	;# 
   607     001B                     	;# 
   608     001C                     	;# 
   609     001D                     	;# 
   610     001E                     	;# 
   611     001F                     	;# 
   612     0081                     	;# 
   613     0085                     	;# 
   614     0086                     	;# 
   615     0087                     	;# 
   616     0088                     	;# 
   617     0089                     	;# 
   618     008C                     	;# 
   619     008D                     	;# 
   620     008E                     	;# 
   621     0091                     	;# 
   622     0092                     	;# 
   623     0093                     	;# 
   624     0094                     	;# 
   625     0098                     	;# 
   626     0099                     	;# 
   627     009C                     	;# 
   628     009D                     	;# 
   629     009E                     	;# 
   630     009F                     	;# 
   631     010C                     	;# 
   632     010D                     	;# 
   633     010E                     	;# 
   634     010F                     	;# 
   635     018C                     	;# 
   636     018D                     	;# 
   637     0000                     	;# 
   638     0001                     	;# 
   639     0002                     	;# 
   640     0003                     	;# 
   641     0004                     	;# 
   642     0005                     	;# 
   643     0006                     	;# 
   644     0007                     	;# 
   645     0008                     	;# 
   646     0009                     	;# 
   647     000A                     	;# 
   648     000B                     	;# 
   649     000C                     	;# 
   650     000D                     	;# 
   651     000E                     	;# 
   652     000E                     	;# 
   653     000F                     	;# 
   654     0010                     	;# 
   655     0011                     	;# 
   656     0012                     	;# 
   657     0013                     	;# 
   658     0014                     	;# 
   659     0015                     	;# 
   660     0015                     	;# 
   661     0016                     	;# 
   662     0017                     	;# 
   663     0018                     	;# 
   664     0019                     	;# 
   665     001A                     	;# 
   666     001B                     	;# 
   667     001B                     	;# 
   668     001C                     	;# 
   669     001D                     	;# 
   670     001E                     	;# 
   671     001F                     	;# 
   672     0081                     	;# 
   673     0085                     	;# 
   674     0086                     	;# 
   675     0087                     	;# 
   676     0088                     	;# 
   677     0089                     	;# 
   678     008C                     	;# 
   679     008D                     	;# 
   680     008E                     	;# 
   681     0091                     	;# 
   682     0092                     	;# 
   683     0093                     	;# 
   684     0094                     	;# 
   685     0098                     	;# 
   686     0099                     	;# 
   687     009C                     	;# 
   688     009D                     	;# 
   689     009E                     	;# 
   690     009F                     	;# 
   691     010C                     	;# 
   692     010D                     	;# 
   693     010E                     	;# 
   694     010F                     	;# 
   695     018C                     	;# 
   696     018D                     	;# 
   697     0000                     	;# 
   698     0001                     	;# 
   699     0002                     	;# 
   700     0003                     	;# 
   701     0004                     	;# 
   702     0005                     	;# 
   703     0006                     	;# 
   704     0007                     	;# 
   705     0008                     	;# 
   706     0009                     	;# 
   707     000A                     	;# 
   708     000B                     	;# 
   709     000C                     	;# 
   710     000D                     	;# 
   711     000E                     	;# 
   712     000E                     	;# 
   713     000F                     	;# 
   714     0010                     	;# 
   715     0011                     	;# 
   716     0012                     	;# 
   717     0013                     	;# 
   718     0014                     	;# 
   719     0015                     	;# 
   720     0015                     	;# 
   721     0016                     	;# 
   722     0017                     	;# 
   723     0018                     	;# 
   724     0019                     	;# 
   725     001A                     	;# 
   726     001B                     	;# 
   727     001B                     	;# 
   728     001C                     	;# 
   729     001D                     	;# 
   730     001E                     	;# 
   731     001F                     	;# 
   732     0081                     	;# 
   733     0085                     	;# 
   734     0086                     	;# 
   735     0087                     	;# 
   736     0088                     	;# 
   737     0089                     	;# 
   738     008C                     	;# 
   739     008D                     	;# 
   740     008E                     	;# 
   741     0091                     	;# 
   742     0092                     	;# 
   743     0093                     	;# 
   744     0094                     	;# 
   745     0098                     	;# 
   746     0099                     	;# 
   747     009C                     	;# 
   748     009D                     	;# 
   749     009E                     	;# 
   750     009F                     	;# 
   751     010C                     	;# 
   752     010D                     	;# 
   753     010E                     	;# 
   754     010F                     	;# 
   755     018C                     	;# 
   756     018D                     	;# 
   757     0000                     	;# 
   758     0001                     	;# 
   759     0002                     	;# 
   760     0003                     	;# 
   761     0004                     	;# 
   762     0005                     	;# 
   763     0006                     	;# 
   764     0007                     	;# 
   765     0008                     	;# 
   766     0009                     	;# 
   767     000A                     	;# 
   768     000B                     	;# 
   769     000C                     	;# 
   770     000D                     	;# 
   771     000E                     	;# 
   772     000E                     	;# 
   773     000F                     	;# 
   774     0010                     	;# 
   775     0011                     	;# 
   776     0012                     	;# 
   777     0013                     	;# 
   778     0014                     	;# 
   779     0015                     	;# 
   780     0015                     	;# 
   781     0016                     	;# 
   782     0017                     	;# 
   783     0018                     	;# 
   784     0019                     	;# 
   785     001A                     	;# 
   786     001B                     	;# 
   787     001B                     	;# 
   788     001C                     	;# 
   789     001D                     	;# 
   790     001E                     	;# 
   791     001F                     	;# 
   792     0081                     	;# 
   793     0085                     	;# 
   794     0086                     	;# 
   795     0087                     	;# 
   796     0088                     	;# 
   797     0089                     	;# 
   798     008C                     	;# 
   799     008D                     	;# 
   800     008E                     	;# 
   801     0091                     	;# 
   802     0092                     	;# 
   803     0093                     	;# 
   804     0094                     	;# 
   805     0098                     	;# 
   806     0099                     	;# 
   807     009C                     	;# 
   808     009D                     	;# 
   809     009E                     	;# 
   810     009F                     	;# 
   811     010C                     	;# 
   812     010D                     	;# 
   813     010E                     	;# 
   814     010F                     	;# 
   815     018C                     	;# 
   816     018D                     	;# 
   817     0000                     	;# 
   818     0001                     	;# 
   819     0002                     	;# 
   820     0003                     	;# 
   821     0004                     	;# 
   822     0005                     	;# 
   823     0006                     	;# 
   824     0007                     	;# 
   825     0008                     	;# 
   826     0009                     	;# 
   827     000A                     	;# 
   828     000B                     	;# 
   829     000C                     	;# 
   830     000D                     	;# 
   831     000E                     	;# 
   832     000E                     	;# 
   833     000F                     	;# 
   834     0010                     	;# 
   835     0011                     	;# 
   836     0012                     	;# 
   837     0013                     	;# 
   838     0014                     	;# 
   839     0015                     	;# 
   840     0015                     	;# 
   841     0016                     	;# 
   842     0017                     	;# 
   843     0018                     	;# 
   844     0019                     	;# 
   845     001A                     	;# 
   846     001B                     	;# 
   847     001B                     	;# 
   848     001C                     	;# 
   849     001D                     	;# 
   850     001E                     	;# 
   851     001F                     	;# 
   852     0081                     	;# 
   853     0085                     	;# 
   854     0086                     	;# 
   855     0087                     	;# 
   856     0088                     	;# 
   857     0089                     	;# 
   858     008C                     	;# 
   859     008D                     	;# 
   860     008E                     	;# 
   861     0091                     	;# 
   862     0092                     	;# 
   863     0093                     	;# 
   864     0094                     	;# 
   865     0098                     	;# 
   866     0099                     	;# 
   867     009C                     	;# 
   868     009D                     	;# 
   869     009E                     	;# 
   870     009F                     	;# 
   871     010C                     	;# 
   872     010D                     	;# 
   873     010E                     	;# 
   874     010F                     	;# 
   875     018C                     	;# 
   876     018D                     	;# 
   877                           
   878                           	psect	idataBANK1
   879     1766                     __pidataBANK1:
   880                           
   881                           ;initializer for _port_registers
   882     1766  3405               	retlw	5
   883     1767  3400               	retlw	0
   884     1768  3406               	retlw	6
   885     1769  3400               	retlw	0
   886     176A  3407               	retlw	7
   887     176B  3400               	retlw	0
   888     176C  3408               	retlw	8
   889     176D  3400               	retlw	0
   890     176E  3409               	retlw	9
   891     176F  3400               	retlw	0
   892                           
   893                           ;initializer for _tris_registers
   894     1770  3485               	retlw	133
   895     1771  3400               	retlw	0
   896     1772  3486               	retlw	134
   897     1773  3400               	retlw	0
   898     1774  3487               	retlw	135
   899     1775  3400               	retlw	0
   900     1776  3488               	retlw	136
   901     1777  3400               	retlw	0
   902     1778  3489               	retlw	137
   903     1779  3400               	retlw	0
   904                           
   905                           ;initializer for _pass
   906     177A  3435               	retlw	53
   907     177B  3434               	retlw	52
   908     177C  3438               	retlw	56
   909     177D  3439               	retlw	57
   910                           
   911                           ;initializer for _keypad
   912     177E  3401               	retlw	1
   913     177F  3409               	retlw	9
   914     1780  3411               	retlw	17
   915     1781  3419               	retlw	25
   916     1782  34A1               	retlw	161
   917     1783  34A9               	retlw	169
   918     1784  34B1               	retlw	177
   919                           
   920                           ;initializer for _lcd
   921     1785  3402               	retlw	2
   922     1786  340A               	retlw	10
   923     1787  3412               	retlw	18
   924     1788  341A               	retlw	26
   925     1789  3422               	retlw	34
   926     178A  342A               	retlw	42
   927                           
   928                           ;initializer for _temp
   929     178B  342E               	retlw	46
   930     178C  342E               	retlw	46
   931     178D  342E               	retlw	46
   932     178E  342E               	retlw	46
   933                           
   934                           ;initializer for _adc
   935     178F  3400               	retlw	0
   936     1790  3404               	retlw	4
   937     1791  3400               	retlw	0
   938                           
   939                           ;initializer for _motor2
   940     1792  3413               	retlw	19
   941     1793  341B               	retlw	27
   942                           
   943                           ;initializer for _motor1
   944     1794  3403               	retlw	3
   945     1795  340B               	retlw	11
   946                           
   947                           	psect	strings
   948     1000                     __pstrings:
   949     1000                     stringtab:
   950     1000                     __stringtab:
   951                           
   952                           ;	String table - string pointers are 1 byte each
   953     1000  1BFF               	btfsc	btemp+1,7
   954     1001  280A               	ljmp	stringcode
   955     1002  1383               	bcf	3,7
   956     1003  187F               	btfsc	btemp+1,0
   957     1004  1783               	bsf	3,7
   958     1005  0800               	movf	0,w
   959     1006  0A84               	incf	4,f
   960     1007  1903               	skipnz
   961     1008  0AFF               	incf	btemp+1,f
   962     1009  0008               	return
   963     100A                     stringcode:
   964     100A                     stringdir:
   965     100A  3010               	movlw	high stringdir
   966     100B  008A               	movwf	10
   967     100C  0804               	movf	4,w
   968     100D  0A84               	incf	4,f
   969     100E  0782               	addwf	2,f
   970     100F                     __stringbase:
   971     100F  3400               	retlw	0
   972     1010                     __end_of__stringtab:
   973     1010                     _btn_values:
   974     1010  3431               	retlw	49
   975     1011  3432               	retlw	50
   976     1012  3433               	retlw	51
   977     1013  3434               	retlw	52
   978     1014  3435               	retlw	53
   979     1015  3436               	retlw	54
   980     1016  3437               	retlw	55
   981     1017  3438               	retlw	56
   982     1018  3439               	retlw	57
   983     1019  342A               	retlw	42
   984     101A  3430               	retlw	48
   985     101B  3423               	retlw	35
   986     101C                     __end_of_btn_values:
   987     000B                     _INTCONbits	set	11
   988     001E                     _ADRESH	set	30
   989     001F                     _ADCON0bits	set	31
   990     0009                     _PORTE	set	9
   991     0008                     _PORTD	set	8
   992     0007                     _PORTC	set	7
   993     0006                     _PORTB	set	6
   994     0005                     _PORTA	set	5
   995     009E                     _ADRESL	set	158
   996     009F                     _ADCON1bits	set	159
   997     0089                     _TRISE	set	137
   998     0088                     _TRISD	set	136
   999     0087                     _TRISC	set	135
  1000     0086                     _TRISB	set	134
  1001     0085                     _TRISA	set	133
  1002     010C                     _EEDATA	set	268
  1003     010D                     _EEADR	set	269
  1004     018D                     _EECON2	set	397
  1005     018C                     _EECON1bits	set	396
  1006     101C                     STR_5:
  1007     101C  344D               	retlw	77	;'M'
  1008     101D  3461               	retlw	97	;'a'
  1009     101E  3478               	retlw	120	;'x'
  1010     101F  3420               	retlw	32	;' '
  1011     1020  3454               	retlw	84	;'T'
  1012     1021  3465               	retlw	101	;'e'
  1013     1022  346D               	retlw	109	;'m'
  1014     1023  3470               	retlw	112	;'p'
  1015     1024  3420               	retlw	32	;' '
  1016     1025  3469               	retlw	105	;'i'
  1017     1026  3473               	retlw	115	;'s'
  1018     1027  3420               	retlw	32	;' '
  1019     1028  343A               	retlw	58	;':'
  1020     1029  3420               	retlw	32	;' '
  1021     102A  3400               	retlw	0
  1022     102B                     STR_6:
  1023     102B  3445               	retlw	69	;'E'
  1024     102C  346E               	retlw	110	;'n'
  1025     102D  3474               	retlw	116	;'t'
  1026     102E  3465               	retlw	101	;'e'
  1027     102F  3472               	retlw	114	;'r'
  1028     1030  3420               	retlw	32	;' '
  1029     1031  3470               	retlw	112	;'p'
  1030     1032  3461               	retlw	97	;'a'
  1031     1033  3473               	retlw	115	;'s'
  1032     1034  3473               	retlw	115	;'s'
  1033     1035  3477               	retlw	119	;'w'
  1034     1036  346F               	retlw	111	;'o'
  1035     1037  3472               	retlw	114	;'r'
  1036     1038  3464               	retlw	100	;'d'
  1037     1039  3400               	retlw	0
  1038     103A                     STR_1:
  1039     103A  3425               	retlw	37	;'%'
  1040     103B  3469               	retlw	105	;'i'
  1041     103C  3400               	retlw	0
  1042     1020                     
  1043                           	psect	cinit
  1044     07D4                     start_initialization:	
  1045                           ; #config settings
  1046                           
  1047     07D4                     __initialization:
  1048                           
  1049                           ; Initialize objects allocated to BANK1
  1050     07D4  1383               	bcf	3,7	;select IRP bank0
  1051     07D5  30D0               	movlw	low (__pdataBANK1+48)
  1052     07D6  00FD               	movwf	btemp+-1
  1053     07D7  3017               	movlw	high __pidataBANK1
  1054     07D8  00FE               	movwf	btemp
  1055     07D9  3066               	movlw	low __pidataBANK1
  1056     07DA  00FF               	movwf	btemp+1
  1057     07DB  30A0               	movlw	low __pdataBANK1
  1058     07DC  0084               	movwf	4
  1059     07DD  160A  118A  2581  120A  118A  	fcall	init_ram0
  1060                           
  1061                           ; Clear objects allocated to BANK3
  1062     07E2  1783               	bsf	3,7	;select IRP bank2
  1063     07E3  3090               	movlw	low __pbssBANK3
  1064     07E4  0084               	movwf	4
  1065     07E5  30BB               	movlw	low (__pbssBANK3+43)
  1066     07E6  160A  118A  2538  120A  118A  	fcall	clear_ram0
  1067                           
  1068                           ; Clear objects allocated to BANK1
  1069     07EB  1383               	bcf	3,7	;select IRP bank0
  1070     07EC  30D0               	movlw	low __pbssBANK1
  1071     07ED  0084               	movwf	4
  1072     07EE  30F0               	movlw	low (__pbssBANK1+32)
  1073     07EF  160A  118A  2538  120A  118A  	fcall	clear_ram0
  1074                           
  1075                           ; Clear objects allocated to BANK0
  1076     07F4  3063               	movlw	low __pbssBANK0
  1077     07F5  0084               	movwf	4
  1078     07F6  3070               	movlw	low (__pbssBANK0+13)
  1079     07F7  160A  118A  2538  120A  118A  	fcall	clear_ram0
  1080     07FC                     end_of_initialization:	
  1081                           ;End of C runtime variable initialization code
  1082                           
  1083     07FC                     __end_of__initialization:
  1084     07FC  0183               	clrf	3
  1085     07FD  120A  118A  2913   	ljmp	_main	;jump to C main() function
  1086                           
  1087                           	psect	bssBANK0
  1088     0063                     __pbssBANK0:
  1089     0063                     _Temp:
  1090     0063                     	ds	2
  1091     0065                     _flag:
  1092     0065                     	ds	1
  1093     0066                     _EXT_RB6_LOW_HANDLER:
  1094     0066                     	ds	1
  1095     0067                     _EXT_RB6_HIGH_HANDLER:
  1096     0067                     	ds	1
  1097     0068                     _EXT_RB5_LOW_HANDLER:
  1098     0068                     	ds	1
  1099     0069                     _EXT_RB5_HIGH_HANDLER:
  1100     0069                     	ds	1
  1101     006A                     _EXT_RB4_LOW_HANDLER:
  1102     006A                     	ds	1
  1103     006B                     _EXT_RB4_HIGH_HANDLER:
  1104     006B                     	ds	1
  1105     006C                     _EXT_INTX_HANDLER:
  1106     006C                     	ds	1
  1107     006D                     _Max_Temp:
  1108     006D                     	ds	2
  1109     006F                     _val:
  1110     006F                     	ds	1
  1111                           
  1112                           	psect	bssBANK1
  1113     00D0                     __pbssBANK1:
  1114     00D0                     Convert_uint16_to_string@F1649:
  1115     00D0                     	ds	6
  1116     00D6                     Convert_uint8_to_string@F1643:
  1117     00D6                     	ds	4
  1118     00DA                     _width:
  1119     00DA                     	ds	2
  1120     00DC                     _prec:
  1121     00DC                     	ds	2
  1122     00DE                     _flags:
  1123     00DE                     	ds	1
  1124     00DF                     _counter:
  1125     00DF                     	ds	1
  1126     00E0                     _EXT_RB7_LOW_HANDLER:
  1127     00E0                     	ds	1
  1128     00E1                     _EXT_RB7_HIGH_HANDLER:
  1129     00E1                     	ds	1
  1130     00E2                     _lcd_show_max:
  1131     00E2                     	ds	6
  1132     00E8                     _lcd_show:
  1133     00E8                     	ds	6
  1134     00EE                     _adc_res:
  1135     00EE                     	ds	2
  1136                           
  1137                           	psect	dataBANK1
  1138     00A0                     __pdataBANK1:
  1139     00A0                     _port_registers:
  1140     00A0                     	ds	10
  1141     00AA                     _tris_registers:
  1142     00AA                     	ds	10
  1143     00B4                     _pass:
  1144     00B4                     	ds	4
  1145     00B8                     _keypad:
  1146     00B8                     	ds	7
  1147     00BF                     _lcd:
  1148     00BF                     	ds	6
  1149     00C5                     _temp:
  1150     00C5                     	ds	4
  1151     00C9                     _adc:
  1152     00C9                     	ds	3
  1153     00CC                     _motor2:
  1154     00CC                     	ds	2
  1155     00CE                     _motor1:
  1156     00CE                     	ds	2
  1157                           
  1158                           	psect	bssBANK3
  1159     0190                     __pbssBANK3:
  1160     0190                     _dbuf:
  1161     0190                     	ds	32
  1162     01B0                     Convert_uint32_to_string@F1655:
  1163     01B0                     	ds	11
  1164                           
  1165                           	psect	inittext
  1166     157D                     init_fetch0:	
  1167                           ;	Called with low address in FSR and high address in W
  1168                           
  1169     157D  087E               	movf	btemp,w
  1170     157E  008A               	movwf	10
  1171     157F  087F               	movf	btemp+1,w
  1172     1580  0082               	movwf	2
  1173     1581                     init_ram0:	
  1174                           ;Called with:
  1175                           ;	high address of idata address in btemp 
  1176                           ;	low address of idata address in btemp+1 
  1177                           ;	low address of data in FSR
  1178                           ;	high address + 1 of data in btemp-1
  1179                           
  1180     1581  160A  118A  257D  160A  118A  	fcall	init_fetch0
  1181     1586  0080               	movwf	0
  1182     1587  0A84               	incf	4,f
  1183     1588  0804               	movf	4,w
  1184     1589  067D               	xorwf	btemp+-1,w
  1185     158A  1903               	btfsc	3,2
  1186     158B  3400               	retlw	0
  1187     158C  0AFF               	incf	btemp+1,f
  1188     158D  1903               	btfsc	3,2
  1189     158E  0AFE               	incf	btemp,f
  1190     158F  2D81               	goto	init_ram0
  1191                           
  1192                           	psect	clrtext
  1193     1538                     clear_ram0:	
  1194                           ;	Called with FSR containing the base address, and
  1195                           ;	W with the last address+1
  1196                           
  1197     1538  0064               	clrwdt	;clear the watchdog before getting into this loop
  1198     1539                     clrloop0:
  1199     1539  0180               	clrf	0	;clear RAM location pointed to by FSR
  1200     153A  0A84               	incf	4,f	;increment pointer
  1201     153B  0604               	xorwf	4,w	;XOR with final address
  1202     153C  1903               	btfsc	3,2	;have we reached the end yet?
  1203     153D  3400               	retlw	0	;all done for this memory range, return
  1204     153E  0604               	xorwf	4,w	;XOR again to restore value
  1205     153F  2D39               	goto	clrloop0	;do the next byte
  1206                           
  1207                           	psect	cstackCOMMON
  1208     0070                     __pcstackCOMMON:
  1209     0070                     ?_gpio_pin_initialize:
  1210     0070                     ?_gpio_pin_write_logic:	
  1211                           ; 1 bytes @ 0x0
  1212                           
  1213     0070                     ?_send_enable_signal:	
  1214                           ; 1 bytes @ 0x0
  1215                           
  1216     0070                     ?_memset:	
  1217                           ; 1 bytes @ 0x0
  1218                           
  1219     0070                     ?_keypad_initialize:	
  1220                           ; 1 bytes @ 0x0
  1221                           
  1222     0070                     ?_Result_Format:	
  1223                           ; 1 bytes @ 0x0
  1224                           
  1225     0070                     ??_Result_Format:	
  1226                           ; 1 bytes @ 0x0
  1227                           
  1228     0070                     ?_apllication_initilaize:	
  1229                           ; 1 bytes @ 0x0
  1230                           
  1231     0070                     ?_putch:	
  1232                           ; 1 bytes @ 0x0
  1233                           
  1234     0070                     ??_putch:	
  1235                           ; 1 bytes @ 0x0
  1236                           
  1237     0070                     ?_lcd_4bits_initialize:	
  1238                           ; 1 bytes @ 0x0
  1239                           
  1240     0070                     ?_motor_initialize:	
  1241                           ; 1 bytes @ 0x0
  1242                           
  1243     0070                     ?_motor_turn_right:	
  1244                           ; 1 bytes @ 0x0
  1245                           
  1246     0070                     ?_motor_turn_left:	
  1247                           ; 1 bytes @ 0x0
  1248                           
  1249     0070                     ?_motor_turn_off:	
  1250                           ; 1 bytes @ 0x0
  1251                           
  1252     0070                     ?_ecu_initialzie:	
  1253                           ; 1 bytes @ 0x0
  1254                           
  1255     0070                     ?_ADC_INIT:	
  1256                           ; 1 bytes @ 0x0
  1257                           
  1258     0070                     ?_ADC_Start_Conversion:	
  1259                           ; 1 bytes @ 0x0
  1260                           
  1261     0070                     ??_ADC_Start_Conversion:	
  1262                           ; 1 bytes @ 0x0
  1263                           
  1264     0070                     ?_ADC_Get_Conversion_Result:	
  1265                           ; 1 bytes @ 0x0
  1266                           
  1267     0070                     ?_WRITE_DATA_EEPROM:	
  1268                           ; 1 bytes @ 0x0
  1269                           
  1270     0070                     ?_READ_DATA_EEPROM:	
  1271                           ; 1 bytes @ 0x0
  1272                           
  1273     0070                     ?_gpio_pin_direction_initialize:	
  1274                           ; 1 bytes @ 0x0
  1275                           
  1276     0070                     ??_gpio_pin_direction_initialize:	
  1277                           ; 1 bytes @ 0x0
  1278                           
  1279     0070                     ?_gpio_pin_read_logic:	
  1280                           ; 1 bytes @ 0x0
  1281                           
  1282     0070                     ?_mcal_initialize:	
  1283                           ; 1 bytes @ 0x0
  1284                           
  1285     0070                     ?___bmul:	
  1286                           ; 1 bytes @ 0x0
  1287                           
  1288     0070                     ?__Umul8_16:	
  1289                           ; 1 bytes @ 0x0
  1290                           
  1291     0070                     ?_fputc:	
  1292                           ; 2 bytes @ 0x0
  1293                           
  1294     0070                     ?_main:	
  1295                           ; 2 bytes @ 0x0
  1296                           
  1297     0070                     ?___awdiv:	
  1298                           ; 2 bytes @ 0x0
  1299                           
  1300     0070                     ?___awmod:	
  1301                           ; 2 bytes @ 0x0
  1302                           
  1303     0070                     ?___xxtofl:	
  1304                           ; 2 bytes @ 0x0
  1305                           
  1306     0070                     ADC_Start_Conversion@adc:	
  1307                           ; 4 bytes @ 0x0
  1308                           
  1309     0070                     gpio_pin_write_logic@logic:	
  1310                           ; 1 bytes @ 0x0
  1311                           
  1312     0070                     gpio_pin_read_logic@logic:	
  1313                           ; 1 bytes @ 0x0
  1314                           
  1315     0070                     ___bmul@multiplicand:	
  1316                           ; 1 bytes @ 0x0
  1317                           
  1318     0070                     __Umul8_16@multiplicand:	
  1319                           ; 1 bytes @ 0x0
  1320                           
  1321     0070                     putch@c:	
  1322                           ; 1 bytes @ 0x0
  1323                           
  1324     0070                     ADC_Get_Conversion_Result@result:	
  1325                           ; 1 bytes @ 0x0
  1326                           
  1327     0070                     WRITE_DATA_EEPROM@add:	
  1328                           ; 2 bytes @ 0x0
  1329                           
  1330     0070                     READ_DATA_EEPROM@add:	
  1331                           ; 2 bytes @ 0x0
  1332                           
  1333     0070                     ___awdiv@divisor:	
  1334                           ; 2 bytes @ 0x0
  1335                           
  1336     0070                     ___awmod@divisor:	
  1337                           ; 2 bytes @ 0x0
  1338                           
  1339     0070                     memset@c:	
  1340                           ; 2 bytes @ 0x0
  1341                           
  1342     0070                     fputc@c:	
  1343                           ; 2 bytes @ 0x0
  1344                           
  1345     0070                     ___xxtofl@val:	
  1346                           ; 2 bytes @ 0x0
  1347                           
  1348                           
  1349                           ; 4 bytes @ 0x0
  1350     0070                     	ds	1
  1351     0071                     ??_gpio_pin_write_logic:
  1352     0071                     ??_gpio_pin_read_logic:	
  1353                           ; 1 bytes @ 0x1
  1354                           
  1355     0071                     ??___bmul:	
  1356                           ; 1 bytes @ 0x1
  1357                           
  1358     0071                     ___bmul@product:	
  1359                           ; 1 bytes @ 0x1
  1360                           
  1361                           
  1362                           ; 1 bytes @ 0x1
  1363     0071                     	ds	1
  1364     0072                     ??__Umul8_16:
  1365     0072                     ??_ADC_Get_Conversion_Result:	
  1366                           ; 1 bytes @ 0x2
  1367                           
  1368     0072                     Result_Format@adc:	
  1369                           ; 1 bytes @ 0x2
  1370                           
  1371     0072                     WRITE_DATA_EEPROM@data:	
  1372                           ; 1 bytes @ 0x2
  1373                           
  1374     0072                     READ_DATA_EEPROM@data:	
  1375                           ; 1 bytes @ 0x2
  1376                           
  1377     0072                     ___bmul@multiplier:	
  1378                           ; 1 bytes @ 0x2
  1379                           
  1380     0072                     fputc@fp:	
  1381                           ; 1 bytes @ 0x2
  1382                           
  1383     0072                     ___awdiv@dividend:	
  1384                           ; 1 bytes @ 0x2
  1385                           
  1386     0072                     ___awmod@dividend:	
  1387                           ; 2 bytes @ 0x2
  1388                           
  1389     0072                     memset@n:	
  1390                           ; 2 bytes @ 0x2
  1391                           
  1392                           
  1393                           ; 2 bytes @ 0x2
  1394     0072                     	ds	1
  1395     0073                     ??_fputc:
  1396     0073                     ??_ADC_INIT:	
  1397                           ; 1 bytes @ 0x3
  1398                           
  1399     0073                     ??_WRITE_DATA_EEPROM:	
  1400                           ; 1 bytes @ 0x3
  1401                           
  1402     0073                     ??_READ_DATA_EEPROM:	
  1403                           ; 1 bytes @ 0x3
  1404                           
  1405     0073                     WRITE_DATA_EEPROM@status:	
  1406                           ; 1 bytes @ 0x3
  1407                           
  1408                           
  1409                           ; 1 bytes @ 0x3
  1410     0073                     	ds	1
  1411     0074                     ??_memset:
  1412     0074                     ??___awdiv:	
  1413                           ; 1 bytes @ 0x4
  1414                           
  1415     0074                     ??___awmod:	
  1416                           ; 1 bytes @ 0x4
  1417                           
  1418     0074                     ??___xxtofl:	
  1419                           ; 1 bytes @ 0x4
  1420                           
  1421     0074                     ADC_INIT@ret:	
  1422                           ; 1 bytes @ 0x4
  1423                           
  1424     0074                     ADC_Get_Conversion_Result@adc:	
  1425                           ; 1 bytes @ 0x4
  1426                           
  1427     0074                     ___awdiv@counter:	
  1428                           ; 1 bytes @ 0x4
  1429                           
  1430     0074                     ___awmod@counter:	
  1431                           ; 1 bytes @ 0x4
  1432                           
  1433     0074                     memset@p:	
  1434                           ; 1 bytes @ 0x4
  1435                           
  1436     0074                     __Umul8_16@product:	
  1437                           ; 1 bytes @ 0x4
  1438                           
  1439                           
  1440                           ; 2 bytes @ 0x4
  1441     0074                     	ds	1
  1442     0075                     ?_ADC_Start_Conversion_Blocking:
  1443     0075                     ADC_INIT@adc:	
  1444                           ; 1 bytes @ 0x5
  1445                           
  1446     0075                     ADC_Start_Conversion_Blocking@channel:	
  1447                           ; 1 bytes @ 0x5
  1448                           
  1449     0075                     gpio_pin_direction_initialize@pin:	
  1450                           ; 1 bytes @ 0x5
  1451                           
  1452     0075                     ___awdiv@sign:	
  1453                           ; 1 bytes @ 0x5
  1454                           
  1455     0075                     ___awmod@sign:	
  1456                           ; 1 bytes @ 0x5
  1457                           
  1458     0075                     memset@dest:	
  1459                           ; 1 bytes @ 0x5
  1460                           
  1461                           
  1462                           ; 1 bytes @ 0x5
  1463     0075                     	ds	1
  1464     0076                     ??_mcal_initialize:
  1465     0076                     ?_abs:	
  1466                           ; 1 bytes @ 0x6
  1467                           
  1468     0076                     gpio_pin_write_logic@ret:	
  1469                           ; 2 bytes @ 0x6
  1470                           
  1471     0076                     gpio_pin_read_logic@ret:	
  1472                           ; 1 bytes @ 0x6
  1473                           
  1474     0076                     ADC_Start_Conversion_Blocking@result:	
  1475                           ; 1 bytes @ 0x6
  1476                           
  1477     0076                     ___awdiv@quotient:	
  1478                           ; 2 bytes @ 0x6
  1479                           
  1480     0076                     __Umul8_16@word_mpld:	
  1481                           ; 2 bytes @ 0x6
  1482                           
  1483     0076                     abs@a:	
  1484                           ; 2 bytes @ 0x6
  1485                           
  1486                           
  1487                           ; 2 bytes @ 0x6
  1488     0076                     	ds	1
  1489     0077                     gpio_pin_write_logic@pin:
  1490     0077                     gpio_pin_read_logic@pin:	
  1491                           ; 1 bytes @ 0x7
  1492                           
  1493                           
  1494                           ; 1 bytes @ 0x7
  1495     0077                     	ds	1
  1496     0078                     ??_gpio_pin_initialize:
  1497     0078                     ?_send_4bits:	
  1498                           ; 1 bytes @ 0x8
  1499                           
  1500     0078                     ??_send_enable_signal:	
  1501                           ; 1 bytes @ 0x8
  1502                           
  1503     0078                     ?_keypad_read_value:	
  1504                           ; 1 bytes @ 0x8
  1505                           
  1506     0078                     ??_abs:	
  1507                           ; 1 bytes @ 0x8
  1508                           
  1509     0078                     ??_motor_turn_right:	
  1510                           ; 1 bytes @ 0x8
  1511                           
  1512     0078                     ??_motor_turn_left:	
  1513                           ; 1 bytes @ 0x8
  1514                           
  1515     0078                     ??_motor_turn_off:	
  1516                           ; 1 bytes @ 0x8
  1517                           
  1518     0078                     ??_ADC_Start_Conversion_Blocking:	
  1519                           ; 1 bytes @ 0x8
  1520                           
  1521     0078                     send_4bits@command:	
  1522                           ; 1 bytes @ 0x8
  1523                           
  1524     0078                     motor_turn_right@ret:	
  1525                           ; 1 bytes @ 0x8
  1526                           
  1527     0078                     motor_turn_left@ret:	
  1528                           ; 1 bytes @ 0x8
  1529                           
  1530     0078                     motor_turn_off@ret:	
  1531                           ; 1 bytes @ 0x8
  1532                           
  1533     0078                     keypad_read_value@value:	
  1534                           ; 1 bytes @ 0x8
  1535                           
  1536     0078                     __Umul8_16@multiplier:	
  1537                           ; 1 bytes @ 0x8
  1538                           
  1539     0078                     ___xxtofl@sign:	
  1540                           ; 1 bytes @ 0x8
  1541                           
  1542                           
  1543                           ; 1 bytes @ 0x8
  1544     0078                     	ds	1
  1545     0079                     ??_send_4bits:
  1546     0079                     ??_keypad_read_value:	
  1547                           ; 1 bytes @ 0x9
  1548                           
  1549     0079                     send_enable_signal@ret:	
  1550                           ; 1 bytes @ 0x9
  1551                           
  1552     0079                     motor_turn_right@motor:	
  1553                           ; 1 bytes @ 0x9
  1554                           
  1555     0079                     motor_turn_left@motor:	
  1556                           ; 1 bytes @ 0x9
  1557                           
  1558     0079                     motor_turn_off@motor:	
  1559                           ; 1 bytes @ 0x9
  1560                           
  1561     0079                     ADC_Start_Conversion_Blocking@adc:	
  1562                           ; 1 bytes @ 0x9
  1563                           
  1564     0079                     ___xxtofl@exp:	
  1565                           ; 1 bytes @ 0x9
  1566                           
  1567                           
  1568                           ; 1 bytes @ 0x9
  1569     0079                     	ds	1
  1570     007A                     ?_vfpfcnvrt:
  1571     007A                     send_4bits@ret:	
  1572                           ; 1 bytes @ 0xA
  1573                           
  1574     007A                     send_enable_signal@lcd:	
  1575                           ; 1 bytes @ 0xA
  1576                           
  1577     007A                     gpio_pin_initialize@ret:	
  1578                           ; 1 bytes @ 0xA
  1579                           
  1580     007A                     vfpfcnvrt@fmt:	
  1581                           ; 1 bytes @ 0xA
  1582                           
  1583     007A                     ___xxtofl@arg:	
  1584                           ; 1 bytes @ 0xA
  1585                           
  1586                           
  1587                           ; 4 bytes @ 0xA
  1588     007A                     	ds	1
  1589     007B                     send_4bits@lcd:
  1590     007B                     gpio_pin_initialize@pin:	
  1591                           ; 1 bytes @ 0xB
  1592                           
  1593     007B                     vfpfcnvrt@ap:	
  1594                           ; 1 bytes @ 0xB
  1595                           
  1596                           
  1597                           ; 1 bytes @ 0xB
  1598     007B                     	ds	1
  1599     007C                     ?_lcd_4bits_send_command:
  1600     007C                     ??_keypad_initialize:	
  1601                           ; 1 bytes @ 0xC
  1602                           
  1603     007C                     ?_lcd_4bits_send_char:	
  1604                           ; 1 bytes @ 0xC
  1605                           
  1606     007C                     ??_motor_initialize:	
  1607                           ; 1 bytes @ 0xC
  1608                           
  1609     007C                     ??_vfpfcnvrt:	
  1610                           ; 1 bytes @ 0xC
  1611                           
  1612     007C                     lcd_4bits_send_command@command:	
  1613                           ; 1 bytes @ 0xC
  1614                           
  1615     007C                     lcd_4bits_send_char@data:	
  1616                           ; 1 bytes @ 0xC
  1617                           
  1618     007C                     motor_initialize@ret:	
  1619                           ; 1 bytes @ 0xC
  1620                           
  1621                           
  1622                           ; 1 bytes @ 0xC
  1623     007C                     	ds	1
  1624     007D                     ??_lcd_4bits_send_command:
  1625     007D                     ??_lcd_4bits_send_char:	
  1626                           ; 1 bytes @ 0xD
  1627                           
  1628     007D                     motor_initialize@motor:	
  1629                           ; 1 bytes @ 0xD
  1630                           
  1631                           
  1632                           ; 1 bytes @ 0xD
  1633     007D                     	ds	1
  1634     007E                     ??_set_cursor:
  1635     007E                     ??_apllication_initilaize:	
  1636                           ; 1 bytes @ 0xE
  1637                           
  1638     007E                     ??_vfprintf:	
  1639                           ; 1 bytes @ 0xE
  1640                           
  1641     007E                     ??_lcd_4bits_send_string:	
  1642                           ; 1 bytes @ 0xE
  1643                           
  1644     007E                     ??_lcd_4bits_send_string_pos:	
  1645                           ; 1 bytes @ 0xE
  1646                           
  1647     007E                     ??_ecu_initialzie:	
  1648                           ; 1 bytes @ 0xE
  1649                           
  1650                           
  1651                           	psect	cstackBANK0
  1652     0020                     __pcstackBANK0:	
  1653                           ; 1 bytes @ 0xE
  1654                           
  1655     0020                     ?___flmul:
  1656     0020                     lcd_4bits_send_command@ret:	
  1657                           ; 4 bytes @ 0x0
  1658                           
  1659     0020                     lcd_4bits_send_char@ret:	
  1660                           ; 1 bytes @ 0x0
  1661                           
  1662     0020                     keypad_initialize@keypad:	
  1663                           ; 1 bytes @ 0x0
  1664                           
  1665     0020                     keypad_read_value@val:	
  1666                           ; 1 bytes @ 0x0
  1667                           
  1668     0020                     vfpfcnvrt@done:	
  1669                           ; 1 bytes @ 0x0
  1670                           
  1671     0020                     ___flmul@b:	
  1672                           ; 1 bytes @ 0x0
  1673                           
  1674                           
  1675                           ; 4 bytes @ 0x0
  1676     0020                     	ds	1
  1677     0021                     lcd_4bits_send_command@lcd:
  1678     0021                     lcd_4bits_send_char@lcd:	
  1679                           ; 1 bytes @ 0x1
  1680                           
  1681     0021                     keypad_initialize@l_rows:	
  1682                           ; 1 bytes @ 0x1
  1683                           
  1684     0021                     keypad_read_value@counter:	
  1685                           ; 1 bytes @ 0x1
  1686                           
  1687     0021                     vfpfcnvrt@fp:	
  1688                           ; 1 bytes @ 0x1
  1689                           
  1690                           
  1691                           ; 1 bytes @ 0x1
  1692     0021                     	ds	1
  1693     0022                     ?_set_cursor:
  1694     0022                     ??_lcd_4bits_initialize:	
  1695                           ; 1 bytes @ 0x2
  1696                           
  1697     0022                     ?_lcd_4bits_send_string:	
  1698                           ; 1 bytes @ 0x2
  1699                           
  1700     0022                     set_cursor@Row:	
  1701                           ; 1 bytes @ 0x2
  1702                           
  1703     0022                     keypad_initialize@l_coloumns:	
  1704                           ; 1 bytes @ 0x2
  1705                           
  1706     0022                     keypad_read_value@keypad:	
  1707                           ; 1 bytes @ 0x2
  1708                           
  1709     0022                     vfpfcnvrt@cp:	
  1710                           ; 1 bytes @ 0x2
  1711                           
  1712     0022                     lcd_4bits_send_string@data:	
  1713                           ; 1 bytes @ 0x2
  1714                           
  1715                           
  1716                           ; 2 bytes @ 0x2
  1717     0022                     	ds	1
  1718     0023                     set_cursor@coloumn:
  1719     0023                     keypad_read_value@l_rows:	
  1720                           ; 1 bytes @ 0x3
  1721                           
  1722     0023                     vfpfcnvrt@convarg:	
  1723                           ; 1 bytes @ 0x3
  1724                           
  1725                           
  1726                           ; 4 bytes @ 0x3
  1727     0023                     	ds	1
  1728     0024                     lcd_4bits_send_string@ret:
  1729     0024                     set_cursor@ret:	
  1730                           ; 1 bytes @ 0x4
  1731                           
  1732     0024                     keypad_read_value@l_coloumns:	
  1733                           ; 1 bytes @ 0x4
  1734                           
  1735     0024                     ___flmul@a:	
  1736                           ; 1 bytes @ 0x4
  1737                           
  1738                           
  1739                           ; 4 bytes @ 0x4
  1740     0024                     	ds	1
  1741     0025                     lcd_4bits_initialize@counter:
  1742     0025                     lcd_4bits_send_string@lcd:	
  1743                           ; 1 bytes @ 0x5
  1744                           
  1745     0025                     set_cursor@lcd:	
  1746                           ; 1 bytes @ 0x5
  1747                           
  1748                           
  1749                           ; 1 bytes @ 0x5
  1750     0025                     	ds	1
  1751     0026                     ?_lcd_4bits_send_string_pos:
  1752     0026                     lcd_4bits_initialize@ret:	
  1753                           ; 1 bytes @ 0x6
  1754                           
  1755     0026                     lcd_4bits_send_string_pos@Row:	
  1756                           ; 1 bytes @ 0x6
  1757                           
  1758                           
  1759                           ; 1 bytes @ 0x6
  1760     0026                     	ds	1
  1761     0027                     lcd_4bits_initialize@lcd:
  1762     0027                     lcd_4bits_send_string_pos@coloumn:	
  1763                           ; 1 bytes @ 0x7
  1764                           
  1765     0027                     vfpfcnvrt@c:	
  1766                           ; 1 bytes @ 0x7
  1767                           
  1768                           
  1769                           ; 1 bytes @ 0x7
  1770     0027                     	ds	1
  1771     0028                     ??___flmul:
  1772     0028                     ?_vfprintf:	
  1773                           ; 1 bytes @ 0x8
  1774                           
  1775     0028                     vfprintf@fmt:	
  1776                           ; 2 bytes @ 0x8
  1777                           
  1778     0028                     lcd_4bits_send_string_pos@data:	
  1779                           ; 1 bytes @ 0x8
  1780                           
  1781                           
  1782                           ; 2 bytes @ 0x8
  1783     0028                     	ds	1
  1784     0029                     vfprintf@ap:
  1785                           
  1786                           ; 1 bytes @ 0x9
  1787     0029                     	ds	1
  1788     002A                     lcd_4bits_send_string_pos@ret:
  1789     002A                     vfprintf@fp:	
  1790                           ; 1 bytes @ 0xA
  1791                           
  1792                           
  1793                           ; 1 bytes @ 0xA
  1794     002A                     	ds	1
  1795     002B                     lcd_4bits_send_string_pos@lcd:
  1796     002B                     vfprintf@cfmt:	
  1797                           ; 1 bytes @ 0xB
  1798                           
  1799                           
  1800                           ; 1 bytes @ 0xB
  1801     002B                     	ds	1
  1802     002C                     ?_sprintf:
  1803     002C                     sprintf@fmt:	
  1804                           ; 2 bytes @ 0xC
  1805                           
  1806                           
  1807                           ; 1 bytes @ 0xC
  1808     002C                     	ds	1
  1809     002D                     ___flmul@sign:
  1810                           
  1811                           ; 1 bytes @ 0xD
  1812     002D                     	ds	1
  1813     002E                     ___flmul@grs:
  1814                           
  1815                           ; 4 bytes @ 0xE
  1816     002E                     	ds	1
  1817     002F                     ??_sprintf:
  1818                           
  1819                           ; 1 bytes @ 0xF
  1820     002F                     	ds	1
  1821     0030                     sprintf@ap:
  1822                           
  1823                           ; 1 bytes @ 0x10
  1824     0030                     	ds	1
  1825     0031                     sprintf@s:
  1826                           
  1827                           ; 1 bytes @ 0x11
  1828     0031                     	ds	1
  1829     0032                     ___flmul@aexp:
  1830     0032                     sprintf@f:	
  1831                           ; 1 bytes @ 0x12
  1832                           
  1833                           
  1834                           ; 11 bytes @ 0x12
  1835     0032                     	ds	1
  1836     0033                     ___flmul@bexp:
  1837                           
  1838                           ; 1 bytes @ 0x13
  1839     0033                     	ds	1
  1840     0034                     ___flmul@prod:
  1841                           
  1842                           ; 4 bytes @ 0x14
  1843     0034                     	ds	4
  1844     0038                     ___flmul@temp:
  1845                           
  1846                           ; 2 bytes @ 0x18
  1847     0038                     	ds	2
  1848     003A                     ?___fldiv:
  1849     003A                     ___fldiv@a:	
  1850                           ; 4 bytes @ 0x1A
  1851                           
  1852                           
  1853                           ; 4 bytes @ 0x1A
  1854     003A                     	ds	3
  1855     003D                     ?_Convert_uint16_to_string:
  1856     003D                     Convert_uint16_to_string@data:	
  1857                           ; 1 bytes @ 0x1D
  1858                           
  1859                           
  1860                           ; 2 bytes @ 0x1D
  1861     003D                     	ds	1
  1862     003E                     ___fldiv@b:
  1863                           
  1864                           ; 4 bytes @ 0x1E
  1865     003E                     	ds	1
  1866     003F                     Convert_uint16_to_string@str:
  1867                           
  1868                           ; 1 bytes @ 0x1F
  1869     003F                     	ds	1
  1870     0040                     ??_Convert_uint16_to_string:
  1871                           
  1872                           ; 1 bytes @ 0x20
  1873     0040                     	ds	1
  1874     0041                     Convert_uint16_to_string@temp:
  1875                           
  1876                           ; 6 bytes @ 0x21
  1877     0041                     	ds	1
  1878     0042                     ??___fldiv:
  1879                           
  1880                           ; 1 bytes @ 0x22
  1881     0042                     	ds	5
  1882     0047                     Convert_uint16_to_string@counter:
  1883     0047                     ___fldiv@rem:	
  1884                           ; 1 bytes @ 0x27
  1885                           
  1886                           
  1887                           ; 4 bytes @ 0x27
  1888     0047                     	ds	4
  1889     004B                     ___fldiv@sign:
  1890                           
  1891                           ; 1 bytes @ 0x2B
  1892     004B                     	ds	1
  1893     004C                     ___fldiv@new_exp:
  1894                           
  1895                           ; 2 bytes @ 0x2C
  1896     004C                     	ds	2
  1897     004E                     ___fldiv@grs:
  1898                           
  1899                           ; 4 bytes @ 0x2E
  1900     004E                     	ds	4
  1901     0052                     ___fldiv@bexp:
  1902                           
  1903                           ; 1 bytes @ 0x32
  1904     0052                     	ds	1
  1905     0053                     ___fldiv@aexp:
  1906                           
  1907                           ; 1 bytes @ 0x33
  1908     0053                     	ds	1
  1909     0054                     ?___fltol:
  1910     0054                     ___fltol@f1:	
  1911                           ; 4 bytes @ 0x34
  1912                           
  1913                           
  1914                           ; 4 bytes @ 0x34
  1915     0054                     	ds	4
  1916     0058                     ??___fltol:
  1917                           
  1918                           ; 1 bytes @ 0x38
  1919     0058                     	ds	4
  1920     005C                     ___fltol@sign1:
  1921                           
  1922                           ; 1 bytes @ 0x3C
  1923     005C                     	ds	1
  1924     005D                     ___fltol@exp1:
  1925                           
  1926                           ; 1 bytes @ 0x3D
  1927     005D                     	ds	1
  1928     005E                     ??_main:
  1929                           
  1930                           ; 1 bytes @ 0x3E
  1931     005E                     	ds	3
  1932     0061                     main@counter:
  1933                           
  1934                           ; 1 bytes @ 0x41
  1935     0061                     	ds	1
  1936     0062                     main@i:
  1937                           
  1938                           ; 1 bytes @ 0x42
  1939     0062                     	ds	1
  1940                           
  1941                           	psect	maintext
  1942     0113                     __pmaintext:	
  1943 ;;
  1944 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1945 ;;
  1946 ;; *************** function _main *****************
  1947 ;; Defined at:
  1948 ;;		line 21 in file "Temperature_Controlled_Fan_System.c"
  1949 ;; Parameters:    Size  Location     Type
  1950 ;;		None
  1951 ;; Auto vars:     Size  Location     Type
  1952 ;;  i               1   66[BANK0 ] unsigned char 
  1953 ;;  counter         1   65[BANK0 ] unsigned char 
  1954 ;; Return value:  Size  Location     Type
  1955 ;;                  2  479[None  ] int 
  1956 ;; Registers used:
  1957 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1958 ;; Tracked objects:
  1959 ;;		On entry : B00/0
  1960 ;;		On exit  : 0/0
  1961 ;;		Unchanged: 0/0
  1962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1963 ;;      Params:         0       0       0       0       0
  1964 ;;      Locals:         0       2       0       0       0
  1965 ;;      Temps:          0       3       0       0       0
  1966 ;;      Totals:         0       5       0       0       0
  1967 ;;Total ram usage:        5 bytes
  1968 ;; Hardware stack levels required when called: 6
  1969 ;; This function calls:
  1970 ;;		_ADC_Start_Conversion_Blocking
  1971 ;;		_Convert_uint16_to_string
  1972 ;;		_READ_DATA_EEPROM
  1973 ;;		_WRITE_DATA_EEPROM
  1974 ;;		___fldiv
  1975 ;;		___flmul
  1976 ;;		___fltol
  1977 ;;		___xxtofl
  1978 ;;		_apllication_initilaize
  1979 ;;		_keypad_read_value
  1980 ;;		_lcd_4bits_send_string_pos
  1981 ;;		_motor_turn_left
  1982 ;;		_motor_turn_off
  1983 ;;		_motor_turn_right
  1984 ;; This function is called by:
  1985 ;;		Startup code after reset
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989     0113                     _main:	
  1990                           ;psect for function _main
  1991                           
  1992     0113                     l3913:	
  1993                           ;incstack = 0
  1994                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1995                           
  1996                           
  1997                           ;Temperature_Controlled_Fan_System.c: 22:     apllication_initilaize();
  1998     0113  160A  118A  2540  120A  118A  	fcall	_apllication_initilaize
  1999     0118                     l3915:
  2000                           
  2001                           ;Temperature_Controlled_Fan_System.c: 23:     READ_DATA_EEPROM(0xFF,&Max_Temp);
  2002     0118  30FF               	movlw	255
  2003     0119  00F0               	movwf	READ_DATA_EEPROM@add
  2004     011A  3000               	movlw	0
  2005     011B  00F1               	movwf	READ_DATA_EEPROM@add+1
  2006     011C  306D               	movlw	(low (_Max_Temp| 0))& (0+255)
  2007     011D  00F2               	movwf	READ_DATA_EEPROM@data
  2008     011E  160A  118A  256B  120A  118A  	fcall	_READ_DATA_EEPROM
  2009     0123                     l3917:
  2010                           
  2011                           ;Temperature_Controlled_Fan_System.c: 25:     ADC_Start_Conversion_Blocking(&adc,CHANNEL
      +                          0,&adc_res);
  2012     0123  01F5               	clrf	ADC_Start_Conversion_Blocking@channel
  2013     0124  30EE               	movlw	low (_adc_res| 0)
  2014     0125  00F6               	movwf	ADC_Start_Conversion_Blocking@result
  2015     0126  3000               	movlw	high (_adc_res| 0)
  2016     0127  00F7               	movwf	ADC_Start_Conversion_Blocking@result+1
  2017     0128  30C9               	movlw	(low (_adc| 0))& (0+255)
  2018     0129  160A  118A  270E  120A  118A  	fcall	_ADC_Start_Conversion_Blocking
  2019     012E                     l3919:
  2020                           
  2021                           ;Temperature_Controlled_Fan_System.c: 26:     Temp = adc_res * 4.8828125f / 10;
  2022     012E  1683               	bsf	3,5	;RP0=1, select bank1
  2023     012F  1303               	bcf	3,6	;RP1=0, select bank1
  2024     0130  086E               	movf	_adc_res^(0+128),w
  2025     0131  00F0               	movwf	___xxtofl@val
  2026     0132  086F               	movf	(_adc_res+1)^(0+128),w
  2027     0133  00F1               	movwf	___xxtofl@val+1
  2028     0134  01F2               	clrf	___xxtofl@val+2
  2029     0135  01F3               	clrf	___xxtofl@val+3
  2030     0136  3000               	movlw	0
  2031     0137  120A  158A  2590  120A  118A  	fcall	___xxtofl
  2032     013C  0873               	movf	?___xxtofl+3,w
  2033     013D  1283               	bcf	3,5	;RP0=0, select bank0
  2034     013E  1303               	bcf	3,6	;RP1=0, select bank0
  2035     013F  00A7               	movwf	___flmul@a+3
  2036     0140  0872               	movf	?___xxtofl+2,w
  2037     0141  00A6               	movwf	___flmul@a+2
  2038     0142  0871               	movf	?___xxtofl+1,w
  2039     0143  00A5               	movwf	___flmul@a+1
  2040     0144  0870               	movf	?___xxtofl,w
  2041     0145  00A4               	movwf	___flmul@a
  2042     0146  3040               	movlw	64
  2043     0147  00A3               	movwf	___flmul@b+3
  2044     0148  309C               	movlw	156
  2045     0149  00A2               	movwf	___flmul@b+2
  2046     014A  3040               	movlw	64
  2047     014B  00A1               	movwf	___flmul@b+1
  2048     014C  3000               	movlw	0
  2049     014D  00A0               	movwf	___flmul@b
  2050     014E  120A  118A  248F  120A  118A  	fcall	___flmul
  2051     0153  1283               	bcf	3,5	;RP0=0, select bank0
  2052     0154  1303               	bcf	3,6	;RP1=0, select bank0
  2053     0155  0823               	movf	?___flmul+3,w
  2054     0156  00C1               	movwf	___fldiv@b+3
  2055     0157  0822               	movf	?___flmul+2,w
  2056     0158  00C0               	movwf	___fldiv@b+2
  2057     0159  0821               	movf	?___flmul+1,w
  2058     015A  00BF               	movwf	___fldiv@b+1
  2059     015B  0820               	movf	?___flmul,w
  2060     015C  00BE               	movwf	___fldiv@b
  2061     015D  3041               	movlw	65
  2062     015E  00BD               	movwf	___fldiv@a+3
  2063     015F  3020               	movlw	32
  2064     0160  00BC               	movwf	___fldiv@a+2
  2065     0161  3000               	movlw	0
  2066     0162  00BB               	movwf	___fldiv@a+1
  2067     0163  3000               	movlw	0
  2068     0164  00BA               	movwf	___fldiv@a
  2069     0165  120A  118A  22C0  120A  118A  	fcall	___fldiv
  2070     016A  1283               	bcf	3,5	;RP0=0, select bank0
  2071     016B  1303               	bcf	3,6	;RP1=0, select bank0
  2072     016C  083D               	movf	?___fldiv+3,w
  2073     016D  00D7               	movwf	___fltol@f1+3
  2074     016E  083C               	movf	?___fldiv+2,w
  2075     016F  00D6               	movwf	___fltol@f1+2
  2076     0170  083B               	movf	?___fldiv+1,w
  2077     0171  00D5               	movwf	___fltol@f1+1
  2078     0172  083A               	movf	?___fldiv,w
  2079     0173  00D4               	movwf	___fltol@f1
  2080     0174  120A  158A  2320  120A  118A  	fcall	___fltol
  2081     0179  1283               	bcf	3,5	;RP0=0, select bank0
  2082     017A  1303               	bcf	3,6	;RP1=0, select bank0
  2083     017B  0855               	movf	?___fltol+1,w
  2084     017C  00E4               	movwf	_Temp+1
  2085     017D  0854               	movf	?___fltol,w
  2086     017E  00E3               	movwf	_Temp
  2087     017F                     l3921:
  2088                           
  2089                           ;Temperature_Controlled_Fan_System.c: 28:     Convert_uint16_to_string(Temp,lcd_show);
  2090     017F  0864               	movf	_Temp+1,w
  2091     0180  00BE               	movwf	Convert_uint16_to_string@data+1
  2092     0181  0863               	movf	_Temp,w
  2093     0182  00BD               	movwf	Convert_uint16_to_string@data
  2094     0183  30E8               	movlw	(low (_lcd_show| 0))& (0+255)
  2095     0184  00BF               	movwf	Convert_uint16_to_string@str
  2096     0185  120A  158A  2100  120A  118A  	fcall	_Convert_uint16_to_string
  2097     018A                     l3923:
  2098                           
  2099                           ;Temperature_Controlled_Fan_System.c: 29:     keypad_read_value(&keypad,&val);
  2100     018A  306F               	movlw	(low (_val| 0))& (0+255)
  2101     018B  00F8               	movwf	keypad_read_value@value
  2102     018C  30B8               	movlw	(low (_keypad| 0))& (0+255)
  2103     018D  120A  158A  22AA  120A  118A  	fcall	_keypad_read_value
  2104     0192                     l3925:
  2105                           
  2106                           ;Temperature_Controlled_Fan_System.c: 30:     if(val == '*' && flag == 0){
  2107     0192  302A               	movlw	42
  2108     0193  1283               	bcf	3,5	;RP0=0, select bank0
  2109     0194  1303               	bcf	3,6	;RP1=0, select bank0
  2110     0195  066F               	xorwf	_val,w
  2111     0196  1D03               	btfss	3,2
  2112     0197  2999               	goto	u5271
  2113     0198  299A               	goto	u5270
  2114     0199                     u5271:
  2115     0199  2A00               	goto	l3963
  2116     019A                     u5270:
  2117     019A                     l3927:
  2118     019A  0865               	movf	_flag,w
  2119     019B  1D03               	btfss	3,2
  2120     019C  299E               	goto	u5281
  2121     019D  299F               	goto	u5280
  2122     019E                     u5281:
  2123     019E  2A00               	goto	l3963
  2124     019F                     u5280:
  2125     019F                     l3929:
  2126                           
  2127                           ;Temperature_Controlled_Fan_System.c: 31:         _delay((unsigned long)((400)*(8000000U
      +                          L/4000.0)));
  2128     019F  3005               	movlw	5
  2129     01A0  1283               	bcf	3,5	;RP0=0, select bank0
  2130     01A1  1303               	bcf	3,6	;RP1=0, select bank0
  2131     01A2  00E0               	movwf	??_main+2
  2132     01A3  300F               	movlw	15
  2133     01A4  00DF               	movwf	??_main+1
  2134     01A5  30F0               	movlw	240
  2135     01A6  00DE               	movwf	??_main
  2136     01A7                     u5397:
  2137     01A7  0BDE               	decfsz	??_main,f
  2138     01A8  29A7               	goto	u5397
  2139     01A9  0BDF               	decfsz	??_main+1,f
  2140     01AA  29A7               	goto	u5397
  2141     01AB  0BE0               	decfsz	??_main+2,f
  2142     01AC  29A7               	goto	u5397
  2143     01AD  0000               	nop
  2144     01AE                     l3931:
  2145                           
  2146                           ;Temperature_Controlled_Fan_System.c: 33:         for(uint8 counter = 0;counter < 4;coun
      +                          ter++){
  2147     01AE  1283               	bcf	3,5	;RP0=0, select bank0
  2148     01AF  1303               	bcf	3,6	;RP1=0, select bank0
  2149     01B0  01E1               	clrf	main@counter
  2150     01B1  29BB               	goto	l3939
  2151     01B2                     l3937:
  2152                           
  2153                           ;Temperature_Controlled_Fan_System.c: 35:         keypad_read_value(&keypad,&(temp[count
      +                          er]));
  2154     01B2  0861               	movf	main@counter,w
  2155     01B3  3EC5               	addlw	(low (_temp| 0))& (0+255)
  2156     01B4  00F8               	movwf	keypad_read_value@value
  2157     01B5  30B8               	movlw	(low (_keypad| 0))& (0+255)
  2158     01B6  120A  158A  22AA  120A  118A  	fcall	_keypad_read_value
  2159     01BB                     l3939:
  2160                           
  2161                           ;Temperature_Controlled_Fan_System.c: 34:         while(temp[counter] == '.'){
  2162     01BB  1283               	bcf	3,5	;RP0=0, select bank0
  2163     01BC  1303               	bcf	3,6	;RP1=0, select bank0
  2164     01BD  0861               	movf	main@counter,w
  2165     01BE  3EC5               	addlw	(low (_temp| 0))& (0+255)
  2166     01BF  0084               	movwf	4
  2167     01C0  302E               	movlw	46
  2168     01C1  1383               	bcf	3,7	;select IRP bank1
  2169     01C2  0600               	xorwf	0,w
  2170     01C3  1903               	btfsc	3,2
  2171     01C4  29C6               	goto	u5291
  2172     01C5  29C7               	goto	u5290
  2173     01C6                     u5291:
  2174     01C6  29B2               	goto	l3937
  2175     01C7                     u5290:
  2176     01C7                     l3941:
  2177                           
  2178                           ;Temperature_Controlled_Fan_System.c: 38:         _delay((unsigned long)((400)*(8000000U
      +                          L/4000.0)));
  2179     01C7  3005               	movlw	5
  2180     01C8  1283               	bcf	3,5	;RP0=0, select bank0
  2181     01C9  1303               	bcf	3,6	;RP1=0, select bank0
  2182     01CA  00E0               	movwf	??_main+2
  2183     01CB  300F               	movlw	15
  2184     01CC  00DF               	movwf	??_main+1
  2185     01CD  30F0               	movlw	240
  2186     01CE  00DE               	movwf	??_main
  2187     01CF                     u5407:
  2188     01CF  0BDE               	decfsz	??_main,f
  2189     01D0  29CF               	goto	u5407
  2190     01D1  0BDF               	decfsz	??_main+1,f
  2191     01D2  29CF               	goto	u5407
  2192     01D3  0BE0               	decfsz	??_main+2,f
  2193     01D4  29CF               	goto	u5407
  2194     01D5  0000               	nop
  2195     01D6                     l3943:
  2196                           
  2197                           ;Temperature_Controlled_Fan_System.c: 39:     }
  2198     01D6  3001               	movlw	1
  2199     01D7  00FF               	movwf	btemp+1
  2200     01D8  087F               	movf	btemp+1,w
  2201     01D9  1283               	bcf	3,5	;RP0=0, select bank0
  2202     01DA  1303               	bcf	3,6	;RP1=0, select bank0
  2203     01DB  07E1               	addwf	main@counter,f
  2204     01DC                     l3945:
  2205     01DC  3004               	movlw	4
  2206     01DD  0261               	subwf	main@counter,w
  2207     01DE  1C03               	skipc
  2208     01DF  29E1               	goto	u5301
  2209     01E0  29E2               	goto	u5300
  2210     01E1                     u5301:
  2211     01E1  29BB               	goto	l3939
  2212     01E2                     u5300:
  2213     01E2                     l483:
  2214                           
  2215                           ;Temperature_Controlled_Fan_System.c: 40:         flag = 1;
  2216     01E2  01E5               	clrf	_flag
  2217     01E3  0AE5               	incf	_flag,f
  2218     01E4                     l3947:
  2219                           
  2220                           ;Temperature_Controlled_Fan_System.c: 41:         for(uint8 i = 0;i < 4;i++){
  2221     01E4  01E2               	clrf	main@i
  2222     01E5                     l3953:
  2223                           
  2224                           ;Temperature_Controlled_Fan_System.c: 42:             if(temp[i] != pass[i]){
  2225     01E5  0862               	movf	main@i,w
  2226     01E6  3EB4               	addlw	(low (_pass| 0))& (0+255)
  2227     01E7  0084               	movwf	4
  2228     01E8  1383               	bcf	3,7	;select IRP bank1
  2229     01E9  0800               	movf	0,w
  2230     01EA  00DE               	movwf	??_main
  2231     01EB  0862               	movf	main@i,w
  2232     01EC  3EC5               	addlw	(low (_temp| 0))& (0+255)
  2233     01ED  0084               	movwf	4
  2234     01EE  0800               	movf	0,w
  2235     01EF  065E               	xorwf	??_main,w
  2236     01F0  1903               	skipnz
  2237     01F1  29F3               	goto	u5311
  2238     01F2  29F4               	goto	u5310
  2239     01F3                     u5311:
  2240     01F3  29F6               	goto	l3959
  2241     01F4                     u5310:
  2242     01F4                     l3955:
  2243                           
  2244                           ;Temperature_Controlled_Fan_System.c: 43:                 flag = 0;
  2245     01F4  01E5               	clrf	_flag
  2246                           
  2247                           ;Temperature_Controlled_Fan_System.c: 44:                 break;
  2248     01F5  2A00               	goto	l3963
  2249     01F6                     l3959:
  2250                           
  2251                           ;Temperature_Controlled_Fan_System.c: 48:         }
  2252     01F6  3001               	movlw	1
  2253     01F7  00FF               	movwf	btemp+1
  2254     01F8  087F               	movf	btemp+1,w
  2255     01F9  07E2               	addwf	main@i,f
  2256     01FA                     l3961:
  2257     01FA  3004               	movlw	4
  2258     01FB  0262               	subwf	main@i,w
  2259     01FC  1C03               	skipc
  2260     01FD  29FF               	goto	u5321
  2261     01FE  2A00               	goto	u5320
  2262     01FF                     u5321:
  2263     01FF  29E5               	goto	l3953
  2264     0200                     u5320:
  2265     0200                     l3963:
  2266                           
  2267                           ;Temperature_Controlled_Fan_System.c: 53:     Convert_uint16_to_string(Max_Temp,lcd_show
      +                          _max);
  2268     0200  086E               	movf	_Max_Temp+1,w
  2269     0201  00BE               	movwf	Convert_uint16_to_string@data+1
  2270     0202  086D               	movf	_Max_Temp,w
  2271     0203  00BD               	movwf	Convert_uint16_to_string@data
  2272     0204  30E2               	movlw	(low (_lcd_show_max| 0))& (0+255)
  2273     0205  00BF               	movwf	Convert_uint16_to_string@str
  2274     0206  120A  158A  2100  120A  118A  	fcall	_Convert_uint16_to_string
  2275     020B                     l3965:
  2276                           
  2277                           ;Temperature_Controlled_Fan_System.c: 54:     if(flag == 1){
  2278     020B  1283               	bcf	3,5	;RP0=0, select bank0
  2279     020C  1303               	bcf	3,6	;RP1=0, select bank0
  2280     020D  0365               	decf	_flag,w
  2281     020E  1D03               	btfss	3,2
  2282     020F  2A11               	goto	u5331
  2283     0210  2A12               	goto	u5330
  2284     0211                     u5331:
  2285     0211  2A51               	goto	l3969
  2286     0212                     u5330:
  2287     0212                     l3967:
  2288                           
  2289                           ;Temperature_Controlled_Fan_System.c: 55:     lcd_4bits_send_string_pos(&lcd,1,1,"Temp i
      +                          s : ");
  2290     0212  01A6               	clrf	lcd_4bits_send_string_pos@Row
  2291     0213  0AA6               	incf	lcd_4bits_send_string_pos@Row,f
  2292     0214  01A7               	clrf	lcd_4bits_send_string_pos@coloumn
  2293     0215  0AA7               	incf	lcd_4bits_send_string_pos@coloumn,f
  2294     0216  3011               	movlw	(low (((STR_5+4)-__stringbase)| (0+32768)))& (0+255)
  2295     0217  00A8               	movwf	lcd_4bits_send_string_pos@data
  2296     0218  3080               	movlw	128
  2297     0219  00A9               	movwf	lcd_4bits_send_string_pos@data+1
  2298     021A  30BF               	movlw	(low (_lcd| 0))& (0+255)
  2299     021B  160A  118A  26C3  120A  118A  	fcall	_lcd_4bits_send_string_pos
  2300                           
  2301                           ;Temperature_Controlled_Fan_System.c: 56:     lcd_4bits_send_string_pos(&lcd,1,10,lcd_sh
      +                          ow);
  2302     0220  1283               	bcf	3,5	;RP0=0, select bank0
  2303     0221  1303               	bcf	3,6	;RP1=0, select bank0
  2304     0222  01A6               	clrf	lcd_4bits_send_string_pos@Row
  2305     0223  0AA6               	incf	lcd_4bits_send_string_pos@Row,f
  2306     0224  300A               	movlw	10
  2307     0225  00A7               	movwf	lcd_4bits_send_string_pos@coloumn
  2308     0226  30E8               	movlw	(low (_lcd_show| 0))& (0+255)
  2309     0227  00A8               	movwf	lcd_4bits_send_string_pos@data
  2310     0228  3000               	movlw	0
  2311     0229  00A9               	movwf	lcd_4bits_send_string_pos@data+1
  2312     022A  30BF               	movlw	(low (_lcd| 0))& (0+255)
  2313     022B  160A  118A  26C3  120A  118A  	fcall	_lcd_4bits_send_string_pos
  2314                           
  2315                           ;Temperature_Controlled_Fan_System.c: 57:     lcd_4bits_send_string_pos(&lcd,2,1,"Max Te
      +                          mp is : ");
  2316     0230  3002               	movlw	2
  2317     0231  1283               	bcf	3,5	;RP0=0, select bank0
  2318     0232  1303               	bcf	3,6	;RP1=0, select bank0
  2319     0233  00A6               	movwf	lcd_4bits_send_string_pos@Row
  2320     0234  01A7               	clrf	lcd_4bits_send_string_pos@coloumn
  2321     0235  0AA7               	incf	lcd_4bits_send_string_pos@coloumn,f
  2322     0236  300D               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2323     0237  00A8               	movwf	lcd_4bits_send_string_pos@data
  2324     0238  3080               	movlw	128
  2325     0239  00A9               	movwf	lcd_4bits_send_string_pos@data+1
  2326     023A  30BF               	movlw	(low (_lcd| 0))& (0+255)
  2327     023B  160A  118A  26C3  120A  118A  	fcall	_lcd_4bits_send_string_pos
  2328                           
  2329                           ;Temperature_Controlled_Fan_System.c: 58:     lcd_4bits_send_string_pos(&lcd,2,14,lcd_sh
      +                          ow_max);
  2330     0240  3002               	movlw	2
  2331     0241  1283               	bcf	3,5	;RP0=0, select bank0
  2332     0242  1303               	bcf	3,6	;RP1=0, select bank0
  2333     0243  00A6               	movwf	lcd_4bits_send_string_pos@Row
  2334     0244  300E               	movlw	14
  2335     0245  00A7               	movwf	lcd_4bits_send_string_pos@coloumn
  2336     0246  30E2               	movlw	(low (_lcd_show_max| 0))& (0+255)
  2337     0247  00A8               	movwf	lcd_4bits_send_string_pos@data
  2338     0248  3000               	movlw	0
  2339     0249  00A9               	movwf	lcd_4bits_send_string_pos@data+1
  2340     024A  30BF               	movlw	(low (_lcd| 0))& (0+255)
  2341     024B  160A  118A  26C3  120A  118A  	fcall	_lcd_4bits_send_string_pos
  2342                           
  2343                           ;Temperature_Controlled_Fan_System.c: 59:     }
  2344     0250  2A64               	goto	l3973
  2345     0251                     l3969:
  2346     0251  0865               	movf	_flag,w
  2347     0252  1D03               	btfss	3,2
  2348     0253  2A55               	goto	u5341
  2349     0254  2A56               	goto	u5340
  2350     0255                     u5341:
  2351     0255  2A64               	goto	l3973
  2352     0256                     u5340:
  2353     0256                     l3971:
  2354                           
  2355                           ;Temperature_Controlled_Fan_System.c: 61:         lcd_4bits_send_string_pos(&lcd,1,1,"En
      +                          ter password");
  2356     0256  01A6               	clrf	lcd_4bits_send_string_pos@Row
  2357     0257  0AA6               	incf	lcd_4bits_send_string_pos@Row,f
  2358     0258  01A7               	clrf	lcd_4bits_send_string_pos@coloumn
  2359     0259  0AA7               	incf	lcd_4bits_send_string_pos@coloumn,f
  2360     025A  301C               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2361     025B  00A8               	movwf	lcd_4bits_send_string_pos@data
  2362     025C  3080               	movlw	128
  2363     025D  00A9               	movwf	lcd_4bits_send_string_pos@data+1
  2364     025E  30BF               	movlw	(low (_lcd| 0))& (0+255)
  2365     025F  160A  118A  26C3  120A  118A  	fcall	_lcd_4bits_send_string_pos
  2366     0264                     l3973:	
  2367                           ;Temperature_Controlled_Fan_System.c: 62:     }
  2368                           
  2369                           
  2370                           ;Temperature_Controlled_Fan_System.c: 65:     if((Temp >= 50) && (Temp < 60)){
  2371     0264  3000               	movlw	0
  2372     0265  1283               	bcf	3,5	;RP0=0, select bank0
  2373     0266  1303               	bcf	3,6	;RP1=0, select bank0
  2374     0267  0264               	subwf	_Temp+1,w
  2375     0268  3032               	movlw	50
  2376     0269  1903               	skipnz
  2377     026A  0263               	subwf	_Temp,w
  2378     026B  1C03               	skipc
  2379     026C  2A6E               	goto	u5351
  2380     026D  2A6F               	goto	u5350
  2381     026E                     u5351:
  2382     026E  2A7F               	goto	l3979
  2383     026F                     u5350:
  2384     026F                     l3975:
  2385     026F  3000               	movlw	0
  2386     0270  0264               	subwf	_Temp+1,w
  2387     0271  303C               	movlw	60
  2388     0272  1903               	skipnz
  2389     0273  0263               	subwf	_Temp,w
  2390     0274  1803               	skipnc
  2391     0275  2A77               	goto	u5361
  2392     0276  2A78               	goto	u5360
  2393     0277                     u5361:
  2394     0277  2A7F               	goto	l3979
  2395     0278                     u5360:
  2396     0278                     l3977:
  2397                           
  2398                           ;Temperature_Controlled_Fan_System.c: 66:         motor_turn_right(&motor1);
  2399     0278  30CE               	movlw	(low (_motor1| 0))& (0+255)
  2400     0279  160A  118A  2608  120A  118A  	fcall	_motor_turn_right
  2401                           
  2402                           ;Temperature_Controlled_Fan_System.c: 67:     }
  2403     027E  2AA1               	goto	l3985
  2404     027F                     l3979:
  2405     027F  3000               	movlw	0
  2406     0280  0264               	subwf	_Temp+1,w
  2407     0281  303C               	movlw	60
  2408     0282  1903               	skipnz
  2409     0283  0263               	subwf	_Temp,w
  2410     0284  1C03               	skipc
  2411     0285  2A87               	goto	u5371
  2412     0286  2A88               	goto	u5370
  2413     0287                     u5371:
  2414     0287  2A95               	goto	l3983
  2415     0288                     u5370:
  2416     0288                     l3981:
  2417                           
  2418                           ;Temperature_Controlled_Fan_System.c: 69:         motor_turn_right(&motor1);
  2419     0288  30CE               	movlw	(low (_motor1| 0))& (0+255)
  2420     0289  160A  118A  2608  120A  118A  	fcall	_motor_turn_right
  2421                           
  2422                           ;Temperature_Controlled_Fan_System.c: 70:         motor_turn_left(&motor2);
  2423     028E  30CC               	movlw	(low (_motor2| 0))& (0+255)
  2424     028F  160A  118A  25EE  120A  118A  	fcall	_motor_turn_left
  2425                           
  2426                           ;Temperature_Controlled_Fan_System.c: 71:     }
  2427     0294  2AA1               	goto	l3985
  2428     0295                     l3983:
  2429                           
  2430                           ;Temperature_Controlled_Fan_System.c: 73:         motor_turn_off(&motor1);
  2431     0295  30CE               	movlw	(low (_motor1| 0))& (0+255)
  2432     0296  160A  118A  25D5  120A  118A  	fcall	_motor_turn_off
  2433                           
  2434                           ;Temperature_Controlled_Fan_System.c: 74:         motor_turn_off(&motor2);
  2435     029B  30CC               	movlw	(low (_motor2| 0))& (0+255)
  2436     029C  160A  118A  25D5  120A  118A  	fcall	_motor_turn_off
  2437     02A1                     l3985:
  2438                           
  2439                           ;Temperature_Controlled_Fan_System.c: 76:     if(Temp > Max_Temp){
  2440     02A1  1283               	bcf	3,5	;RP0=0, select bank0
  2441     02A2  1303               	bcf	3,6	;RP1=0, select bank0
  2442     02A3  0864               	movf	_Temp+1,w
  2443     02A4  026E               	subwf	_Max_Temp+1,w
  2444     02A5  1D03               	skipz
  2445     02A6  2AA9               	goto	u5385
  2446     02A7  0863               	movf	_Temp,w
  2447     02A8  026D               	subwf	_Max_Temp,w
  2448     02A9                     u5385:
  2449     02A9  1803               	skipnc
  2450     02AA  2AAC               	goto	u5381
  2451     02AB  2AAD               	goto	u5380
  2452     02AC                     u5381:
  2453     02AC  2923               	goto	l3917
  2454     02AD                     u5380:
  2455     02AD                     l3987:
  2456                           
  2457                           ;Temperature_Controlled_Fan_System.c: 77:         Max_Temp = Temp;
  2458     02AD  0864               	movf	_Temp+1,w
  2459     02AE  00EE               	movwf	_Max_Temp+1
  2460     02AF  0863               	movf	_Temp,w
  2461     02B0  00ED               	movwf	_Max_Temp
  2462     02B1                     l3989:
  2463                           
  2464                           ;Temperature_Controlled_Fan_System.c: 78:         WRITE_DATA_EEPROM(0xFF,Max_Temp);
  2465     02B1  30FF               	movlw	255
  2466     02B2  00F0               	movwf	WRITE_DATA_EEPROM@add
  2467     02B3  3000               	movlw	0
  2468     02B4  00F1               	movwf	WRITE_DATA_EEPROM@add+1
  2469     02B5  086D               	movf	_Max_Temp,w
  2470     02B6  00F2               	movwf	WRITE_DATA_EEPROM@data
  2471     02B7  160A  118A  267E  120A  118A  	fcall	_WRITE_DATA_EEPROM
  2472     02BC  2923               	goto	l3917
  2473     02BD  120A  118A  2800   	ljmp	start
  2474     02C0                     __end_of_main:
  2475                           
  2476                           	psect	text1
  2477     1608                     __ptext1:	
  2478 ;; *************** function _motor_turn_right *****************
  2479 ;; Defined at:
  2480 ;;		line 19 in file "ECU_LAYER/Motor/ecu_motor_driver.c"
  2481 ;; Parameters:    Size  Location     Type
  2482 ;;  motor           1    wreg     PTR const struct .
  2483 ;;		 -> motor1(2), 
  2484 ;; Auto vars:     Size  Location     Type
  2485 ;;  motor           1    9[COMMON] PTR const struct .
  2486 ;;		 -> motor1(2), 
  2487 ;;  ret             1    8[COMMON] unsigned char 
  2488 ;; Return value:  Size  Location     Type
  2489 ;;                  1    wreg      unsigned char 
  2490 ;; Registers used:
  2491 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2492 ;; Tracked objects:
  2493 ;;		On entry : 0/0
  2494 ;;		On exit  : 0/0
  2495 ;;		Unchanged: 0/0
  2496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2497 ;;      Params:         0       0       0       0       0
  2498 ;;      Locals:         2       0       0       0       0
  2499 ;;      Temps:          0       0       0       0       0
  2500 ;;      Totals:         2       0       0       0       0
  2501 ;;Total ram usage:        2 bytes
  2502 ;; Hardware stack levels used: 1
  2503 ;; Hardware stack levels required when called: 1
  2504 ;; This function calls:
  2505 ;;		_gpio_pin_write_logic
  2506 ;; This function is called by:
  2507 ;;		_main
  2508 ;; This function uses a non-reentrant model
  2509 ;;
  2510                           
  2511     1608                     _motor_turn_right:	
  2512                           ;psect for function _motor_turn_right
  2513                           
  2514                           
  2515                           ;incstack = 0
  2516                           ; Regs used in _motor_turn_right: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2517                           ;motor_turn_right@motor stored from wreg
  2518     1608  00F9               	movwf	motor_turn_right@motor
  2519     1609                     l3233:
  2520     1609                     l3235:
  2521                           
  2522                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 21:     if(motor == ((void*)0)){
  2523     1609  0879               	movf	motor_turn_right@motor,w
  2524     160A  1D03               	btfss	3,2
  2525     160B  2E0D               	goto	u3911
  2526     160C  2E0E               	goto	u3910
  2527     160D                     u3911:
  2528     160D  2E0F               	goto	l3239
  2529     160E                     u3910:
  2530     160E                     l3237:
  2531                           
  2532                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 23:     }
  2533     160E  2E21               	goto	l118
  2534     160F                     l3239:
  2535                           
  2536                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 25:         ret = gpio_pin_write_logic(&(motor->pin
      +                          s[0]),GPIO_HIGH);
  2537     160F  01F0               	clrf	gpio_pin_write_logic@logic
  2538     1610  0AF0               	incf	gpio_pin_write_logic@logic,f
  2539     1611  0879               	movf	motor_turn_right@motor,w
  2540     1612  120A  158A  2720  160A  118A  	fcall	_gpio_pin_write_logic
  2541     1617  00F8               	movwf	motor_turn_right@ret
  2542                           
  2543                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 26:         ret = gpio_pin_write_logic(&(motor->pin
      +                          s[1]),GPIO_LOW);
  2544     1618  01F0               	clrf	gpio_pin_write_logic@logic
  2545     1619  0879               	movf	motor_turn_right@motor,w
  2546     161A  3E01               	addlw	1
  2547     161B  120A  158A  2720  160A  118A  	fcall	_gpio_pin_write_logic
  2548     1620  00F8               	movwf	motor_turn_right@ret
  2549     1621                     l118:
  2550     1621  0008               	return
  2551     1622                     __end_of_motor_turn_right:
  2552                           
  2553                           	psect	text2
  2554     15D5                     __ptext2:	
  2555 ;; *************** function _motor_turn_off *****************
  2556 ;; Defined at:
  2557 ;;		line 41 in file "ECU_LAYER/Motor/ecu_motor_driver.c"
  2558 ;; Parameters:    Size  Location     Type
  2559 ;;  motor           1    wreg     PTR const struct .
  2560 ;;		 -> motor2(2), motor1(2), 
  2561 ;; Auto vars:     Size  Location     Type
  2562 ;;  motor           1    9[COMMON] PTR const struct .
  2563 ;;		 -> motor2(2), motor1(2), 
  2564 ;;  ret             1    8[COMMON] unsigned char 
  2565 ;; Return value:  Size  Location     Type
  2566 ;;                  1    wreg      unsigned char 
  2567 ;; Registers used:
  2568 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2569 ;; Tracked objects:
  2570 ;;		On entry : 0/0
  2571 ;;		On exit  : 0/0
  2572 ;;		Unchanged: 0/0
  2573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2574 ;;      Params:         0       0       0       0       0
  2575 ;;      Locals:         2       0       0       0       0
  2576 ;;      Temps:          0       0       0       0       0
  2577 ;;      Totals:         2       0       0       0       0
  2578 ;;Total ram usage:        2 bytes
  2579 ;; Hardware stack levels used: 1
  2580 ;; Hardware stack levels required when called: 1
  2581 ;; This function calls:
  2582 ;;		_gpio_pin_write_logic
  2583 ;; This function is called by:
  2584 ;;		_main
  2585 ;; This function uses a non-reentrant model
  2586 ;;
  2587                           
  2588     15D5                     _motor_turn_off:	
  2589                           ;psect for function _motor_turn_off
  2590                           
  2591                           
  2592                           ;incstack = 0
  2593                           ; Regs used in _motor_turn_off: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2594                           ;motor_turn_off@motor stored from wreg
  2595     15D5  00F9               	movwf	motor_turn_off@motor
  2596     15D6                     l3253:
  2597     15D6                     l3255:
  2598                           
  2599                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 43:     if(motor == ((void*)0)){
  2600     15D6  0879               	movf	motor_turn_off@motor,w
  2601     15D7  1D03               	btfss	3,2
  2602     15D8  2DDA               	goto	u3931
  2603     15D9  2DDB               	goto	u3930
  2604     15DA                     u3931:
  2605     15DA  2DDC               	goto	l3259
  2606     15DB                     u3930:
  2607     15DB                     l3257:
  2608                           
  2609                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 45:     }
  2610     15DB  2DED               	goto	l128
  2611     15DC                     l3259:
  2612                           
  2613                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 47:         ret = gpio_pin_write_logic(&(motor->pin
      +                          s[0]),GPIO_LOW);
  2614     15DC  01F0               	clrf	gpio_pin_write_logic@logic
  2615     15DD  0879               	movf	motor_turn_off@motor,w
  2616     15DE  120A  158A  2720  160A  118A  	fcall	_gpio_pin_write_logic
  2617     15E3  00F8               	movwf	motor_turn_off@ret
  2618                           
  2619                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 48:         ret = gpio_pin_write_logic(&(motor->pin
      +                          s[1]),GPIO_LOW);
  2620     15E4  01F0               	clrf	gpio_pin_write_logic@logic
  2621     15E5  0879               	movf	motor_turn_off@motor,w
  2622     15E6  3E01               	addlw	1
  2623     15E7  120A  158A  2720  160A  118A  	fcall	_gpio_pin_write_logic
  2624     15EC  00F8               	movwf	motor_turn_off@ret
  2625     15ED                     l128:
  2626     15ED  0008               	return
  2627     15EE                     __end_of_motor_turn_off:
  2628                           
  2629                           	psect	text3
  2630     15EE                     __ptext3:	
  2631 ;; *************** function _motor_turn_left *****************
  2632 ;; Defined at:
  2633 ;;		line 30 in file "ECU_LAYER/Motor/ecu_motor_driver.c"
  2634 ;; Parameters:    Size  Location     Type
  2635 ;;  motor           1    wreg     PTR const struct .
  2636 ;;		 -> motor2(2), 
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;  motor           1    9[COMMON] PTR const struct .
  2639 ;;		 -> motor2(2), 
  2640 ;;  ret             1    8[COMMON] unsigned char 
  2641 ;; Return value:  Size  Location     Type
  2642 ;;                  1    wreg      unsigned char 
  2643 ;; Registers used:
  2644 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2645 ;; Tracked objects:
  2646 ;;		On entry : 0/0
  2647 ;;		On exit  : 0/0
  2648 ;;		Unchanged: 0/0
  2649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2650 ;;      Params:         0       0       0       0       0
  2651 ;;      Locals:         2       0       0       0       0
  2652 ;;      Temps:          0       0       0       0       0
  2653 ;;      Totals:         2       0       0       0       0
  2654 ;;Total ram usage:        2 bytes
  2655 ;; Hardware stack levels used: 1
  2656 ;; Hardware stack levels required when called: 1
  2657 ;; This function calls:
  2658 ;;		_gpio_pin_write_logic
  2659 ;; This function is called by:
  2660 ;;		_main
  2661 ;; This function uses a non-reentrant model
  2662 ;;
  2663                           
  2664     15EE                     _motor_turn_left:	
  2665                           ;psect for function _motor_turn_left
  2666                           
  2667                           
  2668                           ;incstack = 0
  2669                           ; Regs used in _motor_turn_left: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2670                           ;motor_turn_left@motor stored from wreg
  2671     15EE  00F9               	movwf	motor_turn_left@motor
  2672     15EF                     l3243:
  2673     15EF                     l3245:
  2674                           
  2675                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 32:     if(motor == ((void*)0)){
  2676     15EF  0879               	movf	motor_turn_left@motor,w
  2677     15F0  1D03               	btfss	3,2
  2678     15F1  2DF3               	goto	u3921
  2679     15F2  2DF4               	goto	u3920
  2680     15F3                     u3921:
  2681     15F3  2DF5               	goto	l3249
  2682     15F4                     u3920:
  2683     15F4                     l3247:
  2684                           
  2685                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 34:     }
  2686     15F4  2E07               	goto	l123
  2687     15F5                     l3249:
  2688                           
  2689                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 36:         ret = gpio_pin_write_logic(&(motor->pin
      +                          s[0]),GPIO_LOW);
  2690     15F5  01F0               	clrf	gpio_pin_write_logic@logic
  2691     15F6  0879               	movf	motor_turn_left@motor,w
  2692     15F7  120A  158A  2720  160A  118A  	fcall	_gpio_pin_write_logic
  2693     15FC  00F8               	movwf	motor_turn_left@ret
  2694                           
  2695                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 37:         ret = gpio_pin_write_logic(&(motor->pin
      +                          s[1]),GPIO_HIGH);
  2696     15FD  01F0               	clrf	gpio_pin_write_logic@logic
  2697     15FE  0AF0               	incf	gpio_pin_write_logic@logic,f
  2698     15FF  0879               	movf	motor_turn_left@motor,w
  2699     1600  3E01               	addlw	1
  2700     1601  120A  158A  2720  160A  118A  	fcall	_gpio_pin_write_logic
  2701     1606  00F8               	movwf	motor_turn_left@ret
  2702     1607                     l123:
  2703     1607  0008               	return
  2704     1608                     __end_of_motor_turn_left:
  2705                           
  2706                           	psect	text4
  2707     16C3                     __ptext4:	
  2708 ;; *************** function _lcd_4bits_send_string_pos *****************
  2709 ;; Defined at:
  2710 ;;		line 94 in file "ECU_LAYER/LCD/ecu_lcd.c"
  2711 ;; Parameters:    Size  Location     Type
  2712 ;;  lcd             1    wreg     PTR const struct .
  2713 ;;		 -> lcd(6), 
  2714 ;;  Row             1    6[BANK0 ] unsigned char 
  2715 ;;  coloumn         1    7[BANK0 ] unsigned char 
  2716 ;;  data            2    8[BANK0 ] PTR unsigned char 
  2717 ;;		 -> STR_6(15), STR_5(15), STR_4(11), lcd_show_max(6), 
  2718 ;;		 -> lcd_show(6), 
  2719 ;; Auto vars:     Size  Location     Type
  2720 ;;  lcd             1   11[BANK0 ] PTR const struct .
  2721 ;;		 -> lcd(6), 
  2722 ;;  ret             1   10[BANK0 ] unsigned char 
  2723 ;; Return value:  Size  Location     Type
  2724 ;;                  1    wreg      unsigned char 
  2725 ;; Registers used:
  2726 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2727 ;; Tracked objects:
  2728 ;;		On entry : 0/0
  2729 ;;		On exit  : 0/0
  2730 ;;		Unchanged: 0/0
  2731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2732 ;;      Params:         0       4       0       0       0
  2733 ;;      Locals:         0       2       0       0       0
  2734 ;;      Temps:          0       0       0       0       0
  2735 ;;      Totals:         0       6       0       0       0
  2736 ;;Total ram usage:        6 bytes
  2737 ;; Hardware stack levels used: 1
  2738 ;; Hardware stack levels required when called: 4
  2739 ;; This function calls:
  2740 ;;		_lcd_4bits_send_string
  2741 ;;		_set_cursor
  2742 ;; This function is called by:
  2743 ;;		_main
  2744 ;; This function uses a non-reentrant model
  2745 ;;
  2746                           
  2747     16C3                     _lcd_4bits_send_string_pos:	
  2748                           ;psect for function _lcd_4bits_send_string_pos
  2749                           
  2750                           
  2751                           ;incstack = 0
  2752                           ; Regs used in _lcd_4bits_send_string_pos: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+
      +                          cstack]
  2753                           ;lcd_4bits_send_string_pos@lcd stored from wreg
  2754     16C3  1283               	bcf	3,5	;RP0=0, select bank0
  2755     16C4  1303               	bcf	3,6	;RP1=0, select bank0
  2756     16C5  00AB               	movwf	lcd_4bits_send_string_pos@lcd
  2757     16C6                     l3207:
  2758     16C6                     l3209:
  2759                           
  2760                           ;ECU_LAYER/LCD/ecu_lcd.c: 96:     if(lcd == ((void*)0)){
  2761     16C6  082B               	movf	lcd_4bits_send_string_pos@lcd,w
  2762     16C7  1D03               	btfss	3,2
  2763     16C8  2ECA               	goto	u3881
  2764     16C9  2ECB               	goto	u3880
  2765     16CA                     u3881:
  2766     16CA  2ECC               	goto	l3213
  2767     16CB                     u3880:
  2768     16CB                     l3211:
  2769                           
  2770                           ;ECU_LAYER/LCD/ecu_lcd.c: 98:     }
  2771     16CB  2EE6               	goto	l53
  2772     16CC                     l3213:
  2773                           
  2774                           ;ECU_LAYER/LCD/ecu_lcd.c: 100:         ret = set_cursor(lcd,Row,coloumn);
  2775     16CC  0826               	movf	lcd_4bits_send_string_pos@Row,w
  2776     16CD  00A2               	movwf	set_cursor@Row
  2777     16CE  0827               	movf	lcd_4bits_send_string_pos@coloumn,w
  2778     16CF  00A3               	movwf	set_cursor@coloumn
  2779     16D0  082B               	movf	lcd_4bits_send_string_pos@lcd,w
  2780     16D1  160A  118A  2736  160A  118A  	fcall	_set_cursor
  2781     16D6  1283               	bcf	3,5	;RP0=0, select bank0
  2782     16D7  1303               	bcf	3,6	;RP1=0, select bank0
  2783     16D8  00AA               	movwf	lcd_4bits_send_string_pos@ret
  2784                           
  2785                           ;ECU_LAYER/LCD/ecu_lcd.c: 101:         ret = lcd_4bits_send_string(lcd,data);
  2786     16D9  0828               	movf	lcd_4bits_send_string_pos@data,w
  2787     16DA  00A2               	movwf	lcd_4bits_send_string@data
  2788     16DB  0829               	movf	lcd_4bits_send_string_pos@data+1,w
  2789     16DC  00A3               	movwf	lcd_4bits_send_string@data+1
  2790     16DD  082B               	movf	lcd_4bits_send_string_pos@lcd,w
  2791     16DE  160A  118A  27CB  160A  118A  	fcall	_lcd_4bits_send_string
  2792     16E3  1283               	bcf	3,5	;RP0=0, select bank0
  2793     16E4  1303               	bcf	3,6	;RP1=0, select bank0
  2794     16E5  00AA               	movwf	lcd_4bits_send_string_pos@ret
  2795     16E6                     l53:
  2796     16E6  0008               	return
  2797     16E7                     __end_of_lcd_4bits_send_string_pos:
  2798                           
  2799                           	psect	text5
  2800     1736                     __ptext5:	
  2801 ;; *************** function _set_cursor *****************
  2802 ;; Defined at:
  2803 ;;		line 183 in file "ECU_LAYER/LCD/ecu_lcd.c"
  2804 ;; Parameters:    Size  Location     Type
  2805 ;;  lcd             1    wreg     PTR const struct .
  2806 ;;		 -> lcd(6), 
  2807 ;;  Row             1    2[BANK0 ] unsigned char 
  2808 ;;  coloumn         1    3[BANK0 ] unsigned char 
  2809 ;; Auto vars:     Size  Location     Type
  2810 ;;  lcd             1    5[BANK0 ] PTR const struct .
  2811 ;;		 -> lcd(6), 
  2812 ;;  ret             1    4[BANK0 ] unsigned char 
  2813 ;; Return value:  Size  Location     Type
  2814 ;;                  1    wreg      unsigned char 
  2815 ;; Registers used:
  2816 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2817 ;; Tracked objects:
  2818 ;;		On entry : 0/0
  2819 ;;		On exit  : 0/0
  2820 ;;		Unchanged: 0/0
  2821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2822 ;;      Params:         0       2       0       0       0
  2823 ;;      Locals:         0       2       0       0       0
  2824 ;;      Temps:          0       0       0       0       0
  2825 ;;      Totals:         0       4       0       0       0
  2826 ;;Total ram usage:        4 bytes
  2827 ;; Hardware stack levels used: 1
  2828 ;; Hardware stack levels required when called: 3
  2829 ;; This function calls:
  2830 ;;		_lcd_4bits_send_command
  2831 ;; This function is called by:
  2832 ;;		_lcd_4bits_send_string_pos
  2833 ;;		_lcd_4bits_send_char_pos
  2834 ;; This function uses a non-reentrant model
  2835 ;;
  2836                           
  2837     1736                     _set_cursor:	
  2838                           ;psect for function _set_cursor
  2839                           
  2840                           
  2841                           ;incstack = 0
  2842                           ; Regs used in _set_cursor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2843                           ;set_cursor@lcd stored from wreg
  2844     1736  1283               	bcf	3,5	;RP0=0, select bank0
  2845     1737  1303               	bcf	3,6	;RP1=0, select bank0
  2846     1738  00A5               	movwf	set_cursor@lcd
  2847     1739                     l3051:
  2848                           
  2849                           ;ECU_LAYER/LCD/ecu_lcd.c: 184:     uint8 ret = 0x00;
  2850     1739  01A4               	clrf	set_cursor@ret
  2851     173A                     l3053:
  2852                           
  2853                           ;ECU_LAYER/LCD/ecu_lcd.c: 185:     if(lcd == ((void*)0)){
  2854     173A  0825               	movf	set_cursor@lcd,w
  2855     173B  1D03               	btfss	3,2
  2856     173C  2F3E               	goto	u3591
  2857     173D  2F3F               	goto	u3590
  2858     173E                     u3591:
  2859     173E  2F5C               	goto	l3063
  2860     173F                     u3590:
  2861     173F                     l3055:
  2862                           
  2863                           ;ECU_LAYER/LCD/ecu_lcd.c: 186:         ret = 0x01;
  2864     173F  01A4               	clrf	set_cursor@ret
  2865     1740  0AA4               	incf	set_cursor@ret,f
  2866                           
  2867                           ;ECU_LAYER/LCD/ecu_lcd.c: 187:     }
  2868     1741  2F64               	goto	l3065
  2869     1742                     l3057:
  2870                           
  2871                           ;ECU_LAYER/LCD/ecu_lcd.c: 191:                 ret = lcd_4bits_send_command(lcd,(0x80 + 
      +                          coloumn));
  2872     1742  0823               	movf	set_cursor@coloumn,w
  2873     1743  3E80               	addlw	128
  2874     1744  00FC               	movwf	lcd_4bits_send_command@command
  2875     1745  0825               	movf	set_cursor@lcd,w
  2876     1746  120A  158A  2071  160A  118A  	fcall	_lcd_4bits_send_command
  2877     174B  1283               	bcf	3,5	;RP0=0, select bank0
  2878     174C  1303               	bcf	3,6	;RP1=0, select bank0
  2879     174D  00A4               	movwf	set_cursor@ret
  2880                           
  2881                           ;ECU_LAYER/LCD/ecu_lcd.c: 192:                 break;
  2882     174E  2F64               	goto	l3065
  2883     174F                     l3059:
  2884                           
  2885                           ;ECU_LAYER/LCD/ecu_lcd.c: 194:                 ret = lcd_4bits_send_command(lcd,(0xC0 + 
      +                          coloumn));
  2886     174F  0823               	movf	set_cursor@coloumn,w
  2887     1750  3EC0               	addlw	192
  2888     1751  00FC               	movwf	lcd_4bits_send_command@command
  2889     1752  0825               	movf	set_cursor@lcd,w
  2890     1753  120A  158A  2071  160A  118A  	fcall	_lcd_4bits_send_command
  2891     1758  1283               	bcf	3,5	;RP0=0, select bank0
  2892     1759  1303               	bcf	3,6	;RP1=0, select bank0
  2893     175A  00A4               	movwf	set_cursor@ret
  2894                           
  2895                           ;ECU_LAYER/LCD/ecu_lcd.c: 195:                 break;
  2896     175B  2F64               	goto	l3065
  2897     175C                     l3063:
  2898     175C  0822               	movf	set_cursor@Row,w
  2899                           
  2900                           ; Switch size 1, requested type "simple"
  2901                           ; Number of cases is 2, Range of values is 1 to 2
  2902                           ; switch strategies available:
  2903                           ; Name         Instructions Cycles
  2904                           ; simple_byte            7     4 (average)
  2905                           ; direct_byte           17    11 (fixed)
  2906                           ; jumptable            263     9 (fixed)
  2907                           ;	Chosen strategy is simple_byte
  2908     175D  3A01               	xorlw	1	; case 1
  2909     175E  1903               	skipnz
  2910     175F  2F42               	goto	l3057
  2911     1760  3A03               	xorlw	3	; case 2
  2912     1761  1903               	skipnz
  2913     1762  2F4F               	goto	l3059
  2914     1763  2F64               	goto	l3065
  2915     1764                     l3065:
  2916                           
  2917                           ;ECU_LAYER/LCD/ecu_lcd.c: 200:     return ret;
  2918     1764  0824               	movf	set_cursor@ret,w
  2919     1765                     l104:
  2920     1765  0008               	return
  2921     1766                     __end_of_set_cursor:
  2922                           
  2923                           	psect	text6
  2924     17CB                     __ptext6:	
  2925 ;; *************** function _lcd_4bits_send_string *****************
  2926 ;; Defined at:
  2927 ;;		line 82 in file "ECU_LAYER/LCD/ecu_lcd.c"
  2928 ;; Parameters:    Size  Location     Type
  2929 ;;  lcd             1    wreg     PTR const struct .
  2930 ;;		 -> lcd(6), 
  2931 ;;  data            2    2[BANK0 ] PTR unsigned char 
  2932 ;;		 -> STR_6(15), STR_5(15), STR_4(11), lcd_show_max(6), 
  2933 ;;		 -> lcd_show(6), 
  2934 ;; Auto vars:     Size  Location     Type
  2935 ;;  lcd             1    5[BANK0 ] PTR const struct .
  2936 ;;		 -> lcd(6), 
  2937 ;;  ret             1    4[BANK0 ] unsigned char 
  2938 ;; Return value:  Size  Location     Type
  2939 ;;                  1    wreg      unsigned char 
  2940 ;; Registers used:
  2941 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2942 ;; Tracked objects:
  2943 ;;		On entry : 0/0
  2944 ;;		On exit  : 0/0
  2945 ;;		Unchanged: 0/0
  2946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2947 ;;      Params:         0       2       0       0       0
  2948 ;;      Locals:         0       2       0       0       0
  2949 ;;      Temps:          0       0       0       0       0
  2950 ;;      Totals:         0       4       0       0       0
  2951 ;;Total ram usage:        4 bytes
  2952 ;; Hardware stack levels used: 1
  2953 ;; Hardware stack levels required when called: 3
  2954 ;; This function calls:
  2955 ;;		_lcd_4bits_send_char
  2956 ;; This function is called by:
  2957 ;;		_lcd_4bits_send_string_pos
  2958 ;; This function uses a non-reentrant model
  2959 ;;
  2960                           
  2961     17CB                     _lcd_4bits_send_string:	
  2962                           ;psect for function _lcd_4bits_send_string
  2963                           
  2964                           
  2965                           ;incstack = 0
  2966                           ; Regs used in _lcd_4bits_send_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  2967                           ;lcd_4bits_send_string@lcd stored from wreg
  2968     17CB  1283               	bcf	3,5	;RP0=0, select bank0
  2969     17CC  1303               	bcf	3,6	;RP1=0, select bank0
  2970     17CD  00A5               	movwf	lcd_4bits_send_string@lcd
  2971     17CE                     l3069:
  2972                           
  2973                           ;ECU_LAYER/LCD/ecu_lcd.c: 83:     uint8 ret = 0x00;
  2974     17CE  01A4               	clrf	lcd_4bits_send_string@ret
  2975     17CF                     l3071:
  2976                           
  2977                           ;ECU_LAYER/LCD/ecu_lcd.c: 84:     if(lcd == ((void*)0)){
  2978     17CF  0825               	movf	lcd_4bits_send_string@lcd,w
  2979     17D0  1D03               	btfss	3,2
  2980     17D1  2FD3               	goto	u3601
  2981     17D2  2FD4               	goto	u3600
  2982     17D3                     u3601:
  2983     17D3  2FF0               	goto	l3079
  2984     17D4                     u3600:
  2985     17D4                     l3073:
  2986                           
  2987                           ;ECU_LAYER/LCD/ecu_lcd.c: 85:         ret = 0x01;
  2988     17D4  01A4               	clrf	lcd_4bits_send_string@ret
  2989     17D5  0AA4               	incf	lcd_4bits_send_string@ret,f
  2990                           
  2991                           ;ECU_LAYER/LCD/ecu_lcd.c: 86:     }
  2992     17D6  2FFE               	goto	l3081
  2993     17D7                     l3075:
  2994                           
  2995                           ;ECU_LAYER/LCD/ecu_lcd.c: 89:             ret = lcd_4bits_send_char(lcd,*data++);
  2996     17D7  0823               	movf	lcd_4bits_send_string@data+1,w
  2997     17D8  00FF               	movwf	btemp+1
  2998     17D9  0822               	movf	lcd_4bits_send_string@data,w
  2999     17DA  0084               	movwf	4
  3000     17DB  160A  118A  2000  160A  118A  	fcall	stringtab
  3001     17E0  00FC               	movwf	lcd_4bits_send_char@data
  3002     17E1  0825               	movf	lcd_4bits_send_string@lcd,w
  3003     17E2  120A  158A  20B8  160A  118A  	fcall	_lcd_4bits_send_char
  3004     17E7  1283               	bcf	3,5	;RP0=0, select bank0
  3005     17E8  1303               	bcf	3,6	;RP1=0, select bank0
  3006     17E9  00A4               	movwf	lcd_4bits_send_string@ret
  3007     17EA                     l3077:
  3008     17EA  3001               	movlw	1
  3009     17EB  07A2               	addwf	lcd_4bits_send_string@data,f
  3010     17EC  1803               	skipnc
  3011     17ED  0AA3               	incf	lcd_4bits_send_string@data+1,f
  3012     17EE  3000               	movlw	0
  3013     17EF  07A3               	addwf	lcd_4bits_send_string@data+1,f
  3014     17F0                     l3079:
  3015                           
  3016                           ;ECU_LAYER/LCD/ecu_lcd.c: 88:         while(*data){
  3017     17F0  0823               	movf	lcd_4bits_send_string@data+1,w
  3018     17F1  00FF               	movwf	btemp+1
  3019     17F2  0822               	movf	lcd_4bits_send_string@data,w
  3020     17F3  0084               	movwf	4
  3021     17F4  160A  118A  2000  160A  118A  	fcall	stringtab
  3022     17F9  3A00               	xorlw	0
  3023     17FA  1D03               	skipz
  3024     17FB  2FFD               	goto	u3611
  3025     17FC  2FFE               	goto	u3610
  3026     17FD                     u3611:
  3027     17FD  2FD7               	goto	l3075
  3028     17FE                     u3610:
  3029     17FE                     l3081:
  3030                           
  3031                           ;ECU_LAYER/LCD/ecu_lcd.c: 92:     return ret;
  3032     17FE  0824               	movf	lcd_4bits_send_string@ret,w
  3033     17FF                     l48:
  3034     17FF  0008               	return
  3035     1800                     __end_of_lcd_4bits_send_string:
  3036                           
  3037                           	psect	text7
  3038     08B8                     __ptext7:	
  3039 ;; *************** function _lcd_4bits_send_char *****************
  3040 ;; Defined at:
  3041 ;;		line 57 in file "ECU_LAYER/LCD/ecu_lcd.c"
  3042 ;; Parameters:    Size  Location     Type
  3043 ;;  lcd             1    wreg     PTR const struct .
  3044 ;;		 -> lcd(6), 
  3045 ;;  data            1   12[COMMON] unsigned char 
  3046 ;; Auto vars:     Size  Location     Type
  3047 ;;  lcd             1    1[BANK0 ] PTR const struct .
  3048 ;;		 -> lcd(6), 
  3049 ;;  ret             1    0[BANK0 ] unsigned char 
  3050 ;; Return value:  Size  Location     Type
  3051 ;;                  1    wreg      unsigned char 
  3052 ;; Registers used:
  3053 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3054 ;; Tracked objects:
  3055 ;;		On entry : 0/0
  3056 ;;		On exit  : 0/0
  3057 ;;		Unchanged: 0/0
  3058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3059 ;;      Params:         1       0       0       0       0
  3060 ;;      Locals:         0       2       0       0       0
  3061 ;;      Temps:          1       0       0       0       0
  3062 ;;      Totals:         2       2       0       0       0
  3063 ;;Total ram usage:        4 bytes
  3064 ;; Hardware stack levels used: 1
  3065 ;; Hardware stack levels required when called: 2
  3066 ;; This function calls:
  3067 ;;		_gpio_pin_write_logic
  3068 ;;		_send_4bits
  3069 ;;		_send_enable_signal
  3070 ;; This function is called by:
  3071 ;;		_lcd_4bits_send_string
  3072 ;;		_lcd_4bits_send_char_pos
  3073 ;;		_lcd_4bit_custom_character
  3074 ;; This function uses a non-reentrant model
  3075 ;;
  3076                           
  3077     08B8                     _lcd_4bits_send_char:	
  3078                           ;psect for function _lcd_4bits_send_char
  3079                           
  3080                           
  3081                           ;incstack = 0
  3082                           ; Regs used in _lcd_4bits_send_char: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  3083                           ;lcd_4bits_send_char@lcd stored from wreg
  3084     08B8  1283               	bcf	3,5	;RP0=0, select bank0
  3085     08B9  1303               	bcf	3,6	;RP1=0, select bank0
  3086     08BA  00A1               	movwf	lcd_4bits_send_char@lcd
  3087     08BB                     l2971:
  3088     08BB                     l2973:
  3089                           
  3090                           ;ECU_LAYER/LCD/ecu_lcd.c: 59:     if(lcd == ((void*)0)){
  3091     08BB  0821               	movf	lcd_4bits_send_char@lcd,w
  3092     08BC  1D03               	btfss	3,2
  3093     08BD  28BF               	goto	u3511
  3094     08BE  28C0               	goto	u3510
  3095     08BF                     u3511:
  3096     08BF  28C3               	goto	l2977
  3097     08C0                     u3510:
  3098     08C0                     l2975:
  3099                           
  3100                           ;ECU_LAYER/LCD/ecu_lcd.c: 60:         ret = 0x01;
  3101     08C0  01A0               	clrf	lcd_4bits_send_char@ret
  3102     08C1  0AA0               	incf	lcd_4bits_send_char@ret,f
  3103                           
  3104                           ;ECU_LAYER/LCD/ecu_lcd.c: 61:     }
  3105     08C2  28FE               	goto	l2979
  3106     08C3                     l2977:
  3107                           
  3108                           ;ECU_LAYER/LCD/ecu_lcd.c: 63:         ret = gpio_pin_write_logic(&(lcd->rs),GPIO_HIGH);
  3109     08C3  01F0               	clrf	gpio_pin_write_logic@logic
  3110     08C4  0AF0               	incf	gpio_pin_write_logic@logic,f
  3111     08C5  0821               	movf	lcd_4bits_send_char@lcd,w
  3112     08C6  120A  158A  2720  120A  158A  	fcall	_gpio_pin_write_logic
  3113     08CB  1283               	bcf	3,5	;RP0=0, select bank0
  3114     08CC  1303               	bcf	3,6	;RP1=0, select bank0
  3115     08CD  00A0               	movwf	lcd_4bits_send_char@ret
  3116                           
  3117                           ;ECU_LAYER/LCD/ecu_lcd.c: 64:         ret = send_4bits(lcd,(data >> 4));
  3118     08CE  087C               	movf	lcd_4bits_send_char@data,w
  3119     08CF  00FD               	movwf	??_lcd_4bits_send_char
  3120     08D0  3004               	movlw	4
  3121     08D1                     u3525:
  3122     08D1  1003               	clrc
  3123     08D2  0CFD               	rrf	??_lcd_4bits_send_char,f
  3124     08D3  3EFF               	addlw	-1
  3125     08D4  1D03               	skipz
  3126     08D5  28D1               	goto	u3525
  3127     08D6  087D               	movf	??_lcd_4bits_send_char,w
  3128     08D7  00F8               	movwf	send_4bits@command
  3129     08D8  0821               	movf	lcd_4bits_send_char@lcd,w
  3130     08D9  120A  158A  214A  120A  158A  	fcall	_send_4bits
  3131     08DE  1283               	bcf	3,5	;RP0=0, select bank0
  3132     08DF  1303               	bcf	3,6	;RP1=0, select bank0
  3133     08E0  00A0               	movwf	lcd_4bits_send_char@ret
  3134                           
  3135                           ;ECU_LAYER/LCD/ecu_lcd.c: 65:          ret = send_enable_signal(lcd);
  3136     08E1  0821               	movf	lcd_4bits_send_char@lcd,w
  3137     08E2  120A  118A  2003  120A  158A  	fcall	_send_enable_signal
  3138     08E7  1283               	bcf	3,5	;RP0=0, select bank0
  3139     08E8  1303               	bcf	3,6	;RP1=0, select bank0
  3140     08E9  00A0               	movwf	lcd_4bits_send_char@ret
  3141                           
  3142                           ;ECU_LAYER/LCD/ecu_lcd.c: 66:         ret = send_4bits(lcd,data);
  3143     08EA  087C               	movf	lcd_4bits_send_char@data,w
  3144     08EB  00F8               	movwf	send_4bits@command
  3145     08EC  0821               	movf	lcd_4bits_send_char@lcd,w
  3146     08ED  120A  158A  214A  120A  158A  	fcall	_send_4bits
  3147     08F2  1283               	bcf	3,5	;RP0=0, select bank0
  3148     08F3  1303               	bcf	3,6	;RP1=0, select bank0
  3149     08F4  00A0               	movwf	lcd_4bits_send_char@ret
  3150                           
  3151                           ;ECU_LAYER/LCD/ecu_lcd.c: 67:         ret = send_enable_signal(lcd);
  3152     08F5  0821               	movf	lcd_4bits_send_char@lcd,w
  3153     08F6  120A  118A  2003  120A  158A  	fcall	_send_enable_signal
  3154     08FB  1283               	bcf	3,5	;RP0=0, select bank0
  3155     08FC  1303               	bcf	3,6	;RP1=0, select bank0
  3156     08FD  00A0               	movwf	lcd_4bits_send_char@ret
  3157     08FE                     l2979:
  3158                           
  3159                           ;ECU_LAYER/LCD/ecu_lcd.c: 69:     return ret;
  3160     08FE  0820               	movf	lcd_4bits_send_char@ret,w
  3161     08FF                     l35:
  3162     08FF  0008               	return
  3163     0900                     __end_of_lcd_4bits_send_char:
  3164                           
  3165                           	psect	text8
  3166     0AAA                     __ptext8:	
  3167 ;; *************** function _keypad_read_value *****************
  3168 ;; Defined at:
  3169 ;;		line 35 in file "ECU_LAYER/KEYPAD/ecu_keypad.c"
  3170 ;; Parameters:    Size  Location     Type
  3171 ;;  keypad          1    wreg     PTR const struct .
  3172 ;;		 -> keypad(7), 
  3173 ;;  value           1    8[COMMON] PTR unsigned char 
  3174 ;;		 -> temp(4), val(1), 
  3175 ;; Auto vars:     Size  Location     Type
  3176 ;;  keypad          1    2[BANK0 ] PTR const struct .
  3177 ;;		 -> keypad(7), 
  3178 ;;  l_coloumns      1    4[BANK0 ] unsigned char 
  3179 ;;  l_rows          1    3[BANK0 ] unsigned char 
  3180 ;;  counter         1    1[BANK0 ] unsigned char 
  3181 ;;  val             1    0[BANK0 ] unsigned char 
  3182 ;;  ret             1    0        unsigned char 
  3183 ;; Return value:  Size  Location     Type
  3184 ;;                  1    wreg      unsigned char 
  3185 ;; Registers used:
  3186 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3187 ;; Tracked objects:
  3188 ;;		On entry : 0/0
  3189 ;;		On exit  : 0/0
  3190 ;;		Unchanged: 0/0
  3191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3192 ;;      Params:         1       0       0       0       0
  3193 ;;      Locals:         0       5       0       0       0
  3194 ;;      Temps:          2       0       0       0       0
  3195 ;;      Totals:         3       5       0       0       0
  3196 ;;Total ram usage:        8 bytes
  3197 ;; Hardware stack levels used: 1
  3198 ;; Hardware stack levels required when called: 1
  3199 ;; This function calls:
  3200 ;;		___bmul
  3201 ;;		_gpio_pin_read_logic
  3202 ;;		_gpio_pin_write_logic
  3203 ;; This function is called by:
  3204 ;;		_main
  3205 ;; This function uses a non-reentrant model
  3206 ;;
  3207                           
  3208     0AAA                     _keypad_read_value:	
  3209                           ;psect for function _keypad_read_value
  3210                           
  3211                           
  3212                           ;incstack = 0
  3213                           ; Regs used in _keypad_read_value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3214                           ;keypad_read_value@keypad stored from wreg
  3215     0AAA  1283               	bcf	3,5	;RP0=0, select bank0
  3216     0AAB  1303               	bcf	3,6	;RP1=0, select bank0
  3217     0AAC  00A2               	movwf	keypad_read_value@keypad
  3218     0AAD                     l3313:
  3219                           
  3220                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 37:     uint8 l_rows = 0x00;
  3221     0AAD  01A3               	clrf	keypad_read_value@l_rows
  3222                           
  3223                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 38:     uint8 l_coloumns = 0x00;
  3224     0AAE  01A4               	clrf	keypad_read_value@l_coloumns
  3225                           
  3226                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 39:     uint8 counter = 0x00;
  3227     0AAF  01A1               	clrf	keypad_read_value@counter
  3228                           
  3229                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 40:     uint8 val = 0x00;
  3230     0AB0  01A0               	clrf	keypad_read_value@val
  3231     0AB1                     l3315:
  3232                           
  3233                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 41:     if(keypad == ((void*)0)){
  3234     0AB1  0822               	movf	keypad_read_value@keypad,w
  3235     0AB2  1D03               	btfss	3,2
  3236     0AB3  2AB5               	goto	u3961
  3237     0AB4  2AB6               	goto	u3960
  3238     0AB5                     u3961:
  3239     0AB5  2AB7               	goto	l3319
  3240     0AB6                     u3960:
  3241     0AB6                     l3317:
  3242                           
  3243                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 43:     }
  3244     0AB6  2B1F               	goto	l538
  3245     0AB7                     l3319:
  3246                           
  3247                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 45:         for(l_rows = 0x00;l_rows < 4;l_rows++){
  3248     0AB7  01A3               	clrf	keypad_read_value@l_rows
  3249     0AB8                     l3325:
  3250                           
  3251                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 46:             for(counter = 0x00;counter < 4;counter++
      +                          ){
  3252     0AB8  01A1               	clrf	keypad_read_value@counter
  3253     0AB9                     l3331:
  3254     0AB9  01F0               	clrf	gpio_pin_write_logic@logic
  3255     0ABA  0821               	movf	keypad_read_value@counter,w
  3256     0ABB  0722               	addwf	keypad_read_value@keypad,w
  3257     0ABC  120A  158A  2720  120A  158A  	fcall	_gpio_pin_write_logic
  3258     0AC1                     l3333:
  3259                           
  3260                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 48:             }
  3261     0AC1  3001               	movlw	1
  3262     0AC2  00FF               	movwf	btemp+1
  3263     0AC3  087F               	movf	btemp+1,w
  3264     0AC4  1283               	bcf	3,5	;RP0=0, select bank0
  3265     0AC5  1303               	bcf	3,6	;RP1=0, select bank0
  3266     0AC6  07A1               	addwf	keypad_read_value@counter,f
  3267     0AC7                     l3335:
  3268     0AC7  3004               	movlw	4
  3269     0AC8  0221               	subwf	keypad_read_value@counter,w
  3270     0AC9  1C03               	skipc
  3271     0ACA  2ACC               	goto	u3971
  3272     0ACB  2ACD               	goto	u3970
  3273     0ACC                     u3971:
  3274     0ACC  2AB9               	goto	l3331
  3275     0ACD                     u3970:
  3276     0ACD                     l3337:
  3277     0ACD  01F0               	clrf	gpio_pin_write_logic@logic
  3278     0ACE  0AF0               	incf	gpio_pin_write_logic@logic,f
  3279     0ACF  0823               	movf	keypad_read_value@l_rows,w
  3280     0AD0  0722               	addwf	keypad_read_value@keypad,w
  3281     0AD1  120A  158A  2720  120A  158A  	fcall	_gpio_pin_write_logic
  3282     0AD6                     l3339:
  3283                           
  3284                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 50:             _delay((unsigned long)((10)*(8000000UL/4
      +                          000.0)));
  3285     0AD6  301A               	movlw	26
  3286     0AD7  00FA               	movwf	??_keypad_read_value+1
  3287     0AD8  30F8               	movlw	248
  3288     0AD9  00F9               	movwf	??_keypad_read_value
  3289     0ADA                     u5417:
  3290     0ADA  0BF9               	decfsz	??_keypad_read_value,f
  3291     0ADB  2ADA               	goto	u5417
  3292     0ADC  0BFA               	decfsz	??_keypad_read_value+1,f
  3293     0ADD  2ADA               	goto	u5417
  3294     0ADE  0000               	nop
  3295     0ADF                     l3341:
  3296                           
  3297                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 51:             for(l_coloumns = 0x00;l_coloumns < 3;l_c
      +                          oloumns++){
  3298     0ADF  1283               	bcf	3,5	;RP0=0, select bank0
  3299     0AE0  1303               	bcf	3,6	;RP1=0, select bank0
  3300     0AE1  01A4               	clrf	keypad_read_value@l_coloumns
  3301     0AE2                     l3347:
  3302     0AE2  3020               	movlw	(low (keypad_read_value@val| 0))& (0+255)
  3303     0AE3  00F0               	movwf	gpio_pin_read_logic@logic
  3304     0AE4  0824               	movf	keypad_read_value@l_coloumns,w
  3305     0AE5  0722               	addwf	keypad_read_value@keypad,w
  3306     0AE6  3E04               	addlw	4
  3307     0AE7  120A  158A  242B  120A  158A  	fcall	_gpio_pin_read_logic
  3308     0AEC                     l3349:
  3309                           
  3310                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 53:                 if(val == GPIO_HIGH){
  3311     0AEC  1283               	bcf	3,5	;RP0=0, select bank0
  3312     0AED  1303               	bcf	3,6	;RP1=0, select bank0
  3313     0AEE  0320               	decf	keypad_read_value@val,w
  3314     0AEF  1D03               	btfss	3,2
  3315     0AF0  2AF2               	goto	u3981
  3316     0AF1  2AF3               	goto	u3980
  3317     0AF2                     u3981:
  3318     0AF2  2B0B               	goto	l3353
  3319     0AF3                     u3980:
  3320     0AF3                     l3351:
  3321                           
  3322                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 54:                     *value = btn_values[l_rows][l_co
      +                          loumns];
  3323     0AF3  3003               	movlw	3
  3324     0AF4  00F0               	movwf	___bmul@multiplicand
  3325     0AF5  0823               	movf	keypad_read_value@l_rows,w
  3326     0AF6  160A  118A  2590  120A  158A  	fcall	___bmul
  3327     0AFB  3E01               	addlw	low ((_btn_values-__stringbase)| (0+32768))
  3328     0AFC  1283               	bcf	3,5	;RP0=0, select bank0
  3329     0AFD  1303               	bcf	3,6	;RP1=0, select bank0
  3330     0AFE  0724               	addwf	keypad_read_value@l_coloumns,w
  3331     0AFF  0084               	movwf	4
  3332     0B00  160A  118A  200A  120A  158A  	fcall	stringdir
  3333     0B05  00FF               	movwf	btemp+1
  3334     0B06  0878               	movf	keypad_read_value@value,w
  3335     0B07  0084               	movwf	4
  3336     0B08  087F               	movf	btemp+1,w
  3337     0B09  1383               	bcf	3,7	;select IRP bank0
  3338     0B0A  0080               	movwf	0
  3339     0B0B                     l3353:	
  3340                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 55:                 }
  3341                           
  3342                           
  3343                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 57:             }
  3344     0B0B  3001               	movlw	1
  3345     0B0C  00FF               	movwf	btemp+1
  3346     0B0D  087F               	movf	btemp+1,w
  3347     0B0E  07A4               	addwf	keypad_read_value@l_coloumns,f
  3348     0B0F                     l3355:
  3349     0B0F  3003               	movlw	3
  3350     0B10  0224               	subwf	keypad_read_value@l_coloumns,w
  3351     0B11  1C03               	skipc
  3352     0B12  2B14               	goto	u3991
  3353     0B13  2B15               	goto	u3990
  3354     0B14                     u3991:
  3355     0B14  2AE2               	goto	l3347
  3356     0B15                     u3990:
  3357     0B15                     l3357:
  3358                           
  3359                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 58:         }
  3360     0B15  3001               	movlw	1
  3361     0B16  00FF               	movwf	btemp+1
  3362     0B17  087F               	movf	btemp+1,w
  3363     0B18  07A3               	addwf	keypad_read_value@l_rows,f
  3364     0B19                     l3359:
  3365     0B19  3004               	movlw	4
  3366     0B1A  0223               	subwf	keypad_read_value@l_rows,w
  3367     0B1B  1C03               	skipc
  3368     0B1C  2B1E               	goto	u4001
  3369     0B1D  2B1F               	goto	u4000
  3370     0B1E                     u4001:
  3371     0B1E  2AB8               	goto	l3325
  3372     0B1F                     u4000:
  3373     0B1F                     l538:
  3374     0B1F  0008               	return
  3375     0B20                     __end_of_keypad_read_value:
  3376                           
  3377                           	psect	text9
  3378     0C2B                     __ptext9:	
  3379 ;; *************** function _gpio_pin_read_logic *****************
  3380 ;; Defined at:
  3381 ;;		line 73 in file "MCAL_LAYER/GPIO/mcal_gpio.c"
  3382 ;; Parameters:    Size  Location     Type
  3383 ;;  pin             1    wreg     PTR const struct .
  3384 ;;		 -> keypad$COLOUMNS_PIN(3), keypad(7), 
  3385 ;;  logic           1    0[COMMON] PTR enum E1519
  3386 ;;		 -> keypad_read_value@val(1), 
  3387 ;; Auto vars:     Size  Location     Type
  3388 ;;  pin             1    7[COMMON] PTR const struct .
  3389 ;;		 -> keypad$COLOUMNS_PIN(3), keypad(7), 
  3390 ;;  ret             1    6[COMMON] unsigned char 
  3391 ;; Return value:  Size  Location     Type
  3392 ;;                  1    wreg      unsigned char 
  3393 ;; Registers used:
  3394 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3395 ;; Tracked objects:
  3396 ;;		On entry : 0/0
  3397 ;;		On exit  : 0/0
  3398 ;;		Unchanged: 0/0
  3399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3400 ;;      Params:         1       0       0       0       0
  3401 ;;      Locals:         2       0       0       0       0
  3402 ;;      Temps:          5       0       0       0       0
  3403 ;;      Totals:         8       0       0       0       0
  3404 ;;Total ram usage:        8 bytes
  3405 ;; Hardware stack levels used: 1
  3406 ;; This function calls:
  3407 ;;		Nothing
  3408 ;; This function is called by:
  3409 ;;		_keypad_read_value
  3410 ;; This function uses a non-reentrant model
  3411 ;;
  3412                           
  3413     0C2B                     _gpio_pin_read_logic:	
  3414                           ;psect for function _gpio_pin_read_logic
  3415                           
  3416                           
  3417                           ;incstack = 0
  3418                           ; Regs used in _gpio_pin_read_logic: [wreg-fsr0h+status,2+status,0+btemp+1]
  3419                           ;gpio_pin_read_logic@pin stored from wreg
  3420     0C2B  00F7               	movwf	gpio_pin_read_logic@pin
  3421     0C2C                     l3129:
  3422                           
  3423                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 74:     uint8 ret = 0x00;
  3424     0C2C  01F6               	clrf	gpio_pin_read_logic@ret
  3425     0C2D                     l3131:
  3426                           
  3427                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 75:     if (pin == ((void*)0) || logic == ((void*)0)) {
  3428     0C2D  0877               	movf	gpio_pin_read_logic@pin,w
  3429     0C2E  1903               	btfsc	3,2
  3430     0C2F  2C31               	goto	u3691
  3431     0C30  2C32               	goto	u3690
  3432     0C31                     u3691:
  3433     0C31  2C37               	goto	l311
  3434     0C32                     u3690:
  3435     0C32                     l3133:
  3436     0C32  0870               	movf	gpio_pin_read_logic@logic,w
  3437     0C33  1D03               	btfss	3,2
  3438     0C34  2C36               	goto	u3701
  3439     0C35  2C37               	goto	u3700
  3440     0C36                     u3701:
  3441     0C36  2C3A               	goto	l3135
  3442     0C37                     u3700:
  3443     0C37                     l311:
  3444                           
  3445                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 76:         ret = 0x01;
  3446     0C37  01F6               	clrf	gpio_pin_read_logic@ret
  3447     0C38  0AF6               	incf	gpio_pin_read_logic@ret,f
  3448                           
  3449                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 77:     } else {
  3450     0C39  2CD8               	goto	l3157
  3451     0C3A                     l3135:
  3452                           
  3453                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 78:         if ((pin->port == PORTA_INDEX && pin->pin < 6)
      +                           || (pin->port == PORTB_INDEX && pin->pin < 8) || (pin->port == PORTC_INDEX && pin->pin 
      +                          < 8) ||
  3454     0C3A  0877               	movf	gpio_pin_read_logic@pin,w
  3455     0C3B  0084               	movwf	4
  3456     0C3C  1383               	bcf	3,7	;select IRP bank0
  3457     0C3D  0800               	movf	0,w
  3458     0C3E  3907               	andlw	7
  3459     0C3F  3A00               	xorlw	0
  3460     0C40  1D03               	skipz
  3461     0C41  2C43               	goto	u3711
  3462     0C42  2C44               	goto	u3710
  3463     0C43                     u3711:
  3464     0C43  2C52               	goto	l3139
  3465     0C44                     u3710:
  3466     0C44                     l3137:
  3467     0C44  0877               	movf	gpio_pin_read_logic@pin,w
  3468     0C45  0084               	movwf	4
  3469     0C46  0C00               	rrf	0,w
  3470     0C47  00F1               	movwf	??_gpio_pin_read_logic
  3471     0C48  0CF1               	rrf	??_gpio_pin_read_logic,f
  3472     0C49  0C71               	rrf	??_gpio_pin_read_logic,w
  3473     0C4A  3907               	andlw	7
  3474     0C4B  00F2               	movwf	??_gpio_pin_read_logic+1
  3475     0C4C  3006               	movlw	6
  3476     0C4D  0272               	subwf	??_gpio_pin_read_logic+1,w
  3477     0C4E  1C03               	skipc
  3478     0C4F  2C51               	goto	u3721
  3479     0C50  2C52               	goto	u3720
  3480     0C51                     u3721:
  3481     0C51  2CAE               	goto	l3155
  3482     0C52                     u3720:
  3483     0C52                     l3139:
  3484     0C52  0877               	movf	gpio_pin_read_logic@pin,w
  3485     0C53  0084               	movwf	4
  3486     0C54  0800               	movf	0,w
  3487     0C55  3907               	andlw	7
  3488     0C56  3A01               	xorlw	1
  3489     0C57  1D03               	skipz
  3490     0C58  2C5A               	goto	u3731
  3491     0C59  2C5B               	goto	u3730
  3492     0C5A                     u3731:
  3493     0C5A  2C69               	goto	l3143
  3494     0C5B                     u3730:
  3495     0C5B                     l3141:
  3496     0C5B  0877               	movf	gpio_pin_read_logic@pin,w
  3497     0C5C  0084               	movwf	4
  3498     0C5D  0C00               	rrf	0,w
  3499     0C5E  00F1               	movwf	??_gpio_pin_read_logic
  3500     0C5F  0CF1               	rrf	??_gpio_pin_read_logic,f
  3501     0C60  0C71               	rrf	??_gpio_pin_read_logic,w
  3502     0C61  3907               	andlw	7
  3503     0C62  00F2               	movwf	??_gpio_pin_read_logic+1
  3504     0C63  3008               	movlw	8
  3505     0C64  0272               	subwf	??_gpio_pin_read_logic+1,w
  3506     0C65  1C03               	skipc
  3507     0C66  2C68               	goto	u3741
  3508     0C67  2C69               	goto	u3740
  3509     0C68                     u3741:
  3510     0C68  2CAE               	goto	l3155
  3511     0C69                     u3740:
  3512     0C69                     l3143:
  3513     0C69  0877               	movf	gpio_pin_read_logic@pin,w
  3514     0C6A  0084               	movwf	4
  3515     0C6B  0800               	movf	0,w
  3516     0C6C  3907               	andlw	7
  3517     0C6D  3A02               	xorlw	2
  3518     0C6E  1D03               	skipz
  3519     0C6F  2C71               	goto	u3751
  3520     0C70  2C72               	goto	u3750
  3521     0C71                     u3751:
  3522     0C71  2C80               	goto	l3147
  3523     0C72                     u3750:
  3524     0C72                     l3145:
  3525     0C72  0877               	movf	gpio_pin_read_logic@pin,w
  3526     0C73  0084               	movwf	4
  3527     0C74  0C00               	rrf	0,w
  3528     0C75  00F1               	movwf	??_gpio_pin_read_logic
  3529     0C76  0CF1               	rrf	??_gpio_pin_read_logic,f
  3530     0C77  0C71               	rrf	??_gpio_pin_read_logic,w
  3531     0C78  3907               	andlw	7
  3532     0C79  00F2               	movwf	??_gpio_pin_read_logic+1
  3533     0C7A  3008               	movlw	8
  3534     0C7B  0272               	subwf	??_gpio_pin_read_logic+1,w
  3535     0C7C  1C03               	skipc
  3536     0C7D  2C7F               	goto	u3761
  3537     0C7E  2C80               	goto	u3760
  3538     0C7F                     u3761:
  3539     0C7F  2CAE               	goto	l3155
  3540     0C80                     u3760:
  3541     0C80                     l3147:
  3542     0C80  0877               	movf	gpio_pin_read_logic@pin,w
  3543     0C81  0084               	movwf	4
  3544     0C82  0800               	movf	0,w
  3545     0C83  3907               	andlw	7
  3546     0C84  3A03               	xorlw	3
  3547     0C85  1D03               	skipz
  3548     0C86  2C88               	goto	u3771
  3549     0C87  2C89               	goto	u3770
  3550     0C88                     u3771:
  3551     0C88  2C97               	goto	l3151
  3552     0C89                     u3770:
  3553     0C89                     l3149:
  3554     0C89  0877               	movf	gpio_pin_read_logic@pin,w
  3555     0C8A  0084               	movwf	4
  3556     0C8B  0C00               	rrf	0,w
  3557     0C8C  00F1               	movwf	??_gpio_pin_read_logic
  3558     0C8D  0CF1               	rrf	??_gpio_pin_read_logic,f
  3559     0C8E  0C71               	rrf	??_gpio_pin_read_logic,w
  3560     0C8F  3907               	andlw	7
  3561     0C90  00F2               	movwf	??_gpio_pin_read_logic+1
  3562     0C91  3008               	movlw	8
  3563     0C92  0272               	subwf	??_gpio_pin_read_logic+1,w
  3564     0C93  1C03               	skipc
  3565     0C94  2C96               	goto	u3781
  3566     0C95  2C97               	goto	u3780
  3567     0C96                     u3781:
  3568     0C96  2CAE               	goto	l3155
  3569     0C97                     u3780:
  3570     0C97                     l3151:
  3571     0C97  0877               	movf	gpio_pin_read_logic@pin,w
  3572     0C98  0084               	movwf	4
  3573     0C99  0800               	movf	0,w
  3574     0C9A  3907               	andlw	7
  3575     0C9B  3A04               	xorlw	4
  3576     0C9C  1D03               	skipz
  3577     0C9D  2C9F               	goto	u3791
  3578     0C9E  2CA0               	goto	u3790
  3579     0C9F                     u3791:
  3580     0C9F  2C37               	goto	l311
  3581     0CA0                     u3790:
  3582     0CA0                     l3153:
  3583     0CA0  0877               	movf	gpio_pin_read_logic@pin,w
  3584     0CA1  0084               	movwf	4
  3585     0CA2  0C00               	rrf	0,w
  3586     0CA3  00F1               	movwf	??_gpio_pin_read_logic
  3587     0CA4  0CF1               	rrf	??_gpio_pin_read_logic,f
  3588     0CA5  0C71               	rrf	??_gpio_pin_read_logic,w
  3589     0CA6  3907               	andlw	7
  3590     0CA7  00F2               	movwf	??_gpio_pin_read_logic+1
  3591     0CA8  3003               	movlw	3
  3592     0CA9  0272               	subwf	??_gpio_pin_read_logic+1,w
  3593     0CAA  1803               	skipnc
  3594     0CAB  2CAD               	goto	u3801
  3595     0CAC  2CAE               	goto	u3800
  3596     0CAD                     u3801:
  3597     0CAD  2C37               	goto	l311
  3598     0CAE                     u3800:
  3599     0CAE                     l3155:
  3600                           
  3601                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 79:                 (pin->port == PORTD_INDEX && pin->pin 
      +                          < 8) || (pin->port == PORTE_INDEX && pin->pin < 3)) {;MCAL_LAYER/GPIO/mcal_gpio.c: 80:  
      +                                     *logic = ((*port_registers[pin->port] >> pin->pin) & 0x01);
  3602     0CAE  0877               	movf	gpio_pin_read_logic@pin,w
  3603     0CAF  0084               	movwf	4
  3604     0CB0  0800               	movf	0,w
  3605     0CB1  3907               	andlw	7
  3606     0CB2  00F1               	movwf	??_gpio_pin_read_logic
  3607     0CB3  0771               	addwf	??_gpio_pin_read_logic,w
  3608     0CB4  3EA0               	addlw	(low (_port_registers| 0))& (0+255)
  3609     0CB5  0084               	movwf	4
  3610     0CB6  0800               	movf	0,w
  3611     0CB7  00F2               	movwf	??_gpio_pin_read_logic+1
  3612     0CB8  0A84               	incf	4,f
  3613     0CB9  0800               	movf	0,w
  3614     0CBA  00F3               	movwf	??_gpio_pin_read_logic+2
  3615     0CBB  0872               	movf	??_gpio_pin_read_logic+1,w
  3616     0CBC  0084               	movwf	4
  3617     0CBD  1783               	bsf	3,7
  3618     0CBE  1C73               	btfss	??_gpio_pin_read_logic+2,0
  3619     0CBF  1383               	bcf	3,7
  3620     0CC0  0800               	movf	0,w
  3621     0CC1  00F4               	movwf	??_gpio_pin_read_logic+3
  3622     0CC2  0877               	movf	gpio_pin_read_logic@pin,w
  3623     0CC3  0084               	movwf	4
  3624     0CC4  1383               	bcf	3,7	;select IRP bank0
  3625     0CC5  0C00               	rrf	0,w
  3626     0CC6  00F5               	movwf	??_gpio_pin_read_logic+4
  3627     0CC7  0CF5               	rrf	??_gpio_pin_read_logic+4,f
  3628     0CC8  0C75               	rrf	??_gpio_pin_read_logic+4,w
  3629     0CC9  3907               	andlw	7
  3630     0CCA  3E01               	addlw	1
  3631     0CCB  2CCE               	goto	u3814
  3632     0CCC                     u3815:
  3633     0CCC  1003               	clrc
  3634     0CCD  0CF4               	rrf	??_gpio_pin_read_logic+3,f
  3635     0CCE                     u3814:
  3636     0CCE  3EFF               	addlw	-1
  3637     0CCF  1D03               	skipz
  3638     0CD0  2CCC               	goto	u3815
  3639     0CD1  0874               	movf	??_gpio_pin_read_logic+3,w
  3640     0CD2  3901               	andlw	1
  3641     0CD3  00FF               	movwf	btemp+1
  3642     0CD4  0870               	movf	gpio_pin_read_logic@logic,w
  3643     0CD5  0084               	movwf	4
  3644     0CD6  087F               	movf	btemp+1,w
  3645     0CD7  0080               	movwf	0
  3646     0CD8                     l3157:	
  3647                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 81:         } else {
  3648                           
  3649                           
  3650                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 85:     return ret;
  3651     0CD8  0876               	movf	gpio_pin_read_logic@ret,w
  3652     0CD9                     l325:
  3653     0CD9  0008               	return
  3654     0CDA                     __end_of_gpio_pin_read_logic:
  3655                           
  3656                           	psect	text10
  3657     1590                     __ptext10:	
  3658 ;; *************** function ___bmul *****************
  3659 ;; Defined at:
  3660 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul8.c"
  3661 ;; Parameters:    Size  Location     Type
  3662 ;;  multiplier      1    wreg     unsigned char 
  3663 ;;  multiplicand    1    0[COMMON] unsigned char 
  3664 ;; Auto vars:     Size  Location     Type
  3665 ;;  multiplier      1    2[COMMON] unsigned char 
  3666 ;;  product         1    1[COMMON] unsigned char 
  3667 ;; Return value:  Size  Location     Type
  3668 ;;                  1    wreg      unsigned char 
  3669 ;; Registers used:
  3670 ;;		wreg, status,2, status,0, btemp+1
  3671 ;; Tracked objects:
  3672 ;;		On entry : 0/0
  3673 ;;		On exit  : 0/0
  3674 ;;		Unchanged: 0/0
  3675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3676 ;;      Params:         1       0       0       0       0
  3677 ;;      Locals:         2       0       0       0       0
  3678 ;;      Temps:          0       0       0       0       0
  3679 ;;      Totals:         3       0       0       0       0
  3680 ;;Total ram usage:        3 bytes
  3681 ;; Hardware stack levels used: 1
  3682 ;; This function calls:
  3683 ;;		Nothing
  3684 ;; This function is called by:
  3685 ;;		_keypad_read_value
  3686 ;; This function uses a non-reentrant model
  3687 ;;
  3688                           
  3689     1590                     ___bmul:	
  3690                           ;psect for function ___bmul
  3691                           
  3692                           
  3693                           ;incstack = 0
  3694                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  3695                           ;___bmul@multiplier stored from wreg
  3696     1590  00F2               	movwf	___bmul@multiplier
  3697     1591                     l3165:
  3698     1591  01F1               	clrf	___bmul@product
  3699     1592                     l3167:
  3700     1592  1C72               	btfss	___bmul@multiplier,0
  3701     1593  2D95               	goto	u3821
  3702     1594  2D96               	goto	u3820
  3703     1595                     u3821:
  3704     1595  2D9A               	goto	l3171
  3705     1596                     u3820:
  3706     1596                     l3169:
  3707     1596  0870               	movf	___bmul@multiplicand,w
  3708     1597  00FF               	movwf	btemp+1
  3709     1598  087F               	movf	btemp+1,w
  3710     1599  07F1               	addwf	___bmul@product,f
  3711     159A                     l3171:
  3712     159A  1003               	clrc
  3713     159B  0DF0               	rlf	___bmul@multiplicand,f
  3714     159C                     l3173:
  3715     159C  1003               	clrc
  3716     159D  0CF2               	rrf	___bmul@multiplier,f
  3717     159E                     l3175:
  3718     159E  0872               	movf	___bmul@multiplier,w
  3719     159F  1D03               	btfss	3,2
  3720     15A0  2DA2               	goto	u3831
  3721     15A1  2DA3               	goto	u3830
  3722     15A2                     u3831:
  3723     15A2  2D92               	goto	l3167
  3724     15A3                     u3830:
  3725     15A3                     l3177:
  3726     15A3  0871               	movf	___bmul@product,w
  3727     15A4                     l650:
  3728     15A4  0008               	return
  3729     15A5                     __end_of___bmul:
  3730                           
  3731                           	psect	text11
  3732     1540                     __ptext11:	
  3733 ;; *************** function _apllication_initilaize *****************
  3734 ;; Defined at:
  3735 ;;		line 84 in file "Temperature_Controlled_Fan_System.c"
  3736 ;; Parameters:    Size  Location     Type
  3737 ;;		None
  3738 ;; Auto vars:     Size  Location     Type
  3739 ;;		None
  3740 ;; Return value:  Size  Location     Type
  3741 ;;                  1    wreg      void 
  3742 ;; Registers used:
  3743 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3744 ;; Tracked objects:
  3745 ;;		On entry : 0/0
  3746 ;;		On exit  : 0/0
  3747 ;;		Unchanged: 0/0
  3748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3749 ;;      Params:         0       0       0       0       0
  3750 ;;      Locals:         0       0       0       0       0
  3751 ;;      Temps:          0       0       0       0       0
  3752 ;;      Totals:         0       0       0       0       0
  3753 ;;Total ram usage:        0 bytes
  3754 ;; Hardware stack levels used: 1
  3755 ;; Hardware stack levels required when called: 5
  3756 ;; This function calls:
  3757 ;;		_ecu_initialzie
  3758 ;;		_mcal_initialize
  3759 ;; This function is called by:
  3760 ;;		_main
  3761 ;; This function uses a non-reentrant model
  3762 ;;
  3763                           
  3764     1540                     _apllication_initilaize:	
  3765                           ;psect for function _apllication_initilaize
  3766                           
  3767     1540                     l3309:	
  3768                           ;incstack = 0
  3769                           ; Regs used in _apllication_initilaize: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  3770                           
  3771                           
  3772                           ;Temperature_Controlled_Fan_System.c: 85:     ecu_initialzie();
  3773     1540  160A  118A  25BC  160A  118A  	fcall	_ecu_initialzie
  3774     1545                     l3311:
  3775                           
  3776                           ;Temperature_Controlled_Fan_System.c: 86:     mcal_initialize();
  3777     1545  160A  118A  2531  160A  118A  	fcall	_mcal_initialize
  3778     154A                     l506:
  3779     154A  0008               	return
  3780     154B                     __end_of_apllication_initilaize:
  3781                           
  3782                           	psect	text12
  3783     1531                     __ptext12:	
  3784 ;; *************** function _mcal_initialize *****************
  3785 ;; Defined at:
  3786 ;;		line 12 in file "MCAL_LAYER/MCAL_LAYER.c"
  3787 ;; Parameters:    Size  Location     Type
  3788 ;;		None
  3789 ;; Auto vars:     Size  Location     Type
  3790 ;;  ret             1    0        unsigned char 
  3791 ;; Return value:  Size  Location     Type
  3792 ;;                  1    wreg      unsigned char 
  3793 ;; Registers used:
  3794 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3795 ;; Tracked objects:
  3796 ;;		On entry : 0/0
  3797 ;;		On exit  : 0/0
  3798 ;;		Unchanged: 0/0
  3799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3800 ;;      Params:         0       0       0       0       0
  3801 ;;      Locals:         0       0       0       0       0
  3802 ;;      Temps:          0       0       0       0       0
  3803 ;;      Totals:         0       0       0       0       0
  3804 ;;Total ram usage:        0 bytes
  3805 ;; Hardware stack levels used: 1
  3806 ;; Hardware stack levels required when called: 2
  3807 ;; This function calls:
  3808 ;;		_ADC_INIT
  3809 ;; This function is called by:
  3810 ;;		_apllication_initilaize
  3811 ;; This function uses a non-reentrant model
  3812 ;;
  3813                           
  3814     1531                     _mcal_initialize:	
  3815                           ;psect for function _mcal_initialize
  3816                           
  3817     1531                     l3161:	
  3818                           ;incstack = 0
  3819                           ; Regs used in _mcal_initialize: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3820                           
  3821     1531                     l3163:
  3822     1531  30C9               	movlw	(low (_adc| 0))& (0+255)
  3823     1532  120A  158A  2003  160A  118A  	fcall	_ADC_INIT
  3824     1537                     l421:
  3825     1537  0008               	return
  3826     1538                     __end_of_mcal_initialize:
  3827                           
  3828                           	psect	text13
  3829     0803                     __ptext13:	
  3830 ;; *************** function _ADC_INIT *****************
  3831 ;; Defined at:
  3832 ;;		line 12 in file "MCAL_LAYER/ADC/hal_adc.c"
  3833 ;; Parameters:    Size  Location     Type
  3834 ;;  adc             1    wreg     PTR const struct .
  3835 ;;		 -> adc(3), 
  3836 ;; Auto vars:     Size  Location     Type
  3837 ;;  adc             1    5[COMMON] PTR const struct .
  3838 ;;		 -> adc(3), 
  3839 ;;  ret             1    4[COMMON] unsigned char 
  3840 ;; Return value:  Size  Location     Type
  3841 ;;                  1    wreg      unsigned char 
  3842 ;; Registers used:
  3843 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3844 ;; Tracked objects:
  3845 ;;		On entry : 0/0
  3846 ;;		On exit  : 0/0
  3847 ;;		Unchanged: 0/0
  3848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3849 ;;      Params:         0       0       0       0       0
  3850 ;;      Locals:         2       0       0       0       0
  3851 ;;      Temps:          1       0       0       0       0
  3852 ;;      Totals:         3       0       0       0       0
  3853 ;;Total ram usage:        3 bytes
  3854 ;; Hardware stack levels used: 1
  3855 ;; Hardware stack levels required when called: 1
  3856 ;; This function calls:
  3857 ;;		_Result_Format
  3858 ;; This function is called by:
  3859 ;;		_mcal_initialize
  3860 ;; This function uses a non-reentrant model
  3861 ;;
  3862                           
  3863     0803                     _ADC_INIT:	
  3864                           ;psect for function _ADC_INIT
  3865                           
  3866                           
  3867                           ;incstack = 0
  3868                           ; Regs used in _ADC_INIT: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3869                           ;ADC_INIT@adc stored from wreg
  3870     0803  00F5               	movwf	ADC_INIT@adc
  3871     0804                     l3023:
  3872                           
  3873                           ;MCAL_LAYER/ADC/hal_adc.c: 13:     uint8 ret = 0x00;
  3874     0804  01F4               	clrf	ADC_INIT@ret
  3875     0805                     l3025:
  3876                           
  3877                           ;MCAL_LAYER/ADC/hal_adc.c: 14:     if(adc == ((void*)0)){
  3878     0805  0875               	movf	ADC_INIT@adc,w
  3879     0806  1D03               	btfss	3,2
  3880     0807  2809               	goto	u3571
  3881     0808  280A               	goto	u3570
  3882     0809                     u3571:
  3883     0809  280D               	goto	l158
  3884     080A                     u3570:
  3885     080A                     l3027:
  3886                           
  3887                           ;MCAL_LAYER/ADC/hal_adc.c: 15:         ret = 0x01;
  3888     080A  01F4               	clrf	ADC_INIT@ret
  3889     080B  0AF4               	incf	ADC_INIT@ret,f
  3890                           
  3891                           ;MCAL_LAYER/ADC/hal_adc.c: 16:     }
  3892     080C  282D               	goto	l3037
  3893     080D                     l158:	
  3894                           ;MCAL_LAYER/ADC/hal_adc.c: 17:     else{
  3895                           
  3896                           
  3897                           ;MCAL_LAYER/ADC/hal_adc.c: 18:         (ADCON0bits.ADON = 0);
  3898     080D  1283               	bcf	3,5	;RP0=0, select bank0
  3899     080E  1303               	bcf	3,6	;RP1=0, select bank0
  3900     080F  101F               	bcf	31,0	;volatile
  3901                           
  3902                           ;MCAL_LAYER/ADC/hal_adc.c: 19:         (ADCON0bits.GO_nDONE = 0);
  3903     0810  111F               	bcf	31,2	;volatile
  3904     0811                     l3029:
  3905                           
  3906                           ;MCAL_LAYER/ADC/hal_adc.c: 20:         (ADCON0bits.CHS = adc->channel);
  3907     0811  0875               	movf	ADC_INIT@adc,w
  3908     0812  0084               	movwf	4
  3909     0813  1383               	bcf	3,7	;select IRP bank0
  3910     0814  0800               	movf	0,w
  3911     0815  00F3               	movwf	??_ADC_INIT
  3912     0816  0DF3               	rlf	??_ADC_INIT,f
  3913     0817  0DF3               	rlf	??_ADC_INIT,f
  3914     0818  0DF3               	rlf	??_ADC_INIT,f
  3915     0819  081F               	movf	31,w	;volatile
  3916     081A  0673               	xorwf	??_ADC_INIT,w
  3917     081B  39C7               	andlw	-57
  3918     081C  0673               	xorwf	??_ADC_INIT,w
  3919     081D  009F               	movwf	31	;volatile
  3920     081E                     l3031:
  3921                           
  3922                           ;MCAL_LAYER/ADC/hal_adc.c: 21:         Result_Format(adc);
  3923     081E  0875               	movf	ADC_INIT@adc,w
  3924     081F  160A  118A  269F  120A  158A  	fcall	_Result_Format
  3925     0824                     l3033:
  3926                           
  3927                           ;MCAL_LAYER/ADC/hal_adc.c: 22:         (ADCON1bits.PCFG = 0x04);
  3928     0824  1683               	bsf	3,5	;RP0=1, select bank1
  3929     0825  1303               	bcf	3,6	;RP1=0, select bank1
  3930     0826  081F               	movf	31,w	;volatile
  3931     0827  39F0               	andlw	-16
  3932     0828  3804               	iorlw	4
  3933     0829  009F               	movwf	31	;volatile
  3934     082A                     l3035:
  3935                           
  3936                           ;MCAL_LAYER/ADC/hal_adc.c: 23:         (ADCON0bits.ADON = 1);
  3937     082A  1283               	bcf	3,5	;RP0=0, select bank0
  3938     082B  1303               	bcf	3,6	;RP1=0, select bank0
  3939     082C  141F               	bsf	31,0	;volatile
  3940     082D                     l3037:
  3941                           
  3942                           ;MCAL_LAYER/ADC/hal_adc.c: 25:     return ret;
  3943     082D  0874               	movf	ADC_INIT@ret,w
  3944     082E                     l160:
  3945     082E  0008               	return
  3946     082F                     __end_of_ADC_INIT:
  3947                           
  3948                           	psect	text14
  3949     169F                     __ptext14:	
  3950 ;; *************** function _Result_Format *****************
  3951 ;; Defined at:
  3952 ;;		line 92 in file "MCAL_LAYER/ADC/hal_adc.c"
  3953 ;; Parameters:    Size  Location     Type
  3954 ;;  adc             1    wreg     PTR const struct .
  3955 ;;		 -> adc(3), 
  3956 ;; Auto vars:     Size  Location     Type
  3957 ;;  adc             1    2[COMMON] PTR const struct .
  3958 ;;		 -> adc(3), 
  3959 ;;  ret             1    0        unsigned char 
  3960 ;; Return value:  Size  Location     Type
  3961 ;;                  1    wreg      unsigned char 
  3962 ;; Registers used:
  3963 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3964 ;; Tracked objects:
  3965 ;;		On entry : 0/0
  3966 ;;		On exit  : 0/0
  3967 ;;		Unchanged: 0/0
  3968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3969 ;;      Params:         0       0       0       0       0
  3970 ;;      Locals:         1       0       0       0       0
  3971 ;;      Temps:          2       0       0       0       0
  3972 ;;      Totals:         3       0       0       0       0
  3973 ;;Total ram usage:        3 bytes
  3974 ;; Hardware stack levels used: 1
  3975 ;; This function calls:
  3976 ;;		Nothing
  3977 ;; This function is called by:
  3978 ;;		_ADC_INIT
  3979 ;; This function uses a non-reentrant model
  3980 ;;
  3981                           
  3982     169F                     _Result_Format:	
  3983                           ;psect for function _Result_Format
  3984                           
  3985                           
  3986                           ;incstack = 0
  3987                           ; Regs used in _Result_Format: [wreg-fsr0h+status,2+status,0]
  3988                           ;Result_Format@adc stored from wreg
  3989     169F  00F2               	movwf	Result_Format@adc
  3990     16A0                     l2857:
  3991     16A0                     l2859:
  3992                           
  3993                           ;MCAL_LAYER/ADC/hal_adc.c: 94:     if(adc == ((void*)0)){
  3994     16A0  0872               	movf	Result_Format@adc,w
  3995     16A1  1D03               	btfss	3,2
  3996     16A2  2EA4               	goto	u3381
  3997     16A3  2EA5               	goto	u3380
  3998     16A4                     u3381:
  3999     16A4  2EAE               	goto	l2865
  4000     16A5                     u3380:
  4001     16A5                     l2861:
  4002                           
  4003                           ;MCAL_LAYER/ADC/hal_adc.c: 96:     }
  4004     16A5  2EC2               	goto	l200
  4005     16A6                     l197:	
  4006                           ;MCAL_LAYER/ADC/hal_adc.c: 99:             case RIGHT_JUSTIFIED :
  4007                           
  4008                           
  4009                           ;MCAL_LAYER/ADC/hal_adc.c: 100:                 ADCON1bits.ADFM = 1;
  4010     16A6  1683               	bsf	3,5	;RP0=1, select bank1
  4011     16A7  1303               	bcf	3,6	;RP1=0, select bank1
  4012     16A8  179F               	bsf	31,7	;volatile
  4013                           
  4014                           ;MCAL_LAYER/ADC/hal_adc.c: 101:             break;
  4015     16A9  2EC2               	goto	l200
  4016     16AA                     l199:	
  4017                           ;MCAL_LAYER/ADC/hal_adc.c: 102:             case LEFT_JUSTIFIED :
  4018                           
  4019                           
  4020                           ;MCAL_LAYER/ADC/hal_adc.c: 103:                 ADCON1bits.ADFM = 0;
  4021     16AA  1683               	bsf	3,5	;RP0=1, select bank1
  4022     16AB  1303               	bcf	3,6	;RP1=0, select bank1
  4023     16AC  139F               	bcf	31,7	;volatile
  4024                           
  4025                           ;MCAL_LAYER/ADC/hal_adc.c: 104:             break;
  4026     16AD  2EC2               	goto	l200
  4027     16AE                     l2865:
  4028     16AE  0872               	movf	Result_Format@adc,w
  4029     16AF  3E02               	addlw	2
  4030     16B0  0084               	movwf	4
  4031     16B1  1383               	bcf	3,7	;select IRP bank0
  4032     16B2  0800               	movf	0,w
  4033     16B3  00F0               	movwf	??_Result_Format
  4034     16B4  01F1               	clrf	??_Result_Format+1
  4035                           
  4036                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4037                           ; Switch size 1, requested type "simple"
  4038                           ; Number of cases is 1, Range of values is 0 to 0
  4039                           ; switch strategies available:
  4040                           ; Name         Instructions Cycles
  4041                           ; simple_byte            4     3 (average)
  4042                           ; direct_byte           11     8 (fixed)
  4043                           ; jumptable            260     6 (fixed)
  4044                           ;	Chosen strategy is simple_byte
  4045     16B5  0871               	movf	??_Result_Format+1,w
  4046     16B6  3A00               	xorlw	0	; case 0
  4047     16B7  1903               	skipnz
  4048     16B8  2EBA               	goto	l4041
  4049     16B9  2EC2               	goto	l200
  4050     16BA                     l4041:
  4051                           
  4052                           ; Switch size 1, requested type "simple"
  4053                           ; Number of cases is 2, Range of values is 0 to 1
  4054                           ; switch strategies available:
  4055                           ; Name         Instructions Cycles
  4056                           ; simple_byte            7     4 (average)
  4057                           ; direct_byte           14     8 (fixed)
  4058                           ; jumptable            260     6 (fixed)
  4059                           ;	Chosen strategy is simple_byte
  4060     16BA  0870               	movf	??_Result_Format,w
  4061     16BB  3A00               	xorlw	0	; case 0
  4062     16BC  1903               	skipnz
  4063     16BD  2EA6               	goto	l197
  4064     16BE  3A01               	xorlw	1	; case 1
  4065     16BF  1903               	skipnz
  4066     16C0  2EAA               	goto	l199
  4067     16C1  2EC2               	goto	l200
  4068     16C2                     l200:
  4069     16C2  0008               	return
  4070     16C3                     __end_of_Result_Format:
  4071                           
  4072                           	psect	text15
  4073     15BC                     __ptext15:	
  4074 ;; *************** function _ecu_initialzie *****************
  4075 ;; Defined at:
  4076 ;;		line 33 in file "ECU_LAYER/ECU_LAYER.c"
  4077 ;; Parameters:    Size  Location     Type
  4078 ;;		None
  4079 ;; Auto vars:     Size  Location     Type
  4080 ;;		None
  4081 ;; Return value:  Size  Location     Type
  4082 ;;                  1    wreg      void 
  4083 ;; Registers used:
  4084 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4085 ;; Tracked objects:
  4086 ;;		On entry : 0/0
  4087 ;;		On exit  : 0/0
  4088 ;;		Unchanged: 0/0
  4089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4090 ;;      Params:         0       0       0       0       0
  4091 ;;      Locals:         0       0       0       0       0
  4092 ;;      Temps:          0       0       0       0       0
  4093 ;;      Totals:         0       0       0       0       0
  4094 ;;Total ram usage:        0 bytes
  4095 ;; Hardware stack levels used: 1
  4096 ;; Hardware stack levels required when called: 4
  4097 ;; This function calls:
  4098 ;;		_keypad_initialize
  4099 ;;		_lcd_4bits_initialize
  4100 ;;		_motor_initialize
  4101 ;; This function is called by:
  4102 ;;		_apllication_initilaize
  4103 ;; This function uses a non-reentrant model
  4104 ;;
  4105                           
  4106     15BC                     _ecu_initialzie:	
  4107                           ;psect for function _ecu_initialzie
  4108                           
  4109     15BC                     l3105:	
  4110                           ;incstack = 0
  4111                           ; Regs used in _ecu_initialzie: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4112                           
  4113                           
  4114                           ;ECU_LAYER/ECU_LAYER.c: 34:     motor_initialize(&motor1);
  4115     15BC  30CE               	movlw	(low (_motor1| 0))& (0+255)
  4116     15BD  160A  118A  25A5  160A  118A  	fcall	_motor_initialize
  4117                           
  4118                           ;ECU_LAYER/ECU_LAYER.c: 35:     motor_initialize(&motor2);
  4119     15C2  30CC               	movlw	(low (_motor2| 0))& (0+255)
  4120     15C3  160A  118A  25A5  160A  118A  	fcall	_motor_initialize
  4121                           
  4122                           ;ECU_LAYER/ECU_LAYER.c: 36:     keypad_initialize(&keypad);
  4123     15C8  30B8               	movlw	(low (_keypad| 0))& (0+255)
  4124     15C9  160A  118A  2796  160A  118A  	fcall	_keypad_initialize
  4125                           
  4126                           ;ECU_LAYER/ECU_LAYER.c: 37:     lcd_4bits_initialize(&lcd);
  4127     15CE  30BF               	movlw	(low (_lcd| 0))& (0+255)
  4128     15CF  120A  158A  24DA  160A  118A  	fcall	_lcd_4bits_initialize
  4129     15D4                     l145:
  4130     15D4  0008               	return
  4131     15D5                     __end_of_ecu_initialzie:
  4132                           
  4133                           	psect	text16
  4134     15A5                     __ptext16:	
  4135 ;; *************** function _motor_initialize *****************
  4136 ;; Defined at:
  4137 ;;		line 8 in file "ECU_LAYER/Motor/ecu_motor_driver.c"
  4138 ;; Parameters:    Size  Location     Type
  4139 ;;  motor           1    wreg     PTR const struct .
  4140 ;;		 -> motor2(2), motor1(2), 
  4141 ;; Auto vars:     Size  Location     Type
  4142 ;;  motor           1   13[COMMON] PTR const struct .
  4143 ;;		 -> motor2(2), motor1(2), 
  4144 ;;  ret             1   12[COMMON] unsigned char 
  4145 ;; Return value:  Size  Location     Type
  4146 ;;                  1    wreg      unsigned char 
  4147 ;; Registers used:
  4148 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4149 ;; Tracked objects:
  4150 ;;		On entry : 0/0
  4151 ;;		On exit  : 0/0
  4152 ;;		Unchanged: 0/0
  4153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4154 ;;      Params:         0       0       0       0       0
  4155 ;;      Locals:         2       0       0       0       0
  4156 ;;      Temps:          0       0       0       0       0
  4157 ;;      Totals:         2       0       0       0       0
  4158 ;;Total ram usage:        2 bytes
  4159 ;; Hardware stack levels used: 1
  4160 ;; Hardware stack levels required when called: 2
  4161 ;; This function calls:
  4162 ;;		_gpio_pin_initialize
  4163 ;; This function is called by:
  4164 ;;		_ecu_initialzie
  4165 ;; This function uses a non-reentrant model
  4166 ;;
  4167                           
  4168     15A5                     _motor_initialize:	
  4169                           ;psect for function _motor_initialize
  4170                           
  4171                           
  4172                           ;incstack = 0
  4173                           ; Regs used in _motor_initialize: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4174                           ;motor_initialize@motor stored from wreg
  4175     15A5  00FD               	movwf	motor_initialize@motor
  4176     15A6                     l2983:
  4177     15A6                     l2985:
  4178                           
  4179                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 10:     if(motor == ((void*)0)){
  4180     15A6  087D               	movf	motor_initialize@motor,w
  4181     15A7  1D03               	btfss	3,2
  4182     15A8  2DAA               	goto	u3531
  4183     15A9  2DAB               	goto	u3530
  4184     15AA                     u3531:
  4185     15AA  2DAC               	goto	l2989
  4186     15AB                     u3530:
  4187     15AB                     l2987:
  4188                           
  4189                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 12:     }
  4190     15AB  2DBB               	goto	l113
  4191     15AC                     l2989:
  4192                           
  4193                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 14:         ret = gpio_pin_initialize(&(motor->pins
      +                          [0]));
  4194     15AC  087D               	movf	motor_initialize@motor,w
  4195     15AD  120A  158A  2398  160A  118A  	fcall	_gpio_pin_initialize
  4196     15B2  00FC               	movwf	motor_initialize@ret
  4197                           
  4198                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 15:         ret = gpio_pin_initialize(&(motor->pins
      +                          [1]));
  4199     15B3  087D               	movf	motor_initialize@motor,w
  4200     15B4  3E01               	addlw	1
  4201     15B5  120A  158A  2398  160A  118A  	fcall	_gpio_pin_initialize
  4202     15BA  00FC               	movwf	motor_initialize@ret
  4203     15BB                     l113:
  4204     15BB  0008               	return
  4205     15BC                     __end_of_motor_initialize:
  4206                           
  4207                           	psect	text17
  4208     0CDA                     __ptext17:	
  4209 ;; *************** function _lcd_4bits_initialize *****************
  4210 ;; Defined at:
  4211 ;;		line 14 in file "ECU_LAYER/LCD/ecu_lcd.c"
  4212 ;; Parameters:    Size  Location     Type
  4213 ;;  lcd             1    wreg     PTR const struct .
  4214 ;;		 -> lcd(6), 
  4215 ;; Auto vars:     Size  Location     Type
  4216 ;;  lcd             1    7[BANK0 ] PTR const struct .
  4217 ;;		 -> lcd(6), 
  4218 ;;  ret             1    6[BANK0 ] unsigned char 
  4219 ;;  counter         1    5[BANK0 ] unsigned char 
  4220 ;; Return value:  Size  Location     Type
  4221 ;;                  1    wreg      unsigned char 
  4222 ;; Registers used:
  4223 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4224 ;; Tracked objects:
  4225 ;;		On entry : 0/0
  4226 ;;		On exit  : 0/0
  4227 ;;		Unchanged: 0/0
  4228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4229 ;;      Params:         0       0       0       0       0
  4230 ;;      Locals:         0       3       0       0       0
  4231 ;;      Temps:          0       3       0       0       0
  4232 ;;      Totals:         0       6       0       0       0
  4233 ;;Total ram usage:        6 bytes
  4234 ;; Hardware stack levels used: 1
  4235 ;; Hardware stack levels required when called: 3
  4236 ;; This function calls:
  4237 ;;		_gpio_pin_initialize
  4238 ;;		_lcd_4bits_send_command
  4239 ;; This function is called by:
  4240 ;;		_ecu_initialzie
  4241 ;; This function uses a non-reentrant model
  4242 ;;
  4243                           
  4244     0CDA                     _lcd_4bits_initialize:	
  4245                           ;psect for function _lcd_4bits_initialize
  4246                           
  4247                           
  4248                           ;incstack = 0
  4249                           ; Regs used in _lcd_4bits_initialize: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  4250                           ;lcd_4bits_initialize@lcd stored from wreg
  4251     0CDA  1283               	bcf	3,5	;RP0=0, select bank0
  4252     0CDB  1303               	bcf	3,6	;RP1=0, select bank0
  4253     0CDC  00A7               	movwf	lcd_4bits_initialize@lcd
  4254     0CDD                     l2925:
  4255                           
  4256                           ;ECU_LAYER/LCD/ecu_lcd.c: 16:     uint8 counter = 0x00;
  4257     0CDD  01A5               	clrf	lcd_4bits_initialize@counter
  4258     0CDE                     l2927:
  4259                           
  4260                           ;ECU_LAYER/LCD/ecu_lcd.c: 17:     if(lcd == ((void*)0)){
  4261     0CDE  0827               	movf	lcd_4bits_initialize@lcd,w
  4262     0CDF  1D03               	btfss	3,2
  4263     0CE0  2CE2               	goto	u3491
  4264     0CE1  2CE3               	goto	u3490
  4265     0CE2                     u3491:
  4266     0CE2  2CE4               	goto	l2931
  4267     0CE3                     u3490:
  4268     0CE3                     l2929:
  4269                           
  4270                           ;ECU_LAYER/LCD/ecu_lcd.c: 19:     }
  4271     0CE3  2D8F               	goto	l25
  4272     0CE4                     l2931:
  4273                           
  4274                           ;ECU_LAYER/LCD/ecu_lcd.c: 21:         ret = gpio_pin_initialize(&(lcd->rs));
  4275     0CE4  0827               	movf	lcd_4bits_initialize@lcd,w
  4276     0CE5  120A  158A  2398  120A  158A  	fcall	_gpio_pin_initialize
  4277     0CEA  1283               	bcf	3,5	;RP0=0, select bank0
  4278     0CEB  1303               	bcf	3,6	;RP1=0, select bank0
  4279     0CEC  00A6               	movwf	lcd_4bits_initialize@ret
  4280                           
  4281                           ;ECU_LAYER/LCD/ecu_lcd.c: 22:         ret = gpio_pin_initialize(&(lcd->en));
  4282     0CED  0827               	movf	lcd_4bits_initialize@lcd,w
  4283     0CEE  3E01               	addlw	1
  4284     0CEF  120A  158A  2398  120A  158A  	fcall	_gpio_pin_initialize
  4285     0CF4  1283               	bcf	3,5	;RP0=0, select bank0
  4286     0CF5  1303               	bcf	3,6	;RP1=0, select bank0
  4287     0CF6  00A6               	movwf	lcd_4bits_initialize@ret
  4288     0CF7                     l2933:
  4289                           
  4290                           ;ECU_LAYER/LCD/ecu_lcd.c: 23:         for(counter = 0x00;counter < 4;counter++){
  4291     0CF7  01A5               	clrf	lcd_4bits_initialize@counter
  4292     0CF8                     l2939:
  4293     0CF8  0825               	movf	lcd_4bits_initialize@counter,w
  4294     0CF9  0727               	addwf	lcd_4bits_initialize@lcd,w
  4295     0CFA  3E02               	addlw	2
  4296     0CFB  120A  158A  2398  120A  158A  	fcall	_gpio_pin_initialize
  4297     0D00                     l2941:
  4298                           
  4299                           ;ECU_LAYER/LCD/ecu_lcd.c: 25:         }
  4300     0D00  3001               	movlw	1
  4301     0D01  00FF               	movwf	btemp+1
  4302     0D02  087F               	movf	btemp+1,w
  4303     0D03  1283               	bcf	3,5	;RP0=0, select bank0
  4304     0D04  1303               	bcf	3,6	;RP1=0, select bank0
  4305     0D05  07A5               	addwf	lcd_4bits_initialize@counter,f
  4306     0D06                     l2943:
  4307     0D06  3004               	movlw	4
  4308     0D07  0225               	subwf	lcd_4bits_initialize@counter,w
  4309     0D08  1C03               	skipc
  4310     0D09  2D0B               	goto	u3501
  4311     0D0A  2D0C               	goto	u3500
  4312     0D0B                     u3501:
  4313     0D0B  2CF8               	goto	l2939
  4314     0D0C                     u3500:
  4315     0D0C                     l2945:
  4316                           
  4317                           ;ECU_LAYER/LCD/ecu_lcd.c: 26:         _delay((unsigned long)((150)*(8000000UL/4000.0)));
  4318     0D0C  3002               	movlw	2
  4319     0D0D  1283               	bcf	3,5	;RP0=0, select bank0
  4320     0D0E  1303               	bcf	3,6	;RP1=0, select bank0
  4321     0D0F  00A4               	movwf	??_lcd_4bits_initialize+2
  4322     0D10  3086               	movlw	134
  4323     0D11  00A3               	movwf	??_lcd_4bits_initialize+1
  4324     0D12  3098               	movlw	152
  4325     0D13  00A2               	movwf	??_lcd_4bits_initialize
  4326     0D14                     u5427:
  4327     0D14  0BA2               	decfsz	??_lcd_4bits_initialize,f
  4328     0D15  2D14               	goto	u5427
  4329     0D16  0BA3               	decfsz	??_lcd_4bits_initialize+1,f
  4330     0D17  2D14               	goto	u5427
  4331     0D18  0BA4               	decfsz	??_lcd_4bits_initialize+2,f
  4332     0D19  2D14               	goto	u5427
  4333     0D1A  0000               	nop
  4334     0D1B                     l2947:
  4335     0D1B  3038               	movlw	56
  4336     0D1C  00FC               	movwf	lcd_4bits_send_command@command
  4337     0D1D  1283               	bcf	3,5	;RP0=0, select bank0
  4338     0D1E  1303               	bcf	3,6	;RP1=0, select bank0
  4339     0D1F  0827               	movf	lcd_4bits_initialize@lcd,w
  4340     0D20  120A  158A  2071  120A  158A  	fcall	_lcd_4bits_send_command
  4341     0D25                     l2949:
  4342                           
  4343                           ;ECU_LAYER/LCD/ecu_lcd.c: 28:         _delay((unsigned long)((50)*(8000000UL/4000.0)));
  4344     0D25  3082               	movlw	130
  4345     0D26  1283               	bcf	3,5	;RP0=0, select bank0
  4346     0D27  1303               	bcf	3,6	;RP1=0, select bank0
  4347     0D28  00A3               	movwf	??_lcd_4bits_initialize+1
  4348     0D29  30DD               	movlw	221
  4349     0D2A  00A2               	movwf	??_lcd_4bits_initialize
  4350     0D2B                     u5437:
  4351     0D2B  0BA2               	decfsz	??_lcd_4bits_initialize,f
  4352     0D2C  2D2B               	goto	u5437
  4353     0D2D  0BA3               	decfsz	??_lcd_4bits_initialize+1,f
  4354     0D2E  2D2B               	goto	u5437
  4355     0D2F  3038               	movlw	56
  4356     0D30  00FC               	movwf	lcd_4bits_send_command@command
  4357     0D31  1283               	bcf	3,5	;RP0=0, select bank0
  4358     0D32  1303               	bcf	3,6	;RP1=0, select bank0
  4359     0D33  0827               	movf	lcd_4bits_initialize@lcd,w
  4360     0D34  120A  158A  2071  120A  158A  	fcall	_lcd_4bits_send_command
  4361     0D39                     l2951:
  4362                           
  4363                           ;ECU_LAYER/LCD/ecu_lcd.c: 30:         _delay((unsigned long)((150)*(8000000UL/4000000.0)
      +                          ));
  4364     0D39  3063               	movlw	99
  4365     0D3A  1283               	bcf	3,5	;RP0=0, select bank0
  4366     0D3B  1303               	bcf	3,6	;RP1=0, select bank0
  4367     0D3C  00A2               	movwf	??_lcd_4bits_initialize
  4368     0D3D                     u5447:
  4369     0D3D  0BA2               	decfsz	??_lcd_4bits_initialize,f
  4370     0D3E  2D3D               	goto	u5447
  4371     0D3F                     l2953:
  4372     0D3F  3038               	movlw	56
  4373     0D40  00FC               	movwf	lcd_4bits_send_command@command
  4374     0D41  1283               	bcf	3,5	;RP0=0, select bank0
  4375     0D42  1303               	bcf	3,6	;RP1=0, select bank0
  4376     0D43  0827               	movf	lcd_4bits_initialize@lcd,w
  4377     0D44  120A  158A  2071  120A  158A  	fcall	_lcd_4bits_send_command
  4378     0D49                     l2955:
  4379     0D49  01FC               	clrf	lcd_4bits_send_command@command
  4380     0D4A  0AFC               	incf	lcd_4bits_send_command@command,f
  4381     0D4B  1283               	bcf	3,5	;RP0=0, select bank0
  4382     0D4C  1303               	bcf	3,6	;RP1=0, select bank0
  4383     0D4D  0827               	movf	lcd_4bits_initialize@lcd,w
  4384     0D4E  120A  158A  2071  120A  158A  	fcall	_lcd_4bits_send_command
  4385     0D53                     l2957:
  4386     0D53  3002               	movlw	2
  4387     0D54  00FC               	movwf	lcd_4bits_send_command@command
  4388     0D55  1283               	bcf	3,5	;RP0=0, select bank0
  4389     0D56  1303               	bcf	3,6	;RP1=0, select bank0
  4390     0D57  0827               	movf	lcd_4bits_initialize@lcd,w
  4391     0D58  120A  158A  2071  120A  158A  	fcall	_lcd_4bits_send_command
  4392     0D5D                     l2959:
  4393     0D5D  3006               	movlw	6
  4394     0D5E  00FC               	movwf	lcd_4bits_send_command@command
  4395     0D5F  1283               	bcf	3,5	;RP0=0, select bank0
  4396     0D60  1303               	bcf	3,6	;RP1=0, select bank0
  4397     0D61  0827               	movf	lcd_4bits_initialize@lcd,w
  4398     0D62  120A  158A  2071  120A  158A  	fcall	_lcd_4bits_send_command
  4399     0D67                     l2961:
  4400     0D67  300C               	movlw	12
  4401     0D68  00FC               	movwf	lcd_4bits_send_command@command
  4402     0D69  1283               	bcf	3,5	;RP0=0, select bank0
  4403     0D6A  1303               	bcf	3,6	;RP1=0, select bank0
  4404     0D6B  0827               	movf	lcd_4bits_initialize@lcd,w
  4405     0D6C  120A  158A  2071  120A  158A  	fcall	_lcd_4bits_send_command
  4406     0D71                     l2963:
  4407     0D71  3010               	movlw	16
  4408     0D72  00FC               	movwf	lcd_4bits_send_command@command
  4409     0D73  1283               	bcf	3,5	;RP0=0, select bank0
  4410     0D74  1303               	bcf	3,6	;RP1=0, select bank0
  4411     0D75  0827               	movf	lcd_4bits_initialize@lcd,w
  4412     0D76  120A  158A  2071  120A  158A  	fcall	_lcd_4bits_send_command
  4413     0D7B                     l2965:
  4414     0D7B  3028               	movlw	40
  4415     0D7C  00FC               	movwf	lcd_4bits_send_command@command
  4416     0D7D  1283               	bcf	3,5	;RP0=0, select bank0
  4417     0D7E  1303               	bcf	3,6	;RP1=0, select bank0
  4418     0D7F  0827               	movf	lcd_4bits_initialize@lcd,w
  4419     0D80  120A  158A  2071  120A  158A  	fcall	_lcd_4bits_send_command
  4420     0D85                     l2967:
  4421     0D85  3080               	movlw	128
  4422     0D86  00FC               	movwf	lcd_4bits_send_command@command
  4423     0D87  1283               	bcf	3,5	;RP0=0, select bank0
  4424     0D88  1303               	bcf	3,6	;RP1=0, select bank0
  4425     0D89  0827               	movf	lcd_4bits_initialize@lcd,w
  4426     0D8A  120A  158A  2071  120A  158A  	fcall	_lcd_4bits_send_command
  4427     0D8F                     l25:
  4428     0D8F  0008               	return
  4429     0D90                     __end_of_lcd_4bits_initialize:
  4430                           
  4431                           	psect	text18
  4432     0871                     __ptext18:	
  4433 ;; *************** function _lcd_4bits_send_command *****************
  4434 ;; Defined at:
  4435 ;;		line 43 in file "ECU_LAYER/LCD/ecu_lcd.c"
  4436 ;; Parameters:    Size  Location     Type
  4437 ;;  lcd             1    wreg     PTR const struct .
  4438 ;;		 -> lcd(6), 
  4439 ;;  command         1   12[COMMON] unsigned char 
  4440 ;; Auto vars:     Size  Location     Type
  4441 ;;  lcd             1    1[BANK0 ] PTR const struct .
  4442 ;;		 -> lcd(6), 
  4443 ;;  ret             1    0[BANK0 ] unsigned char 
  4444 ;; Return value:  Size  Location     Type
  4445 ;;                  1    wreg      unsigned char 
  4446 ;; Registers used:
  4447 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4448 ;; Tracked objects:
  4449 ;;		On entry : 0/0
  4450 ;;		On exit  : 0/0
  4451 ;;		Unchanged: 0/0
  4452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4453 ;;      Params:         1       0       0       0       0
  4454 ;;      Locals:         0       2       0       0       0
  4455 ;;      Temps:          1       0       0       0       0
  4456 ;;      Totals:         2       2       0       0       0
  4457 ;;Total ram usage:        4 bytes
  4458 ;; Hardware stack levels used: 1
  4459 ;; Hardware stack levels required when called: 2
  4460 ;; This function calls:
  4461 ;;		_gpio_pin_write_logic
  4462 ;;		_send_4bits
  4463 ;;		_send_enable_signal
  4464 ;; This function is called by:
  4465 ;;		_lcd_4bits_initialize
  4466 ;;		_set_cursor
  4467 ;;		_lcd_4bit_custom_character
  4468 ;; This function uses a non-reentrant model
  4469 ;;
  4470                           
  4471     0871                     _lcd_4bits_send_command:	
  4472                           ;psect for function _lcd_4bits_send_command
  4473                           
  4474                           
  4475                           ;incstack = 0
  4476                           ; Regs used in _lcd_4bits_send_command: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  4477                           ;lcd_4bits_send_command@lcd stored from wreg
  4478     0871  1283               	bcf	3,5	;RP0=0, select bank0
  4479     0872  1303               	bcf	3,6	;RP1=0, select bank0
  4480     0873  00A1               	movwf	lcd_4bits_send_command@lcd
  4481     0874                     l2845:
  4482     0874                     l2847:
  4483                           
  4484                           ;ECU_LAYER/LCD/ecu_lcd.c: 45:     if(lcd == ((void*)0)){
  4485     0874  0821               	movf	lcd_4bits_send_command@lcd,w
  4486     0875  1D03               	btfss	3,2
  4487     0876  2878               	goto	u3361
  4488     0877  2879               	goto	u3360
  4489     0878                     u3361:
  4490     0878  287C               	goto	l2851
  4491     0879                     u3360:
  4492     0879                     l2849:
  4493                           
  4494                           ;ECU_LAYER/LCD/ecu_lcd.c: 46:         ret = 0x01;
  4495     0879  01A0               	clrf	lcd_4bits_send_command@ret
  4496     087A  0AA0               	incf	lcd_4bits_send_command@ret,f
  4497                           
  4498                           ;ECU_LAYER/LCD/ecu_lcd.c: 47:     }
  4499     087B  28B6               	goto	l2853
  4500     087C                     l2851:
  4501                           
  4502                           ;ECU_LAYER/LCD/ecu_lcd.c: 49:         ret = gpio_pin_write_logic(&(lcd->rs),GPIO_LOW);
  4503     087C  01F0               	clrf	gpio_pin_write_logic@logic
  4504     087D  0821               	movf	lcd_4bits_send_command@lcd,w
  4505     087E  120A  158A  2720  120A  158A  	fcall	_gpio_pin_write_logic
  4506     0883  1283               	bcf	3,5	;RP0=0, select bank0
  4507     0884  1303               	bcf	3,6	;RP1=0, select bank0
  4508     0885  00A0               	movwf	lcd_4bits_send_command@ret
  4509                           
  4510                           ;ECU_LAYER/LCD/ecu_lcd.c: 50:         ret = send_4bits(lcd,(command >> 4));
  4511     0886  087C               	movf	lcd_4bits_send_command@command,w
  4512     0887  00FD               	movwf	??_lcd_4bits_send_command
  4513     0888  3004               	movlw	4
  4514     0889                     u3375:
  4515     0889  1003               	clrc
  4516     088A  0CFD               	rrf	??_lcd_4bits_send_command,f
  4517     088B  3EFF               	addlw	-1
  4518     088C  1D03               	skipz
  4519     088D  2889               	goto	u3375
  4520     088E  087D               	movf	??_lcd_4bits_send_command,w
  4521     088F  00F8               	movwf	send_4bits@command
  4522     0890  0821               	movf	lcd_4bits_send_command@lcd,w
  4523     0891  120A  158A  214A  120A  158A  	fcall	_send_4bits
  4524     0896  1283               	bcf	3,5	;RP0=0, select bank0
  4525     0897  1303               	bcf	3,6	;RP1=0, select bank0
  4526     0898  00A0               	movwf	lcd_4bits_send_command@ret
  4527                           
  4528                           ;ECU_LAYER/LCD/ecu_lcd.c: 51:         ret = send_enable_signal(lcd);
  4529     0899  0821               	movf	lcd_4bits_send_command@lcd,w
  4530     089A  120A  118A  2003  120A  158A  	fcall	_send_enable_signal
  4531     089F  1283               	bcf	3,5	;RP0=0, select bank0
  4532     08A0  1303               	bcf	3,6	;RP1=0, select bank0
  4533     08A1  00A0               	movwf	lcd_4bits_send_command@ret
  4534                           
  4535                           ;ECU_LAYER/LCD/ecu_lcd.c: 52:         ret = send_4bits(lcd,command);
  4536     08A2  087C               	movf	lcd_4bits_send_command@command,w
  4537     08A3  00F8               	movwf	send_4bits@command
  4538     08A4  0821               	movf	lcd_4bits_send_command@lcd,w
  4539     08A5  120A  158A  214A  120A  158A  	fcall	_send_4bits
  4540     08AA  1283               	bcf	3,5	;RP0=0, select bank0
  4541     08AB  1303               	bcf	3,6	;RP1=0, select bank0
  4542     08AC  00A0               	movwf	lcd_4bits_send_command@ret
  4543                           
  4544                           ;ECU_LAYER/LCD/ecu_lcd.c: 53:         ret = send_enable_signal(lcd);
  4545     08AD  0821               	movf	lcd_4bits_send_command@lcd,w
  4546     08AE  120A  118A  2003  120A  158A  	fcall	_send_enable_signal
  4547     08B3  1283               	bcf	3,5	;RP0=0, select bank0
  4548     08B4  1303               	bcf	3,6	;RP1=0, select bank0
  4549     08B5  00A0               	movwf	lcd_4bits_send_command@ret
  4550     08B6                     l2853:
  4551                           
  4552                           ;ECU_LAYER/LCD/ecu_lcd.c: 55:     return ret;
  4553     08B6  0820               	movf	lcd_4bits_send_command@ret,w
  4554     08B7                     l30:
  4555     08B7  0008               	return
  4556     08B8                     __end_of_lcd_4bits_send_command:
  4557                           
  4558                           	psect	text19
  4559     0003                     __ptext19:	
  4560 ;; *************** function _send_enable_signal *****************
  4561 ;; Defined at:
  4562 ;;		line 171 in file "ECU_LAYER/LCD/ecu_lcd.c"
  4563 ;; Parameters:    Size  Location     Type
  4564 ;;  lcd             1    wreg     PTR const struct .
  4565 ;;		 -> lcd(6), 
  4566 ;; Auto vars:     Size  Location     Type
  4567 ;;  lcd             1   10[COMMON] PTR const struct .
  4568 ;;		 -> lcd(6), 
  4569 ;;  ret             1    9[COMMON] unsigned char 
  4570 ;; Return value:  Size  Location     Type
  4571 ;;                  1    wreg      unsigned char 
  4572 ;; Registers used:
  4573 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4574 ;; Tracked objects:
  4575 ;;		On entry : 0/0
  4576 ;;		On exit  : 0/0
  4577 ;;		Unchanged: 0/0
  4578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4579 ;;      Params:         0       0       0       0       0
  4580 ;;      Locals:         2       0       0       0       0
  4581 ;;      Temps:          1       0       0       0       0
  4582 ;;      Totals:         3       0       0       0       0
  4583 ;;Total ram usage:        3 bytes
  4584 ;; Hardware stack levels used: 1
  4585 ;; Hardware stack levels required when called: 1
  4586 ;; This function calls:
  4587 ;;		_gpio_pin_write_logic
  4588 ;; This function is called by:
  4589 ;;		_lcd_4bits_send_command
  4590 ;;		_lcd_4bits_send_char
  4591 ;; This function uses a non-reentrant model
  4592 ;;
  4593                           
  4594     0003                     _send_enable_signal:	
  4595                           ;psect for function _send_enable_signal
  4596                           
  4597                           
  4598                           ;incstack = 0
  4599                           ; Regs used in _send_enable_signal: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4600                           ;send_enable_signal@lcd stored from wreg
  4601     0003  00FA               	movwf	send_enable_signal@lcd
  4602     0004                     l2661:
  4603     0004                     l2663:
  4604                           
  4605                           ;ECU_LAYER/LCD/ecu_lcd.c: 173:     if(lcd == ((void*)0)){
  4606     0004  087A               	movf	send_enable_signal@lcd,w
  4607     0005  1D03               	btfss	3,2
  4608     0006  2808               	goto	u2871
  4609     0007  2809               	goto	u2870
  4610     0008                     u2871:
  4611     0008  280C               	goto	l2667
  4612     0009                     u2870:
  4613     0009                     l2665:
  4614                           
  4615                           ;ECU_LAYER/LCD/ecu_lcd.c: 174:         ret = 0x01;
  4616     0009  01F9               	clrf	send_enable_signal@ret
  4617     000A  0AF9               	incf	send_enable_signal@ret,f
  4618                           
  4619                           ;ECU_LAYER/LCD/ecu_lcd.c: 175:     }
  4620     000B  2822               	goto	l93
  4621     000C                     l2667:
  4622     000C  01F0               	clrf	gpio_pin_write_logic@logic
  4623     000D  0AF0               	incf	gpio_pin_write_logic@logic,f
  4624     000E  087A               	movf	send_enable_signal@lcd,w
  4625     000F  3E01               	addlw	1
  4626     0010  120A  158A  2720  120A  118A  	fcall	_gpio_pin_write_logic
  4627     0015                     l2669:
  4628                           
  4629                           ;ECU_LAYER/LCD/ecu_lcd.c: 178:         _delay((unsigned long)((5)*(8000000UL/4000000.0))
      +                          );
  4630     0015  3003               	movlw	3
  4631     0016  00F8               	movwf	??_send_enable_signal
  4632     0017                     u5457:
  4633     0017  0BF8               	decfsz	??_send_enable_signal,f
  4634     0018  2817               	goto	u5457
  4635     0019                     l2671:
  4636                           
  4637                           ;ECU_LAYER/LCD/ecu_lcd.c: 179:         ret = gpio_pin_write_logic(&(lcd->en),GPIO_LOW);
  4638     0019  01F0               	clrf	gpio_pin_write_logic@logic
  4639     001A  087A               	movf	send_enable_signal@lcd,w
  4640     001B  3E01               	addlw	1
  4641     001C  120A  158A  2720  120A  118A  	fcall	_gpio_pin_write_logic
  4642     0021  00F9               	movwf	send_enable_signal@ret
  4643     0022                     l93:	
  4644                           ;ECU_LAYER/LCD/ecu_lcd.c: 180:     }
  4645                           
  4646                           
  4647                           ;ECU_LAYER/LCD/ecu_lcd.c: 181:     return ret;
  4648     0022  0879               	movf	send_enable_signal@ret,w
  4649     0023                     l94:
  4650     0023  0008               	return
  4651     0024                     __end_of_send_enable_signal:
  4652                           
  4653                           	psect	text20
  4654     094A                     __ptext20:	
  4655 ;; *************** function _send_4bits *****************
  4656 ;; Defined at:
  4657 ;;		line 157 in file "ECU_LAYER/LCD/ecu_lcd.c"
  4658 ;; Parameters:    Size  Location     Type
  4659 ;;  lcd             1    wreg     PTR struct .
  4660 ;;		 -> lcd(6), 
  4661 ;;  command         1    8[COMMON] unsigned char 
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;  lcd             1   11[COMMON] PTR struct .
  4664 ;;		 -> lcd(6), 
  4665 ;;  ret             1   10[COMMON] unsigned char 
  4666 ;; Return value:  Size  Location     Type
  4667 ;;                  1    wreg      unsigned char 
  4668 ;; Registers used:
  4669 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4670 ;; Tracked objects:
  4671 ;;		On entry : 0/0
  4672 ;;		On exit  : 0/0
  4673 ;;		Unchanged: 0/0
  4674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4675 ;;      Params:         1       0       0       0       0
  4676 ;;      Locals:         2       0       0       0       0
  4677 ;;      Temps:          1       0       0       0       0
  4678 ;;      Totals:         4       0       0       0       0
  4679 ;;Total ram usage:        4 bytes
  4680 ;; Hardware stack levels used: 1
  4681 ;; Hardware stack levels required when called: 1
  4682 ;; This function calls:
  4683 ;;		_gpio_pin_write_logic
  4684 ;; This function is called by:
  4685 ;;		_lcd_4bits_send_command
  4686 ;;		_lcd_4bits_send_char
  4687 ;; This function uses a non-reentrant model
  4688 ;;
  4689                           
  4690     094A                     _send_4bits:	
  4691                           ;psect for function _send_4bits
  4692                           
  4693                           
  4694                           ;incstack = 0
  4695                           ; Regs used in _send_4bits: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4696                           ;send_4bits@lcd stored from wreg
  4697     094A  00FB               	movwf	send_4bits@lcd
  4698     094B                     l2649:
  4699     094B                     l2651:
  4700                           
  4701                           ;ECU_LAYER/LCD/ecu_lcd.c: 159:     if(lcd == ((void*)0)){
  4702     094B  087B               	movf	send_4bits@lcd,w
  4703     094C  1D03               	btfss	3,2
  4704     094D  294F               	goto	u2841
  4705     094E  2950               	goto	u2840
  4706     094F                     u2841:
  4707     094F  2953               	goto	l2655
  4708     0950                     u2840:
  4709     0950                     l2653:
  4710                           
  4711                           ;ECU_LAYER/LCD/ecu_lcd.c: 160:         ret = 0x01;
  4712     0950  01FA               	clrf	send_4bits@ret
  4713     0951  0AFA               	incf	send_4bits@ret,f
  4714                           
  4715                           ;ECU_LAYER/LCD/ecu_lcd.c: 161:     }
  4716     0952  2992               	goto	l2657
  4717     0953                     l2655:
  4718                           
  4719                           ;ECU_LAYER/LCD/ecu_lcd.c: 163:         ret = gpio_pin_write_logic(&(lcd->pins[0]),((comm
      +                          and >> 0) & 0x01));
  4720     0953  0878               	movf	send_4bits@command,w
  4721     0954  3901               	andlw	1
  4722     0955  00F0               	movwf	gpio_pin_write_logic@logic
  4723     0956  087B               	movf	send_4bits@lcd,w
  4724     0957  3E02               	addlw	2
  4725     0958  120A  158A  2720  120A  158A  	fcall	_gpio_pin_write_logic
  4726     095D  00FA               	movwf	send_4bits@ret
  4727                           
  4728                           ;ECU_LAYER/LCD/ecu_lcd.c: 164:         ret = gpio_pin_write_logic(&(lcd->pins[1]),((comm
      +                          and >> 1) & 0x01));
  4729     095E  0878               	movf	send_4bits@command,w
  4730     095F  00F9               	movwf	??_send_4bits
  4731     0960  1003               	clrc
  4732     0961  0C79               	rrf	??_send_4bits,w
  4733     0962  3901               	andlw	1
  4734     0963  00F0               	movwf	gpio_pin_write_logic@logic
  4735     0964  087B               	movf	send_4bits@lcd,w
  4736     0965  3E03               	addlw	3
  4737     0966  120A  158A  2720  120A  158A  	fcall	_gpio_pin_write_logic
  4738     096B  00FA               	movwf	send_4bits@ret
  4739                           
  4740                           ;ECU_LAYER/LCD/ecu_lcd.c: 165:         ret = gpio_pin_write_logic(&(lcd->pins[2]),((comm
      +                          and >> 2) & 0x01));
  4741     096C  0878               	movf	send_4bits@command,w
  4742     096D  00F9               	movwf	??_send_4bits
  4743     096E  3002               	movlw	2
  4744     096F                     u2855:
  4745     096F  1003               	clrc
  4746     0970  0CF9               	rrf	??_send_4bits,f
  4747     0971  3EFF               	addlw	-1
  4748     0972  1D03               	skipz
  4749     0973  296F               	goto	u2855
  4750     0974  0879               	movf	??_send_4bits,w
  4751     0975  3901               	andlw	1
  4752     0976  00F0               	movwf	gpio_pin_write_logic@logic
  4753     0977  087B               	movf	send_4bits@lcd,w
  4754     0978  3E04               	addlw	4
  4755     0979  120A  158A  2720  120A  158A  	fcall	_gpio_pin_write_logic
  4756     097E  00FA               	movwf	send_4bits@ret
  4757                           
  4758                           ;ECU_LAYER/LCD/ecu_lcd.c: 166:         ret = gpio_pin_write_logic(&(lcd->pins[3]),((comm
      +                          and >> 3) & 0x01));
  4759     097F  0878               	movf	send_4bits@command,w
  4760     0980  00F9               	movwf	??_send_4bits
  4761     0981  3003               	movlw	3
  4762     0982                     u2865:
  4763     0982  1003               	clrc
  4764     0983  0CF9               	rrf	??_send_4bits,f
  4765     0984  3EFF               	addlw	-1
  4766     0985  1D03               	skipz
  4767     0986  2982               	goto	u2865
  4768     0987  0879               	movf	??_send_4bits,w
  4769     0988  3901               	andlw	1
  4770     0989  00F0               	movwf	gpio_pin_write_logic@logic
  4771     098A  087B               	movf	send_4bits@lcd,w
  4772     098B  3E05               	addlw	5
  4773     098C  120A  158A  2720  120A  158A  	fcall	_gpio_pin_write_logic
  4774     0991  00FA               	movwf	send_4bits@ret
  4775     0992                     l2657:
  4776                           
  4777                           ;ECU_LAYER/LCD/ecu_lcd.c: 168:     return ret;
  4778     0992  087A               	movf	send_4bits@ret,w
  4779     0993                     l89:
  4780     0993  0008               	return
  4781     0994                     __end_of_send_4bits:
  4782                           
  4783                           	psect	text21
  4784     1796                     __ptext21:	
  4785 ;; *************** function _keypad_initialize *****************
  4786 ;; Defined at:
  4787 ;;		line 17 in file "ECU_LAYER/KEYPAD/ecu_keypad.c"
  4788 ;; Parameters:    Size  Location     Type
  4789 ;;  keypad          1    wreg     PTR const struct .
  4790 ;;		 -> keypad(7), 
  4791 ;; Auto vars:     Size  Location     Type
  4792 ;;  keypad          1    0[BANK0 ] PTR const struct .
  4793 ;;		 -> keypad(7), 
  4794 ;;  l_coloumns      1    2[BANK0 ] unsigned char 
  4795 ;;  l_rows          1    1[BANK0 ] unsigned char 
  4796 ;;  ret             1    0        unsigned char 
  4797 ;; Return value:  Size  Location     Type
  4798 ;;                  1    wreg      unsigned char 
  4799 ;; Registers used:
  4800 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4801 ;; Tracked objects:
  4802 ;;		On entry : 0/0
  4803 ;;		On exit  : 0/0
  4804 ;;		Unchanged: 0/0
  4805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4806 ;;      Params:         0       0       0       0       0
  4807 ;;      Locals:         0       3       0       0       0
  4808 ;;      Temps:          0       0       0       0       0
  4809 ;;      Totals:         0       3       0       0       0
  4810 ;;Total ram usage:        3 bytes
  4811 ;; Hardware stack levels used: 1
  4812 ;; Hardware stack levels required when called: 2
  4813 ;; This function calls:
  4814 ;;		_gpio_pin_initialize
  4815 ;; This function is called by:
  4816 ;;		_ecu_initialzie
  4817 ;; This function uses a non-reentrant model
  4818 ;;
  4819                           
  4820     1796                     _keypad_initialize:	
  4821                           ;psect for function _keypad_initialize
  4822                           
  4823                           
  4824                           ;incstack = 0
  4825                           ; Regs used in _keypad_initialize: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4826                           ;keypad_initialize@keypad stored from wreg
  4827     1796  1283               	bcf	3,5	;RP0=0, select bank0
  4828     1797  1303               	bcf	3,6	;RP1=0, select bank0
  4829     1798  00A0               	movwf	keypad_initialize@keypad
  4830     1799                     l2993:
  4831                           
  4832                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 19:     uint8 l_rows = 0x00;
  4833     1799  01A1               	clrf	keypad_initialize@l_rows
  4834                           
  4835                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 20:     uint8 l_coloumns = 0x00;
  4836     179A  01A2               	clrf	keypad_initialize@l_coloumns
  4837     179B                     l2995:
  4838                           
  4839                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 21:     if(keypad == ((void*)0)){
  4840     179B  0820               	movf	keypad_initialize@keypad,w
  4841     179C  1D03               	btfss	3,2
  4842     179D  2F9F               	goto	u3541
  4843     179E  2FA0               	goto	u3540
  4844     179F                     u3541:
  4845     179F  2FA1               	goto	l2999
  4846     17A0                     u3540:
  4847     17A0                     l2997:
  4848                           
  4849                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 23:     }
  4850     17A0  2FCA               	goto	l525
  4851     17A1                     l2999:
  4852                           
  4853                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 25:         for(l_rows = 0x00;l_rows < 4;l_rows++){
  4854     17A1  01A1               	clrf	keypad_initialize@l_rows
  4855     17A2                     l3005:
  4856     17A2  0821               	movf	keypad_initialize@l_rows,w
  4857     17A3  0720               	addwf	keypad_initialize@keypad,w
  4858     17A4  120A  158A  2398  160A  118A  	fcall	_gpio_pin_initialize
  4859     17A9                     l3007:
  4860                           
  4861                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 27:         }
  4862     17A9  3001               	movlw	1
  4863     17AA  00FF               	movwf	btemp+1
  4864     17AB  087F               	movf	btemp+1,w
  4865     17AC  1283               	bcf	3,5	;RP0=0, select bank0
  4866     17AD  1303               	bcf	3,6	;RP1=0, select bank0
  4867     17AE  07A1               	addwf	keypad_initialize@l_rows,f
  4868     17AF                     l3009:
  4869     17AF  3004               	movlw	4
  4870     17B0  0221               	subwf	keypad_initialize@l_rows,w
  4871     17B1  1C03               	skipc
  4872     17B2  2FB4               	goto	u3551
  4873     17B3  2FB5               	goto	u3550
  4874     17B4                     u3551:
  4875     17B4  2FA2               	goto	l3005
  4876     17B5                     u3550:
  4877     17B5                     l3011:
  4878                           
  4879                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 29:         for(l_coloumns = 0x00;l_coloumns < 3;l_colou
      +                          mns++){
  4880     17B5  01A2               	clrf	keypad_initialize@l_coloumns
  4881     17B6                     l3017:
  4882     17B6  0822               	movf	keypad_initialize@l_coloumns,w
  4883     17B7  0720               	addwf	keypad_initialize@keypad,w
  4884     17B8  3E04               	addlw	4
  4885     17B9  120A  158A  2398  160A  118A  	fcall	_gpio_pin_initialize
  4886     17BE                     l3019:
  4887                           
  4888                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 31:         }
  4889     17BE  3001               	movlw	1
  4890     17BF  00FF               	movwf	btemp+1
  4891     17C0  087F               	movf	btemp+1,w
  4892     17C1  1283               	bcf	3,5	;RP0=0, select bank0
  4893     17C2  1303               	bcf	3,6	;RP1=0, select bank0
  4894     17C3  07A2               	addwf	keypad_initialize@l_coloumns,f
  4895     17C4                     l3021:
  4896     17C4  3003               	movlw	3
  4897     17C5  0222               	subwf	keypad_initialize@l_coloumns,w
  4898     17C6  1C03               	skipc
  4899     17C7  2FC9               	goto	u3561
  4900     17C8  2FCA               	goto	u3560
  4901     17C9                     u3561:
  4902     17C9  2FB6               	goto	l3017
  4903     17CA                     u3560:
  4904     17CA                     l525:
  4905     17CA  0008               	return
  4906     17CB                     __end_of_keypad_initialize:
  4907                           
  4908                           	psect	text22
  4909     0B98                     __ptext22:	
  4910 ;; *************** function _gpio_pin_initialize *****************
  4911 ;; Defined at:
  4912 ;;		line 103 in file "MCAL_LAYER/GPIO/mcal_gpio.c"
  4913 ;; Parameters:    Size  Location     Type
  4914 ;;  pin             1    wreg     PTR const struct .
  4915 ;;		 -> lcd$pins(4), lcd(6), motor2$pins(2), motor2(2), 
  4916 ;;		 -> motor1$pins(2), motor1(2), keypad$COLOUMNS_PIN(3), keypad$ROWS_PIN(4), 
  4917 ;;		 -> keypad(7), 
  4918 ;; Auto vars:     Size  Location     Type
  4919 ;;  pin             1   11[COMMON] PTR const struct .
  4920 ;;		 -> lcd$pins(4), lcd(6), motor2$pins(2), motor2(2), 
  4921 ;;		 -> motor1$pins(2), motor1(2), keypad$COLOUMNS_PIN(3), keypad$ROWS_PIN(4), 
  4922 ;;		 -> keypad(7), 
  4923 ;;  ret             1   10[COMMON] unsigned char 
  4924 ;; Return value:  Size  Location     Type
  4925 ;;                  1    wreg      unsigned char 
  4926 ;; Registers used:
  4927 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4928 ;; Tracked objects:
  4929 ;;		On entry : 0/0
  4930 ;;		On exit  : 0/0
  4931 ;;		Unchanged: 0/0
  4932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4933 ;;      Params:         0       0       0       0       0
  4934 ;;      Locals:         2       0       0       0       0
  4935 ;;      Temps:          2       0       0       0       0
  4936 ;;      Totals:         4       0       0       0       0
  4937 ;;Total ram usage:        4 bytes
  4938 ;; Hardware stack levels used: 1
  4939 ;; Hardware stack levels required when called: 1
  4940 ;; This function calls:
  4941 ;;		_gpio_pin_direction_initialize
  4942 ;;		_gpio_pin_write_logic
  4943 ;; This function is called by:
  4944 ;;		_lcd_4bits_initialize
  4945 ;;		_motor_initialize
  4946 ;;		_keypad_initialize
  4947 ;; This function uses a non-reentrant model
  4948 ;;
  4949                           
  4950     0B98                     _gpio_pin_initialize:	
  4951                           ;psect for function _gpio_pin_initialize
  4952                           
  4953                           
  4954                           ;incstack = 0
  4955                           ; Regs used in _gpio_pin_initialize: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  4956                           ;gpio_pin_initialize@pin stored from wreg
  4957     0B98  00FB               	movwf	gpio_pin_initialize@pin
  4958     0B99                     l2813:
  4959                           
  4960                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 104:     uint8 ret = 0x00;
  4961     0B99  01FA               	clrf	gpio_pin_initialize@ret
  4962     0B9A                     l2815:
  4963                           
  4964                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 105:     if (pin == ((void*)0)) {
  4965     0B9A  087B               	movf	gpio_pin_initialize@pin,w
  4966     0B9B  1D03               	btfss	3,2
  4967     0B9C  2B9E               	goto	u3251
  4968     0B9D  2B9F               	goto	u3250
  4969     0B9E                     u3251:
  4970     0B9E  2BA2               	goto	l2819
  4971     0B9F                     u3250:
  4972     0B9F                     l2817:
  4973                           
  4974                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 106:         ret = 0x01;
  4975     0B9F  01FA               	clrf	gpio_pin_initialize@ret
  4976     0BA0  0AFA               	incf	gpio_pin_initialize@ret,f
  4977                           
  4978                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 107:     } else {
  4979     0BA1  2C29               	goto	l2841
  4980     0BA2                     l2819:
  4981                           
  4982                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 108:         if ((pin->port == PORTA_INDEX && pin->pin < 6
      +                          ) || (pin->port == PORTB_INDEX && pin->pin < 8) || (pin->port == PORTC_INDEX && pin->pin
      +                           < 8) ||
  4983     0BA2  087B               	movf	gpio_pin_initialize@pin,w
  4984     0BA3  0084               	movwf	4
  4985     0BA4  1383               	bcf	3,7	;select IRP bank0
  4986     0BA5  0800               	movf	0,w
  4987     0BA6  3907               	andlw	7
  4988     0BA7  3A00               	xorlw	0
  4989     0BA8  1D03               	skipz
  4990     0BA9  2BAB               	goto	u3261
  4991     0BAA  2BAC               	goto	u3260
  4992     0BAB                     u3261:
  4993     0BAB  2BBA               	goto	l2823
  4994     0BAC                     u3260:
  4995     0BAC                     l2821:
  4996     0BAC  087B               	movf	gpio_pin_initialize@pin,w
  4997     0BAD  0084               	movwf	4
  4998     0BAE  0C00               	rrf	0,w
  4999     0BAF  00F8               	movwf	??_gpio_pin_initialize
  5000     0BB0  0CF8               	rrf	??_gpio_pin_initialize,f
  5001     0BB1  0C78               	rrf	??_gpio_pin_initialize,w
  5002     0BB2  3907               	andlw	7
  5003     0BB3  00F9               	movwf	??_gpio_pin_initialize+1
  5004     0BB4  3006               	movlw	6
  5005     0BB5  0279               	subwf	??_gpio_pin_initialize+1,w
  5006     0BB6  1C03               	skipc
  5007     0BB7  2BB9               	goto	u3271
  5008     0BB8  2BBA               	goto	u3270
  5009     0BB9                     u3271:
  5010     0BB9  2C16               	goto	l2839
  5011     0BBA                     u3270:
  5012     0BBA                     l2823:
  5013     0BBA  087B               	movf	gpio_pin_initialize@pin,w
  5014     0BBB  0084               	movwf	4
  5015     0BBC  0800               	movf	0,w
  5016     0BBD  3907               	andlw	7
  5017     0BBE  3A01               	xorlw	1
  5018     0BBF  1D03               	skipz
  5019     0BC0  2BC2               	goto	u3281
  5020     0BC1  2BC3               	goto	u3280
  5021     0BC2                     u3281:
  5022     0BC2  2BD1               	goto	l2827
  5023     0BC3                     u3280:
  5024     0BC3                     l2825:
  5025     0BC3  087B               	movf	gpio_pin_initialize@pin,w
  5026     0BC4  0084               	movwf	4
  5027     0BC5  0C00               	rrf	0,w
  5028     0BC6  00F8               	movwf	??_gpio_pin_initialize
  5029     0BC7  0CF8               	rrf	??_gpio_pin_initialize,f
  5030     0BC8  0C78               	rrf	??_gpio_pin_initialize,w
  5031     0BC9  3907               	andlw	7
  5032     0BCA  00F9               	movwf	??_gpio_pin_initialize+1
  5033     0BCB  3008               	movlw	8
  5034     0BCC  0279               	subwf	??_gpio_pin_initialize+1,w
  5035     0BCD  1C03               	skipc
  5036     0BCE  2BD0               	goto	u3291
  5037     0BCF  2BD1               	goto	u3290
  5038     0BD0                     u3291:
  5039     0BD0  2C16               	goto	l2839
  5040     0BD1                     u3290:
  5041     0BD1                     l2827:
  5042     0BD1  087B               	movf	gpio_pin_initialize@pin,w
  5043     0BD2  0084               	movwf	4
  5044     0BD3  0800               	movf	0,w
  5045     0BD4  3907               	andlw	7
  5046     0BD5  3A02               	xorlw	2
  5047     0BD6  1D03               	skipz
  5048     0BD7  2BD9               	goto	u3301
  5049     0BD8  2BDA               	goto	u3300
  5050     0BD9                     u3301:
  5051     0BD9  2BE8               	goto	l2831
  5052     0BDA                     u3300:
  5053     0BDA                     l2829:
  5054     0BDA  087B               	movf	gpio_pin_initialize@pin,w
  5055     0BDB  0084               	movwf	4
  5056     0BDC  0C00               	rrf	0,w
  5057     0BDD  00F8               	movwf	??_gpio_pin_initialize
  5058     0BDE  0CF8               	rrf	??_gpio_pin_initialize,f
  5059     0BDF  0C78               	rrf	??_gpio_pin_initialize,w
  5060     0BE0  3907               	andlw	7
  5061     0BE1  00F9               	movwf	??_gpio_pin_initialize+1
  5062     0BE2  3008               	movlw	8
  5063     0BE3  0279               	subwf	??_gpio_pin_initialize+1,w
  5064     0BE4  1C03               	skipc
  5065     0BE5  2BE7               	goto	u3311
  5066     0BE6  2BE8               	goto	u3310
  5067     0BE7                     u3311:
  5068     0BE7  2C16               	goto	l2839
  5069     0BE8                     u3310:
  5070     0BE8                     l2831:
  5071     0BE8  087B               	movf	gpio_pin_initialize@pin,w
  5072     0BE9  0084               	movwf	4
  5073     0BEA  0800               	movf	0,w
  5074     0BEB  3907               	andlw	7
  5075     0BEC  3A03               	xorlw	3
  5076     0BED  1D03               	skipz
  5077     0BEE  2BF0               	goto	u3321
  5078     0BEF  2BF1               	goto	u3320
  5079     0BF0                     u3321:
  5080     0BF0  2BFF               	goto	l2835
  5081     0BF1                     u3320:
  5082     0BF1                     l2833:
  5083     0BF1  087B               	movf	gpio_pin_initialize@pin,w
  5084     0BF2  0084               	movwf	4
  5085     0BF3  0C00               	rrf	0,w
  5086     0BF4  00F8               	movwf	??_gpio_pin_initialize
  5087     0BF5  0CF8               	rrf	??_gpio_pin_initialize,f
  5088     0BF6  0C78               	rrf	??_gpio_pin_initialize,w
  5089     0BF7  3907               	andlw	7
  5090     0BF8  00F9               	movwf	??_gpio_pin_initialize+1
  5091     0BF9  3008               	movlw	8
  5092     0BFA  0279               	subwf	??_gpio_pin_initialize+1,w
  5093     0BFB  1C03               	skipc
  5094     0BFC  2BFE               	goto	u3331
  5095     0BFD  2BFF               	goto	u3330
  5096     0BFE                     u3331:
  5097     0BFE  2C16               	goto	l2839
  5098     0BFF                     u3330:
  5099     0BFF                     l2835:
  5100     0BFF  087B               	movf	gpio_pin_initialize@pin,w
  5101     0C00  0084               	movwf	4
  5102     0C01  0800               	movf	0,w
  5103     0C02  3907               	andlw	7
  5104     0C03  3A04               	xorlw	4
  5105     0C04  1D03               	skipz
  5106     0C05  2C07               	goto	u3341
  5107     0C06  2C08               	goto	u3340
  5108     0C07                     u3341:
  5109     0C07  2B9F               	goto	l2817
  5110     0C08                     u3340:
  5111     0C08                     l2837:
  5112     0C08  087B               	movf	gpio_pin_initialize@pin,w
  5113     0C09  0084               	movwf	4
  5114     0C0A  0C00               	rrf	0,w
  5115     0C0B  00F8               	movwf	??_gpio_pin_initialize
  5116     0C0C  0CF8               	rrf	??_gpio_pin_initialize,f
  5117     0C0D  0C78               	rrf	??_gpio_pin_initialize,w
  5118     0C0E  3907               	andlw	7
  5119     0C0F  00F9               	movwf	??_gpio_pin_initialize+1
  5120     0C10  3003               	movlw	3
  5121     0C11  0279               	subwf	??_gpio_pin_initialize+1,w
  5122     0C12  1803               	skipnc
  5123     0C13  2C15               	goto	u3351
  5124     0C14  2C16               	goto	u3350
  5125     0C15                     u3351:
  5126     0C15  2B9F               	goto	l2817
  5127     0C16                     u3350:
  5128     0C16                     l2839:
  5129                           
  5130                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 109:                 (pin->port == PORTD_INDEX && pin->pin
      +                           < 8) || (pin->port == PORTE_INDEX && pin->pin < 3)) {;MCAL_LAYER/GPIO/mcal_gpio.c: 110:
      +                                       gpio_pin_direction_initialize(pin);
  5131     0C16  087B               	movf	gpio_pin_initialize@pin,w
  5132     0C17  120A  158A  2648  120A  158A  	fcall	_gpio_pin_direction_initialize
  5133                           
  5134                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 111:             gpio_pin_write_logic(pin, pin->logic);
  5135     0C1C  087B               	movf	gpio_pin_initialize@pin,w
  5136     0C1D  0084               	movwf	4
  5137     0C1E  3000               	movlw	0
  5138     0C1F  1383               	bcf	3,7	;select IRP bank0
  5139     0C20  1B00               	btfsc	0,6
  5140     0C21  3001               	movlw	1
  5141     0C22  00F0               	movwf	gpio_pin_write_logic@logic
  5142     0C23  087B               	movf	gpio_pin_initialize@pin,w
  5143     0C24  120A  158A  2720  120A  158A  	fcall	_gpio_pin_write_logic
  5144     0C29                     l2841:	
  5145                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 112:         } else {
  5146                           
  5147                           
  5148                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 116:     return ret;
  5149     0C29  087A               	movf	gpio_pin_initialize@ret,w
  5150     0C2A                     l359:
  5151     0C2A  0008               	return
  5152     0C2B                     __end_of_gpio_pin_initialize:
  5153                           
  5154                           	psect	text23
  5155     0F20                     __ptext23:	
  5156 ;; *************** function _gpio_pin_write_logic *****************
  5157 ;; Defined at:
  5158 ;;		line 50 in file "MCAL_LAYER/GPIO/mcal_gpio.c"
  5159 ;; Parameters:    Size  Location     Type
  5160 ;;  pin             1    wreg     PTR const struct .
  5161 ;;		 -> lcd$pins(4), lcd(6), motor2$pins(2), motor2(2), 
  5162 ;;		 -> motor1$pins(2), motor1(2), keypad$COLOUMNS_PIN(3), keypad$ROWS_PIN(4), 
  5163 ;;		 -> keypad(7), 
  5164 ;;  logic           1    0[COMMON] enum E1519
  5165 ;; Auto vars:     Size  Location     Type
  5166 ;;  pin             1    7[COMMON] PTR const struct .
  5167 ;;		 -> lcd$pins(4), lcd(6), motor2$pins(2), motor2(2), 
  5168 ;;		 -> motor1$pins(2), motor1(2), keypad$COLOUMNS_PIN(3), keypad$ROWS_PIN(4), 
  5169 ;;		 -> keypad(7), 
  5170 ;;  ret             1    6[COMMON] unsigned char 
  5171 ;; Return value:  Size  Location     Type
  5172 ;;                  1    wreg      unsigned char 
  5173 ;; Registers used:
  5174 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  5175 ;; Tracked objects:
  5176 ;;		On entry : 0/0
  5177 ;;		On exit  : 0/0
  5178 ;;		Unchanged: 0/0
  5179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5180 ;;      Params:         1       0       0       0       0
  5181 ;;      Locals:         2       0       0       0       0
  5182 ;;      Temps:          5       0       0       0       0
  5183 ;;      Totals:         8       0       0       0       0
  5184 ;;Total ram usage:        8 bytes
  5185 ;; Hardware stack levels used: 1
  5186 ;; This function calls:
  5187 ;;		Nothing
  5188 ;; This function is called by:
  5189 ;;		_lcd_4bits_send_command
  5190 ;;		_lcd_4bits_send_char
  5191 ;;		_send_4bits
  5192 ;;		_send_enable_signal
  5193 ;;		_motor_turn_right
  5194 ;;		_motor_turn_left
  5195 ;;		_motor_turn_off
  5196 ;;		_gpio_pin_initialize
  5197 ;;		_keypad_read_value
  5198 ;; This function uses a non-reentrant model
  5199 ;;
  5200                           
  5201     0F20                     _gpio_pin_write_logic:	
  5202                           ;psect for function _gpio_pin_write_logic
  5203                           
  5204                           
  5205                           ;incstack = 0
  5206                           ; Regs used in _gpio_pin_write_logic: [wreg-fsr0h+status,2+status,0+btemp+1]
  5207                           ;gpio_pin_write_logic@pin stored from wreg
  5208     0F20  00F7               	movwf	gpio_pin_write_logic@pin
  5209     0F21                     l2607:
  5210                           
  5211                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 51:     uint8 ret = 0x00;
  5212     0F21  01F6               	clrf	gpio_pin_write_logic@ret
  5213     0F22                     l2609:
  5214                           
  5215                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 52:     if (pin == ((void*)0)) {
  5216     0F22  0877               	movf	gpio_pin_write_logic@pin,w
  5217     0F23  1D03               	btfss	3,2
  5218     0F24  2F26               	goto	u2711
  5219     0F25  2F27               	goto	u2710
  5220     0F26                     u2711:
  5221     0F26  2F2A               	goto	l2613
  5222     0F27                     u2710:
  5223     0F27                     l2611:
  5224                           
  5225                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 53:         ret = 0x01;
  5226     0F27  01F6               	clrf	gpio_pin_write_logic@ret
  5227     0F28  0AF6               	incf	gpio_pin_write_logic@ret,f
  5228                           
  5229                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 54:     } else {
  5230     0F29  2FFE               	goto	l2641
  5231     0F2A                     l2613:
  5232                           
  5233                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 55:         if ((pin->port == PORTA_INDEX && pin->pin < 6)
      +                           || (pin->port == PORTB_INDEX && pin->pin < 8) || (pin->port == PORTC_INDEX && pin->pin 
      +                          < 8) ||
  5234     0F2A  0877               	movf	gpio_pin_write_logic@pin,w
  5235     0F2B  0084               	movwf	4
  5236     0F2C  1383               	bcf	3,7	;select IRP bank0
  5237     0F2D  0800               	movf	0,w
  5238     0F2E  3907               	andlw	7
  5239     0F2F  3A00               	xorlw	0
  5240     0F30  1D03               	skipz
  5241     0F31  2F33               	goto	u2721
  5242     0F32  2F34               	goto	u2720
  5243     0F33                     u2721:
  5244     0F33  2F42               	goto	l2617
  5245     0F34                     u2720:
  5246     0F34                     l2615:
  5247     0F34  0877               	movf	gpio_pin_write_logic@pin,w
  5248     0F35  0084               	movwf	4
  5249     0F36  0C00               	rrf	0,w
  5250     0F37  00F1               	movwf	??_gpio_pin_write_logic
  5251     0F38  0CF1               	rrf	??_gpio_pin_write_logic,f
  5252     0F39  0C71               	rrf	??_gpio_pin_write_logic,w
  5253     0F3A  3907               	andlw	7
  5254     0F3B  00F2               	movwf	??_gpio_pin_write_logic+1
  5255     0F3C  3006               	movlw	6
  5256     0F3D  0272               	subwf	??_gpio_pin_write_logic+1,w
  5257     0F3E  1C03               	skipc
  5258     0F3F  2F41               	goto	u2731
  5259     0F40  2F42               	goto	u2730
  5260     0F41                     u2731:
  5261     0F41  2FEE               	goto	l2639
  5262     0F42                     u2730:
  5263     0F42                     l2617:
  5264     0F42  0877               	movf	gpio_pin_write_logic@pin,w
  5265     0F43  0084               	movwf	4
  5266     0F44  0800               	movf	0,w
  5267     0F45  3907               	andlw	7
  5268     0F46  3A01               	xorlw	1
  5269     0F47  1D03               	skipz
  5270     0F48  2F4A               	goto	u2741
  5271     0F49  2F4B               	goto	u2740
  5272     0F4A                     u2741:
  5273     0F4A  2F59               	goto	l2621
  5274     0F4B                     u2740:
  5275     0F4B                     l2619:
  5276     0F4B  0877               	movf	gpio_pin_write_logic@pin,w
  5277     0F4C  0084               	movwf	4
  5278     0F4D  0C00               	rrf	0,w
  5279     0F4E  00F1               	movwf	??_gpio_pin_write_logic
  5280     0F4F  0CF1               	rrf	??_gpio_pin_write_logic,f
  5281     0F50  0C71               	rrf	??_gpio_pin_write_logic,w
  5282     0F51  3907               	andlw	7
  5283     0F52  00F2               	movwf	??_gpio_pin_write_logic+1
  5284     0F53  3008               	movlw	8
  5285     0F54  0272               	subwf	??_gpio_pin_write_logic+1,w
  5286     0F55  1C03               	skipc
  5287     0F56  2F58               	goto	u2751
  5288     0F57  2F59               	goto	u2750
  5289     0F58                     u2751:
  5290     0F58  2FEE               	goto	l2639
  5291     0F59                     u2750:
  5292     0F59                     l2621:
  5293     0F59  0877               	movf	gpio_pin_write_logic@pin,w
  5294     0F5A  0084               	movwf	4
  5295     0F5B  0800               	movf	0,w
  5296     0F5C  3907               	andlw	7
  5297     0F5D  3A02               	xorlw	2
  5298     0F5E  1D03               	skipz
  5299     0F5F  2F61               	goto	u2761
  5300     0F60  2F62               	goto	u2760
  5301     0F61                     u2761:
  5302     0F61  2F70               	goto	l2625
  5303     0F62                     u2760:
  5304     0F62                     l2623:
  5305     0F62  0877               	movf	gpio_pin_write_logic@pin,w
  5306     0F63  0084               	movwf	4
  5307     0F64  0C00               	rrf	0,w
  5308     0F65  00F1               	movwf	??_gpio_pin_write_logic
  5309     0F66  0CF1               	rrf	??_gpio_pin_write_logic,f
  5310     0F67  0C71               	rrf	??_gpio_pin_write_logic,w
  5311     0F68  3907               	andlw	7
  5312     0F69  00F2               	movwf	??_gpio_pin_write_logic+1
  5313     0F6A  3008               	movlw	8
  5314     0F6B  0272               	subwf	??_gpio_pin_write_logic+1,w
  5315     0F6C  1C03               	skipc
  5316     0F6D  2F6F               	goto	u2771
  5317     0F6E  2F70               	goto	u2770
  5318     0F6F                     u2771:
  5319     0F6F  2FEE               	goto	l2639
  5320     0F70                     u2770:
  5321     0F70                     l2625:
  5322     0F70  0877               	movf	gpio_pin_write_logic@pin,w
  5323     0F71  0084               	movwf	4
  5324     0F72  0800               	movf	0,w
  5325     0F73  3907               	andlw	7
  5326     0F74  3A03               	xorlw	3
  5327     0F75  1D03               	skipz
  5328     0F76  2F78               	goto	u2781
  5329     0F77  2F79               	goto	u2780
  5330     0F78                     u2781:
  5331     0F78  2F87               	goto	l2629
  5332     0F79                     u2780:
  5333     0F79                     l2627:
  5334     0F79  0877               	movf	gpio_pin_write_logic@pin,w
  5335     0F7A  0084               	movwf	4
  5336     0F7B  0C00               	rrf	0,w
  5337     0F7C  00F1               	movwf	??_gpio_pin_write_logic
  5338     0F7D  0CF1               	rrf	??_gpio_pin_write_logic,f
  5339     0F7E  0C71               	rrf	??_gpio_pin_write_logic,w
  5340     0F7F  3907               	andlw	7
  5341     0F80  00F2               	movwf	??_gpio_pin_write_logic+1
  5342     0F81  3008               	movlw	8
  5343     0F82  0272               	subwf	??_gpio_pin_write_logic+1,w
  5344     0F83  1C03               	skipc
  5345     0F84  2F86               	goto	u2791
  5346     0F85  2F87               	goto	u2790
  5347     0F86                     u2791:
  5348     0F86  2FEE               	goto	l2639
  5349     0F87                     u2790:
  5350     0F87                     l2629:
  5351     0F87  0877               	movf	gpio_pin_write_logic@pin,w
  5352     0F88  0084               	movwf	4
  5353     0F89  0800               	movf	0,w
  5354     0F8A  3907               	andlw	7
  5355     0F8B  3A04               	xorlw	4
  5356     0F8C  1D03               	skipz
  5357     0F8D  2F8F               	goto	u2801
  5358     0F8E  2F90               	goto	u2800
  5359     0F8F                     u2801:
  5360     0F8F  2F27               	goto	l2611
  5361     0F90                     u2800:
  5362     0F90                     l2631:
  5363     0F90  0877               	movf	gpio_pin_write_logic@pin,w
  5364     0F91  0084               	movwf	4
  5365     0F92  0C00               	rrf	0,w
  5366     0F93  00F1               	movwf	??_gpio_pin_write_logic
  5367     0F94  0CF1               	rrf	??_gpio_pin_write_logic,f
  5368     0F95  0C71               	rrf	??_gpio_pin_write_logic,w
  5369     0F96  3907               	andlw	7
  5370     0F97  00F2               	movwf	??_gpio_pin_write_logic+1
  5371     0F98  3003               	movlw	3
  5372     0F99  0272               	subwf	??_gpio_pin_write_logic+1,w
  5373     0F9A  1803               	skipnc
  5374     0F9B  2F9D               	goto	u2811
  5375     0F9C  2F9E               	goto	u2810
  5376     0F9D                     u2811:
  5377     0F9D  2F27               	goto	l2611
  5378     0F9E                     u2810:
  5379     0F9E  2FEE               	goto	l2639
  5380     0F9F                     l2633:
  5381                           
  5382                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 60:                     (*port_registers[pin->port] |= (0x
      +                          01 << pin->pin));
  5383     0F9F  3001               	movlw	1
  5384     0FA0  00F1               	movwf	??_gpio_pin_write_logic
  5385     0FA1  0877               	movf	gpio_pin_write_logic@pin,w
  5386     0FA2  0084               	movwf	4
  5387     0FA3  0C00               	rrf	0,w
  5388     0FA4  00F2               	movwf	??_gpio_pin_write_logic+1
  5389     0FA5  0CF2               	rrf	??_gpio_pin_write_logic+1,f
  5390     0FA6  0C72               	rrf	??_gpio_pin_write_logic+1,w
  5391     0FA7  3907               	andlw	7
  5392     0FA8  3E01               	addlw	1
  5393     0FA9  2FAC               	goto	u2824
  5394     0FAA                     u2825:
  5395     0FAA  1003               	clrc
  5396     0FAB  0DF1               	rlf	??_gpio_pin_write_logic,f
  5397     0FAC                     u2824:
  5398     0FAC  3EFF               	addlw	-1
  5399     0FAD  1D03               	skipz
  5400     0FAE  2FAA               	goto	u2825
  5401     0FAF  0871               	movf	??_gpio_pin_write_logic,w
  5402     0FB0  00FF               	movwf	btemp+1
  5403     0FB1  0877               	movf	gpio_pin_write_logic@pin,w
  5404     0FB2  0084               	movwf	4
  5405     0FB3  0800               	movf	0,w
  5406     0FB4  3907               	andlw	7
  5407     0FB5  00F3               	movwf	??_gpio_pin_write_logic+2
  5408     0FB6  0773               	addwf	??_gpio_pin_write_logic+2,w
  5409     0FB7  3EA0               	addlw	(low (_port_registers| 0))& (0+255)
  5410     0FB8  0084               	movwf	4
  5411     0FB9  0800               	movf	0,w
  5412     0FBA  00F4               	movwf	??_gpio_pin_write_logic+3
  5413     0FBB  0A84               	incf	4,f
  5414     0FBC  0800               	movf	0,w
  5415     0FBD  00F5               	movwf	??_gpio_pin_write_logic+4
  5416     0FBE  0874               	movf	??_gpio_pin_write_logic+3,w
  5417     0FBF  0084               	movwf	4
  5418     0FC0  1783               	bsf	3,7
  5419     0FC1  1C75               	btfss	??_gpio_pin_write_logic+4,0
  5420     0FC2  1383               	bcf	3,7
  5421     0FC3  087F               	movf	btemp+1,w
  5422     0FC4  0480               	iorwf	0,f
  5423                           
  5424                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 61:                     break;
  5425     0FC5  2FFE               	goto	l2641
  5426     0FC6                     l2635:
  5427                           
  5428                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 63:                     (*port_registers[pin->port] &= ~(0
      +                          x01 << pin->pin));
  5429     0FC6  3001               	movlw	1
  5430     0FC7  00F1               	movwf	??_gpio_pin_write_logic
  5431     0FC8  0877               	movf	gpio_pin_write_logic@pin,w
  5432     0FC9  0084               	movwf	4
  5433     0FCA  0C00               	rrf	0,w
  5434     0FCB  00F2               	movwf	??_gpio_pin_write_logic+1
  5435     0FCC  0CF2               	rrf	??_gpio_pin_write_logic+1,f
  5436     0FCD  0C72               	rrf	??_gpio_pin_write_logic+1,w
  5437     0FCE  3907               	andlw	7
  5438     0FCF  3E01               	addlw	1
  5439     0FD0  2FD3               	goto	u2834
  5440     0FD1                     u2835:
  5441     0FD1  1003               	clrc
  5442     0FD2  0DF1               	rlf	??_gpio_pin_write_logic,f
  5443     0FD3                     u2834:
  5444     0FD3  3EFF               	addlw	-1
  5445     0FD4  1D03               	skipz
  5446     0FD5  2FD1               	goto	u2835
  5447     0FD6  0871               	movf	??_gpio_pin_write_logic,w
  5448     0FD7  3AFF               	xorlw	255
  5449     0FD8  00FF               	movwf	btemp+1
  5450     0FD9  0877               	movf	gpio_pin_write_logic@pin,w
  5451     0FDA  0084               	movwf	4
  5452     0FDB  0800               	movf	0,w
  5453     0FDC  3907               	andlw	7
  5454     0FDD  00F3               	movwf	??_gpio_pin_write_logic+2
  5455     0FDE  0773               	addwf	??_gpio_pin_write_logic+2,w
  5456     0FDF  3EA0               	addlw	(low (_port_registers| 0))& (0+255)
  5457     0FE0  0084               	movwf	4
  5458     0FE1  0800               	movf	0,w
  5459     0FE2  00F4               	movwf	??_gpio_pin_write_logic+3
  5460     0FE3  0A84               	incf	4,f
  5461     0FE4  0800               	movf	0,w
  5462     0FE5  00F5               	movwf	??_gpio_pin_write_logic+4
  5463     0FE6  0874               	movf	??_gpio_pin_write_logic+3,w
  5464     0FE7  0084               	movwf	4
  5465     0FE8  1783               	bsf	3,7
  5466     0FE9  1C75               	btfss	??_gpio_pin_write_logic+4,0
  5467     0FEA  1383               	bcf	3,7
  5468     0FEB  087F               	movf	btemp+1,w
  5469     0FEC  0580               	andwf	0,f
  5470                           
  5471                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 64:                     break;
  5472     0FED  2FFE               	goto	l2641
  5473     0FEE                     l2639:
  5474     0FEE  0870               	movf	gpio_pin_write_logic@logic,w
  5475     0FEF  00F1               	movwf	??_gpio_pin_write_logic
  5476     0FF0  01F2               	clrf	??_gpio_pin_write_logic+1
  5477                           
  5478                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5479                           ; Switch size 1, requested type "simple"
  5480                           ; Number of cases is 1, Range of values is 0 to 0
  5481                           ; switch strategies available:
  5482                           ; Name         Instructions Cycles
  5483                           ; simple_byte            4     3 (average)
  5484                           ; direct_byte           11     8 (fixed)
  5485                           ; jumptable            260     6 (fixed)
  5486                           ;	Chosen strategy is simple_byte
  5487     0FF1  0872               	movf	??_gpio_pin_write_logic+1,w
  5488     0FF2  3A00               	xorlw	0	; case 0
  5489     0FF3  1903               	skipnz
  5490     0FF4  2FF6               	goto	l4043
  5491     0FF5  2FFE               	goto	l2641
  5492     0FF6                     l4043:
  5493                           
  5494                           ; Switch size 1, requested type "simple"
  5495                           ; Number of cases is 2, Range of values is 0 to 1
  5496                           ; switch strategies available:
  5497                           ; Name         Instructions Cycles
  5498                           ; simple_byte            7     4 (average)
  5499                           ; direct_byte           14     8 (fixed)
  5500                           ; jumptable            260     6 (fixed)
  5501                           ;	Chosen strategy is simple_byte
  5502     0FF6  0871               	movf	??_gpio_pin_write_logic,w
  5503     0FF7  3A00               	xorlw	0	; case 0
  5504     0FF8  1903               	skipnz
  5505     0FF9  2FC6               	goto	l2635
  5506     0FFA  3A01               	xorlw	1	; case 1
  5507     0FFB  1903               	skipnz
  5508     0FFC  2F9F               	goto	l2633
  5509     0FFD  2FFE               	goto	l2641
  5510     0FFE                     l2641:
  5511                           
  5512                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 70:     return ret;
  5513     0FFE  0876               	movf	gpio_pin_write_logic@ret,w
  5514     0FFF                     l306:
  5515     0FFF  0008               	return
  5516     1000                     __end_of_gpio_pin_write_logic:
  5517                           
  5518                           	psect	text24
  5519     0E48                     __ptext24:	
  5520 ;; *************** function _gpio_pin_direction_initialize *****************
  5521 ;; Defined at:
  5522 ;;		line 12 in file "MCAL_LAYER/GPIO/mcal_gpio.c"
  5523 ;; Parameters:    Size  Location     Type
  5524 ;;  pin             1    wreg     PTR const struct .
  5525 ;;		 -> lcd$pins(4), lcd(6), motor2$pins(2), motor2(2), 
  5526 ;;		 -> motor1$pins(2), motor1(2), keypad$COLOUMNS_PIN(3), keypad$ROWS_PIN(4), 
  5527 ;;		 -> keypad(7), 
  5528 ;; Auto vars:     Size  Location     Type
  5529 ;;  pin             1    5[COMMON] PTR const struct .
  5530 ;;		 -> lcd$pins(4), lcd(6), motor2$pins(2), motor2(2), 
  5531 ;;		 -> motor1$pins(2), motor1(2), keypad$COLOUMNS_PIN(3), keypad$ROWS_PIN(4), 
  5532 ;;		 -> keypad(7), 
  5533 ;;  ret             1    0        unsigned char 
  5534 ;; Return value:  Size  Location     Type
  5535 ;;                  1    wreg      unsigned char 
  5536 ;; Registers used:
  5537 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  5538 ;; Tracked objects:
  5539 ;;		On entry : 0/0
  5540 ;;		On exit  : 0/0
  5541 ;;		Unchanged: 0/0
  5542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5543 ;;      Params:         0       0       0       0       0
  5544 ;;      Locals:         1       0       0       0       0
  5545 ;;      Temps:          5       0       0       0       0
  5546 ;;      Totals:         6       0       0       0       0
  5547 ;;Total ram usage:        6 bytes
  5548 ;; Hardware stack levels used: 1
  5549 ;; This function calls:
  5550 ;;		Nothing
  5551 ;; This function is called by:
  5552 ;;		_gpio_pin_initialize
  5553 ;; This function uses a non-reentrant model
  5554 ;;
  5555                           
  5556     0E48                     _gpio_pin_direction_initialize:	
  5557                           ;psect for function _gpio_pin_direction_initialize
  5558                           
  5559                           
  5560                           ;incstack = 0
  5561                           ; Regs used in _gpio_pin_direction_initialize: [wreg-fsr0h+status,2+status,0+btemp+1]
  5562                           ;gpio_pin_direction_initialize@pin stored from wreg
  5563     0E48  00F5               	movwf	gpio_pin_direction_initialize@pin
  5564     0E49                     l2675:
  5565     0E49                     l2677:
  5566                           
  5567                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 14:     if (pin == ((void*)0)) {
  5568     0E49  0875               	movf	gpio_pin_direction_initialize@pin,w
  5569     0E4A  1D03               	btfss	3,2
  5570     0E4B  2E4D               	goto	u2881
  5571     0E4C  2E4E               	goto	u2880
  5572     0E4D                     u2881:
  5573     0E4D  2E4F               	goto	l2681
  5574     0E4E                     u2880:
  5575     0E4E                     l2679:
  5576                           
  5577                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 16:     } else {
  5578     0E4E  2F1F               	goto	l266
  5579     0E4F                     l2681:
  5580                           
  5581                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 17:         if ((pin->port == PORTA_INDEX && pin->pin < 6)
      +                           || (pin->port == PORTB_INDEX && pin->pin < 8) || (pin->port == PORTC_INDEX && pin->pin 
      +                          < 8) ||
  5582     0E4F  0875               	movf	gpio_pin_direction_initialize@pin,w
  5583     0E50  0084               	movwf	4
  5584     0E51  1383               	bcf	3,7	;select IRP bank0
  5585     0E52  0800               	movf	0,w
  5586     0E53  3907               	andlw	7
  5587     0E54  3A00               	xorlw	0
  5588     0E55  1D03               	skipz
  5589     0E56  2E58               	goto	u2891
  5590     0E57  2E59               	goto	u2890
  5591     0E58                     u2891:
  5592     0E58  2E67               	goto	l2685
  5593     0E59                     u2890:
  5594     0E59                     l2683:
  5595     0E59  0875               	movf	gpio_pin_direction_initialize@pin,w
  5596     0E5A  0084               	movwf	4
  5597     0E5B  0C00               	rrf	0,w
  5598     0E5C  00F0               	movwf	??_gpio_pin_direction_initialize
  5599     0E5D  0CF0               	rrf	??_gpio_pin_direction_initialize,f
  5600     0E5E  0C70               	rrf	??_gpio_pin_direction_initialize,w
  5601     0E5F  3907               	andlw	7
  5602     0E60  00F1               	movwf	??_gpio_pin_direction_initialize+1
  5603     0E61  3006               	movlw	6
  5604     0E62  0271               	subwf	??_gpio_pin_direction_initialize+1,w
  5605     0E63  1C03               	skipc
  5606     0E64  2E66               	goto	u2901
  5607     0E65  2E67               	goto	u2900
  5608     0E66                     u2901:
  5609     0E66  2F13               	goto	l2707
  5610     0E67                     u2900:
  5611     0E67                     l2685:
  5612     0E67  0875               	movf	gpio_pin_direction_initialize@pin,w
  5613     0E68  0084               	movwf	4
  5614     0E69  0800               	movf	0,w
  5615     0E6A  3907               	andlw	7
  5616     0E6B  3A01               	xorlw	1
  5617     0E6C  1D03               	skipz
  5618     0E6D  2E6F               	goto	u2911
  5619     0E6E  2E70               	goto	u2910
  5620     0E6F                     u2911:
  5621     0E6F  2E7E               	goto	l2689
  5622     0E70                     u2910:
  5623     0E70                     l2687:
  5624     0E70  0875               	movf	gpio_pin_direction_initialize@pin,w
  5625     0E71  0084               	movwf	4
  5626     0E72  0C00               	rrf	0,w
  5627     0E73  00F0               	movwf	??_gpio_pin_direction_initialize
  5628     0E74  0CF0               	rrf	??_gpio_pin_direction_initialize,f
  5629     0E75  0C70               	rrf	??_gpio_pin_direction_initialize,w
  5630     0E76  3907               	andlw	7
  5631     0E77  00F1               	movwf	??_gpio_pin_direction_initialize+1
  5632     0E78  3008               	movlw	8
  5633     0E79  0271               	subwf	??_gpio_pin_direction_initialize+1,w
  5634     0E7A  1C03               	skipc
  5635     0E7B  2E7D               	goto	u2921
  5636     0E7C  2E7E               	goto	u2920
  5637     0E7D                     u2921:
  5638     0E7D  2F13               	goto	l2707
  5639     0E7E                     u2920:
  5640     0E7E                     l2689:
  5641     0E7E  0875               	movf	gpio_pin_direction_initialize@pin,w
  5642     0E7F  0084               	movwf	4
  5643     0E80  0800               	movf	0,w
  5644     0E81  3907               	andlw	7
  5645     0E82  3A02               	xorlw	2
  5646     0E83  1D03               	skipz
  5647     0E84  2E86               	goto	u2931
  5648     0E85  2E87               	goto	u2930
  5649     0E86                     u2931:
  5650     0E86  2E95               	goto	l2693
  5651     0E87                     u2930:
  5652     0E87                     l2691:
  5653     0E87  0875               	movf	gpio_pin_direction_initialize@pin,w
  5654     0E88  0084               	movwf	4
  5655     0E89  0C00               	rrf	0,w
  5656     0E8A  00F0               	movwf	??_gpio_pin_direction_initialize
  5657     0E8B  0CF0               	rrf	??_gpio_pin_direction_initialize,f
  5658     0E8C  0C70               	rrf	??_gpio_pin_direction_initialize,w
  5659     0E8D  3907               	andlw	7
  5660     0E8E  00F1               	movwf	??_gpio_pin_direction_initialize+1
  5661     0E8F  3008               	movlw	8
  5662     0E90  0271               	subwf	??_gpio_pin_direction_initialize+1,w
  5663     0E91  1C03               	skipc
  5664     0E92  2E94               	goto	u2941
  5665     0E93  2E95               	goto	u2940
  5666     0E94                     u2941:
  5667     0E94  2F13               	goto	l2707
  5668     0E95                     u2940:
  5669     0E95                     l2693:
  5670     0E95  0875               	movf	gpio_pin_direction_initialize@pin,w
  5671     0E96  0084               	movwf	4
  5672     0E97  0800               	movf	0,w
  5673     0E98  3907               	andlw	7
  5674     0E99  3A03               	xorlw	3
  5675     0E9A  1D03               	skipz
  5676     0E9B  2E9D               	goto	u2951
  5677     0E9C  2E9E               	goto	u2950
  5678     0E9D                     u2951:
  5679     0E9D  2EAC               	goto	l2697
  5680     0E9E                     u2950:
  5681     0E9E                     l2695:
  5682     0E9E  0875               	movf	gpio_pin_direction_initialize@pin,w
  5683     0E9F  0084               	movwf	4
  5684     0EA0  0C00               	rrf	0,w
  5685     0EA1  00F0               	movwf	??_gpio_pin_direction_initialize
  5686     0EA2  0CF0               	rrf	??_gpio_pin_direction_initialize,f
  5687     0EA3  0C70               	rrf	??_gpio_pin_direction_initialize,w
  5688     0EA4  3907               	andlw	7
  5689     0EA5  00F1               	movwf	??_gpio_pin_direction_initialize+1
  5690     0EA6  3008               	movlw	8
  5691     0EA7  0271               	subwf	??_gpio_pin_direction_initialize+1,w
  5692     0EA8  1C03               	skipc
  5693     0EA9  2EAB               	goto	u2961
  5694     0EAA  2EAC               	goto	u2960
  5695     0EAB                     u2961:
  5696     0EAB  2F13               	goto	l2707
  5697     0EAC                     u2960:
  5698     0EAC                     l2697:
  5699     0EAC  0875               	movf	gpio_pin_direction_initialize@pin,w
  5700     0EAD  0084               	movwf	4
  5701     0EAE  0800               	movf	0,w
  5702     0EAF  3907               	andlw	7
  5703     0EB0  3A04               	xorlw	4
  5704     0EB1  1D03               	skipz
  5705     0EB2  2EB4               	goto	u2971
  5706     0EB3  2EB5               	goto	u2970
  5707     0EB4                     u2971:
  5708     0EB4  2E4E               	goto	l2679
  5709     0EB5                     u2970:
  5710     0EB5                     l2699:
  5711     0EB5  0875               	movf	gpio_pin_direction_initialize@pin,w
  5712     0EB6  0084               	movwf	4
  5713     0EB7  0C00               	rrf	0,w
  5714     0EB8  00F0               	movwf	??_gpio_pin_direction_initialize
  5715     0EB9  0CF0               	rrf	??_gpio_pin_direction_initialize,f
  5716     0EBA  0C70               	rrf	??_gpio_pin_direction_initialize,w
  5717     0EBB  3907               	andlw	7
  5718     0EBC  00F1               	movwf	??_gpio_pin_direction_initialize+1
  5719     0EBD  3003               	movlw	3
  5720     0EBE  0271               	subwf	??_gpio_pin_direction_initialize+1,w
  5721     0EBF  1803               	skipnc
  5722     0EC0  2EC2               	goto	u2981
  5723     0EC1  2EC3               	goto	u2980
  5724     0EC2                     u2981:
  5725     0EC2  2E4E               	goto	l2679
  5726     0EC3                     u2980:
  5727     0EC3  2F13               	goto	l2707
  5728     0EC4                     l2701:
  5729                           
  5730                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 21:                     (*tris_registers[pin->port] &= ~(0
      +                          x01 << pin->pin));
  5731     0EC4  3001               	movlw	1
  5732     0EC5  00F0               	movwf	??_gpio_pin_direction_initialize
  5733     0EC6  0875               	movf	gpio_pin_direction_initialize@pin,w
  5734     0EC7  0084               	movwf	4
  5735     0EC8  0C00               	rrf	0,w
  5736     0EC9  00F1               	movwf	??_gpio_pin_direction_initialize+1
  5737     0ECA  0CF1               	rrf	??_gpio_pin_direction_initialize+1,f
  5738     0ECB  0C71               	rrf	??_gpio_pin_direction_initialize+1,w
  5739     0ECC  3907               	andlw	7
  5740     0ECD  3E01               	addlw	1
  5741     0ECE  2ED1               	goto	u2994
  5742     0ECF                     u2995:
  5743     0ECF  1003               	clrc
  5744     0ED0  0DF0               	rlf	??_gpio_pin_direction_initialize,f
  5745     0ED1                     u2994:
  5746     0ED1  3EFF               	addlw	-1
  5747     0ED2  1D03               	skipz
  5748     0ED3  2ECF               	goto	u2995
  5749     0ED4  0870               	movf	??_gpio_pin_direction_initialize,w
  5750     0ED5  3AFF               	xorlw	255
  5751     0ED6  00FF               	movwf	btemp+1
  5752     0ED7  0875               	movf	gpio_pin_direction_initialize@pin,w
  5753     0ED8  0084               	movwf	4
  5754     0ED9  0800               	movf	0,w
  5755     0EDA  3907               	andlw	7
  5756     0EDB  00F2               	movwf	??_gpio_pin_direction_initialize+2
  5757     0EDC  0772               	addwf	??_gpio_pin_direction_initialize+2,w
  5758     0EDD  3EAA               	addlw	(low (_tris_registers| 0))& (0+255)
  5759     0EDE  0084               	movwf	4
  5760     0EDF  0800               	movf	0,w
  5761     0EE0  00F3               	movwf	??_gpio_pin_direction_initialize+3
  5762     0EE1  0A84               	incf	4,f
  5763     0EE2  0800               	movf	0,w
  5764     0EE3  00F4               	movwf	??_gpio_pin_direction_initialize+4
  5765     0EE4  0873               	movf	??_gpio_pin_direction_initialize+3,w
  5766     0EE5  0084               	movwf	4
  5767     0EE6  1783               	bsf	3,7
  5768     0EE7  1C74               	btfss	??_gpio_pin_direction_initialize+4,0
  5769     0EE8  1383               	bcf	3,7
  5770     0EE9  087F               	movf	btemp+1,w
  5771     0EEA  0580               	andwf	0,f
  5772                           
  5773                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 22:                     break;
  5774     0EEB  2F1F               	goto	l266
  5775     0EEC                     l2703:
  5776                           
  5777                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 24:                     (*tris_registers[pin->port] |= (0x
      +                          01 << pin->pin));
  5778     0EEC  3001               	movlw	1
  5779     0EED  00F0               	movwf	??_gpio_pin_direction_initialize
  5780     0EEE  0875               	movf	gpio_pin_direction_initialize@pin,w
  5781     0EEF  0084               	movwf	4
  5782     0EF0  0C00               	rrf	0,w
  5783     0EF1  00F1               	movwf	??_gpio_pin_direction_initialize+1
  5784     0EF2  0CF1               	rrf	??_gpio_pin_direction_initialize+1,f
  5785     0EF3  0C71               	rrf	??_gpio_pin_direction_initialize+1,w
  5786     0EF4  3907               	andlw	7
  5787     0EF5  3E01               	addlw	1
  5788     0EF6  2EF9               	goto	u3004
  5789     0EF7                     u3005:
  5790     0EF7  1003               	clrc
  5791     0EF8  0DF0               	rlf	??_gpio_pin_direction_initialize,f
  5792     0EF9                     u3004:
  5793     0EF9  3EFF               	addlw	-1
  5794     0EFA  1D03               	skipz
  5795     0EFB  2EF7               	goto	u3005
  5796     0EFC  0870               	movf	??_gpio_pin_direction_initialize,w
  5797     0EFD  00FF               	movwf	btemp+1
  5798     0EFE  0875               	movf	gpio_pin_direction_initialize@pin,w
  5799     0EFF  0084               	movwf	4
  5800     0F00  0800               	movf	0,w
  5801     0F01  3907               	andlw	7
  5802     0F02  00F2               	movwf	??_gpio_pin_direction_initialize+2
  5803     0F03  0772               	addwf	??_gpio_pin_direction_initialize+2,w
  5804     0F04  3EAA               	addlw	(low (_tris_registers| 0))& (0+255)
  5805     0F05  0084               	movwf	4
  5806     0F06  0800               	movf	0,w
  5807     0F07  00F3               	movwf	??_gpio_pin_direction_initialize+3
  5808     0F08  0A84               	incf	4,f
  5809     0F09  0800               	movf	0,w
  5810     0F0A  00F4               	movwf	??_gpio_pin_direction_initialize+4
  5811     0F0B  0873               	movf	??_gpio_pin_direction_initialize+3,w
  5812     0F0C  0084               	movwf	4
  5813     0F0D  1783               	bsf	3,7
  5814     0F0E  1C74               	btfss	??_gpio_pin_direction_initialize+4,0
  5815     0F0F  1383               	bcf	3,7
  5816     0F10  087F               	movf	btemp+1,w
  5817     0F11  0480               	iorwf	0,f
  5818                           
  5819                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 25:                     break;
  5820     0F12  2F1F               	goto	l266
  5821     0F13                     l2707:
  5822     0F13  0875               	movf	gpio_pin_direction_initialize@pin,w
  5823     0F14  0084               	movwf	4
  5824     0F15  0D00               	rlf	0,w
  5825     0F16  0D00               	rlf	0,w
  5826     0F17  3901               	andlw	1
  5827                           
  5828                           ; Switch size 1, requested type "simple"
  5829                           ; Number of cases is 2, Range of values is 0 to 1
  5830                           ; switch strategies available:
  5831                           ; Name         Instructions Cycles
  5832                           ; simple_byte            7     4 (average)
  5833                           ; direct_byte           14     8 (fixed)
  5834                           ; jumptable            260     6 (fixed)
  5835                           ;	Chosen strategy is simple_byte
  5836     0F18  3A00               	xorlw	0	; case 0
  5837     0F19  1903               	skipnz
  5838     0F1A  2EC4               	goto	l2701
  5839     0F1B  3A01               	xorlw	1	; case 1
  5840     0F1C  1903               	skipnz
  5841     0F1D  2EEC               	goto	l2703
  5842     0F1E  2F1F               	goto	l266
  5843     0F1F                     l266:
  5844     0F1F  0008               	return
  5845     0F20                     __end_of_gpio_pin_direction_initialize:
  5846                           
  5847                           	psect	text25
  5848     0D90                     __ptext25:	
  5849 ;; *************** function ___xxtofl *****************
  5850 ;; Defined at:
  5851 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
  5852 ;; Parameters:    Size  Location     Type
  5853 ;;  sign            1    wreg     unsigned char 
  5854 ;;  val             4    0[COMMON] long 
  5855 ;; Auto vars:     Size  Location     Type
  5856 ;;  sign            1    8[COMMON] unsigned char 
  5857 ;;  arg             4   10[COMMON] unsigned long 
  5858 ;;  exp             1    9[COMMON] unsigned char 
  5859 ;; Return value:  Size  Location     Type
  5860 ;;                  4    0[COMMON] unsigned char 
  5861 ;; Registers used:
  5862 ;;		wreg, status,2, status,0, btemp+1
  5863 ;; Tracked objects:
  5864 ;;		On entry : 0/0
  5865 ;;		On exit  : 0/0
  5866 ;;		Unchanged: 0/0
  5867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5868 ;;      Params:         4       0       0       0       0
  5869 ;;      Locals:         6       0       0       0       0
  5870 ;;      Temps:          4       0       0       0       0
  5871 ;;      Totals:        14       0       0       0       0
  5872 ;;Total ram usage:       14 bytes
  5873 ;; Hardware stack levels used: 1
  5874 ;; This function calls:
  5875 ;;		Nothing
  5876 ;; This function is called by:
  5877 ;;		_main
  5878 ;; This function uses a non-reentrant model
  5879 ;;
  5880                           
  5881     0D90                     ___xxtofl:	
  5882                           ;psect for function ___xxtofl
  5883                           
  5884                           
  5885                           ;incstack = 0
  5886                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  5887                           ;___xxtofl@sign stored from wreg
  5888     0D90  00F8               	movwf	___xxtofl@sign
  5889     0D91                     l3687:
  5890     0D91  0878               	movf	___xxtofl@sign,w
  5891     0D92  1903               	btfsc	3,2
  5892     0D93  2D95               	goto	u4771
  5893     0D94  2D96               	goto	u4770
  5894     0D95                     u4771:
  5895     0D95  2DAA               	goto	l3693
  5896     0D96                     u4770:
  5897     0D96                     l3689:
  5898     0D96  1FF3               	btfss	___xxtofl@val+3,7
  5899     0D97  2D99               	goto	u4781
  5900     0D98  2D9A               	goto	u4780
  5901     0D99                     u4781:
  5902     0D99  2DAA               	goto	l3693
  5903     0D9A                     u4780:
  5904     0D9A                     l3691:
  5905     0D9A  0970               	comf	___xxtofl@val,w
  5906     0D9B  00FA               	movwf	___xxtofl@arg
  5907     0D9C  0971               	comf	___xxtofl@val+1,w
  5908     0D9D  00FB               	movwf	___xxtofl@arg+1
  5909     0D9E  0972               	comf	___xxtofl@val+2,w
  5910     0D9F  00FC               	movwf	___xxtofl@arg+2
  5911     0DA0  0973               	comf	___xxtofl@val+3,w
  5912     0DA1  00FD               	movwf	___xxtofl@arg+3
  5913     0DA2  0AFA               	incf	___xxtofl@arg,f
  5914     0DA3  1903               	skipnz
  5915     0DA4  0AFB               	incf	___xxtofl@arg+1,f
  5916     0DA5  1903               	skipnz
  5917     0DA6  0AFC               	incf	___xxtofl@arg+2,f
  5918     0DA7  1903               	skipnz
  5919     0DA8  0AFD               	incf	___xxtofl@arg+3,f
  5920     0DA9  2DB2               	goto	l1065
  5921     0DAA                     l3693:
  5922     0DAA  0873               	movf	___xxtofl@val+3,w
  5923     0DAB  00FD               	movwf	___xxtofl@arg+3
  5924     0DAC  0872               	movf	___xxtofl@val+2,w
  5925     0DAD  00FC               	movwf	___xxtofl@arg+2
  5926     0DAE  0871               	movf	___xxtofl@val+1,w
  5927     0DAF  00FB               	movwf	___xxtofl@arg+1
  5928     0DB0  0870               	movf	___xxtofl@val,w
  5929     0DB1  00FA               	movwf	___xxtofl@arg
  5930     0DB2                     l1065:
  5931     0DB2  0873               	movf	___xxtofl@val+3,w
  5932     0DB3  0472               	iorwf	___xxtofl@val+2,w
  5933     0DB4  0471               	iorwf	___xxtofl@val+1,w
  5934     0DB5  0470               	iorwf	___xxtofl@val,w
  5935     0DB6  1D03               	skipz
  5936     0DB7  2DB9               	goto	u4791
  5937     0DB8  2DBA               	goto	u4790
  5938     0DB9                     u4791:
  5939     0DB9  2DC3               	goto	l3699
  5940     0DBA                     u4790:
  5941     0DBA                     l3695:
  5942     0DBA  3000               	movlw	0
  5943     0DBB  00F3               	movwf	?___xxtofl+3
  5944     0DBC  3000               	movlw	0
  5945     0DBD  00F2               	movwf	?___xxtofl+2
  5946     0DBE  3000               	movlw	0
  5947     0DBF  00F1               	movwf	?___xxtofl+1
  5948     0DC0  3000               	movlw	0
  5949     0DC1  00F0               	movwf	?___xxtofl
  5950     0DC2  2E47               	goto	l1067
  5951     0DC3                     l3699:
  5952     0DC3  3096               	movlw	150
  5953     0DC4  00F9               	movwf	___xxtofl@exp
  5954     0DC5  2DD3               	goto	l3705
  5955     0DC6                     l3701:
  5956     0DC6  3001               	movlw	1
  5957     0DC7  00FF               	movwf	btemp+1
  5958     0DC8  087F               	movf	btemp+1,w
  5959     0DC9  07F9               	addwf	___xxtofl@exp,f
  5960     0DCA                     l3703:
  5961     0DCA  3001               	movlw	1
  5962     0DCB                     u4805:
  5963     0DCB  1003               	clrc
  5964     0DCC  0CFD               	rrf	___xxtofl@arg+3,f
  5965     0DCD  0CFC               	rrf	___xxtofl@arg+2,f
  5966     0DCE  0CFB               	rrf	___xxtofl@arg+1,f
  5967     0DCF  0CFA               	rrf	___xxtofl@arg,f
  5968     0DD0  3EFF               	addlw	-1
  5969     0DD1  1D03               	skipz
  5970     0DD2  2DCB               	goto	u4805
  5971     0DD3                     l3705:
  5972     0DD3  30FE               	movlw	254
  5973     0DD4  057D               	andwf	___xxtofl@arg+3,w
  5974     0DD5  1D03               	btfss	3,2
  5975     0DD6  2DD8               	goto	u4811
  5976     0DD7  2DD9               	goto	u4810
  5977     0DD8                     u4811:
  5978     0DD8  2DC6               	goto	l3701
  5979     0DD9                     u4810:
  5980     0DD9  2DF5               	goto	l3713
  5981     0DDA                     l3707:
  5982     0DDA  3001               	movlw	1
  5983     0DDB  00FF               	movwf	btemp+1
  5984     0DDC  087F               	movf	btemp+1,w
  5985     0DDD  07F9               	addwf	___xxtofl@exp,f
  5986     0DDE                     l3709:
  5987     0DDE  3001               	movlw	1
  5988     0DDF  07FA               	addwf	___xxtofl@arg,f
  5989     0DE0  3000               	movlw	0
  5990     0DE1  1803               	skipnc
  5991     0DE2  3001               	movlw	1
  5992     0DE3  07FB               	addwf	___xxtofl@arg+1,f
  5993     0DE4  3000               	movlw	0
  5994     0DE5  1803               	skipnc
  5995     0DE6  3001               	movlw	1
  5996     0DE7  07FC               	addwf	___xxtofl@arg+2,f
  5997     0DE8  3000               	movlw	0
  5998     0DE9  1803               	skipnc
  5999     0DEA  3001               	movlw	1
  6000     0DEB  07FD               	addwf	___xxtofl@arg+3,f
  6001     0DEC                     l3711:
  6002     0DEC  3001               	movlw	1
  6003     0DED                     u4825:
  6004     0DED  1003               	clrc
  6005     0DEE  0CFD               	rrf	___xxtofl@arg+3,f
  6006     0DEF  0CFC               	rrf	___xxtofl@arg+2,f
  6007     0DF0  0CFB               	rrf	___xxtofl@arg+1,f
  6008     0DF1  0CFA               	rrf	___xxtofl@arg,f
  6009     0DF2  3EFF               	addlw	-1
  6010     0DF3  1D03               	skipz
  6011     0DF4  2DED               	goto	u4825
  6012     0DF5                     l3713:
  6013     0DF5  30FF               	movlw	255
  6014     0DF6  057D               	andwf	___xxtofl@arg+3,w
  6015     0DF7  1D03               	btfss	3,2
  6016     0DF8  2DFA               	goto	u4831
  6017     0DF9  2DFB               	goto	u4830
  6018     0DFA                     u4831:
  6019     0DFA  2DDA               	goto	l3707
  6020     0DFB                     u4830:
  6021     0DFB  2E07               	goto	l3717
  6022     0DFC                     l3715:
  6023     0DFC  3001               	movlw	1
  6024     0DFD  02F9               	subwf	___xxtofl@exp,f
  6025     0DFE  3001               	movlw	1
  6026     0DFF  00F4               	movwf	??___xxtofl
  6027     0E00                     u4845:
  6028     0E00  1003               	clrc
  6029     0E01  0DFA               	rlf	___xxtofl@arg,f
  6030     0E02  0DFB               	rlf	___xxtofl@arg+1,f
  6031     0E03  0DFC               	rlf	___xxtofl@arg+2,f
  6032     0E04  0DFD               	rlf	___xxtofl@arg+3,f
  6033     0E05  0BF4               	decfsz	??___xxtofl,f
  6034     0E06  2E00               	goto	u4845
  6035     0E07                     l3717:
  6036     0E07  1BFC               	btfsc	___xxtofl@arg+2,7
  6037     0E08  2E0A               	goto	u4851
  6038     0E09  2E0B               	goto	u4850
  6039     0E0A                     u4851:
  6040     0E0A  2E11               	goto	l1078
  6041     0E0B                     u4850:
  6042     0E0B                     l3719:
  6043     0E0B  3002               	movlw	2
  6044     0E0C  0279               	subwf	___xxtofl@exp,w
  6045     0E0D  1803               	skipnc
  6046     0E0E  2E10               	goto	u4861
  6047     0E0F  2E11               	goto	u4860
  6048     0E10                     u4861:
  6049     0E10  2DFC               	goto	l3715
  6050     0E11                     u4860:
  6051     0E11                     l1078:
  6052     0E11  1879               	btfsc	___xxtofl@exp,0
  6053     0E12  2E14               	goto	u4871
  6054     0E13  2E15               	goto	u4870
  6055     0E14                     u4871:
  6056     0E14  2E1D               	goto	l1079
  6057     0E15                     u4870:
  6058     0E15                     l3721:
  6059     0E15  30FF               	movlw	255
  6060     0E16  05FA               	andwf	___xxtofl@arg,f
  6061     0E17  30FF               	movlw	255
  6062     0E18  05FB               	andwf	___xxtofl@arg+1,f
  6063     0E19  307F               	movlw	127
  6064     0E1A  05FC               	andwf	___xxtofl@arg+2,f
  6065     0E1B  30FF               	movlw	255
  6066     0E1C  05FD               	andwf	___xxtofl@arg+3,f
  6067     0E1D                     l1079:
  6068     0E1D  1003               	clrc
  6069     0E1E  0CF9               	rrf	___xxtofl@exp,f
  6070     0E1F                     l3723:
  6071     0E1F  0879               	movf	___xxtofl@exp,w
  6072     0E20  00F4               	movwf	??___xxtofl
  6073     0E21  01F5               	clrf	??___xxtofl+1
  6074     0E22  01F6               	clrf	??___xxtofl+2
  6075     0E23  01F7               	clrf	??___xxtofl+3
  6076     0E24  3018               	movlw	24
  6077     0E25                     u4885:
  6078     0E25  1003               	clrc
  6079     0E26  0DF4               	rlf	??___xxtofl,f
  6080     0E27  0DF5               	rlf	??___xxtofl+1,f
  6081     0E28  0DF6               	rlf	??___xxtofl+2,f
  6082     0E29  0DF7               	rlf	??___xxtofl+3,f
  6083     0E2A                     u4880:
  6084     0E2A  3EFF               	addlw	-1
  6085     0E2B  1D03               	skipz
  6086     0E2C  2E25               	goto	u4885
  6087     0E2D  0874               	movf	??___xxtofl,w
  6088     0E2E  04FA               	iorwf	___xxtofl@arg,f
  6089     0E2F  0875               	movf	??___xxtofl+1,w
  6090     0E30  04FB               	iorwf	___xxtofl@arg+1,f
  6091     0E31  0876               	movf	??___xxtofl+2,w
  6092     0E32  04FC               	iorwf	___xxtofl@arg+2,f
  6093     0E33  0877               	movf	??___xxtofl+3,w
  6094     0E34  04FD               	iorwf	___xxtofl@arg+3,f
  6095     0E35                     l3725:
  6096     0E35  0878               	movf	___xxtofl@sign,w
  6097     0E36  1903               	btfsc	3,2
  6098     0E37  2E39               	goto	u4891
  6099     0E38  2E3A               	goto	u4890
  6100     0E39                     u4891:
  6101     0E39  2E3F               	goto	l3731
  6102     0E3A                     u4890:
  6103     0E3A                     l3727:
  6104     0E3A  1FF3               	btfss	___xxtofl@val+3,7
  6105     0E3B  2E3D               	goto	u4901
  6106     0E3C  2E3E               	goto	u4900
  6107     0E3D                     u4901:
  6108     0E3D  2E3F               	goto	l3731
  6109     0E3E                     u4900:
  6110     0E3E                     l3729:
  6111     0E3E  17FD               	bsf	___xxtofl@arg+3,7
  6112     0E3F                     l3731:
  6113     0E3F  087D               	movf	___xxtofl@arg+3,w
  6114     0E40  00F3               	movwf	?___xxtofl+3
  6115     0E41  087C               	movf	___xxtofl@arg+2,w
  6116     0E42  00F2               	movwf	?___xxtofl+2
  6117     0E43  087B               	movf	___xxtofl@arg+1,w
  6118     0E44  00F1               	movwf	?___xxtofl+1
  6119     0E45  087A               	movf	___xxtofl@arg,w
  6120     0E46  00F0               	movwf	?___xxtofl
  6121     0E47                     l1067:
  6122     0E47  0008               	return
  6123     0E48                     __end_of___xxtofl:
  6124                           
  6125                           	psect	text26
  6126     0B20                     __ptext26:	
  6127 ;; *************** function ___fltol *****************
  6128 ;; Defined at:
  6129 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  6130 ;; Parameters:    Size  Location     Type
  6131 ;;  f1              4   52[BANK0 ] unsigned char 
  6132 ;; Auto vars:     Size  Location     Type
  6133 ;;  exp1            1   61[BANK0 ] unsigned char 
  6134 ;;  sign1           1   60[BANK0 ] unsigned char 
  6135 ;; Return value:  Size  Location     Type
  6136 ;;                  4   52[BANK0 ] long 
  6137 ;; Registers used:
  6138 ;;		wreg, status,2, status,0, btemp+1
  6139 ;; Tracked objects:
  6140 ;;		On entry : 0/0
  6141 ;;		On exit  : 0/0
  6142 ;;		Unchanged: 0/0
  6143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6144 ;;      Params:         0       4       0       0       0
  6145 ;;      Locals:         0       2       0       0       0
  6146 ;;      Temps:          0       4       0       0       0
  6147 ;;      Totals:         0      10       0       0       0
  6148 ;;Total ram usage:       10 bytes
  6149 ;; Hardware stack levels used: 1
  6150 ;; This function calls:
  6151 ;;		Nothing
  6152 ;; This function is called by:
  6153 ;;		_main
  6154 ;; This function uses a non-reentrant model
  6155 ;;
  6156                           
  6157     0B20                     ___fltol:	
  6158                           ;psect for function ___fltol
  6159                           
  6160     0B20                     l3361:	
  6161                           ;incstack = 0
  6162                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  6163                           
  6164     0B20  1003               	clrc
  6165     0B21  1283               	bcf	3,5	;RP0=0, select bank0
  6166     0B22  1303               	bcf	3,6	;RP1=0, select bank0
  6167     0B23  0D56               	rlf	___fltol@f1+2,w
  6168     0B24  0D57               	rlf	___fltol@f1+3,w
  6169     0B25  00DD               	movwf	___fltol@exp1
  6170     0B26  085D               	movf	___fltol@exp1,w
  6171     0B27  1D03               	btfss	3,2
  6172     0B28  2B2A               	goto	u4011
  6173     0B29  2B2B               	goto	u4010
  6174     0B2A                     u4011:
  6175     0B2A  2B34               	goto	l3367
  6176     0B2B                     u4010:
  6177     0B2B                     l3363:
  6178     0B2B  3000               	movlw	0
  6179     0B2C  00D7               	movwf	?___fltol+3
  6180     0B2D  3000               	movlw	0
  6181     0B2E  00D6               	movwf	?___fltol+2
  6182     0B2F  3000               	movlw	0
  6183     0B30  00D5               	movwf	?___fltol+1
  6184     0B31  3000               	movlw	0
  6185     0B32  00D4               	movwf	?___fltol
  6186     0B33  2B97               	goto	l818
  6187     0B34                     l3367:
  6188     0B34  0854               	movf	___fltol@f1,w
  6189     0B35  00D8               	movwf	??___fltol
  6190     0B36  0855               	movf	___fltol@f1+1,w
  6191     0B37  00D9               	movwf	??___fltol+1
  6192     0B38  0856               	movf	___fltol@f1+2,w
  6193     0B39  00DA               	movwf	??___fltol+2
  6194     0B3A  0857               	movf	___fltol@f1+3,w
  6195     0B3B  00DB               	movwf	??___fltol+3
  6196     0B3C  301F               	movlw	31
  6197     0B3D                     u4025:
  6198     0B3D  1003               	clrc
  6199     0B3E  0CDB               	rrf	??___fltol+3,f
  6200     0B3F  0CDA               	rrf	??___fltol+2,f
  6201     0B40  0CD9               	rrf	??___fltol+1,f
  6202     0B41  0CD8               	rrf	??___fltol,f
  6203     0B42                     u4020:
  6204     0B42  3EFF               	addlw	-1
  6205     0B43  1D03               	skipz
  6206     0B44  2B3D               	goto	u4025
  6207     0B45  0858               	movf	??___fltol,w
  6208     0B46  00DC               	movwf	___fltol@sign1
  6209     0B47                     l3369:
  6210     0B47  17D6               	bsf	___fltol@f1+2,7
  6211     0B48                     l3371:
  6212     0B48  30FF               	movlw	255
  6213     0B49  05D4               	andwf	___fltol@f1,f
  6214     0B4A  30FF               	movlw	255
  6215     0B4B  05D5               	andwf	___fltol@f1+1,f
  6216     0B4C  30FF               	movlw	255
  6217     0B4D  05D6               	andwf	___fltol@f1+2,f
  6218     0B4E  3000               	movlw	0
  6219     0B4F  05D7               	andwf	___fltol@f1+3,f
  6220     0B50                     l3373:
  6221     0B50  3096               	movlw	150
  6222     0B51  02DD               	subwf	___fltol@exp1,f
  6223     0B52                     l3375:
  6224     0B52  1FDD               	btfss	___fltol@exp1,7
  6225     0B53  2B55               	goto	u4031
  6226     0B54  2B56               	goto	u4030
  6227     0B55                     u4031:
  6228     0B55  2B70               	goto	l3387
  6229     0B56                     u4030:
  6230     0B56                     l3377:
  6231     0B56  085D               	movf	___fltol@exp1,w
  6232     0B57  3A80               	xorlw	128
  6233     0B58  3E97               	addlw	151
  6234     0B59  1803               	skipnc
  6235     0B5A  2B5C               	goto	u4041
  6236     0B5B  2B5D               	goto	u4040
  6237     0B5C                     u4041:
  6238     0B5C  2B5E               	goto	l3383
  6239     0B5D                     u4040:
  6240     0B5D  2B2B               	goto	l3363
  6241     0B5E                     l3383:
  6242     0B5E  3001               	movlw	1
  6243     0B5F                     u4055:
  6244     0B5F  1003               	clrc
  6245     0B60  0CD7               	rrf	___fltol@f1+3,f
  6246     0B61  0CD6               	rrf	___fltol@f1+2,f
  6247     0B62  0CD5               	rrf	___fltol@f1+1,f
  6248     0B63  0CD4               	rrf	___fltol@f1,f
  6249     0B64  3EFF               	addlw	-1
  6250     0B65  1D03               	skipz
  6251     0B66  2B5F               	goto	u4055
  6252     0B67                     l3385:
  6253     0B67  3001               	movlw	1
  6254     0B68  00FF               	movwf	btemp+1
  6255     0B69  087F               	movf	btemp+1,w
  6256     0B6A  07DD               	addwf	___fltol@exp1,f
  6257     0B6B  1D03               	btfss	3,2
  6258     0B6C  2B6E               	goto	u4061
  6259     0B6D  2B6F               	goto	u4060
  6260     0B6E                     u4061:
  6261     0B6E  2B5E               	goto	l3383
  6262     0B6F                     u4060:
  6263     0B6F  2B87               	goto	l3395
  6264     0B70                     l3387:
  6265     0B70  3020               	movlw	32
  6266     0B71  025D               	subwf	___fltol@exp1,w
  6267     0B72  1C03               	skipc
  6268     0B73  2B75               	goto	u4071
  6269     0B74  2B76               	goto	u4070
  6270     0B75                     u4071:
  6271     0B75  2B82               	goto	l825
  6272     0B76                     u4070:
  6273     0B76  2B2B               	goto	l3363
  6274     0B77                     l3393:
  6275     0B77  3001               	movlw	1
  6276     0B78  00D8               	movwf	??___fltol
  6277     0B79                     u4085:
  6278     0B79  1003               	clrc
  6279     0B7A  0DD4               	rlf	___fltol@f1,f
  6280     0B7B  0DD5               	rlf	___fltol@f1+1,f
  6281     0B7C  0DD6               	rlf	___fltol@f1+2,f
  6282     0B7D  0DD7               	rlf	___fltol@f1+3,f
  6283     0B7E  0BD8               	decfsz	??___fltol,f
  6284     0B7F  2B79               	goto	u4085
  6285     0B80  3001               	movlw	1
  6286     0B81  02DD               	subwf	___fltol@exp1,f
  6287     0B82                     l825:
  6288     0B82  085D               	movf	___fltol@exp1,w
  6289     0B83  1D03               	btfss	3,2
  6290     0B84  2B86               	goto	u4091
  6291     0B85  2B87               	goto	u4090
  6292     0B86                     u4091:
  6293     0B86  2B77               	goto	l3393
  6294     0B87                     u4090:
  6295     0B87                     l3395:
  6296     0B87  085C               	movf	___fltol@sign1,w
  6297     0B88  1903               	btfsc	3,2
  6298     0B89  2B8B               	goto	u4101
  6299     0B8A  2B8C               	goto	u4100
  6300     0B8B                     u4101:
  6301     0B8B  2B97               	goto	l828
  6302     0B8C                     u4100:
  6303     0B8C                     l3397:
  6304     0B8C  09D4               	comf	___fltol@f1,f
  6305     0B8D  09D5               	comf	___fltol@f1+1,f
  6306     0B8E  09D6               	comf	___fltol@f1+2,f
  6307     0B8F  09D7               	comf	___fltol@f1+3,f
  6308     0B90  0AD4               	incf	___fltol@f1,f
  6309     0B91  1903               	skipnz
  6310     0B92  0AD5               	incf	___fltol@f1+1,f
  6311     0B93  1903               	skipnz
  6312     0B94  0AD6               	incf	___fltol@f1+2,f
  6313     0B95  1903               	skipnz
  6314     0B96  0AD7               	incf	___fltol@f1+3,f
  6315     0B97                     l828:
  6316     0B97                     l818:
  6317     0B97  0008               	return
  6318     0B98                     __end_of___fltol:
  6319                           
  6320                           	psect	text27
  6321     048F                     __ptext27:	
  6322 ;; *************** function ___flmul *****************
  6323 ;; Defined at:
  6324 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
  6325 ;; Parameters:    Size  Location     Type
  6326 ;;  b               4    0[BANK0 ] long 
  6327 ;;  a               4    4[BANK0 ] long 
  6328 ;; Auto vars:     Size  Location     Type
  6329 ;;  prod            4   20[BANK0 ] struct .
  6330 ;;  grs             4   14[BANK0 ] unsigned long 
  6331 ;;  temp            2   24[BANK0 ] struct .
  6332 ;;  bexp            1   19[BANK0 ] unsigned char 
  6333 ;;  aexp            1   18[BANK0 ] unsigned char 
  6334 ;;  sign            1   13[BANK0 ] unsigned char 
  6335 ;; Return value:  Size  Location     Type
  6336 ;;                  4    0[BANK0 ] unsigned char 
  6337 ;; Registers used:
  6338 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6339 ;; Tracked objects:
  6340 ;;		On entry : 0/0
  6341 ;;		On exit  : 0/0
  6342 ;;		Unchanged: 0/0
  6343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6344 ;;      Params:         0       8       0       0       0
  6345 ;;      Locals:         0      13       0       0       0
  6346 ;;      Temps:          0       5       0       0       0
  6347 ;;      Totals:         0      26       0       0       0
  6348 ;;Total ram usage:       26 bytes
  6349 ;; Hardware stack levels used: 1
  6350 ;; Hardware stack levels required when called: 1
  6351 ;; This function calls:
  6352 ;;		__Umul8_16
  6353 ;; This function is called by:
  6354 ;;		_main
  6355 ;; This function uses a non-reentrant model
  6356 ;;
  6357                           
  6358     048F                     ___flmul:	
  6359                           ;psect for function ___flmul
  6360                           
  6361     048F                     l3545:	
  6362                           ;incstack = 0
  6363                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6364                           
  6365     048F  1283               	bcf	3,5	;RP0=0, select bank0
  6366     0490  1303               	bcf	3,6	;RP1=0, select bank0
  6367     0491  0823               	movf	___flmul@b+3,w
  6368     0492  3980               	andlw	128
  6369     0493  00AD               	movwf	___flmul@sign
  6370     0494                     l3547:
  6371     0494  0823               	movf	___flmul@b+3,w
  6372     0495  00A8               	movwf	??___flmul
  6373     0496  0728               	addwf	??___flmul,w
  6374     0497  00B3               	movwf	___flmul@bexp
  6375     0498                     l3549:
  6376     0498  1FA2               	btfss	___flmul@b+2,7
  6377     0499  2C9B               	goto	u4401
  6378     049A  2C9C               	goto	u4400
  6379     049B                     u4401:
  6380     049B  2C9D               	goto	l3553
  6381     049C                     u4400:
  6382     049C                     l3551:
  6383     049C  1433               	bsf	___flmul@bexp,0
  6384     049D                     l3553:
  6385     049D  0833               	movf	___flmul@bexp,w
  6386     049E  1903               	btfsc	3,2
  6387     049F  2CA1               	goto	u4411
  6388     04A0  2CA2               	goto	u4410
  6389     04A1                     u4411:
  6390     04A1  2CB1               	goto	l3561
  6391     04A2                     u4410:
  6392     04A2                     l3555:
  6393     04A2  0A33               	incf	___flmul@bexp,w
  6394     04A3  1D03               	btfss	3,2
  6395     04A4  2CA6               	goto	u4421
  6396     04A5  2CA7               	goto	u4420
  6397     04A6                     u4421:
  6398     04A6  2CAF               	goto	l3559
  6399     04A7                     u4420:
  6400     04A7                     l3557:
  6401     04A7  3000               	movlw	0
  6402     04A8  00A3               	movwf	___flmul@b+3
  6403     04A9  3000               	movlw	0
  6404     04AA  00A2               	movwf	___flmul@b+2
  6405     04AB  3000               	movlw	0
  6406     04AC  00A1               	movwf	___flmul@b+1
  6407     04AD  3000               	movlw	0
  6408     04AE  00A0               	movwf	___flmul@b
  6409     04AF                     l3559:
  6410     04AF  17A2               	bsf	___flmul@b+2,7
  6411     04B0  2CB9               	goto	l3563
  6412     04B1                     l3561:
  6413     04B1  3000               	movlw	0
  6414     04B2  00A3               	movwf	___flmul@b+3
  6415     04B3  3000               	movlw	0
  6416     04B4  00A2               	movwf	___flmul@b+2
  6417     04B5  3000               	movlw	0
  6418     04B6  00A1               	movwf	___flmul@b+1
  6419     04B7  3000               	movlw	0
  6420     04B8  00A0               	movwf	___flmul@b
  6421     04B9                     l3563:
  6422     04B9  0827               	movf	___flmul@a+3,w
  6423     04BA  3980               	andlw	128
  6424     04BB  00FF               	movwf	btemp+1
  6425     04BC  087F               	movf	btemp+1,w
  6426     04BD  06AD               	xorwf	___flmul@sign,f
  6427     04BE                     l3565:
  6428     04BE  0827               	movf	___flmul@a+3,w
  6429     04BF  00A8               	movwf	??___flmul
  6430     04C0  0728               	addwf	??___flmul,w
  6431     04C1  00B2               	movwf	___flmul@aexp
  6432     04C2                     l3567:
  6433     04C2  1FA6               	btfss	___flmul@a+2,7
  6434     04C3  2CC5               	goto	u4431
  6435     04C4  2CC6               	goto	u4430
  6436     04C5                     u4431:
  6437     04C5  2CC7               	goto	l3571
  6438     04C6                     u4430:
  6439     04C6                     l3569:
  6440     04C6  1432               	bsf	___flmul@aexp,0
  6441     04C7                     l3571:
  6442     04C7  0832               	movf	___flmul@aexp,w
  6443     04C8  1903               	btfsc	3,2
  6444     04C9  2CCB               	goto	u4441
  6445     04CA  2CCC               	goto	u4440
  6446     04CB                     u4441:
  6447     04CB  2CDB               	goto	l3579
  6448     04CC                     u4440:
  6449     04CC                     l3573:
  6450     04CC  0A32               	incf	___flmul@aexp,w
  6451     04CD  1D03               	btfss	3,2
  6452     04CE  2CD0               	goto	u4451
  6453     04CF  2CD1               	goto	u4450
  6454     04D0                     u4451:
  6455     04D0  2CD9               	goto	l3577
  6456     04D1                     u4450:
  6457     04D1                     l3575:
  6458     04D1  3000               	movlw	0
  6459     04D2  00A7               	movwf	___flmul@a+3
  6460     04D3  3000               	movlw	0
  6461     04D4  00A6               	movwf	___flmul@a+2
  6462     04D5  3000               	movlw	0
  6463     04D6  00A5               	movwf	___flmul@a+1
  6464     04D7  3000               	movlw	0
  6465     04D8  00A4               	movwf	___flmul@a
  6466     04D9                     l3577:
  6467     04D9  17A6               	bsf	___flmul@a+2,7
  6468     04DA  2CE3               	goto	l3581
  6469     04DB                     l3579:
  6470     04DB  3000               	movlw	0
  6471     04DC  00A7               	movwf	___flmul@a+3
  6472     04DD  3000               	movlw	0
  6473     04DE  00A6               	movwf	___flmul@a+2
  6474     04DF  3000               	movlw	0
  6475     04E0  00A5               	movwf	___flmul@a+1
  6476     04E1  3000               	movlw	0
  6477     04E2  00A4               	movwf	___flmul@a
  6478     04E3                     l3581:
  6479     04E3  0832               	movf	___flmul@aexp,w
  6480     04E4  1903               	btfsc	3,2
  6481     04E5  2CE7               	goto	u4461
  6482     04E6  2CE8               	goto	u4460
  6483     04E7                     u4461:
  6484     04E7  2CED               	goto	l3585
  6485     04E8                     u4460:
  6486     04E8                     l3583:
  6487     04E8  0833               	movf	___flmul@bexp,w
  6488     04E9  1D03               	btfss	3,2
  6489     04EA  2CEC               	goto	u4471
  6490     04EB  2CED               	goto	u4470
  6491     04EC                     u4471:
  6492     04EC  2CF6               	goto	l3589
  6493     04ED                     u4470:
  6494     04ED                     l3585:
  6495     04ED  3000               	movlw	0
  6496     04EE  00A3               	movwf	?___flmul+3
  6497     04EF  3000               	movlw	0
  6498     04F0  00A2               	movwf	?___flmul+2
  6499     04F1  3000               	movlw	0
  6500     04F2  00A1               	movwf	?___flmul+1
  6501     04F3  3000               	movlw	0
  6502     04F4  00A0               	movwf	?___flmul
  6503     04F5  2FD3               	goto	l1021
  6504     04F6                     l3589:
  6505     04F6  0820               	movf	___flmul@b,w
  6506     04F7  00F0               	movwf	__Umul8_16@multiplicand
  6507     04F8  0826               	movf	___flmul@a+2,w
  6508     04F9  160A  118A  26E7  120A  118A  	fcall	__Umul8_16
  6509     04FE  0871               	movf	?__Umul8_16+1,w
  6510     04FF  1283               	bcf	3,5	;RP0=0, select bank0
  6511     0500  1303               	bcf	3,6	;RP1=0, select bank0
  6512     0501  00B9               	movwf	___flmul@temp+1
  6513     0502  0870               	movf	?__Umul8_16,w
  6514     0503  00B8               	movwf	___flmul@temp
  6515     0504                     l3591:
  6516     0504  0838               	movf	___flmul@temp,w
  6517     0505  00A8               	movwf	??___flmul
  6518     0506  01A9               	clrf	??___flmul+1
  6519     0507  01AA               	clrf	??___flmul+2
  6520     0508  01AB               	clrf	??___flmul+3
  6521     0509  082B               	movf	??___flmul+3,w
  6522     050A  00B1               	movwf	___flmul@grs+3
  6523     050B  082A               	movf	??___flmul+2,w
  6524     050C  00B0               	movwf	___flmul@grs+2
  6525     050D  0829               	movf	??___flmul+1,w
  6526     050E  00AF               	movwf	___flmul@grs+1
  6527     050F  0828               	movf	??___flmul,w
  6528     0510  00AE               	movwf	___flmul@grs
  6529     0511                     l3593:
  6530     0511  0839               	movf	___flmul@temp+1,w
  6531     0512  00A8               	movwf	??___flmul
  6532     0513  01A9               	clrf	??___flmul+1
  6533     0514  01AA               	clrf	??___flmul+2
  6534     0515  01AB               	clrf	??___flmul+3
  6535     0516  082B               	movf	??___flmul+3,w
  6536     0517  00B7               	movwf	___flmul@prod+3
  6537     0518  082A               	movf	??___flmul+2,w
  6538     0519  00B6               	movwf	___flmul@prod+2
  6539     051A  0829               	movf	??___flmul+1,w
  6540     051B  00B5               	movwf	___flmul@prod+1
  6541     051C  0828               	movf	??___flmul,w
  6542     051D  00B4               	movwf	___flmul@prod
  6543     051E  0821               	movf	___flmul@b+1,w
  6544     051F  00F0               	movwf	__Umul8_16@multiplicand
  6545     0520  0825               	movf	___flmul@a+1,w
  6546     0521  160A  118A  26E7  120A  118A  	fcall	__Umul8_16
  6547     0526  0871               	movf	?__Umul8_16+1,w
  6548     0527  1283               	bcf	3,5	;RP0=0, select bank0
  6549     0528  1303               	bcf	3,6	;RP1=0, select bank0
  6550     0529  00B9               	movwf	___flmul@temp+1
  6551     052A  0870               	movf	?__Umul8_16,w
  6552     052B  00B8               	movwf	___flmul@temp
  6553     052C                     l3595:
  6554     052C  0838               	movf	___flmul@temp,w
  6555     052D  00A8               	movwf	??___flmul
  6556     052E  01A9               	clrf	??___flmul+1
  6557     052F  01AA               	clrf	??___flmul+2
  6558     0530  01AB               	clrf	??___flmul+3
  6559     0531  0828               	movf	??___flmul,w
  6560     0532  07AE               	addwf	___flmul@grs,f
  6561     0533  0829               	movf	??___flmul+1,w
  6562     0534  1103               	clrz
  6563     0535  1803               	skipnc
  6564     0536  3E01               	addlw	1
  6565     0537  1903               	skipnz
  6566     0538  2D3A               	goto	u4481
  6567     0539  07AF               	addwf	___flmul@grs+1,f
  6568     053A                     u4481:
  6569     053A  082A               	movf	??___flmul+2,w
  6570     053B  1103               	clrz
  6571     053C  1803               	skipnc
  6572     053D  3E01               	addlw	1
  6573     053E  1903               	skipnz
  6574     053F  2D41               	goto	u4482
  6575     0540  07B0               	addwf	___flmul@grs+2,f
  6576     0541                     u4482:
  6577     0541  082B               	movf	??___flmul+3,w
  6578     0542  1103               	clrz
  6579     0543  1803               	skipnc
  6580     0544  3E01               	addlw	1
  6581     0545  1903               	skipnz
  6582     0546  2D48               	goto	u4483
  6583     0547  07B1               	addwf	___flmul@grs+3,f
  6584     0548                     u4483:
  6585     0548                     l3597:
  6586     0548  0839               	movf	___flmul@temp+1,w
  6587     0549  00A8               	movwf	??___flmul
  6588     054A  01A9               	clrf	??___flmul+1
  6589     054B  01AA               	clrf	??___flmul+2
  6590     054C  01AB               	clrf	??___flmul+3
  6591     054D  0828               	movf	??___flmul,w
  6592     054E  07B4               	addwf	___flmul@prod,f
  6593     054F  0829               	movf	??___flmul+1,w
  6594     0550  1103               	clrz
  6595     0551  1803               	skipnc
  6596     0552  3E01               	addlw	1
  6597     0553  1903               	skipnz
  6598     0554  2D56               	goto	u4491
  6599     0555  07B5               	addwf	___flmul@prod+1,f
  6600     0556                     u4491:
  6601     0556  082A               	movf	??___flmul+2,w
  6602     0557  1103               	clrz
  6603     0558  1803               	skipnc
  6604     0559  3E01               	addlw	1
  6605     055A  1903               	skipnz
  6606     055B  2D5D               	goto	u4492
  6607     055C  07B6               	addwf	___flmul@prod+2,f
  6608     055D                     u4492:
  6609     055D  082B               	movf	??___flmul+3,w
  6610     055E  1103               	clrz
  6611     055F  1803               	skipnc
  6612     0560  3E01               	addlw	1
  6613     0561  1903               	skipnz
  6614     0562  2D64               	goto	u4493
  6615     0563  07B7               	addwf	___flmul@prod+3,f
  6616     0564                     u4493:
  6617     0564  0822               	movf	___flmul@b+2,w
  6618     0565  00F0               	movwf	__Umul8_16@multiplicand
  6619     0566  0824               	movf	___flmul@a,w
  6620     0567  160A  118A  26E7  120A  118A  	fcall	__Umul8_16
  6621     056C  0871               	movf	?__Umul8_16+1,w
  6622     056D  1283               	bcf	3,5	;RP0=0, select bank0
  6623     056E  1303               	bcf	3,6	;RP1=0, select bank0
  6624     056F  00B9               	movwf	___flmul@temp+1
  6625     0570  0870               	movf	?__Umul8_16,w
  6626     0571  00B8               	movwf	___flmul@temp
  6627     0572                     l3599:
  6628     0572  0838               	movf	___flmul@temp,w
  6629     0573  00A8               	movwf	??___flmul
  6630     0574  01A9               	clrf	??___flmul+1
  6631     0575  01AA               	clrf	??___flmul+2
  6632     0576  01AB               	clrf	??___flmul+3
  6633     0577  0828               	movf	??___flmul,w
  6634     0578  07AE               	addwf	___flmul@grs,f
  6635     0579  0829               	movf	??___flmul+1,w
  6636     057A  1103               	clrz
  6637     057B  1803               	skipnc
  6638     057C  3E01               	addlw	1
  6639     057D  1903               	skipnz
  6640     057E  2D80               	goto	u4501
  6641     057F  07AF               	addwf	___flmul@grs+1,f
  6642     0580                     u4501:
  6643     0580  082A               	movf	??___flmul+2,w
  6644     0581  1103               	clrz
  6645     0582  1803               	skipnc
  6646     0583  3E01               	addlw	1
  6647     0584  1903               	skipnz
  6648     0585  2D87               	goto	u4502
  6649     0586  07B0               	addwf	___flmul@grs+2,f
  6650     0587                     u4502:
  6651     0587  082B               	movf	??___flmul+3,w
  6652     0588  1103               	clrz
  6653     0589  1803               	skipnc
  6654     058A  3E01               	addlw	1
  6655     058B  1903               	skipnz
  6656     058C  2D8E               	goto	u4503
  6657     058D  07B1               	addwf	___flmul@grs+3,f
  6658     058E                     u4503:
  6659     058E                     l3601:
  6660     058E  0839               	movf	___flmul@temp+1,w
  6661     058F  00A8               	movwf	??___flmul
  6662     0590  01A9               	clrf	??___flmul+1
  6663     0591  01AA               	clrf	??___flmul+2
  6664     0592  01AB               	clrf	??___flmul+3
  6665     0593  0828               	movf	??___flmul,w
  6666     0594  07B4               	addwf	___flmul@prod,f
  6667     0595  0829               	movf	??___flmul+1,w
  6668     0596  1103               	clrz
  6669     0597  1803               	skipnc
  6670     0598  3E01               	addlw	1
  6671     0599  1903               	skipnz
  6672     059A  2D9C               	goto	u4511
  6673     059B  07B5               	addwf	___flmul@prod+1,f
  6674     059C                     u4511:
  6675     059C  082A               	movf	??___flmul+2,w
  6676     059D  1103               	clrz
  6677     059E  1803               	skipnc
  6678     059F  3E01               	addlw	1
  6679     05A0  1903               	skipnz
  6680     05A1  2DA3               	goto	u4512
  6681     05A2  07B6               	addwf	___flmul@prod+2,f
  6682     05A3                     u4512:
  6683     05A3  082B               	movf	??___flmul+3,w
  6684     05A4  1103               	clrz
  6685     05A5  1803               	skipnc
  6686     05A6  3E01               	addlw	1
  6687     05A7  1903               	skipnz
  6688     05A8  2DAA               	goto	u4513
  6689     05A9  07B7               	addwf	___flmul@prod+3,f
  6690     05AA                     u4513:
  6691     05AA                     l3603:
  6692     05AA  3008               	movlw	8
  6693     05AB  00A8               	movwf	??___flmul
  6694     05AC                     u4525:
  6695     05AC  1003               	clrc
  6696     05AD  0DAE               	rlf	___flmul@grs,f
  6697     05AE  0DAF               	rlf	___flmul@grs+1,f
  6698     05AF  0DB0               	rlf	___flmul@grs+2,f
  6699     05B0  0DB1               	rlf	___flmul@grs+3,f
  6700     05B1  0BA8               	decfsz	??___flmul,f
  6701     05B2  2DAC               	goto	u4525
  6702     05B3                     l3605:
  6703     05B3  0821               	movf	___flmul@b+1,w
  6704     05B4  00F0               	movwf	__Umul8_16@multiplicand
  6705     05B5  0824               	movf	___flmul@a,w
  6706     05B6  160A  118A  26E7  120A  118A  	fcall	__Umul8_16
  6707     05BB  0871               	movf	?__Umul8_16+1,w
  6708     05BC  1283               	bcf	3,5	;RP0=0, select bank0
  6709     05BD  1303               	bcf	3,6	;RP1=0, select bank0
  6710     05BE  00B9               	movwf	___flmul@temp+1
  6711     05BF  0870               	movf	?__Umul8_16,w
  6712     05C0  00B8               	movwf	___flmul@temp
  6713     05C1                     l3607:
  6714     05C1  0838               	movf	___flmul@temp,w
  6715     05C2  00A8               	movwf	??___flmul
  6716     05C3  0839               	movf	___flmul@temp+1,w
  6717     05C4  00A9               	movwf	??___flmul+1
  6718     05C5  01AA               	clrf	??___flmul+2
  6719     05C6  01AB               	clrf	??___flmul+3
  6720     05C7  0828               	movf	??___flmul,w
  6721     05C8  07AE               	addwf	___flmul@grs,f
  6722     05C9  0829               	movf	??___flmul+1,w
  6723     05CA  1103               	clrz
  6724     05CB  1803               	skipnc
  6725     05CC  3E01               	addlw	1
  6726     05CD  1903               	skipnz
  6727     05CE  2DD0               	goto	u4531
  6728     05CF  07AF               	addwf	___flmul@grs+1,f
  6729     05D0                     u4531:
  6730     05D0  082A               	movf	??___flmul+2,w
  6731     05D1  1103               	clrz
  6732     05D2  1803               	skipnc
  6733     05D3  3E01               	addlw	1
  6734     05D4  1903               	skipnz
  6735     05D5  2DD7               	goto	u4532
  6736     05D6  07B0               	addwf	___flmul@grs+2,f
  6737     05D7                     u4532:
  6738     05D7  082B               	movf	??___flmul+3,w
  6739     05D8  1103               	clrz
  6740     05D9  1803               	skipnc
  6741     05DA  3E01               	addlw	1
  6742     05DB  1903               	skipnz
  6743     05DC  2DDE               	goto	u4533
  6744     05DD  07B1               	addwf	___flmul@grs+3,f
  6745     05DE                     u4533:
  6746     05DE                     l3609:
  6747     05DE  0820               	movf	___flmul@b,w
  6748     05DF  00F0               	movwf	__Umul8_16@multiplicand
  6749     05E0  0825               	movf	___flmul@a+1,w
  6750     05E1  160A  118A  26E7  120A  118A  	fcall	__Umul8_16
  6751     05E6  0871               	movf	?__Umul8_16+1,w
  6752     05E7  1283               	bcf	3,5	;RP0=0, select bank0
  6753     05E8  1303               	bcf	3,6	;RP1=0, select bank0
  6754     05E9  00B9               	movwf	___flmul@temp+1
  6755     05EA  0870               	movf	?__Umul8_16,w
  6756     05EB  00B8               	movwf	___flmul@temp
  6757     05EC                     l3611:
  6758     05EC  0838               	movf	___flmul@temp,w
  6759     05ED  00A8               	movwf	??___flmul
  6760     05EE  0839               	movf	___flmul@temp+1,w
  6761     05EF  00A9               	movwf	??___flmul+1
  6762     05F0  01AA               	clrf	??___flmul+2
  6763     05F1  01AB               	clrf	??___flmul+3
  6764     05F2  0828               	movf	??___flmul,w
  6765     05F3  07AE               	addwf	___flmul@grs,f
  6766     05F4  0829               	movf	??___flmul+1,w
  6767     05F5  1103               	clrz
  6768     05F6  1803               	skipnc
  6769     05F7  3E01               	addlw	1
  6770     05F8  1903               	skipnz
  6771     05F9  2DFB               	goto	u4541
  6772     05FA  07AF               	addwf	___flmul@grs+1,f
  6773     05FB                     u4541:
  6774     05FB  082A               	movf	??___flmul+2,w
  6775     05FC  1103               	clrz
  6776     05FD  1803               	skipnc
  6777     05FE  3E01               	addlw	1
  6778     05FF  1903               	skipnz
  6779     0600  2E02               	goto	u4542
  6780     0601  07B0               	addwf	___flmul@grs+2,f
  6781     0602                     u4542:
  6782     0602  082B               	movf	??___flmul+3,w
  6783     0603  1103               	clrz
  6784     0604  1803               	skipnc
  6785     0605  3E01               	addlw	1
  6786     0606  1903               	skipnz
  6787     0607  2E09               	goto	u4543
  6788     0608  07B1               	addwf	___flmul@grs+3,f
  6789     0609                     u4543:
  6790     0609                     l3613:
  6791     0609  3008               	movlw	8
  6792     060A  00A8               	movwf	??___flmul
  6793     060B                     u4555:
  6794     060B  1003               	clrc
  6795     060C  0DAE               	rlf	___flmul@grs,f
  6796     060D  0DAF               	rlf	___flmul@grs+1,f
  6797     060E  0DB0               	rlf	___flmul@grs+2,f
  6798     060F  0DB1               	rlf	___flmul@grs+3,f
  6799     0610  0BA8               	decfsz	??___flmul,f
  6800     0611  2E0B               	goto	u4555
  6801     0612  0820               	movf	___flmul@b,w
  6802     0613  00F0               	movwf	__Umul8_16@multiplicand
  6803     0614  0824               	movf	___flmul@a,w
  6804     0615  160A  118A  26E7  120A  118A  	fcall	__Umul8_16
  6805     061A  0871               	movf	?__Umul8_16+1,w
  6806     061B  1283               	bcf	3,5	;RP0=0, select bank0
  6807     061C  1303               	bcf	3,6	;RP1=0, select bank0
  6808     061D  00B9               	movwf	___flmul@temp+1
  6809     061E  0870               	movf	?__Umul8_16,w
  6810     061F  00B8               	movwf	___flmul@temp
  6811     0620                     l3615:
  6812     0620  0838               	movf	___flmul@temp,w
  6813     0621  00A8               	movwf	??___flmul
  6814     0622  0839               	movf	___flmul@temp+1,w
  6815     0623  00A9               	movwf	??___flmul+1
  6816     0624  01AA               	clrf	??___flmul+2
  6817     0625  01AB               	clrf	??___flmul+3
  6818     0626  0828               	movf	??___flmul,w
  6819     0627  07AE               	addwf	___flmul@grs,f
  6820     0628  0829               	movf	??___flmul+1,w
  6821     0629  1103               	clrz
  6822     062A  1803               	skipnc
  6823     062B  3E01               	addlw	1
  6824     062C  1903               	skipnz
  6825     062D  2E2F               	goto	u4561
  6826     062E  07AF               	addwf	___flmul@grs+1,f
  6827     062F                     u4561:
  6828     062F  082A               	movf	??___flmul+2,w
  6829     0630  1103               	clrz
  6830     0631  1803               	skipnc
  6831     0632  3E01               	addlw	1
  6832     0633  1903               	skipnz
  6833     0634  2E36               	goto	u4562
  6834     0635  07B0               	addwf	___flmul@grs+2,f
  6835     0636                     u4562:
  6836     0636  082B               	movf	??___flmul+3,w
  6837     0637  1103               	clrz
  6838     0638  1803               	skipnc
  6839     0639  3E01               	addlw	1
  6840     063A  1903               	skipnz
  6841     063B  2E3D               	goto	u4563
  6842     063C  07B1               	addwf	___flmul@grs+3,f
  6843     063D                     u4563:
  6844     063D                     l3617:
  6845     063D  0821               	movf	___flmul@b+1,w
  6846     063E  00F0               	movwf	__Umul8_16@multiplicand
  6847     063F  0826               	movf	___flmul@a+2,w
  6848     0640  160A  118A  26E7  120A  118A  	fcall	__Umul8_16
  6849     0645  0871               	movf	?__Umul8_16+1,w
  6850     0646  1283               	bcf	3,5	;RP0=0, select bank0
  6851     0647  1303               	bcf	3,6	;RP1=0, select bank0
  6852     0648  00B9               	movwf	___flmul@temp+1
  6853     0649  0870               	movf	?__Umul8_16,w
  6854     064A  00B8               	movwf	___flmul@temp
  6855     064B  0838               	movf	___flmul@temp,w
  6856     064C  00A8               	movwf	??___flmul
  6857     064D  0839               	movf	___flmul@temp+1,w
  6858     064E  00A9               	movwf	??___flmul+1
  6859     064F  01AA               	clrf	??___flmul+2
  6860     0650  01AB               	clrf	??___flmul+3
  6861     0651  0828               	movf	??___flmul,w
  6862     0652  07B4               	addwf	___flmul@prod,f
  6863     0653  0829               	movf	??___flmul+1,w
  6864     0654  1103               	clrz
  6865     0655  1803               	skipnc
  6866     0656  3E01               	addlw	1
  6867     0657  1903               	skipnz
  6868     0658  2E5A               	goto	u4571
  6869     0659  07B5               	addwf	___flmul@prod+1,f
  6870     065A                     u4571:
  6871     065A  082A               	movf	??___flmul+2,w
  6872     065B  1103               	clrz
  6873     065C  1803               	skipnc
  6874     065D  3E01               	addlw	1
  6875     065E  1903               	skipnz
  6876     065F  2E61               	goto	u4572
  6877     0660  07B6               	addwf	___flmul@prod+2,f
  6878     0661                     u4572:
  6879     0661  082B               	movf	??___flmul+3,w
  6880     0662  1103               	clrz
  6881     0663  1803               	skipnc
  6882     0664  3E01               	addlw	1
  6883     0665  1903               	skipnz
  6884     0666  2E68               	goto	u4573
  6885     0667  07B7               	addwf	___flmul@prod+3,f
  6886     0668                     u4573:
  6887     0668                     l3619:
  6888     0668  0822               	movf	___flmul@b+2,w
  6889     0669  00F0               	movwf	__Umul8_16@multiplicand
  6890     066A  0825               	movf	___flmul@a+1,w
  6891     066B  160A  118A  26E7  120A  118A  	fcall	__Umul8_16
  6892     0670  0871               	movf	?__Umul8_16+1,w
  6893     0671  1283               	bcf	3,5	;RP0=0, select bank0
  6894     0672  1303               	bcf	3,6	;RP1=0, select bank0
  6895     0673  00B9               	movwf	___flmul@temp+1
  6896     0674  0870               	movf	?__Umul8_16,w
  6897     0675  00B8               	movwf	___flmul@temp
  6898     0676                     l3621:
  6899     0676  0838               	movf	___flmul@temp,w
  6900     0677  00A8               	movwf	??___flmul
  6901     0678  0839               	movf	___flmul@temp+1,w
  6902     0679  00A9               	movwf	??___flmul+1
  6903     067A  01AA               	clrf	??___flmul+2
  6904     067B  01AB               	clrf	??___flmul+3
  6905     067C  0828               	movf	??___flmul,w
  6906     067D  07B4               	addwf	___flmul@prod,f
  6907     067E  0829               	movf	??___flmul+1,w
  6908     067F  1103               	clrz
  6909     0680  1803               	skipnc
  6910     0681  3E01               	addlw	1
  6911     0682  1903               	skipnz
  6912     0683  2E85               	goto	u4581
  6913     0684  07B5               	addwf	___flmul@prod+1,f
  6914     0685                     u4581:
  6915     0685  082A               	movf	??___flmul+2,w
  6916     0686  1103               	clrz
  6917     0687  1803               	skipnc
  6918     0688  3E01               	addlw	1
  6919     0689  1903               	skipnz
  6920     068A  2E8C               	goto	u4582
  6921     068B  07B6               	addwf	___flmul@prod+2,f
  6922     068C                     u4582:
  6923     068C  082B               	movf	??___flmul+3,w
  6924     068D  1103               	clrz
  6925     068E  1803               	skipnc
  6926     068F  3E01               	addlw	1
  6927     0690  1903               	skipnz
  6928     0691  2E93               	goto	u4583
  6929     0692  07B7               	addwf	___flmul@prod+3,f
  6930     0693                     u4583:
  6931     0693  0822               	movf	___flmul@b+2,w
  6932     0694  00F0               	movwf	__Umul8_16@multiplicand
  6933     0695  0826               	movf	___flmul@a+2,w
  6934     0696  160A  118A  26E7  120A  118A  	fcall	__Umul8_16
  6935     069B  0871               	movf	?__Umul8_16+1,w
  6936     069C  1283               	bcf	3,5	;RP0=0, select bank0
  6937     069D  1303               	bcf	3,6	;RP1=0, select bank0
  6938     069E  00B9               	movwf	___flmul@temp+1
  6939     069F  0870               	movf	?__Umul8_16,w
  6940     06A0  00B8               	movwf	___flmul@temp
  6941     06A1                     l3623:
  6942     06A1  0838               	movf	___flmul@temp,w
  6943     06A2  00A8               	movwf	??___flmul
  6944     06A3  0839               	movf	___flmul@temp+1,w
  6945     06A4  00A9               	movwf	??___flmul+1
  6946     06A5  01AA               	clrf	??___flmul+2
  6947     06A6  01AB               	clrf	??___flmul+3
  6948     06A7  3008               	movlw	8
  6949     06A8                     u4595:
  6950     06A8  1003               	clrc
  6951     06A9  0DA8               	rlf	??___flmul,f
  6952     06AA  0DA9               	rlf	??___flmul+1,f
  6953     06AB  0DAA               	rlf	??___flmul+2,f
  6954     06AC  0DAB               	rlf	??___flmul+3,f
  6955     06AD                     u4590:
  6956     06AD  3EFF               	addlw	-1
  6957     06AE  1D03               	skipz
  6958     06AF  2EA8               	goto	u4595
  6959     06B0  0828               	movf	??___flmul,w
  6960     06B1  07B4               	addwf	___flmul@prod,f
  6961     06B2  0829               	movf	??___flmul+1,w
  6962     06B3  1103               	clrz
  6963     06B4  1803               	skipnc
  6964     06B5  3E01               	addlw	1
  6965     06B6  1903               	skipnz
  6966     06B7  2EB9               	goto	u4601
  6967     06B8  07B5               	addwf	___flmul@prod+1,f
  6968     06B9                     u4601:
  6969     06B9  082A               	movf	??___flmul+2,w
  6970     06BA  1103               	clrz
  6971     06BB  1803               	skipnc
  6972     06BC  3E01               	addlw	1
  6973     06BD  1903               	skipnz
  6974     06BE  2EC0               	goto	u4602
  6975     06BF  07B6               	addwf	___flmul@prod+2,f
  6976     06C0                     u4602:
  6977     06C0  082B               	movf	??___flmul+3,w
  6978     06C1  1103               	clrz
  6979     06C2  1803               	skipnc
  6980     06C3  3E01               	addlw	1
  6981     06C4  1903               	skipnz
  6982     06C5  2EC7               	goto	u4603
  6983     06C6  07B7               	addwf	___flmul@prod+3,f
  6984     06C7                     u4603:
  6985     06C7                     l3625:
  6986     06C7  082E               	movf	___flmul@grs,w
  6987     06C8  00A8               	movwf	??___flmul
  6988     06C9  082F               	movf	___flmul@grs+1,w
  6989     06CA  00A9               	movwf	??___flmul+1
  6990     06CB  0830               	movf	___flmul@grs+2,w
  6991     06CC  00AA               	movwf	??___flmul+2
  6992     06CD  0831               	movf	___flmul@grs+3,w
  6993     06CE  00AB               	movwf	??___flmul+3
  6994     06CF  3018               	movlw	24
  6995     06D0                     u4615:
  6996     06D0  1003               	clrc
  6997     06D1  0CAB               	rrf	??___flmul+3,f
  6998     06D2  0CAA               	rrf	??___flmul+2,f
  6999     06D3  0CA9               	rrf	??___flmul+1,f
  7000     06D4  0CA8               	rrf	??___flmul,f
  7001     06D5                     u4610:
  7002     06D5  3EFF               	addlw	-1
  7003     06D6  1D03               	skipz
  7004     06D7  2ED0               	goto	u4615
  7005     06D8  0828               	movf	??___flmul,w
  7006     06D9  07B4               	addwf	___flmul@prod,f
  7007     06DA  0829               	movf	??___flmul+1,w
  7008     06DB  1103               	clrz
  7009     06DC  1803               	skipnc
  7010     06DD  3E01               	addlw	1
  7011     06DE  1903               	skipnz
  7012     06DF  2EE1               	goto	u4621
  7013     06E0  07B5               	addwf	___flmul@prod+1,f
  7014     06E1                     u4621:
  7015     06E1  082A               	movf	??___flmul+2,w
  7016     06E2  1103               	clrz
  7017     06E3  1803               	skipnc
  7018     06E4  3E01               	addlw	1
  7019     06E5  1903               	skipnz
  7020     06E6  2EE8               	goto	u4622
  7021     06E7  07B6               	addwf	___flmul@prod+2,f
  7022     06E8                     u4622:
  7023     06E8  082B               	movf	??___flmul+3,w
  7024     06E9  1103               	clrz
  7025     06EA  1803               	skipnc
  7026     06EB  3E01               	addlw	1
  7027     06EC  1903               	skipnz
  7028     06ED  2EEF               	goto	u4623
  7029     06EE  07B7               	addwf	___flmul@prod+3,f
  7030     06EF                     u4623:
  7031     06EF                     l3627:
  7032     06EF  3008               	movlw	8
  7033     06F0  00A8               	movwf	??___flmul
  7034     06F1                     u4635:
  7035     06F1  1003               	clrc
  7036     06F2  0DAE               	rlf	___flmul@grs,f
  7037     06F3  0DAF               	rlf	___flmul@grs+1,f
  7038     06F4  0DB0               	rlf	___flmul@grs+2,f
  7039     06F5  0DB1               	rlf	___flmul@grs+3,f
  7040     06F6  0BA8               	decfsz	??___flmul,f
  7041     06F7  2EF1               	goto	u4635
  7042     06F8                     l3629:
  7043     06F8  0833               	movf	___flmul@bexp,w
  7044     06F9  0732               	addwf	___flmul@aexp,w
  7045     06FA  00A8               	movwf	??___flmul
  7046     06FB  01A9               	clrf	??___flmul+1
  7047     06FC  0DA9               	rlf	??___flmul+1,f
  7048     06FD  0828               	movf	??___flmul,w
  7049     06FE  3E82               	addlw	130
  7050     06FF  00B8               	movwf	___flmul@temp
  7051     0700  0829               	movf	??___flmul+1,w
  7052     0701  1803               	skipnc
  7053     0702  3E01               	addlw	1
  7054     0703  3EFF               	addlw	255
  7055     0704  00B9               	movwf	___flmul@temp+1
  7056     0705  2F23               	goto	l3641
  7057     0706                     l3631:
  7058     0706  3001               	movlw	1
  7059     0707  00A8               	movwf	??___flmul
  7060     0708                     u4645:
  7061     0708  1003               	clrc
  7062     0709  0DB4               	rlf	___flmul@prod,f
  7063     070A  0DB5               	rlf	___flmul@prod+1,f
  7064     070B  0DB6               	rlf	___flmul@prod+2,f
  7065     070C  0DB7               	rlf	___flmul@prod+3,f
  7066     070D  0BA8               	decfsz	??___flmul,f
  7067     070E  2F08               	goto	u4645
  7068     070F                     l3633:
  7069     070F  1FB1               	btfss	___flmul@grs+3,7
  7070     0710  2F12               	goto	u4651
  7071     0711  2F13               	goto	u4650
  7072     0712                     u4651:
  7073     0712  2F14               	goto	l3637
  7074     0713                     u4650:
  7075     0713                     l3635:
  7076     0713  1434               	bsf	___flmul@prod,0
  7077     0714                     l3637:
  7078     0714  3001               	movlw	1
  7079     0715  00A8               	movwf	??___flmul
  7080     0716                     u4665:
  7081     0716  1003               	clrc
  7082     0717  0DAE               	rlf	___flmul@grs,f
  7083     0718  0DAF               	rlf	___flmul@grs+1,f
  7084     0719  0DB0               	rlf	___flmul@grs+2,f
  7085     071A  0DB1               	rlf	___flmul@grs+3,f
  7086     071B  0BA8               	decfsz	??___flmul,f
  7087     071C  2F16               	goto	u4665
  7088     071D                     l3639:
  7089     071D  30FF               	movlw	255
  7090     071E  07B8               	addwf	___flmul@temp,f
  7091     071F  1803               	skipnc
  7092     0720  0AB9               	incf	___flmul@temp+1,f
  7093     0721  30FF               	movlw	255
  7094     0722  07B9               	addwf	___flmul@temp+1,f
  7095     0723                     l3641:
  7096     0723  1FB6               	btfss	___flmul@prod+2,7
  7097     0724  2F26               	goto	u4671
  7098     0725  2F27               	goto	u4670
  7099     0726                     u4671:
  7100     0726  2F06               	goto	l3631
  7101     0727                     u4670:
  7102     0727                     l3643:
  7103     0727  01B2               	clrf	___flmul@aexp
  7104     0728                     l3645:
  7105     0728  1FB1               	btfss	___flmul@grs+3,7
  7106     0729  2F2B               	goto	u4681
  7107     072A  2F2C               	goto	u4680
  7108     072B                     u4681:
  7109     072B  2F48               	goto	l3653
  7110     072C                     u4680:
  7111     072C                     l3647:
  7112     072C  30FF               	movlw	255
  7113     072D  052E               	andwf	___flmul@grs,w
  7114     072E  00A8               	movwf	??___flmul
  7115     072F  30FF               	movlw	255
  7116     0730  052F               	andwf	___flmul@grs+1,w
  7117     0731  00A9               	movwf	??___flmul+1
  7118     0732  30FF               	movlw	255
  7119     0733  0530               	andwf	___flmul@grs+2,w
  7120     0734  00AA               	movwf	??___flmul+2
  7121     0735  307F               	movlw	127
  7122     0736  0531               	andwf	___flmul@grs+3,w
  7123     0737  00AB               	movwf	??___flmul+3
  7124     0738  082B               	movf	??___flmul+3,w
  7125     0739  042A               	iorwf	??___flmul+2,w
  7126     073A  0429               	iorwf	??___flmul+1,w
  7127     073B  0428               	iorwf	??___flmul,w
  7128     073C  1903               	skipnz
  7129     073D  2F3F               	goto	u4691
  7130     073E  2F40               	goto	u4690
  7131     073F                     u4691:
  7132     073F  2F43               	goto	l1027
  7133     0740                     u4690:
  7134     0740                     l3649:
  7135     0740  01B2               	clrf	___flmul@aexp
  7136     0741  0AB2               	incf	___flmul@aexp,f
  7137     0742  2F48               	goto	l3653
  7138     0743                     l1027:
  7139     0743  1C34               	btfss	___flmul@prod,0
  7140     0744  2F46               	goto	u4701
  7141     0745  2F47               	goto	u4700
  7142     0746                     u4701:
  7143     0746  2F48               	goto	l3653
  7144     0747                     u4700:
  7145     0747  2F40               	goto	l3649
  7146     0748                     l3653:
  7147     0748  0832               	movf	___flmul@aexp,w
  7148     0749  1903               	btfsc	3,2
  7149     074A  2F4C               	goto	u4711
  7150     074B  2F4D               	goto	u4710
  7151     074C                     u4711:
  7152     074C  2F7E               	goto	l3663
  7153     074D                     u4710:
  7154     074D                     l3655:
  7155     074D  3001               	movlw	1
  7156     074E  07B4               	addwf	___flmul@prod,f
  7157     074F  3000               	movlw	0
  7158     0750  1803               	skipnc
  7159     0751  3001               	movlw	1
  7160     0752  07B5               	addwf	___flmul@prod+1,f
  7161     0753  3000               	movlw	0
  7162     0754  1803               	skipnc
  7163     0755  3001               	movlw	1
  7164     0756  07B6               	addwf	___flmul@prod+2,f
  7165     0757  3000               	movlw	0
  7166     0758  1803               	skipnc
  7167     0759  3001               	movlw	1
  7168     075A  07B7               	addwf	___flmul@prod+3,f
  7169     075B                     l3657:
  7170     075B  1C37               	btfss	___flmul@prod+3,0
  7171     075C  2F5E               	goto	u4721
  7172     075D  2F5F               	goto	u4720
  7173     075E                     u4721:
  7174     075E  2F7E               	goto	l3663
  7175     075F                     u4720:
  7176     075F                     l3659:
  7177     075F  0834               	movf	___flmul@prod,w
  7178     0760  00A8               	movwf	??___flmul
  7179     0761  0835               	movf	___flmul@prod+1,w
  7180     0762  00A9               	movwf	??___flmul+1
  7181     0763  0836               	movf	___flmul@prod+2,w
  7182     0764  00AA               	movwf	??___flmul+2
  7183     0765  0837               	movf	___flmul@prod+3,w
  7184     0766  00AB               	movwf	??___flmul+3
  7185     0767  3001               	movlw	1
  7186     0768  00AC               	movwf	??___flmul+4
  7187     0769                     u4735:
  7188     0769  0D2B               	rlf	??___flmul+3,w
  7189     076A  0CAB               	rrf	??___flmul+3,f
  7190     076B  0CAA               	rrf	??___flmul+2,f
  7191     076C  0CA9               	rrf	??___flmul+1,f
  7192     076D  0CA8               	rrf	??___flmul,f
  7193     076E                     u4730:
  7194     076E  0BAC               	decfsz	??___flmul+4,f
  7195     076F  2F69               	goto	u4735
  7196     0770  082B               	movf	??___flmul+3,w
  7197     0771  00B7               	movwf	___flmul@prod+3
  7198     0772  082A               	movf	??___flmul+2,w
  7199     0773  00B6               	movwf	___flmul@prod+2
  7200     0774  0829               	movf	??___flmul+1,w
  7201     0775  00B5               	movwf	___flmul@prod+1
  7202     0776  0828               	movf	??___flmul,w
  7203     0777  00B4               	movwf	___flmul@prod
  7204     0778                     l3661:
  7205     0778  3001               	movlw	1
  7206     0779  07B8               	addwf	___flmul@temp,f
  7207     077A  1803               	skipnc
  7208     077B  0AB9               	incf	___flmul@temp+1,f
  7209     077C  3000               	movlw	0
  7210     077D  07B9               	addwf	___flmul@temp+1,f
  7211     077E                     l3663:
  7212     077E  0839               	movf	___flmul@temp+1,w
  7213     077F  3A80               	xorlw	128
  7214     0780  00FF               	movwf	btemp+1
  7215     0781  3080               	movlw	128
  7216     0782  027F               	subwf	btemp+1,w
  7217     0783  1D03               	skipz
  7218     0784  2F87               	goto	u4745
  7219     0785  30FF               	movlw	255
  7220     0786  0238               	subwf	___flmul@temp,w
  7221     0787                     u4745:
  7222     0787  1C03               	skipc
  7223     0788  2F8A               	goto	u4741
  7224     0789  2F8B               	goto	u4740
  7225     078A                     u4741:
  7226     078A  2F96               	goto	l3667
  7227     078B                     u4740:
  7228     078B                     l3665:
  7229     078B  307F               	movlw	127
  7230     078C  1283               	bcf	3,5	;RP0=0, select bank0
  7231     078D  1303               	bcf	3,6	;RP1=0, select bank0
  7232     078E  00B7               	movwf	___flmul@prod+3
  7233     078F  3080               	movlw	128
  7234     0790  00B6               	movwf	___flmul@prod+2
  7235     0791  3000               	movlw	0
  7236     0792  00B5               	movwf	___flmul@prod+1
  7237     0793  3000               	movlw	0
  7238     0794  00B4               	movwf	___flmul@prod
  7239     0795  2FC7               	goto	l3681
  7240     0796                     l3667:
  7241     0796  1283               	bcf	3,5	;RP0=0, select bank0
  7242     0797  1303               	bcf	3,6	;RP1=0, select bank0
  7243     0798  0839               	movf	___flmul@temp+1,w
  7244     0799  3A80               	xorlw	128
  7245     079A  00FF               	movwf	btemp+1
  7246     079B  3080               	movlw	128
  7247     079C  027F               	subwf	btemp+1,w
  7248     079D  1D03               	skipz
  7249     079E  2FA1               	goto	u4755
  7250     079F  3001               	movlw	1
  7251     07A0  0238               	subwf	___flmul@temp,w
  7252     07A1                     u4755:
  7253     07A1  1803               	skipnc
  7254     07A2  2FA4               	goto	u4751
  7255     07A3  2FA5               	goto	u4750
  7256     07A4                     u4751:
  7257     07A4  2FB1               	goto	l3673
  7258     07A5                     u4750:
  7259     07A5                     l3669:
  7260     07A5  3000               	movlw	0
  7261     07A6  1283               	bcf	3,5	;RP0=0, select bank0
  7262     07A7  1303               	bcf	3,6	;RP1=0, select bank0
  7263     07A8  00B7               	movwf	___flmul@prod+3
  7264     07A9  3000               	movlw	0
  7265     07AA  00B6               	movwf	___flmul@prod+2
  7266     07AB  3000               	movlw	0
  7267     07AC  00B5               	movwf	___flmul@prod+1
  7268     07AD  3000               	movlw	0
  7269     07AE  00B4               	movwf	___flmul@prod
  7270     07AF                     l3671:
  7271     07AF  01AD               	clrf	___flmul@sign
  7272     07B0  2FC7               	goto	l3681
  7273     07B1                     l3673:
  7274     07B1  1283               	bcf	3,5	;RP0=0, select bank0
  7275     07B2  1303               	bcf	3,6	;RP1=0, select bank0
  7276     07B3  0838               	movf	___flmul@temp,w
  7277     07B4  00B3               	movwf	___flmul@bexp
  7278     07B5  30FF               	movlw	255
  7279     07B6  05B4               	andwf	___flmul@prod,f
  7280     07B7  30FF               	movlw	255
  7281     07B8  05B5               	andwf	___flmul@prod+1,f
  7282     07B9  307F               	movlw	127
  7283     07BA  05B6               	andwf	___flmul@prod+2,f
  7284     07BB  3000               	movlw	0
  7285     07BC  05B7               	andwf	___flmul@prod+3,f
  7286     07BD                     l3675:
  7287     07BD  1C33               	btfss	___flmul@bexp,0
  7288     07BE  2FC0               	goto	u4761
  7289     07BF  2FC1               	goto	u4760
  7290     07C0                     u4761:
  7291     07C0  2FC2               	goto	l3679
  7292     07C1                     u4760:
  7293     07C1                     l3677:
  7294     07C1  17B6               	bsf	___flmul@prod+2,7
  7295     07C2                     l3679:
  7296     07C2  0833               	movf	___flmul@bexp,w
  7297     07C3  00A8               	movwf	??___flmul
  7298     07C4  1003               	clrc
  7299     07C5  0C28               	rrf	??___flmul,w
  7300     07C6  00B7               	movwf	___flmul@prod+3
  7301     07C7                     l3681:
  7302     07C7  082D               	movf	___flmul@sign,w
  7303     07C8  00FF               	movwf	btemp+1
  7304     07C9  087F               	movf	btemp+1,w
  7305     07CA  04B7               	iorwf	___flmul@prod+3,f
  7306     07CB                     l3683:
  7307     07CB  0837               	movf	___flmul@prod+3,w
  7308     07CC  00A3               	movwf	?___flmul+3
  7309     07CD  0836               	movf	___flmul@prod+2,w
  7310     07CE  00A2               	movwf	?___flmul+2
  7311     07CF  0835               	movf	___flmul@prod+1,w
  7312     07D0  00A1               	movwf	?___flmul+1
  7313     07D1  0834               	movf	___flmul@prod,w
  7314     07D2  00A0               	movwf	?___flmul
  7315     07D3                     l1021:
  7316     07D3  0008               	return
  7317     07D4                     __end_of___flmul:
  7318                           
  7319                           	psect	text28
  7320     16E7                     __ptext28:	
  7321 ;; *************** function __Umul8_16 *****************
  7322 ;; Defined at:
  7323 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul8_16.c"
  7324 ;; Parameters:    Size  Location     Type
  7325 ;;  multiplier      1    wreg     unsigned char 
  7326 ;;  multiplicand    1    0[COMMON] unsigned char 
  7327 ;; Auto vars:     Size  Location     Type
  7328 ;;  multiplier      1    8[COMMON] unsigned char 
  7329 ;;  word_mpld       2    6[COMMON] unsigned short 
  7330 ;;  product         2    4[COMMON] unsigned short 
  7331 ;; Return value:  Size  Location     Type
  7332 ;;                  2    0[COMMON] unsigned int 
  7333 ;; Registers used:
  7334 ;;		wreg, status,2, status,0
  7335 ;; Tracked objects:
  7336 ;;		On entry : 0/0
  7337 ;;		On exit  : 0/0
  7338 ;;		Unchanged: 0/0
  7339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7340 ;;      Params:         2       0       0       0       0
  7341 ;;      Locals:         5       0       0       0       0
  7342 ;;      Temps:          2       0       0       0       0
  7343 ;;      Totals:         9       0       0       0       0
  7344 ;;Total ram usage:        9 bytes
  7345 ;; Hardware stack levels used: 1
  7346 ;; This function calls:
  7347 ;;		Nothing
  7348 ;; This function is called by:
  7349 ;;		___flmul
  7350 ;; This function uses a non-reentrant model
  7351 ;;
  7352                           
  7353     16E7                     __Umul8_16:	
  7354                           ;psect for function __Umul8_16
  7355                           
  7356                           
  7357                           ;incstack = 0
  7358                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  7359                           ;__Umul8_16@multiplier stored from wreg
  7360     16E7  00F8               	movwf	__Umul8_16@multiplier
  7361     16E8                     l3181:
  7362     16E8  01F4               	clrf	__Umul8_16@product
  7363     16E9  01F5               	clrf	__Umul8_16@product+1
  7364     16EA                     l3183:
  7365     16EA  0870               	movf	__Umul8_16@multiplicand,w
  7366     16EB  00F2               	movwf	??__Umul8_16
  7367     16EC  01F3               	clrf	??__Umul8_16+1
  7368     16ED  0872               	movf	??__Umul8_16,w
  7369     16EE  00F6               	movwf	__Umul8_16@word_mpld
  7370     16EF  0873               	movf	??__Umul8_16+1,w
  7371     16F0  00F7               	movwf	__Umul8_16@word_mpld+1
  7372     16F1                     l3185:
  7373     16F1  1C78               	btfss	__Umul8_16@multiplier,0
  7374     16F2  2EF4               	goto	u3841
  7375     16F3  2EF5               	goto	u3840
  7376     16F4                     u3841:
  7377     16F4  2EFB               	goto	l1040
  7378     16F5                     u3840:
  7379     16F5                     l3187:
  7380     16F5  0876               	movf	__Umul8_16@word_mpld,w
  7381     16F6  07F4               	addwf	__Umul8_16@product,f
  7382     16F7  1803               	skipnc
  7383     16F8  0AF5               	incf	__Umul8_16@product+1,f
  7384     16F9  0877               	movf	__Umul8_16@word_mpld+1,w
  7385     16FA  07F5               	addwf	__Umul8_16@product+1,f
  7386     16FB                     l1040:
  7387     16FB  3001               	movlw	1
  7388     16FC                     u3855:
  7389     16FC  1003               	clrc
  7390     16FD  0DF6               	rlf	__Umul8_16@word_mpld,f
  7391     16FE  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  7392     16FF  3EFF               	addlw	-1
  7393     1700  1D03               	skipz
  7394     1701  2EFC               	goto	u3855
  7395     1702  1003               	clrc
  7396     1703  0CF8               	rrf	__Umul8_16@multiplier,f
  7397     1704                     l3189:
  7398     1704  0878               	movf	__Umul8_16@multiplier,w
  7399     1705  1D03               	btfss	3,2
  7400     1706  2F08               	goto	u3861
  7401     1707  2F09               	goto	u3860
  7402     1708                     u3861:
  7403     1708  2EF1               	goto	l3185
  7404     1709                     u3860:
  7405     1709                     l3191:
  7406     1709  0875               	movf	__Umul8_16@product+1,w
  7407     170A  00F1               	movwf	?__Umul8_16+1
  7408     170B  0874               	movf	__Umul8_16@product,w
  7409     170C  00F0               	movwf	?__Umul8_16
  7410     170D                     l1042:
  7411     170D  0008               	return
  7412     170E                     __end_of__Umul8_16:
  7413                           
  7414                           	psect	text29
  7415     02C0                     __ptext29:	
  7416 ;; *************** function ___fldiv *****************
  7417 ;; Defined at:
  7418 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcdiv.c"
  7419 ;; Parameters:    Size  Location     Type
  7420 ;;  a               4   26[BANK0 ] unsigned int 
  7421 ;;  b               4   30[BANK0 ] unsigned int 
  7422 ;; Auto vars:     Size  Location     Type
  7423 ;;  grs             4   46[BANK0 ] unsigned long 
  7424 ;;  rem             4   39[BANK0 ] unsigned long 
  7425 ;;  new_exp         2   44[BANK0 ] short 
  7426 ;;  aexp            1   51[BANK0 ] unsigned char 
  7427 ;;  bexp            1   50[BANK0 ] unsigned char 
  7428 ;;  sign            1   43[BANK0 ] unsigned char 
  7429 ;; Return value:  Size  Location     Type
  7430 ;;                  4   26[BANK0 ] unsigned char 
  7431 ;; Registers used:
  7432 ;;		wreg, status,2, status,0, btemp+1
  7433 ;; Tracked objects:
  7434 ;;		On entry : 0/0
  7435 ;;		On exit  : 0/0
  7436 ;;		Unchanged: 0/0
  7437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7438 ;;      Params:         0       8       0       0       0
  7439 ;;      Locals:         0      13       0       0       0
  7440 ;;      Temps:          0       5       0       0       0
  7441 ;;      Totals:         0      26       0       0       0
  7442 ;;Total ram usage:       26 bytes
  7443 ;; Hardware stack levels used: 1
  7444 ;; This function calls:
  7445 ;;		Nothing
  7446 ;; This function is called by:
  7447 ;;		_main
  7448 ;; This function uses a non-reentrant model
  7449 ;;
  7450                           
  7451     02C0                     ___fldiv:	
  7452                           ;psect for function ___fldiv
  7453                           
  7454     02C0                     l3399:	
  7455                           ;incstack = 0
  7456                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  7457                           
  7458     02C0  1283               	bcf	3,5	;RP0=0, select bank0
  7459     02C1  1303               	bcf	3,6	;RP1=0, select bank0
  7460     02C2  0841               	movf	___fldiv@b+3,w
  7461     02C3  3980               	andlw	128
  7462     02C4  00CB               	movwf	___fldiv@sign
  7463     02C5                     l3401:
  7464     02C5  0841               	movf	___fldiv@b+3,w
  7465     02C6  00C2               	movwf	??___fldiv
  7466     02C7  0742               	addwf	??___fldiv,w
  7467     02C8  00D2               	movwf	___fldiv@bexp
  7468     02C9                     l3403:
  7469     02C9  1FC0               	btfss	___fldiv@b+2,7
  7470     02CA  2ACC               	goto	u4111
  7471     02CB  2ACD               	goto	u4110
  7472     02CC                     u4111:
  7473     02CC  2ACE               	goto	l3407
  7474     02CD                     u4110:
  7475     02CD                     l3405:
  7476     02CD  1452               	bsf	___fldiv@bexp,0
  7477     02CE                     l3407:
  7478     02CE  0852               	movf	___fldiv@bexp,w
  7479     02CF  1903               	btfsc	3,2
  7480     02D0  2AD2               	goto	u4121
  7481     02D1  2AD3               	goto	u4120
  7482     02D2                     u4121:
  7483     02D2  2AE3               	goto	l3417
  7484     02D3                     u4120:
  7485     02D3                     l3409:
  7486     02D3  0A52               	incf	___fldiv@bexp,w
  7487     02D4  1D03               	btfss	3,2
  7488     02D5  2AD7               	goto	u4131
  7489     02D6  2AD8               	goto	u4130
  7490     02D7                     u4131:
  7491     02D7  2AE0               	goto	l3413
  7492     02D8                     u4130:
  7493     02D8                     l3411:
  7494     02D8  3000               	movlw	0
  7495     02D9  00C1               	movwf	___fldiv@b+3
  7496     02DA  3000               	movlw	0
  7497     02DB  00C0               	movwf	___fldiv@b+2
  7498     02DC  3000               	movlw	0
  7499     02DD  00BF               	movwf	___fldiv@b+1
  7500     02DE  3000               	movlw	0
  7501     02DF  00BE               	movwf	___fldiv@b
  7502     02E0                     l3413:
  7503     02E0  17C0               	bsf	___fldiv@b+2,7
  7504     02E1                     l3415:
  7505     02E1  01C1               	clrf	___fldiv@b+3
  7506     02E2  2AEB               	goto	l3419
  7507     02E3                     l3417:
  7508     02E3  3000               	movlw	0
  7509     02E4  00C1               	movwf	___fldiv@b+3
  7510     02E5  3000               	movlw	0
  7511     02E6  00C0               	movwf	___fldiv@b+2
  7512     02E7  3000               	movlw	0
  7513     02E8  00BF               	movwf	___fldiv@b+1
  7514     02E9  3000               	movlw	0
  7515     02EA  00BE               	movwf	___fldiv@b
  7516     02EB                     l3419:
  7517     02EB  083D               	movf	___fldiv@a+3,w
  7518     02EC  3980               	andlw	128
  7519     02ED  00FF               	movwf	btemp+1
  7520     02EE  087F               	movf	btemp+1,w
  7521     02EF  06CB               	xorwf	___fldiv@sign,f
  7522     02F0                     l3421:
  7523     02F0  083D               	movf	___fldiv@a+3,w
  7524     02F1  00C2               	movwf	??___fldiv
  7525     02F2  0742               	addwf	??___fldiv,w
  7526     02F3  00D3               	movwf	___fldiv@aexp
  7527     02F4                     l3423:
  7528     02F4  1FBC               	btfss	___fldiv@a+2,7
  7529     02F5  2AF7               	goto	u4141
  7530     02F6  2AF8               	goto	u4140
  7531     02F7                     u4141:
  7532     02F7  2AF9               	goto	l3427
  7533     02F8                     u4140:
  7534     02F8                     l3425:
  7535     02F8  1453               	bsf	___fldiv@aexp,0
  7536     02F9                     l3427:
  7537     02F9  0853               	movf	___fldiv@aexp,w
  7538     02FA  1903               	btfsc	3,2
  7539     02FB  2AFD               	goto	u4151
  7540     02FC  2AFE               	goto	u4150
  7541     02FD                     u4151:
  7542     02FD  2B0E               	goto	l3437
  7543     02FE                     u4150:
  7544     02FE                     l3429:
  7545     02FE  0A53               	incf	___fldiv@aexp,w
  7546     02FF  1D03               	btfss	3,2
  7547     0300  2B02               	goto	u4161
  7548     0301  2B03               	goto	u4160
  7549     0302                     u4161:
  7550     0302  2B0B               	goto	l3433
  7551     0303                     u4160:
  7552     0303                     l3431:
  7553     0303  3000               	movlw	0
  7554     0304  00BD               	movwf	___fldiv@a+3
  7555     0305  3000               	movlw	0
  7556     0306  00BC               	movwf	___fldiv@a+2
  7557     0307  3000               	movlw	0
  7558     0308  00BB               	movwf	___fldiv@a+1
  7559     0309  3000               	movlw	0
  7560     030A  00BA               	movwf	___fldiv@a
  7561     030B                     l3433:
  7562     030B  17BC               	bsf	___fldiv@a+2,7
  7563     030C                     l3435:
  7564     030C  01BD               	clrf	___fldiv@a+3
  7565     030D  2B16               	goto	l981
  7566     030E                     l3437:
  7567     030E  3000               	movlw	0
  7568     030F  00BD               	movwf	___fldiv@a+3
  7569     0310  3000               	movlw	0
  7570     0311  00BC               	movwf	___fldiv@a+2
  7571     0312  3000               	movlw	0
  7572     0313  00BB               	movwf	___fldiv@a+1
  7573     0314  3000               	movlw	0
  7574     0315  00BA               	movwf	___fldiv@a
  7575     0316                     l981:
  7576     0316  083D               	movf	___fldiv@a+3,w
  7577     0317  043C               	iorwf	___fldiv@a+2,w
  7578     0318  043B               	iorwf	___fldiv@a+1,w
  7579     0319  043A               	iorwf	___fldiv@a,w
  7580     031A  1D03               	skipz
  7581     031B  2B1D               	goto	u4171
  7582     031C  2B1E               	goto	u4170
  7583     031D                     u4171:
  7584     031D  2B37               	goto	l3447
  7585     031E                     u4170:
  7586     031E                     l3439:
  7587     031E  3000               	movlw	0
  7588     031F  00C1               	movwf	___fldiv@b+3
  7589     0320  3000               	movlw	0
  7590     0321  00C0               	movwf	___fldiv@b+2
  7591     0322  3000               	movlw	0
  7592     0323  00BF               	movwf	___fldiv@b+1
  7593     0324  3000               	movlw	0
  7594     0325  00BE               	movwf	___fldiv@b
  7595     0326  3080               	movlw	128
  7596     0327  04C0               	iorwf	___fldiv@b+2,f
  7597     0328  307F               	movlw	127
  7598     0329  04C1               	iorwf	___fldiv@b+3,f
  7599     032A                     l3441:
  7600     032A  084B               	movf	___fldiv@sign,w
  7601     032B  00FF               	movwf	btemp+1
  7602     032C  087F               	movf	btemp+1,w
  7603     032D  04C1               	iorwf	___fldiv@b+3,f
  7604     032E                     l3443:
  7605     032E  0841               	movf	___fldiv@b+3,w
  7606     032F  00BD               	movwf	?___fldiv+3
  7607     0330  0840               	movf	___fldiv@b+2,w
  7608     0331  00BC               	movwf	?___fldiv+2
  7609     0332  083F               	movf	___fldiv@b+1,w
  7610     0333  00BB               	movwf	?___fldiv+1
  7611     0334  083E               	movf	___fldiv@b,w
  7612     0335  00BA               	movwf	?___fldiv
  7613     0336  2C8E               	goto	l983
  7614     0337                     l3447:
  7615     0337  0852               	movf	___fldiv@bexp,w
  7616     0338  1D03               	btfss	3,2
  7617     0339  2B3B               	goto	u4181
  7618     033A  2B3C               	goto	u4180
  7619     033B                     u4181:
  7620     033B  2B45               	goto	l3453
  7621     033C                     u4180:
  7622     033C                     l3449:
  7623     033C  3000               	movlw	0
  7624     033D  00BD               	movwf	?___fldiv+3
  7625     033E  3000               	movlw	0
  7626     033F  00BC               	movwf	?___fldiv+2
  7627     0340  3000               	movlw	0
  7628     0341  00BB               	movwf	?___fldiv+1
  7629     0342  3000               	movlw	0
  7630     0343  00BA               	movwf	?___fldiv
  7631     0344  2C8E               	goto	l983
  7632     0345                     l3453:
  7633     0345  0852               	movf	___fldiv@bexp,w
  7634     0346  00C2               	movwf	??___fldiv
  7635     0347  01C3               	clrf	??___fldiv+1
  7636     0348  0843               	movf	??___fldiv+1,w
  7637     0349  00C5               	movwf	??___fldiv+3
  7638     034A  0853               	movf	___fldiv@aexp,w
  7639     034B  0242               	subwf	??___fldiv,w
  7640     034C  00C4               	movwf	??___fldiv+2
  7641     034D  1C03               	skipc
  7642     034E  03C5               	decf	??___fldiv+3,f
  7643     034F  0844               	movf	??___fldiv+2,w
  7644     0350  3E7F               	addlw	127
  7645     0351  00CC               	movwf	___fldiv@new_exp
  7646     0352  0845               	movf	??___fldiv+3,w
  7647     0353  1803               	skipnc
  7648     0354  3E01               	addlw	1
  7649     0355  3E00               	addlw	0
  7650     0356  00CD               	movwf	___fldiv@new_exp+1
  7651     0357                     l3455:
  7652     0357  0841               	movf	___fldiv@b+3,w
  7653     0358  00CA               	movwf	___fldiv@rem+3
  7654     0359  0840               	movf	___fldiv@b+2,w
  7655     035A  00C9               	movwf	___fldiv@rem+2
  7656     035B  083F               	movf	___fldiv@b+1,w
  7657     035C  00C8               	movwf	___fldiv@rem+1
  7658     035D  083E               	movf	___fldiv@b,w
  7659     035E  00C7               	movwf	___fldiv@rem
  7660     035F                     l3457:
  7661     035F  3000               	movlw	0
  7662     0360  00C1               	movwf	___fldiv@b+3
  7663     0361  3000               	movlw	0
  7664     0362  00C0               	movwf	___fldiv@b+2
  7665     0363  3000               	movlw	0
  7666     0364  00BF               	movwf	___fldiv@b+1
  7667     0365  3000               	movlw	0
  7668     0366  00BE               	movwf	___fldiv@b
  7669     0367                     l3459:
  7670     0367  3000               	movlw	0
  7671     0368  00D1               	movwf	___fldiv@grs+3
  7672     0369  3000               	movlw	0
  7673     036A  00D0               	movwf	___fldiv@grs+2
  7674     036B  3000               	movlw	0
  7675     036C  00CF               	movwf	___fldiv@grs+1
  7676     036D  3000               	movlw	0
  7677     036E  00CE               	movwf	___fldiv@grs
  7678     036F                     l3461:
  7679     036F  01D3               	clrf	___fldiv@aexp
  7680     0370  2BBB               	goto	l3481
  7681     0371                     l3463:
  7682     0371  0853               	movf	___fldiv@aexp,w
  7683     0372  1903               	btfsc	3,2
  7684     0373  2B75               	goto	u4191
  7685     0374  2B76               	goto	u4190
  7686     0375                     u4191:
  7687     0375  2B96               	goto	l3473
  7688     0376                     u4190:
  7689     0376                     l3465:
  7690     0376  3001               	movlw	1
  7691     0377  00C2               	movwf	??___fldiv
  7692     0378                     u4205:
  7693     0378  1003               	clrc
  7694     0379  0DC7               	rlf	___fldiv@rem,f
  7695     037A  0DC8               	rlf	___fldiv@rem+1,f
  7696     037B  0DC9               	rlf	___fldiv@rem+2,f
  7697     037C  0DCA               	rlf	___fldiv@rem+3,f
  7698     037D  0BC2               	decfsz	??___fldiv,f
  7699     037E  2B78               	goto	u4205
  7700     037F  3001               	movlw	1
  7701     0380  00C2               	movwf	??___fldiv
  7702     0381                     u4215:
  7703     0381  1003               	clrc
  7704     0382  0DBE               	rlf	___fldiv@b,f
  7705     0383  0DBF               	rlf	___fldiv@b+1,f
  7706     0384  0DC0               	rlf	___fldiv@b+2,f
  7707     0385  0DC1               	rlf	___fldiv@b+3,f
  7708     0386  0BC2               	decfsz	??___fldiv,f
  7709     0387  2B81               	goto	u4215
  7710     0388                     l3467:
  7711     0388  1FD1               	btfss	___fldiv@grs+3,7
  7712     0389  2B8B               	goto	u4221
  7713     038A  2B8C               	goto	u4220
  7714     038B                     u4221:
  7715     038B  2B8D               	goto	l3471
  7716     038C                     u4220:
  7717     038C                     l3469:
  7718     038C  143E               	bsf	___fldiv@b,0
  7719     038D                     l3471:
  7720     038D  3001               	movlw	1
  7721     038E  00C2               	movwf	??___fldiv
  7722     038F                     u4235:
  7723     038F  1003               	clrc
  7724     0390  0DCE               	rlf	___fldiv@grs,f
  7725     0391  0DCF               	rlf	___fldiv@grs+1,f
  7726     0392  0DD0               	rlf	___fldiv@grs+2,f
  7727     0393  0DD1               	rlf	___fldiv@grs+3,f
  7728     0394  0BC2               	decfsz	??___fldiv,f
  7729     0395  2B8F               	goto	u4235
  7730     0396                     l3473:
  7731     0396  083D               	movf	___fldiv@a+3,w
  7732     0397  024A               	subwf	___fldiv@rem+3,w
  7733     0398  1D03               	skipz
  7734     0399  2BA4               	goto	u4245
  7735     039A  083C               	movf	___fldiv@a+2,w
  7736     039B  0249               	subwf	___fldiv@rem+2,w
  7737     039C  1D03               	skipz
  7738     039D  2BA4               	goto	u4245
  7739     039E  083B               	movf	___fldiv@a+1,w
  7740     039F  0248               	subwf	___fldiv@rem+1,w
  7741     03A0  1D03               	skipz
  7742     03A1  2BA4               	goto	u4245
  7743     03A2  083A               	movf	___fldiv@a,w
  7744     03A3  0247               	subwf	___fldiv@rem,w
  7745     03A4                     u4245:
  7746     03A4  1C03               	skipc
  7747     03A5  2BA7               	goto	u4241
  7748     03A6  2BA8               	goto	u4240
  7749     03A7                     u4241:
  7750     03A7  2BB7               	goto	l3479
  7751     03A8                     u4240:
  7752     03A8                     l3475:
  7753     03A8  1751               	bsf	___fldiv@grs+3,6
  7754     03A9                     l3477:
  7755     03A9  083A               	movf	___fldiv@a,w
  7756     03AA  02C7               	subwf	___fldiv@rem,f
  7757     03AB  083B               	movf	___fldiv@a+1,w
  7758     03AC  1C03               	skipc
  7759     03AD  0F3B               	incfsz	___fldiv@a+1,w
  7760     03AE  02C8               	subwf	___fldiv@rem+1,f
  7761     03AF  083C               	movf	___fldiv@a+2,w
  7762     03B0  1C03               	skipc
  7763     03B1  0F3C               	incfsz	___fldiv@a+2,w
  7764     03B2  02C9               	subwf	___fldiv@rem+2,f
  7765     03B3  083D               	movf	___fldiv@a+3,w
  7766     03B4  1C03               	skipc
  7767     03B5  0F3D               	incfsz	___fldiv@a+3,w
  7768     03B6  02CA               	subwf	___fldiv@rem+3,f
  7769     03B7                     l3479:
  7770     03B7  3001               	movlw	1
  7771     03B8  00FF               	movwf	btemp+1
  7772     03B9  087F               	movf	btemp+1,w
  7773     03BA  07D3               	addwf	___fldiv@aexp,f
  7774     03BB                     l3481:
  7775     03BB  301A               	movlw	26
  7776     03BC  0253               	subwf	___fldiv@aexp,w
  7777     03BD  1C03               	skipc
  7778     03BE  2BC0               	goto	u4251
  7779     03BF  2BC1               	goto	u4250
  7780     03C0                     u4251:
  7781     03C0  2B71               	goto	l3463
  7782     03C1                     u4250:
  7783     03C1                     l3483:
  7784     03C1  084A               	movf	___fldiv@rem+3,w
  7785     03C2  0449               	iorwf	___fldiv@rem+2,w
  7786     03C3  0448               	iorwf	___fldiv@rem+1,w
  7787     03C4  0447               	iorwf	___fldiv@rem,w
  7788     03C5  1903               	skipnz
  7789     03C6  2BC8               	goto	u4261
  7790     03C7  2BC9               	goto	u4260
  7791     03C8                     u4261:
  7792     03C8  2BE8               	goto	l3497
  7793     03C9                     u4260:
  7794     03C9                     l3485:
  7795     03C9  144E               	bsf	___fldiv@grs,0
  7796     03CA  2BE8               	goto	l3497
  7797     03CB                     l3487:
  7798     03CB  3001               	movlw	1
  7799     03CC  00C2               	movwf	??___fldiv
  7800     03CD                     u4275:
  7801     03CD  1003               	clrc
  7802     03CE  0DBE               	rlf	___fldiv@b,f
  7803     03CF  0DBF               	rlf	___fldiv@b+1,f
  7804     03D0  0DC0               	rlf	___fldiv@b+2,f
  7805     03D1  0DC1               	rlf	___fldiv@b+3,f
  7806     03D2  0BC2               	decfsz	??___fldiv,f
  7807     03D3  2BCD               	goto	u4275
  7808     03D4                     l3489:
  7809     03D4  1FD1               	btfss	___fldiv@grs+3,7
  7810     03D5  2BD7               	goto	u4281
  7811     03D6  2BD8               	goto	u4280
  7812     03D7                     u4281:
  7813     03D7  2BD9               	goto	l3493
  7814     03D8                     u4280:
  7815     03D8                     l3491:
  7816     03D8  143E               	bsf	___fldiv@b,0
  7817     03D9                     l3493:
  7818     03D9  3001               	movlw	1
  7819     03DA  00C2               	movwf	??___fldiv
  7820     03DB                     u4295:
  7821     03DB  1003               	clrc
  7822     03DC  0DCE               	rlf	___fldiv@grs,f
  7823     03DD  0DCF               	rlf	___fldiv@grs+1,f
  7824     03DE  0DD0               	rlf	___fldiv@grs+2,f
  7825     03DF  0DD1               	rlf	___fldiv@grs+3,f
  7826     03E0  0BC2               	decfsz	??___fldiv,f
  7827     03E1  2BDB               	goto	u4295
  7828     03E2                     l3495:
  7829     03E2  30FF               	movlw	255
  7830     03E3  07CC               	addwf	___fldiv@new_exp,f
  7831     03E4  1803               	skipnc
  7832     03E5  0ACD               	incf	___fldiv@new_exp+1,f
  7833     03E6  30FF               	movlw	255
  7834     03E7  07CD               	addwf	___fldiv@new_exp+1,f
  7835     03E8                     l3497:
  7836     03E8  1FC0               	btfss	___fldiv@b+2,7
  7837     03E9  2BEB               	goto	u4301
  7838     03EA  2BEC               	goto	u4300
  7839     03EB                     u4301:
  7840     03EB  2BCB               	goto	l3487
  7841     03EC                     u4300:
  7842     03EC                     l3499:
  7843     03EC  01D3               	clrf	___fldiv@aexp
  7844     03ED                     l3501:
  7845     03ED  1FD1               	btfss	___fldiv@grs+3,7
  7846     03EE  2BF0               	goto	u4311
  7847     03EF  2BF1               	goto	u4310
  7848     03F0                     u4311:
  7849     03F0  2C0D               	goto	l3509
  7850     03F1                     u4310:
  7851     03F1                     l3503:
  7852     03F1  30FF               	movlw	255
  7853     03F2  054E               	andwf	___fldiv@grs,w
  7854     03F3  00C2               	movwf	??___fldiv
  7855     03F4  30FF               	movlw	255
  7856     03F5  054F               	andwf	___fldiv@grs+1,w
  7857     03F6  00C3               	movwf	??___fldiv+1
  7858     03F7  30FF               	movlw	255
  7859     03F8  0550               	andwf	___fldiv@grs+2,w
  7860     03F9  00C4               	movwf	??___fldiv+2
  7861     03FA  307F               	movlw	127
  7862     03FB  0551               	andwf	___fldiv@grs+3,w
  7863     03FC  00C5               	movwf	??___fldiv+3
  7864     03FD  0845               	movf	??___fldiv+3,w
  7865     03FE  0444               	iorwf	??___fldiv+2,w
  7866     03FF  0443               	iorwf	??___fldiv+1,w
  7867     0400  0442               	iorwf	??___fldiv,w
  7868     0401  1903               	skipnz
  7869     0402  2C04               	goto	u4321
  7870     0403  2C05               	goto	u4320
  7871     0404                     u4321:
  7872     0404  2C08               	goto	l997
  7873     0405                     u4320:
  7874     0405                     l3505:
  7875     0405  01D3               	clrf	___fldiv@aexp
  7876     0406  0AD3               	incf	___fldiv@aexp,f
  7877     0407  2C0D               	goto	l3509
  7878     0408                     l997:
  7879     0408  1C3E               	btfss	___fldiv@b,0
  7880     0409  2C0B               	goto	u4331
  7881     040A  2C0C               	goto	u4330
  7882     040B                     u4331:
  7883     040B  2C0D               	goto	l3509
  7884     040C                     u4330:
  7885     040C  2C05               	goto	l3505
  7886     040D                     l3509:
  7887     040D  0853               	movf	___fldiv@aexp,w
  7888     040E  1903               	btfsc	3,2
  7889     040F  2C11               	goto	u4341
  7890     0410  2C12               	goto	u4340
  7891     0411                     u4341:
  7892     0411  2C43               	goto	l3519
  7893     0412                     u4340:
  7894     0412                     l3511:
  7895     0412  3001               	movlw	1
  7896     0413  07BE               	addwf	___fldiv@b,f
  7897     0414  3000               	movlw	0
  7898     0415  1803               	skipnc
  7899     0416  3001               	movlw	1
  7900     0417  07BF               	addwf	___fldiv@b+1,f
  7901     0418  3000               	movlw	0
  7902     0419  1803               	skipnc
  7903     041A  3001               	movlw	1
  7904     041B  07C0               	addwf	___fldiv@b+2,f
  7905     041C  3000               	movlw	0
  7906     041D  1803               	skipnc
  7907     041E  3001               	movlw	1
  7908     041F  07C1               	addwf	___fldiv@b+3,f
  7909     0420                     l3513:
  7910     0420  1C41               	btfss	___fldiv@b+3,0
  7911     0421  2C23               	goto	u4351
  7912     0422  2C24               	goto	u4350
  7913     0423                     u4351:
  7914     0423  2C43               	goto	l3519
  7915     0424                     u4350:
  7916     0424                     l3515:
  7917     0424  083E               	movf	___fldiv@b,w
  7918     0425  00C2               	movwf	??___fldiv
  7919     0426  083F               	movf	___fldiv@b+1,w
  7920     0427  00C3               	movwf	??___fldiv+1
  7921     0428  0840               	movf	___fldiv@b+2,w
  7922     0429  00C4               	movwf	??___fldiv+2
  7923     042A  0841               	movf	___fldiv@b+3,w
  7924     042B  00C5               	movwf	??___fldiv+3
  7925     042C  3001               	movlw	1
  7926     042D  00C6               	movwf	??___fldiv+4
  7927     042E                     u4365:
  7928     042E  0D45               	rlf	??___fldiv+3,w
  7929     042F  0CC5               	rrf	??___fldiv+3,f
  7930     0430  0CC4               	rrf	??___fldiv+2,f
  7931     0431  0CC3               	rrf	??___fldiv+1,f
  7932     0432  0CC2               	rrf	??___fldiv,f
  7933     0433                     u4360:
  7934     0433  0BC6               	decfsz	??___fldiv+4,f
  7935     0434  2C2E               	goto	u4365
  7936     0435  0845               	movf	??___fldiv+3,w
  7937     0436  00C1               	movwf	___fldiv@b+3
  7938     0437  0844               	movf	??___fldiv+2,w
  7939     0438  00C0               	movwf	___fldiv@b+2
  7940     0439  0843               	movf	??___fldiv+1,w
  7941     043A  00BF               	movwf	___fldiv@b+1
  7942     043B  0842               	movf	??___fldiv,w
  7943     043C  00BE               	movwf	___fldiv@b
  7944     043D                     l3517:
  7945     043D  3001               	movlw	1
  7946     043E  07CC               	addwf	___fldiv@new_exp,f
  7947     043F  1803               	skipnc
  7948     0440  0ACD               	incf	___fldiv@new_exp+1,f
  7949     0441  3000               	movlw	0
  7950     0442  07CD               	addwf	___fldiv@new_exp+1,f
  7951     0443                     l3519:
  7952     0443  084D               	movf	___fldiv@new_exp+1,w
  7953     0444  3A80               	xorlw	128
  7954     0445  00FF               	movwf	btemp+1
  7955     0446  3080               	movlw	128
  7956     0447  027F               	subwf	btemp+1,w
  7957     0448  1D03               	skipz
  7958     0449  2C4C               	goto	u4375
  7959     044A  30FF               	movlw	255
  7960     044B  024C               	subwf	___fldiv@new_exp,w
  7961     044C                     u4375:
  7962     044C  1C03               	skipc
  7963     044D  2C4F               	goto	u4371
  7964     044E  2C50               	goto	u4370
  7965     044F                     u4371:
  7966     044F  2C5E               	goto	l3523
  7967     0450                     u4370:
  7968     0450                     l3521:
  7969     0450  30FF               	movlw	255
  7970     0451  1283               	bcf	3,5	;RP0=0, select bank0
  7971     0452  1303               	bcf	3,6	;RP1=0, select bank0
  7972     0453  00CC               	movwf	___fldiv@new_exp
  7973     0454  3000               	movlw	0
  7974     0455  00CD               	movwf	___fldiv@new_exp+1
  7975     0456  3000               	movlw	0
  7976     0457  00C1               	movwf	___fldiv@b+3
  7977     0458  3000               	movlw	0
  7978     0459  00C0               	movwf	___fldiv@b+2
  7979     045A  3000               	movlw	0
  7980     045B  00BF               	movwf	___fldiv@b+1
  7981     045C  3000               	movlw	0
  7982     045D  00BE               	movwf	___fldiv@b
  7983     045E                     l3523:
  7984     045E  1283               	bcf	3,5	;RP0=0, select bank0
  7985     045F  1303               	bcf	3,6	;RP1=0, select bank0
  7986     0460  084D               	movf	___fldiv@new_exp+1,w
  7987     0461  3A80               	xorlw	128
  7988     0462  00FF               	movwf	btemp+1
  7989     0463  3080               	movlw	128
  7990     0464  027F               	subwf	btemp+1,w
  7991     0465  1D03               	skipz
  7992     0466  2C69               	goto	u4385
  7993     0467  3001               	movlw	1
  7994     0468  024C               	subwf	___fldiv@new_exp,w
  7995     0469                     u4385:
  7996     0469  1803               	skipnc
  7997     046A  2C6C               	goto	u4381
  7998     046B  2C6D               	goto	u4380
  7999     046C                     u4381:
  8000     046C  2C7A               	goto	l1003
  8001     046D                     u4380:
  8002     046D                     l3525:
  8003     046D  1283               	bcf	3,5	;RP0=0, select bank0
  8004     046E  1303               	bcf	3,6	;RP1=0, select bank0
  8005     046F  01CC               	clrf	___fldiv@new_exp
  8006     0470  01CD               	clrf	___fldiv@new_exp+1
  8007     0471                     l3527:
  8008     0471  3000               	movlw	0
  8009     0472  00C1               	movwf	___fldiv@b+3
  8010     0473  3000               	movlw	0
  8011     0474  00C0               	movwf	___fldiv@b+2
  8012     0475  3000               	movlw	0
  8013     0476  00BF               	movwf	___fldiv@b+1
  8014     0477  3000               	movlw	0
  8015     0478  00BE               	movwf	___fldiv@b
  8016     0479                     l3529:
  8017     0479  01CB               	clrf	___fldiv@sign
  8018     047A                     l1003:
  8019     047A  1283               	bcf	3,5	;RP0=0, select bank0
  8020     047B  1303               	bcf	3,6	;RP1=0, select bank0
  8021     047C  084C               	movf	___fldiv@new_exp,w
  8022     047D  00D2               	movwf	___fldiv@bexp
  8023     047E                     l3531:
  8024     047E  1C52               	btfss	___fldiv@bexp,0
  8025     047F  2C81               	goto	u4391
  8026     0480  2C82               	goto	u4390
  8027     0481                     u4391:
  8028     0481  2C84               	goto	l3535
  8029     0482                     u4390:
  8030     0482                     l3533:
  8031     0482  17C0               	bsf	___fldiv@b+2,7
  8032     0483  2C88               	goto	l3537
  8033     0484                     l3535:
  8034     0484  307F               	movlw	127
  8035     0485  00FF               	movwf	btemp+1
  8036     0486  087F               	movf	btemp+1,w
  8037     0487  05C0               	andwf	___fldiv@b+2,f
  8038     0488                     l3537:
  8039     0488  0852               	movf	___fldiv@bexp,w
  8040     0489  00C2               	movwf	??___fldiv
  8041     048A  1003               	clrc
  8042     048B  0C42               	rrf	??___fldiv,w
  8043     048C  00C1               	movwf	___fldiv@b+3
  8044     048D  2B2A               	goto	l3441
  8045     048E                     l983:
  8046     048E  0008               	return
  8047     048F                     __end_of___fldiv:
  8048                           
  8049                           	psect	text30
  8050     167E                     __ptext30:	
  8051 ;; *************** function _WRITE_DATA_EEPROM *****************
  8052 ;; Defined at:
  8053 ;;		line 10 in file "MCAL_LAYER/EEPROM/eeprom.c"
  8054 ;; Parameters:    Size  Location     Type
  8055 ;;  add             2    0[COMMON] unsigned short 
  8056 ;;  data            1    2[COMMON] unsigned char 
  8057 ;; Auto vars:     Size  Location     Type
  8058 ;;  status          1    3[COMMON] unsigned char 
  8059 ;; Return value:  Size  Location     Type
  8060 ;;                  1    wreg      unsigned char 
  8061 ;; Registers used:
  8062 ;;		wreg, status,2, status,0
  8063 ;; Tracked objects:
  8064 ;;		On entry : 0/0
  8065 ;;		On exit  : 0/0
  8066 ;;		Unchanged: 0/0
  8067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8068 ;;      Params:         3       0       0       0       0
  8069 ;;      Locals:         1       0       0       0       0
  8070 ;;      Temps:          0       0       0       0       0
  8071 ;;      Totals:         4       0       0       0       0
  8072 ;;Total ram usage:        4 bytes
  8073 ;; Hardware stack levels used: 1
  8074 ;; This function calls:
  8075 ;;		Nothing
  8076 ;; This function is called by:
  8077 ;;		_main
  8078 ;; This function uses a non-reentrant model
  8079 ;;
  8080                           
  8081     167E                     _WRITE_DATA_EEPROM:	
  8082                           ;psect for function _WRITE_DATA_EEPROM
  8083                           
  8084     167E                     l3277:	
  8085                           ;incstack = 0
  8086                           ; Regs used in _WRITE_DATA_EEPROM: [wreg+status,2+status,0]
  8087                           
  8088                           
  8089                           ;MCAL_LAYER/EEPROM/eeprom.c: 11:     uint8 status = INTCONbits.GIE;
  8090     167E  3000               	movlw	0
  8091     167F  1B8B               	btfsc	11,7	;volatile
  8092     1680  3001               	movlw	1
  8093     1681  00F3               	movwf	WRITE_DATA_EEPROM@status
  8094     1682                     l3279:
  8095                           
  8096                           ;MCAL_LAYER/EEPROM/eeprom.c: 12:     (EECON1bits.EEPGD = 0);
  8097     1682  1683               	bsf	3,5	;RP0=1, select bank3
  8098     1683  1703               	bsf	3,6	;RP1=1, select bank3
  8099     1684  138C               	bcf	12,7	;volsfr
  8100     1685                     l3281:
  8101                           
  8102                           ;MCAL_LAYER/EEPROM/eeprom.c: 13:     EEADR = (add & 0xFF);
  8103     1685  0870               	movf	WRITE_DATA_EEPROM@add,w
  8104     1686  1283               	bcf	3,5	;RP0=0, select bank2
  8105     1687  1703               	bsf	3,6	;RP1=1, select bank2
  8106     1688  008D               	movwf	13	;volatile
  8107     1689                     l3283:
  8108                           
  8109                           ;MCAL_LAYER/EEPROM/eeprom.c: 14:     EEDATA = data;
  8110     1689  0872               	movf	WRITE_DATA_EEPROM@data,w
  8111     168A  008C               	movwf	12	;volatile
  8112     168B                     l3285:
  8113                           
  8114                           ;MCAL_LAYER/EEPROM/eeprom.c: 15:     (EECON1bits.WREN = 1);
  8115     168B  1683               	bsf	3,5	;RP0=1, select bank3
  8116     168C  1703               	bsf	3,6	;RP1=1, select bank3
  8117     168D  150C               	bsf	12,2	;volsfr
  8118     168E                     l3287:
  8119                           
  8120                           ;MCAL_LAYER/EEPROM/eeprom.c: 16:     (INTCONbits.GIE = 0);
  8121     168E  138B               	bcf	11,7	;volatile
  8122     168F                     l3289:
  8123                           
  8124                           ;MCAL_LAYER/EEPROM/eeprom.c: 18:     EECON2 = 0x55;
  8125     168F  3055               	movlw	85
  8126     1690  008D               	movwf	13	;volsfr
  8127     1691                     l3291:
  8128                           
  8129                           ;MCAL_LAYER/EEPROM/eeprom.c: 19:     EECON2 = 0xAA;
  8130     1691  30AA               	movlw	170
  8131     1692  008D               	movwf	13	;volsfr
  8132     1693                     l3293:
  8133                           
  8134                           ;MCAL_LAYER/EEPROM/eeprom.c: 21:     (EECON1bits.WR = 1);
  8135     1693  148C               	bsf	12,1	;volsfr
  8136     1694                     l215:	
  8137                           ;MCAL_LAYER/EEPROM/eeprom.c: 22:     while(EECON1bits.WR);
  8138                           
  8139     1694  188C               	btfsc	12,1	;volsfr
  8140     1695  2E97               	goto	u3951
  8141     1696  2E98               	goto	u3950
  8142     1697                     u3951:
  8143     1697  2E94               	goto	l215
  8144     1698                     u3950:
  8145     1698                     l217:
  8146                           
  8147                           ;MCAL_LAYER/EEPROM/eeprom.c: 23:     (EECON1bits.WREN = 0);
  8148     1698  110C               	bcf	12,2	;volsfr
  8149     1699                     l3295:
  8150                           
  8151                           ;MCAL_LAYER/EEPROM/eeprom.c: 24:     INTCONbits.GIE = status;
  8152     1699  0C73               	rrf	WRITE_DATA_EEPROM@status,w
  8153     169A  1C03               	skipc
  8154     169B  138B               	bcf	11,7	;volatile
  8155     169C  1803               	skipnc
  8156     169D  178B               	bsf	11,7	;volatile
  8157     169E                     l218:
  8158     169E  0008               	return
  8159     169F                     __end_of_WRITE_DATA_EEPROM:
  8160                           
  8161                           	psect	text31
  8162     156B                     __ptext31:	
  8163 ;; *************** function _READ_DATA_EEPROM *****************
  8164 ;; Defined at:
  8165 ;;		line 26 in file "MCAL_LAYER/EEPROM/eeprom.c"
  8166 ;; Parameters:    Size  Location     Type
  8167 ;;  add             2    0[COMMON] unsigned short 
  8168 ;;  data            1    2[COMMON] PTR unsigned char 
  8169 ;;		 -> Max_Temp(2), 
  8170 ;; Auto vars:     Size  Location     Type
  8171 ;;		None
  8172 ;; Return value:  Size  Location     Type
  8173 ;;                  1    wreg      unsigned char 
  8174 ;; Registers used:
  8175 ;;		wreg, fsr0l, fsr0h
  8176 ;; Tracked objects:
  8177 ;;		On entry : 0/0
  8178 ;;		On exit  : 0/0
  8179 ;;		Unchanged: 0/0
  8180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8181 ;;      Params:         3       0       0       0       0
  8182 ;;      Locals:         0       0       0       0       0
  8183 ;;      Temps:          0       0       0       0       0
  8184 ;;      Totals:         3       0       0       0       0
  8185 ;;Total ram usage:        3 bytes
  8186 ;; Hardware stack levels used: 1
  8187 ;; This function calls:
  8188 ;;		Nothing
  8189 ;; This function is called by:
  8190 ;;		_main
  8191 ;; This function uses a non-reentrant model
  8192 ;;
  8193                           
  8194     156B                     _READ_DATA_EEPROM:	
  8195                           ;psect for function _READ_DATA_EEPROM
  8196                           
  8197     156B                     l3297:	
  8198                           ;incstack = 0
  8199                           ; Regs used in _READ_DATA_EEPROM: [wregfsr0]
  8200                           
  8201                           
  8202                           ;MCAL_LAYER/EEPROM/eeprom.c: 27:     EEADR = (add & 0xFF);
  8203     156B  0870               	movf	READ_DATA_EEPROM@add,w
  8204     156C  1283               	bcf	3,5	;RP0=0, select bank2
  8205     156D  1703               	bsf	3,6	;RP1=1, select bank2
  8206     156E  008D               	movwf	13	;volatile
  8207     156F                     l3299:
  8208                           
  8209                           ;MCAL_LAYER/EEPROM/eeprom.c: 28:     (EECON1bits.EEPGD = 0);
  8210     156F  1683               	bsf	3,5	;RP0=1, select bank3
  8211     1570  1703               	bsf	3,6	;RP1=1, select bank3
  8212     1571  138C               	bcf	12,7	;volsfr
  8213     1572                     l3301:
  8214                           
  8215                           ;MCAL_LAYER/EEPROM/eeprom.c: 29:     (EECON1bits.RD = 1);
  8216     1572  140C               	bsf	12,0	;volsfr
  8217     1573                     l3303:
  8218                           
  8219                           ;MCAL_LAYER/EEPROM/eeprom.c: 30:     __nop();
  8220     1573  0000               	nop
  8221     1574                     l3305:
  8222                           
  8223                           ;MCAL_LAYER/EEPROM/eeprom.c: 31:     __nop();
  8224     1574  0000               	nop
  8225     1575                     l3307:
  8226                           
  8227                           ;MCAL_LAYER/EEPROM/eeprom.c: 32:     *data = EEDATA;
  8228     1575  0872               	movf	READ_DATA_EEPROM@data,w
  8229     1576  0084               	movwf	4
  8230     1577  1283               	bcf	3,5	;RP0=0, select bank2
  8231     1578  1703               	bsf	3,6	;RP1=1, select bank2
  8232     1579  080C               	movf	12,w	;volatile
  8233     157A  1383               	bcf	3,7	;select IRP bank0
  8234     157B  0080               	movwf	0
  8235     157C                     l221:
  8236     157C  0008               	return
  8237     157D                     __end_of_READ_DATA_EEPROM:
  8238                           
  8239                           	psect	text32
  8240     0900                     __ptext32:	
  8241 ;; *************** function _Convert_uint16_to_string *****************
  8242 ;; Defined at:
  8243 ;;		line 116 in file "ECU_LAYER/LCD/ecu_lcd.c"
  8244 ;; Parameters:    Size  Location     Type
  8245 ;;  data            2   29[BANK0 ] unsigned short 
  8246 ;;  str             1   31[BANK0 ] PTR unsigned char 
  8247 ;;		 -> lcd_show_max(6), lcd_show(6), 
  8248 ;; Auto vars:     Size  Location     Type
  8249 ;;  temp            6   33[BANK0 ] unsigned char [6]
  8250 ;;  counter         1   39[BANK0 ] unsigned char 
  8251 ;; Return value:  Size  Location     Type
  8252 ;;                  1    wreg      void 
  8253 ;; Registers used:
  8254 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8255 ;; Tracked objects:
  8256 ;;		On entry : 0/0
  8257 ;;		On exit  : 0/0
  8258 ;;		Unchanged: 0/0
  8259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8260 ;;      Params:         0       3       0       0       0
  8261 ;;      Locals:         0       7       0       0       0
  8262 ;;      Temps:          0       1       0       0       0
  8263 ;;      Totals:         0      11       0       0       0
  8264 ;;Total ram usage:       11 bytes
  8265 ;; Hardware stack levels used: 1
  8266 ;; Hardware stack levels required when called: 5
  8267 ;; This function calls:
  8268 ;;		_memset
  8269 ;;		_sprintf
  8270 ;; This function is called by:
  8271 ;;		_main
  8272 ;; This function uses a non-reentrant model
  8273 ;;
  8274                           
  8275     0900                     _Convert_uint16_to_string:	
  8276                           ;psect for function _Convert_uint16_to_string
  8277                           
  8278     0900                     l3217:	
  8279                           ;incstack = 0
  8280                           ; Regs used in _Convert_uint16_to_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
  8281                           
  8282                           
  8283                           ;ECU_LAYER/LCD/ecu_lcd.c: 117:     uint8 temp[6] = {0};
  8284     0900  3041               	movlw	Convert_uint16_to_string@temp& (0+255)
  8285     0901  0084               	movwf	4
  8286     0902  3006               	movlw	6
  8287     0903  00FF               	movwf	btemp+1
  8288     0904                     u3890:
  8289     0904  1383               	bcf	3,7	;select IRP bank0
  8290     0905  0180               	clrf	0
  8291     0906  0A84               	incf	4,f
  8292     0907  0BFF               	decfsz	btemp+1,f
  8293     0908  2904               	goto	u3890
  8294     0909                     l3219:
  8295                           
  8296                           ;ECU_LAYER/LCD/ecu_lcd.c: 118:     uint8 counter = 0;
  8297     0909  1283               	bcf	3,5	;RP0=0, select bank0
  8298     090A  1303               	bcf	3,6	;RP1=0, select bank0
  8299     090B  01C7               	clrf	Convert_uint16_to_string@counter
  8300     090C                     l3221:
  8301                           
  8302                           ;ECU_LAYER/LCD/ecu_lcd.c: 119:     memset(str,' ',5);
  8303     090C  3020               	movlw	32
  8304     090D  00F0               	movwf	memset@c
  8305     090E  3000               	movlw	0
  8306     090F  00F1               	movwf	memset@c+1
  8307     0910  3005               	movlw	5
  8308     0911  00F2               	movwf	memset@n
  8309     0912  3000               	movlw	0
  8310     0913  00F3               	movwf	memset@n+1
  8311     0914  083F               	movf	Convert_uint16_to_string@str,w
  8312     0915  160A  118A  2622  120A  158A  	fcall	_memset
  8313     091A                     l3223:
  8314                           
  8315                           ;ECU_LAYER/LCD/ecu_lcd.c: 120:     str[5] = '\0';
  8316     091A  1283               	bcf	3,5	;RP0=0, select bank0
  8317     091B  1303               	bcf	3,6	;RP1=0, select bank0
  8318     091C  083F               	movf	Convert_uint16_to_string@str,w
  8319     091D  3E05               	addlw	5
  8320     091E  0084               	movwf	4
  8321     091F  1383               	bcf	3,7	;select IRP bank0
  8322     0920  0180               	clrf	0
  8323     0921                     l3225:
  8324                           
  8325                           ;ECU_LAYER/LCD/ecu_lcd.c: 121:     sprintf((char *)temp,"%i",data);
  8326     0921  302B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  8327     0922  00AC               	movwf	sprintf@fmt
  8328     0923  083E               	movf	Convert_uint16_to_string@data+1,w
  8329     0924  00AE               	movwf	?_sprintf+2
  8330     0925  083D               	movf	Convert_uint16_to_string@data,w
  8331     0926  00AD               	movwf	?_sprintf+1
  8332     0927  3041               	movlw	(low (Convert_uint16_to_string@temp| 0))& (0+255)
  8333     0928  160A  118A  263E  120A  158A  	fcall	_sprintf
  8334                           
  8335                           ;ECU_LAYER/LCD/ecu_lcd.c: 122:     while(temp[counter] != '\0'){
  8336     092D  293E               	goto	l3231
  8337     092E                     l3227:
  8338                           
  8339                           ;ECU_LAYER/LCD/ecu_lcd.c: 123:         str[counter] = temp[counter];
  8340     092E  0847               	movf	Convert_uint16_to_string@counter,w
  8341     092F  3E41               	addlw	(low (Convert_uint16_to_string@temp| 0))& (0+255)
  8342     0930  0084               	movwf	4
  8343     0931  0800               	movf	0,w
  8344     0932  00FF               	movwf	btemp+1
  8345     0933  0847               	movf	Convert_uint16_to_string@counter,w
  8346     0934  073F               	addwf	Convert_uint16_to_string@str,w
  8347     0935  00C0               	movwf	??_Convert_uint16_to_string
  8348     0936  0840               	movf	??_Convert_uint16_to_string,w
  8349     0937  0084               	movwf	4
  8350     0938  087F               	movf	btemp+1,w
  8351     0939  0080               	movwf	0
  8352     093A                     l3229:
  8353                           
  8354                           ;ECU_LAYER/LCD/ecu_lcd.c: 124:         counter++;
  8355     093A  3001               	movlw	1
  8356     093B  00FF               	movwf	btemp+1
  8357     093C  087F               	movf	btemp+1,w
  8358     093D  07C7               	addwf	Convert_uint16_to_string@counter,f
  8359     093E                     l3231:
  8360                           
  8361                           ;ECU_LAYER/LCD/ecu_lcd.c: 122:     while(temp[counter] != '\0'){
  8362     093E  1283               	bcf	3,5	;RP0=0, select bank0
  8363     093F  1303               	bcf	3,6	;RP1=0, select bank0
  8364     0940  0847               	movf	Convert_uint16_to_string@counter,w
  8365     0941  3E41               	addlw	(low (Convert_uint16_to_string@temp| 0))& (0+255)
  8366     0942  0084               	movwf	4
  8367     0943  1383               	bcf	3,7	;select IRP bank0
  8368     0944  0800               	movf	0,w
  8369     0945  1D03               	btfss	3,2
  8370     0946  2948               	goto	u3901
  8371     0947  2949               	goto	u3900
  8372     0948                     u3901:
  8373     0948  292E               	goto	l3227
  8374     0949                     u3900:
  8375     0949                     l69:
  8376     0949  0008               	return
  8377     094A                     __end_of_Convert_uint16_to_string:
  8378                           
  8379                           	psect	text33
  8380     163E                     __ptext33:	
  8381 ;; *************** function _sprintf *****************
  8382 ;; Defined at:
  8383 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  8384 ;; Parameters:    Size  Location     Type
  8385 ;;  s               1    wreg     PTR unsigned char 
  8386 ;;		 -> Convert_uint32_to_string@temp(11), Convert_uint16_to_string@temp(6), Convert_uint8_to_string@temp(4), 
  8387 ;;  fmt             1   12[BANK0 ] PTR const unsigned char 
  8388 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  8389 ;; Auto vars:     Size  Location     Type
  8390 ;;  s               1   17[BANK0 ] PTR unsigned char 
  8391 ;;		 -> Convert_uint32_to_string@temp(11), Convert_uint16_to_string@temp(6), Convert_uint8_to_string@temp(4), 
  8392 ;;  f              11   18[BANK0 ] struct _IO_FILE
  8393 ;;  ret             2    0        int 
  8394 ;;  ap              1   16[BANK0 ] PTR void [1]
  8395 ;;		 -> ?_sprintf(2), 
  8396 ;; Return value:  Size  Location     Type
  8397 ;;                  2   12[BANK0 ] int 
  8398 ;; Registers used:
  8399 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8400 ;; Tracked objects:
  8401 ;;		On entry : 0/0
  8402 ;;		On exit  : 0/0
  8403 ;;		Unchanged: 0/0
  8404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8405 ;;      Params:         0       3       0       0       0
  8406 ;;      Locals:         0      13       0       0       0
  8407 ;;      Temps:          0       1       0       0       0
  8408 ;;      Totals:         0      17       0       0       0
  8409 ;;Total ram usage:       17 bytes
  8410 ;; Hardware stack levels used: 1
  8411 ;; Hardware stack levels required when called: 4
  8412 ;; This function calls:
  8413 ;;		_vfprintf
  8414 ;; This function is called by:
  8415 ;;		_Convert_uint16_to_string
  8416 ;;		_Convert_uint8_to_string
  8417 ;;		_Convert_uint32_to_string
  8418 ;; This function uses a non-reentrant model
  8419 ;;
  8420                           
  8421     163E                     _sprintf:	
  8422                           ;psect for function _sprintf
  8423                           
  8424                           
  8425                           ;incstack = 0
  8426                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8427                           ;sprintf@s stored from wreg
  8428     163E  1283               	bcf	3,5	;RP0=0, select bank0
  8429     163F  1303               	bcf	3,6	;RP1=0, select bank0
  8430     1640  00B1               	movwf	sprintf@s
  8431     1641                     l3093:
  8432     1641  302D               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  8433     1642  00B0               	movwf	sprintf@ap
  8434     1643  0831               	movf	sprintf@s,w
  8435     1644  00B2               	movwf	sprintf@f
  8436     1645                     l3095:
  8437     1645  01B4               	clrf	sprintf@f+2
  8438     1646  01B5               	clrf	sprintf@f+3
  8439     1647                     l3097:
  8440     1647  01BB               	clrf	sprintf@f+9
  8441     1648  01BC               	clrf	sprintf@f+10
  8442     1649                     l3099:
  8443     1649  082C               	movf	sprintf@fmt,w
  8444     164A  00A8               	movwf	vfprintf@fmt
  8445     164B  3030               	movlw	(low (sprintf@ap| 0))& (0+255)
  8446     164C  00A9               	movwf	vfprintf@ap
  8447     164D  3032               	movlw	(low (sprintf@f| 0))& (0+255)
  8448     164E  160A  118A  265D  160A  118A  	fcall	_vfprintf
  8449     1653                     l3101:
  8450     1653  1283               	bcf	3,5	;RP0=0, select bank0
  8451     1654  1303               	bcf	3,6	;RP1=0, select bank0
  8452     1655  0834               	movf	sprintf@f+2,w
  8453     1656  0731               	addwf	sprintf@s,w
  8454     1657  00AF               	movwf	??_sprintf
  8455     1658  082F               	movf	??_sprintf,w
  8456     1659  0084               	movwf	4
  8457     165A  1383               	bcf	3,7	;select IRP bank0
  8458     165B  0180               	clrf	0
  8459     165C                     l1093:
  8460     165C  0008               	return
  8461     165D                     __end_of_sprintf:
  8462                           
  8463                           	psect	text34
  8464     165D                     __ptext34:	
  8465 ;; *************** function _vfprintf *****************
  8466 ;; Defined at:
  8467 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  8468 ;; Parameters:    Size  Location     Type
  8469 ;;  fp              1    wreg     PTR struct _IO_FILE
  8470 ;;		 -> sprintf@f(11), 
  8471 ;;  fmt             1    8[BANK0 ] PTR const unsigned char 
  8472 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  8473 ;;  ap              1    9[BANK0 ] PTR PTR void 
  8474 ;;		 -> sprintf@ap(1), 
  8475 ;; Auto vars:     Size  Location     Type
  8476 ;;  fp              1   10[BANK0 ] PTR struct _IO_FILE
  8477 ;;		 -> sprintf@f(11), 
  8478 ;;  cfmt            1   11[BANK0 ] PTR unsigned char 
  8479 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  8480 ;; Return value:  Size  Location     Type
  8481 ;;                  2    8[BANK0 ] int 
  8482 ;; Registers used:
  8483 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8484 ;; Tracked objects:
  8485 ;;		On entry : 0/0
  8486 ;;		On exit  : 0/0
  8487 ;;		Unchanged: 0/0
  8488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8489 ;;      Params:         0       2       0       0       0
  8490 ;;      Locals:         0       2       0       0       0
  8491 ;;      Temps:          0       0       0       0       0
  8492 ;;      Totals:         0       4       0       0       0
  8493 ;;Total ram usage:        4 bytes
  8494 ;; Hardware stack levels used: 1
  8495 ;; Hardware stack levels required when called: 3
  8496 ;; This function calls:
  8497 ;;		_vfpfcnvrt
  8498 ;; This function is called by:
  8499 ;;		_sprintf
  8500 ;; This function uses a non-reentrant model
  8501 ;;
  8502                           
  8503     165D                     _vfprintf:	
  8504                           ;psect for function _vfprintf
  8505                           
  8506                           
  8507                           ;incstack = 0
  8508                           ; Regs used in _vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8509                           ;vfprintf@fp stored from wreg
  8510     165D  1283               	bcf	3,5	;RP0=0, select bank0
  8511     165E  1303               	bcf	3,6	;RP1=0, select bank0
  8512     165F  00AA               	movwf	vfprintf@fp
  8513     1660                     l3041:
  8514                           
  8515                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  8516     1660  0828               	movf	vfprintf@fmt,w
  8517     1661  00AB               	movwf	vfprintf@cfmt
  8518                           
  8519                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  8520     1662  2E6D               	goto	l3045
  8521     1663                     l3043:
  8522                           
  8523                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  8524     1663  302B               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  8525     1664  00FA               	movwf	vfpfcnvrt@fmt
  8526     1665  0829               	movf	vfprintf@ap,w
  8527     1666  00FB               	movwf	vfpfcnvrt@ap
  8528     1667  082A               	movf	vfprintf@fp,w
  8529     1668  120A  118A  2024  160A  118A  	fcall	_vfpfcnvrt
  8530     166D                     l3045:
  8531                           
  8532                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  8533     166D  1283               	bcf	3,5	;RP0=0, select bank0
  8534     166E  1303               	bcf	3,6	;RP1=0, select bank0
  8535     166F  082B               	movf	vfprintf@cfmt,w
  8536     1670  0084               	movwf	4
  8537     1671  160A  118A  200A  160A  118A  	fcall	stringdir
  8538     1676  3A00               	xorlw	0
  8539     1677  1D03               	skipz
  8540     1678  2E7A               	goto	u3581
  8541     1679  2E7B               	goto	u3580
  8542     167A                     u3581:
  8543     167A  2E63               	goto	l3043
  8544     167B                     u3580:
  8545     167B                     l3047:
  8546                           
  8547                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  8548     167B  01A8               	clrf	?_vfprintf
  8549     167C  01A9               	clrf	?_vfprintf+1
  8550     167D                     l1137:
  8551     167D  0008               	return
  8552     167E                     __end_of_vfprintf:
  8553                           
  8554                           	psect	text35
  8555     0024                     __ptext35:	
  8556 ;; *************** function _vfpfcnvrt *****************
  8557 ;; Defined at:
  8558 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  8559 ;; Parameters:    Size  Location     Type
  8560 ;;  fp              1    wreg     PTR struct _IO_FILE
  8561 ;;		 -> sprintf@f(11), 
  8562 ;;  fmt             1   10[COMMON] PTR PTR unsigned char 
  8563 ;;		 -> vfprintf@cfmt(1), 
  8564 ;;  ap              1   11[COMMON] PTR PTR void 
  8565 ;;		 -> sprintf@ap(1), 
  8566 ;; Auto vars:     Size  Location     Type
  8567 ;;  fp              1    1[BANK0 ] PTR struct _IO_FILE
  8568 ;;		 -> sprintf@f(11), 
  8569 ;;  convarg         4    3[BANK0 ] struct .
  8570 ;;  c               1    7[BANK0 ] unsigned char 
  8571 ;;  cp              1    2[BANK0 ] PTR unsigned char 
  8572 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  8573 ;;  done            1    0[BANK0 ] _Bool 
  8574 ;; Return value:  Size  Location     Type
  8575 ;;                  1    wreg      void 
  8576 ;; Registers used:
  8577 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8578 ;; Tracked objects:
  8579 ;;		On entry : 0/0
  8580 ;;		On exit  : 0/0
  8581 ;;		Unchanged: 0/0
  8582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8583 ;;      Params:         2       0       0       0       0
  8584 ;;      Locals:         0       8       0       0       0
  8585 ;;      Temps:          2       0       0       0       0
  8586 ;;      Totals:         4       8       0       0       0
  8587 ;;Total ram usage:       12 bytes
  8588 ;; Hardware stack levels used: 1
  8589 ;; Hardware stack levels required when called: 2
  8590 ;; This function calls:
  8591 ;;		___awdiv
  8592 ;;		___awmod
  8593 ;;		_abs
  8594 ;;		_fputc
  8595 ;; This function is called by:
  8596 ;;		_vfprintf
  8597 ;; This function uses a non-reentrant model
  8598 ;;
  8599                           
  8600     0024                     _vfpfcnvrt:	
  8601                           ;psect for function _vfpfcnvrt
  8602                           
  8603                           
  8604                           ;incstack = 0
  8605                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8606                           ;vfpfcnvrt@fp stored from wreg
  8607     0024  1283               	bcf	3,5	;RP0=0, select bank0
  8608     0025  1303               	bcf	3,6	;RP1=0, select bank0
  8609     0026  00A1               	movwf	vfpfcnvrt@fp
  8610     0027                     l2873:
  8611                           
  8612                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  8613     0027  087A               	movf	vfpfcnvrt@fmt,w
  8614     0028  0084               	movwf	4
  8615     0029  1383               	bcf	3,7	;select IRP bank0
  8616     002A  0800               	movf	0,w
  8617     002B  0084               	movwf	4
  8618     002C  160A  118A  200A  120A  118A  	fcall	stringdir
  8619     0031  3A25               	xorlw	37
  8620     0032  1D03               	skipz
  8621     0033  2835               	goto	u3391
  8622     0034  2836               	goto	u3390
  8623     0035                     u3391:
  8624     0035  28FB               	goto	l2919
  8625     0036                     u3390:
  8626     0036                     l2875:
  8627                           
  8628                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  8629     0036  3001               	movlw	1
  8630     0037  00FF               	movwf	btemp+1
  8631     0038  087A               	movf	vfpfcnvrt@fmt,w
  8632     0039  0084               	movwf	4
  8633     003A  087F               	movf	btemp+1,w
  8634     003B  0780               	addwf	0,f
  8635     003C                     l2877:
  8636                           
  8637                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  8638     003C  1683               	bsf	3,5	;RP0=1, select bank1
  8639     003D  1303               	bcf	3,6	;RP1=0, select bank1
  8640     003E  01DA               	clrf	_width^(0+128)
  8641     003F  01DB               	clrf	(_width+1)^(0+128)
  8642     0040  1003               	clrc
  8643     0041  3000               	movlw	0
  8644     0042  1803               	btfsc	3,0
  8645     0043  3001               	movlw	1
  8646     0044  00DE               	movwf	_flags^(0+128)
  8647     0045                     l2879:
  8648                           
  8649                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  8650     0045  30FF               	movlw	255
  8651     0046  00DC               	movwf	_prec^(0+128)
  8652     0047  30FF               	movlw	255
  8653     0048  00DD               	movwf	(_prec^(0+128)+1)
  8654     0049                     l2881:
  8655                           
  8656                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  8657     0049  087A               	movf	vfpfcnvrt@fmt,w
  8658     004A  0084               	movwf	4
  8659     004B  0800               	movf	0,w
  8660     004C  1283               	bcf	3,5	;RP0=0, select bank0
  8661     004D  1303               	bcf	3,6	;RP1=0, select bank0
  8662     004E  00A2               	movwf	vfpfcnvrt@cp
  8663     004F                     l2883:
  8664                           
  8665                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  8666     004F  0822               	movf	vfpfcnvrt@cp,w
  8667     0050  0084               	movwf	4
  8668     0051  160A  118A  200A  120A  118A  	fcall	stringdir
  8669     0056  3A64               	xorlw	100
  8670     0057  1903               	skipnz
  8671     0058  285A               	goto	u3401
  8672     0059  285B               	goto	u3400
  8673     005A                     u3401:
  8674     005A  2867               	goto	l2887
  8675     005B                     u3400:
  8676     005B                     l2885:
  8677     005B  0822               	movf	vfpfcnvrt@cp,w
  8678     005C  0084               	movwf	4
  8679     005D  160A  118A  200A  120A  118A  	fcall	stringdir
  8680     0062  3A69               	xorlw	105
  8681     0063  1D03               	skipz
  8682     0064  2866               	goto	u3411
  8683     0065  2867               	goto	u3410
  8684     0066                     u3411:
  8685     0066  28F3               	goto	l2915
  8686     0067                     u3410:
  8687     0067                     l2887:
  8688                           
  8689                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  8690     0067  087B               	movf	vfpfcnvrt@ap,w
  8691     0068  0084               	movwf	4
  8692     0069  0800               	movf	0,w
  8693     006A  00FF               	movwf	btemp+1
  8694     006B  3002               	movlw	2
  8695     006C  0780               	addwf	0,f
  8696     006D  087F               	movf	btemp+1,w
  8697     006E  0084               	movwf	4
  8698     006F  0800               	movf	0,w
  8699     0070  00A3               	movwf	vfpfcnvrt@convarg
  8700     0071  0A84               	incf	4,f
  8701     0072  0800               	movf	0,w
  8702     0073  00A4               	movwf	vfpfcnvrt@convarg+1
  8703     0074                     l2889:
  8704                           
  8705                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  8706     0074  087A               	movf	vfpfcnvrt@fmt,w
  8707     0075  0084               	movwf	4
  8708     0076  0822               	movf	vfpfcnvrt@cp,w
  8709     0077  3E01               	addlw	1
  8710     0078  0080               	movwf	0
  8711     0079                     l2891:
  8712                           
  8713                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  8714     0079  3020               	movlw	32
  8715     007A  00A7               	movwf	vfpfcnvrt@c
  8716     007B                     l2893:
  8717                           
  8718                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  8719     007B  1BA4               	btfsc	vfpfcnvrt@convarg+1,7
  8720     007C  287E               	goto	u3421
  8721     007D  2880               	goto	u3420
  8722     007E                     u3421:
  8723     007E  3001               	movlw	1
  8724     007F  2881               	goto	u3430
  8725     0080                     u3420:
  8726     0080  3000               	movlw	0
  8727     0081                     u3430:
  8728     0081  00A0               	movwf	vfpfcnvrt@done
  8729     0082                     l2895:
  8730                           
  8731                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  8732     0082  3001               	movlw	1
  8733     0083  02A7               	subwf	vfpfcnvrt@c,f
  8734     0084  0827               	movf	vfpfcnvrt@c,w
  8735     0085  3E90               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8736     0086  0084               	movwf	4
  8737     0087  300A               	movlw	10
  8738     0088  00F0               	movwf	___awmod@divisor
  8739     0089  3000               	movlw	0
  8740     008A  00F1               	movwf	___awmod@divisor+1
  8741     008B  0824               	movf	vfpfcnvrt@convarg+1,w
  8742     008C  00F3               	movwf	___awmod@dividend+1
  8743     008D  0823               	movf	vfpfcnvrt@convarg,w
  8744     008E  00F2               	movwf	___awmod@dividend
  8745     008F  120A  158A  21EA  120A  118A  	fcall	___awmod
  8746     0094  0871               	movf	?___awmod+1,w
  8747     0095  00F7               	movwf	abs@a+1
  8748     0096  0870               	movf	?___awmod,w
  8749     0097  00F6               	movwf	abs@a
  8750     0098  160A  118A  255A  120A  118A  	fcall	_abs
  8751     009D  0876               	movf	?_abs,w
  8752     009E  3E30               	addlw	48
  8753     009F  1783               	bsf	3,7	;select IRP bank3
  8754     00A0  0080               	movwf	0
  8755     00A1                     l2897:
  8756                           
  8757                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  8758     00A1  300A               	movlw	10
  8759     00A2  00F0               	movwf	___awdiv@divisor
  8760     00A3  3000               	movlw	0
  8761     00A4  00F1               	movwf	___awdiv@divisor+1
  8762     00A5  1283               	bcf	3,5	;RP0=0, select bank0
  8763     00A6  1303               	bcf	3,6	;RP1=0, select bank0
  8764     00A7  0824               	movf	vfpfcnvrt@convarg+1,w
  8765     00A8  00F3               	movwf	___awdiv@dividend+1
  8766     00A9  0823               	movf	vfpfcnvrt@convarg,w
  8767     00AA  00F2               	movwf	___awdiv@dividend
  8768     00AB  120A  158A  2243  120A  118A  	fcall	___awdiv
  8769     00B0  0871               	movf	?___awdiv+1,w
  8770     00B1  1283               	bcf	3,5	;RP0=0, select bank0
  8771     00B2  1303               	bcf	3,6	;RP1=0, select bank0
  8772     00B3  00A4               	movwf	vfpfcnvrt@convarg+1
  8773     00B4  0870               	movf	?___awdiv,w
  8774     00B5  00A3               	movwf	vfpfcnvrt@convarg
  8775     00B6                     l2899:
  8776                           
  8777                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  8778     00B6  0823               	movf	vfpfcnvrt@convarg,w
  8779     00B7  0424               	iorwf	vfpfcnvrt@convarg+1,w
  8780     00B8  1903               	btfsc	3,2
  8781     00B9  28BB               	goto	u3441
  8782     00BA  28BC               	goto	u3440
  8783     00BB                     u3441:
  8784     00BB  28C1               	goto	l2903
  8785     00BC                     u3440:
  8786     00BC                     l2901:
  8787     00BC  0827               	movf	vfpfcnvrt@c,w
  8788     00BD  1D03               	btfss	3,2
  8789     00BE  28C0               	goto	u3451
  8790     00BF  28C1               	goto	u3450
  8791     00C0                     u3451:
  8792     00C0  2882               	goto	l2895
  8793     00C1                     u3450:
  8794     00C1                     l2903:
  8795                           
  8796                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  8797     00C1  0827               	movf	vfpfcnvrt@c,w
  8798     00C2  1903               	btfsc	3,2
  8799     00C3  28C5               	goto	u3461
  8800     00C4  28C6               	goto	u3460
  8801     00C5                     u3461:
  8802     00C5  28EC               	goto	l2913
  8803     00C6                     u3460:
  8804     00C6                     l2905:
  8805     00C6  0820               	movf	vfpfcnvrt@done,w
  8806     00C7  1903               	btfsc	3,2
  8807     00C8  28CA               	goto	u3471
  8808     00C9  28CB               	goto	u3470
  8809     00CA                     u3471:
  8810     00CA  28EC               	goto	l2913
  8811     00CB                     u3470:
  8812     00CB                     l2907:
  8813                           
  8814                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  8815     00CB  3001               	movlw	1
  8816     00CC  02A7               	subwf	vfpfcnvrt@c,f
  8817     00CD  0827               	movf	vfpfcnvrt@c,w
  8818     00CE  3E90               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8819     00CF  0084               	movwf	4
  8820     00D0  302D               	movlw	45
  8821     00D1  1783               	bsf	3,7	;select IRP bank3
  8822     00D2  0080               	movwf	0
  8823     00D3  28EC               	goto	l2913
  8824     00D4                     l2909:
  8825                           
  8826                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  8827     00D4  0827               	movf	vfpfcnvrt@c,w
  8828     00D5  3E90               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8829     00D6  0084               	movwf	4
  8830     00D7  1783               	bsf	3,7	;select IRP bank3
  8831     00D8  0800               	movf	0,w
  8832     00D9  00FC               	movwf	??_vfpfcnvrt
  8833     00DA  01FD               	clrf	??_vfpfcnvrt+1
  8834     00DB  087C               	movf	??_vfpfcnvrt,w
  8835     00DC  00F0               	movwf	fputc@c
  8836     00DD  087D               	movf	??_vfpfcnvrt+1,w
  8837     00DE  00F1               	movwf	fputc@c+1
  8838     00DF  0821               	movf	vfpfcnvrt@fp,w
  8839     00E0  00F2               	movwf	fputc@fp
  8840     00E1  120A  158A  2194  120A  118A  	fcall	_fputc
  8841     00E6                     l2911:
  8842     00E6  3001               	movlw	1
  8843     00E7  00FF               	movwf	btemp+1
  8844     00E8  087F               	movf	btemp+1,w
  8845     00E9  1283               	bcf	3,5	;RP0=0, select bank0
  8846     00EA  1303               	bcf	3,6	;RP1=0, select bank0
  8847     00EB  07A7               	addwf	vfpfcnvrt@c,f
  8848     00EC                     l2913:
  8849                           
  8850                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  8851     00EC  3020               	movlw	32
  8852     00ED  0627               	xorwf	vfpfcnvrt@c,w
  8853     00EE  1D03               	btfss	3,2
  8854     00EF  28F1               	goto	u3481
  8855     00F0  28F2               	goto	u3480
  8856     00F1                     u3481:
  8857     00F1  28D4               	goto	l2909
  8858     00F2                     u3480:
  8859     00F2  2912               	goto	l1131
  8860     00F3                     l2915:
  8861                           
  8862                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  8863     00F3  3001               	movlw	1
  8864     00F4  00FF               	movwf	btemp+1
  8865     00F5  087A               	movf	vfpfcnvrt@fmt,w
  8866     00F6  0084               	movwf	4
  8867     00F7  087F               	movf	btemp+1,w
  8868     00F8  1383               	bcf	3,7	;select IRP bank0
  8869     00F9  0780               	addwf	0,f
  8870     00FA  2912               	goto	l1131
  8871     00FB                     l2919:
  8872                           
  8873                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  8874     00FB  087A               	movf	vfpfcnvrt@fmt,w
  8875     00FC  0084               	movwf	4
  8876     00FD  0800               	movf	0,w
  8877     00FE  0084               	movwf	4
  8878     00FF  160A  118A  200A  120A  118A  	fcall	stringdir
  8879     0104  00FC               	movwf	??_vfpfcnvrt
  8880     0105  01FD               	clrf	??_vfpfcnvrt+1
  8881     0106  087C               	movf	??_vfpfcnvrt,w
  8882     0107  00F0               	movwf	fputc@c
  8883     0108  087D               	movf	??_vfpfcnvrt+1,w
  8884     0109  00F1               	movwf	fputc@c+1
  8885     010A  0821               	movf	vfpfcnvrt@fp,w
  8886     010B  00F2               	movwf	fputc@fp
  8887     010C  120A  158A  2194  120A  118A  	fcall	_fputc
  8888     0111  28F3               	goto	l2915
  8889     0112                     l1131:
  8890     0112  0008               	return
  8891     0113                     __end_of_vfpfcnvrt:
  8892                           
  8893                           	psect	text36
  8894     0994                     __ptext36:	
  8895 ;; *************** function _fputc *****************
  8896 ;; Defined at:
  8897 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  8898 ;; Parameters:    Size  Location     Type
  8899 ;;  c               2    0[COMMON] int 
  8900 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  8901 ;;		 -> sprintf@f(11), 
  8902 ;; Auto vars:     Size  Location     Type
  8903 ;;		None
  8904 ;; Return value:  Size  Location     Type
  8905 ;;                  2    0[COMMON] int 
  8906 ;; Registers used:
  8907 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8908 ;; Tracked objects:
  8909 ;;		On entry : 0/0
  8910 ;;		On exit  : 0/0
  8911 ;;		Unchanged: 0/0
  8912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8913 ;;      Params:         3       0       0       0       0
  8914 ;;      Locals:         0       0       0       0       0
  8915 ;;      Temps:          5       0       0       0       0
  8916 ;;      Totals:         8       0       0       0       0
  8917 ;;Total ram usage:        8 bytes
  8918 ;; Hardware stack levels used: 1
  8919 ;; Hardware stack levels required when called: 1
  8920 ;; This function calls:
  8921 ;;		_putch
  8922 ;; This function is called by:
  8923 ;;		_vfpfcnvrt
  8924 ;; This function uses a non-reentrant model
  8925 ;;
  8926                           
  8927     0994                     _fputc:	
  8928                           ;psect for function _fputc
  8929                           
  8930     0994                     l2791:	
  8931                           ;incstack = 0
  8932                           ; Regs used in _fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8933                           
  8934     0994  0872               	movf	fputc@fp,w
  8935     0995  1903               	btfsc	3,2
  8936     0996  2998               	goto	u3201
  8937     0997  2999               	goto	u3200
  8938     0998                     u3201:
  8939     0998  299E               	goto	l2795
  8940     0999                     u3200:
  8941     0999                     l2793:
  8942     0999  0872               	movf	fputc@fp,w
  8943     099A  1D03               	btfss	3,2
  8944     099B  299D               	goto	u3211
  8945     099C  299E               	goto	u3210
  8946     099D                     u3211:
  8947     099D  29A5               	goto	l2797
  8948     099E                     u3210:
  8949     099E                     l2795:
  8950     099E  0870               	movf	fputc@c,w
  8951     099F  120A  158A  2002  120A  158A  	fcall	_putch
  8952     09A4  29E9               	goto	l1156
  8953     09A5                     l2797:
  8954     09A5  0872               	movf	fputc@fp,w
  8955     09A6  3E09               	addlw	9
  8956     09A7  0084               	movwf	4
  8957     09A8  1383               	bcf	3,7	;select IRP bank0
  8958     09A9  0800               	movf	0,w
  8959     09AA  00F3               	movwf	??_fputc
  8960     09AB  0A84               	incf	4,f
  8961     09AC  0800               	movf	0,w
  8962     09AD  00F4               	movwf	??_fputc+1
  8963     09AE  0873               	movf	??_fputc,w
  8964     09AF  0474               	iorwf	??_fputc+1,w
  8965     09B0  1903               	btfsc	3,2
  8966     09B1  29B3               	goto	u3221
  8967     09B2  29B4               	goto	u3220
  8968     09B3                     u3221:
  8969     09B3  29D2               	goto	l2801
  8970     09B4                     u3220:
  8971     09B4                     l2799:
  8972     09B4  0872               	movf	fputc@fp,w
  8973     09B5  3E09               	addlw	9
  8974     09B6  0084               	movwf	4
  8975     09B7  0800               	movf	0,w
  8976     09B8  00F3               	movwf	??_fputc
  8977     09B9  0A84               	incf	4,f
  8978     09BA  0800               	movf	0,w
  8979     09BB  00F4               	movwf	??_fputc+1
  8980     09BC  0872               	movf	fputc@fp,w
  8981     09BD  3E02               	addlw	2
  8982     09BE  0084               	movwf	4
  8983     09BF  0800               	movf	0,w
  8984     09C0  00F5               	movwf	??_fputc+2
  8985     09C1  0A84               	incf	4,f
  8986     09C2  0800               	movf	0,w
  8987     09C3  00F6               	movwf	??_fputc+3
  8988     09C4  0876               	movf	??_fputc+3,w
  8989     09C5  3A80               	xorlw	128
  8990     09C6  00F7               	movwf	??_fputc+4
  8991     09C7  0874               	movf	??_fputc+1,w
  8992     09C8  3A80               	xorlw	128
  8993     09C9  0277               	subwf	??_fputc+4,w
  8994     09CA  1D03               	skipz
  8995     09CB  29CE               	goto	u3235
  8996     09CC  0873               	movf	??_fputc,w
  8997     09CD  0275               	subwf	??_fputc+2,w
  8998     09CE                     u3235:
  8999     09CE  1803               	skipnc
  9000     09CF  29D1               	goto	u3231
  9001     09D0  29D2               	goto	u3230
  9002     09D1                     u3231:
  9003     09D1  29E9               	goto	l1156
  9004     09D2                     u3230:
  9005     09D2                     l2801:
  9006     09D2  0872               	movf	fputc@fp,w
  9007     09D3  3E02               	addlw	2
  9008     09D4  0084               	movwf	4
  9009     09D5  1383               	bcf	3,7	;select IRP bank0
  9010     09D6  0800               	movf	0,w
  9011     09D7  00F3               	movwf	??_fputc
  9012     09D8  0872               	movf	fputc@fp,w
  9013     09D9  0084               	movwf	4
  9014     09DA  0800               	movf	0,w
  9015     09DB  0773               	addwf	??_fputc,w
  9016     09DC  00F4               	movwf	??_fputc+1
  9017     09DD  0874               	movf	??_fputc+1,w
  9018     09DE  0084               	movwf	4
  9019     09DF  0870               	movf	fputc@c,w
  9020     09E0  0080               	movwf	0
  9021     09E1  0872               	movf	fputc@fp,w
  9022     09E2  3E02               	addlw	2
  9023     09E3  0084               	movwf	4
  9024     09E4  3001               	movlw	1
  9025     09E5  0780               	addwf	0,f
  9026     09E6  0A84               	incf	4,f
  9027     09E7  1803               	skipnc
  9028     09E8  0A80               	incf	0,f
  9029     09E9                     l1156:
  9030     09E9  0008               	return
  9031     09EA                     __end_of_fputc:
  9032                           
  9033                           	psect	text37
  9034     0802                     __ptext37:	
  9035 ;; *************** function _putch *****************
  9036 ;; Defined at:
  9037 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  9038 ;; Parameters:    Size  Location     Type
  9039 ;;  c               1    wreg     unsigned char 
  9040 ;; Auto vars:     Size  Location     Type
  9041 ;;  c               1    0[COMMON] unsigned char 
  9042 ;; Return value:  Size  Location     Type
  9043 ;;                  1    wreg      void 
  9044 ;; Registers used:
  9045 ;;		wreg
  9046 ;; Tracked objects:
  9047 ;;		On entry : 0/0
  9048 ;;		On exit  : 0/0
  9049 ;;		Unchanged: 0/0
  9050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9051 ;;      Params:         0       0       0       0       0
  9052 ;;      Locals:         0       0       0       0       0
  9053 ;;      Temps:          0       0       0       0       0
  9054 ;;      Totals:         0       0       0       0       0
  9055 ;;Total ram usage:        0 bytes
  9056 ;; Hardware stack levels used: 1
  9057 ;; This function calls:
  9058 ;;		Nothing
  9059 ;; This function is called by:
  9060 ;;		_fputc
  9061 ;; This function uses a non-reentrant model
  9062 ;;
  9063                           
  9064     0802                     _putch:	
  9065                           ;psect for function _putch
  9066                           
  9067     0802                     l1167:	
  9068                           ;incstack = 0
  9069                           ; Regs used in _putch: [wreg]
  9070                           
  9071     0802  0008               	return
  9072     0803                     __end_of_putch:
  9073                           
  9074                           	psect	text38
  9075     155A                     __ptext38:	
  9076 ;; *************** function _abs *****************
  9077 ;; Defined at:
  9078 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  9079 ;; Parameters:    Size  Location     Type
  9080 ;;  a               2    6[COMMON] int 
  9081 ;; Auto vars:     Size  Location     Type
  9082 ;;		None
  9083 ;; Return value:  Size  Location     Type
  9084 ;;                  2    6[COMMON] int 
  9085 ;; Registers used:
  9086 ;;		wreg, status,2, status,0
  9087 ;; Tracked objects:
  9088 ;;		On entry : 0/0
  9089 ;;		On exit  : 0/0
  9090 ;;		Unchanged: 0/0
  9091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9092 ;;      Params:         2       0       0       0       0
  9093 ;;      Locals:         0       0       0       0       0
  9094 ;;      Temps:          2       0       0       0       0
  9095 ;;      Totals:         4       0       0       0       0
  9096 ;;Total ram usage:        4 bytes
  9097 ;; Hardware stack levels used: 1
  9098 ;; This function calls:
  9099 ;;		Nothing
  9100 ;; This function is called by:
  9101 ;;		_vfpfcnvrt
  9102 ;; This function uses a non-reentrant model
  9103 ;;
  9104                           
  9105     155A                     _abs:	
  9106                           ;psect for function _abs
  9107                           
  9108     155A                     l2805:	
  9109                           ;incstack = 0
  9110                           ; Regs used in _abs: [wreg+status,2+status,0]
  9111                           
  9112     155A  1BF7               	btfsc	abs@a+1,7
  9113     155B  2D5D               	goto	u3241
  9114     155C  2D5E               	goto	u3240
  9115     155D                     u3241:
  9116     155D  2D5F               	goto	l2809
  9117     155E                     u3240:
  9118     155E                     l2807:
  9119     155E  2D6A               	goto	l1144
  9120     155F                     l2809:
  9121     155F  0976               	comf	abs@a,w
  9122     1560  00F8               	movwf	??_abs
  9123     1561  0977               	comf	abs@a+1,w
  9124     1562  00F9               	movwf	??_abs+1
  9125     1563  0AF8               	incf	??_abs,f
  9126     1564  1903               	skipnz
  9127     1565  0AF9               	incf	??_abs+1,f
  9128     1566  0878               	movf	??_abs,w
  9129     1567  00F6               	movwf	?_abs
  9130     1568  0879               	movf	??_abs+1,w
  9131     1569  00F7               	movwf	?_abs+1
  9132     156A                     l1144:
  9133     156A  0008               	return
  9134     156B                     __end_of_abs:
  9135                           
  9136                           	psect	text39
  9137     09EA                     __ptext39:	
  9138 ;; *************** function ___awmod *****************
  9139 ;; Defined at:
  9140 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  9141 ;; Parameters:    Size  Location     Type
  9142 ;;  divisor         2    0[COMMON] int 
  9143 ;;  dividend        2    2[COMMON] int 
  9144 ;; Auto vars:     Size  Location     Type
  9145 ;;  sign            1    5[COMMON] unsigned char 
  9146 ;;  counter         1    4[COMMON] unsigned char 
  9147 ;; Return value:  Size  Location     Type
  9148 ;;                  2    0[COMMON] int 
  9149 ;; Registers used:
  9150 ;;		wreg, status,2, status,0, btemp+1
  9151 ;; Tracked objects:
  9152 ;;		On entry : 0/0
  9153 ;;		On exit  : 0/0
  9154 ;;		Unchanged: 0/0
  9155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9156 ;;      Params:         4       0       0       0       0
  9157 ;;      Locals:         2       0       0       0       0
  9158 ;;      Temps:          0       0       0       0       0
  9159 ;;      Totals:         6       0       0       0       0
  9160 ;;Total ram usage:        6 bytes
  9161 ;; Hardware stack levels used: 1
  9162 ;; This function calls:
  9163 ;;		Nothing
  9164 ;; This function is called by:
  9165 ;;		_vfpfcnvrt
  9166 ;; This function uses a non-reentrant model
  9167 ;;
  9168                           
  9169     09EA                     ___awmod:	
  9170                           ;psect for function ___awmod
  9171                           
  9172     09EA                     l2753:	
  9173                           ;incstack = 0
  9174                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  9175                           
  9176     09EA  01F5               	clrf	___awmod@sign
  9177     09EB                     l2755:
  9178     09EB  1FF3               	btfss	___awmod@dividend+1,7
  9179     09EC  29EE               	goto	u3111
  9180     09ED  29EF               	goto	u3110
  9181     09EE                     u3111:
  9182     09EE  29F6               	goto	l2761
  9183     09EF                     u3110:
  9184     09EF                     l2757:
  9185     09EF  09F2               	comf	___awmod@dividend,f
  9186     09F0  09F3               	comf	___awmod@dividend+1,f
  9187     09F1  0AF2               	incf	___awmod@dividend,f
  9188     09F2  1903               	skipnz
  9189     09F3  0AF3               	incf	___awmod@dividend+1,f
  9190     09F4                     l2759:
  9191     09F4  01F5               	clrf	___awmod@sign
  9192     09F5  0AF5               	incf	___awmod@sign,f
  9193     09F6                     l2761:
  9194     09F6  1FF1               	btfss	___awmod@divisor+1,7
  9195     09F7  29F9               	goto	u3121
  9196     09F8  29FA               	goto	u3120
  9197     09F9                     u3121:
  9198     09F9  29FF               	goto	l2765
  9199     09FA                     u3120:
  9200     09FA                     l2763:
  9201     09FA  09F0               	comf	___awmod@divisor,f
  9202     09FB  09F1               	comf	___awmod@divisor+1,f
  9203     09FC  0AF0               	incf	___awmod@divisor,f
  9204     09FD  1903               	skipnz
  9205     09FE  0AF1               	incf	___awmod@divisor+1,f
  9206     09FF                     l2765:
  9207     09FF  0870               	movf	___awmod@divisor,w
  9208     0A00  0471               	iorwf	___awmod@divisor+1,w
  9209     0A01  1903               	btfsc	3,2
  9210     0A02  2A04               	goto	u3131
  9211     0A03  2A05               	goto	u3130
  9212     0A04                     u3131:
  9213     0A04  2A34               	goto	l2783
  9214     0A05                     u3130:
  9215     0A05                     l2767:
  9216     0A05  01F4               	clrf	___awmod@counter
  9217     0A06  0AF4               	incf	___awmod@counter,f
  9218     0A07  2A13               	goto	l2773
  9219     0A08                     l2769:
  9220     0A08  3001               	movlw	1
  9221     0A09                     u3145:
  9222     0A09  1003               	clrc
  9223     0A0A  0DF0               	rlf	___awmod@divisor,f
  9224     0A0B  0DF1               	rlf	___awmod@divisor+1,f
  9225     0A0C  3EFF               	addlw	-1
  9226     0A0D  1D03               	skipz
  9227     0A0E  2A09               	goto	u3145
  9228     0A0F                     l2771:
  9229     0A0F  3001               	movlw	1
  9230     0A10  00FF               	movwf	btemp+1
  9231     0A11  087F               	movf	btemp+1,w
  9232     0A12  07F4               	addwf	___awmod@counter,f
  9233     0A13                     l2773:
  9234     0A13  1FF1               	btfss	___awmod@divisor+1,7
  9235     0A14  2A16               	goto	u3151
  9236     0A15  2A17               	goto	u3150
  9237     0A16                     u3151:
  9238     0A16  2A08               	goto	l2769
  9239     0A17                     u3150:
  9240     0A17                     l2775:
  9241     0A17  0871               	movf	___awmod@divisor+1,w
  9242     0A18  0273               	subwf	___awmod@dividend+1,w
  9243     0A19  1D03               	skipz
  9244     0A1A  2A1D               	goto	u3165
  9245     0A1B  0870               	movf	___awmod@divisor,w
  9246     0A1C  0272               	subwf	___awmod@dividend,w
  9247     0A1D                     u3165:
  9248     0A1D  1C03               	skipc
  9249     0A1E  2A20               	goto	u3161
  9250     0A1F  2A21               	goto	u3160
  9251     0A20                     u3161:
  9252     0A20  2A27               	goto	l2779
  9253     0A21                     u3160:
  9254     0A21                     l2777:
  9255     0A21  0870               	movf	___awmod@divisor,w
  9256     0A22  02F2               	subwf	___awmod@dividend,f
  9257     0A23  0871               	movf	___awmod@divisor+1,w
  9258     0A24  1C03               	skipc
  9259     0A25  03F3               	decf	___awmod@dividend+1,f
  9260     0A26  02F3               	subwf	___awmod@dividend+1,f
  9261     0A27                     l2779:
  9262     0A27  3001               	movlw	1
  9263     0A28                     u3175:
  9264     0A28  1003               	clrc
  9265     0A29  0CF1               	rrf	___awmod@divisor+1,f
  9266     0A2A  0CF0               	rrf	___awmod@divisor,f
  9267     0A2B  3EFF               	addlw	-1
  9268     0A2C  1D03               	skipz
  9269     0A2D  2A28               	goto	u3175
  9270     0A2E                     l2781:
  9271     0A2E  3001               	movlw	1
  9272     0A2F  02F4               	subwf	___awmod@counter,f
  9273     0A30  1D03               	btfss	3,2
  9274     0A31  2A33               	goto	u3181
  9275     0A32  2A34               	goto	u3180
  9276     0A33                     u3181:
  9277     0A33  2A17               	goto	l2775
  9278     0A34                     u3180:
  9279     0A34                     l2783:
  9280     0A34  0875               	movf	___awmod@sign,w
  9281     0A35  1903               	btfsc	3,2
  9282     0A36  2A38               	goto	u3191
  9283     0A37  2A39               	goto	u3190
  9284     0A38                     u3191:
  9285     0A38  2A3E               	goto	l2787
  9286     0A39                     u3190:
  9287     0A39                     l2785:
  9288     0A39  09F2               	comf	___awmod@dividend,f
  9289     0A3A  09F3               	comf	___awmod@dividend+1,f
  9290     0A3B  0AF2               	incf	___awmod@dividend,f
  9291     0A3C  1903               	skipnz
  9292     0A3D  0AF3               	incf	___awmod@dividend+1,f
  9293     0A3E                     l2787:
  9294     0A3E  0873               	movf	___awmod@dividend+1,w
  9295     0A3F  00F1               	movwf	?___awmod+1
  9296     0A40  0872               	movf	___awmod@dividend,w
  9297     0A41  00F0               	movwf	?___awmod
  9298     0A42                     l790:
  9299     0A42  0008               	return
  9300     0A43                     __end_of___awmod:
  9301                           
  9302                           	psect	text40
  9303     0A43                     __ptext40:	
  9304 ;; *************** function ___awdiv *****************
  9305 ;; Defined at:
  9306 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  9307 ;; Parameters:    Size  Location     Type
  9308 ;;  divisor         2    0[COMMON] int 
  9309 ;;  dividend        2    2[COMMON] int 
  9310 ;; Auto vars:     Size  Location     Type
  9311 ;;  quotient        2    6[COMMON] int 
  9312 ;;  sign            1    5[COMMON] unsigned char 
  9313 ;;  counter         1    4[COMMON] unsigned char 
  9314 ;; Return value:  Size  Location     Type
  9315 ;;                  2    0[COMMON] int 
  9316 ;; Registers used:
  9317 ;;		wreg, status,2, status,0, btemp+1
  9318 ;; Tracked objects:
  9319 ;;		On entry : 0/0
  9320 ;;		On exit  : 0/0
  9321 ;;		Unchanged: 0/0
  9322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9323 ;;      Params:         4       0       0       0       0
  9324 ;;      Locals:         4       0       0       0       0
  9325 ;;      Temps:          0       0       0       0       0
  9326 ;;      Totals:         8       0       0       0       0
  9327 ;;Total ram usage:        8 bytes
  9328 ;; Hardware stack levels used: 1
  9329 ;; This function calls:
  9330 ;;		Nothing
  9331 ;; This function is called by:
  9332 ;;		_vfpfcnvrt
  9333 ;; This function uses a non-reentrant model
  9334 ;;
  9335                           
  9336     0A43                     ___awdiv:	
  9337                           ;psect for function ___awdiv
  9338                           
  9339     0A43                     l2709:	
  9340                           ;incstack = 0
  9341                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  9342                           
  9343     0A43  01F5               	clrf	___awdiv@sign
  9344     0A44                     l2711:
  9345     0A44  1FF1               	btfss	___awdiv@divisor+1,7
  9346     0A45  2A47               	goto	u3011
  9347     0A46  2A48               	goto	u3010
  9348     0A47                     u3011:
  9349     0A47  2A4F               	goto	l2717
  9350     0A48                     u3010:
  9351     0A48                     l2713:
  9352     0A48  09F0               	comf	___awdiv@divisor,f
  9353     0A49  09F1               	comf	___awdiv@divisor+1,f
  9354     0A4A  0AF0               	incf	___awdiv@divisor,f
  9355     0A4B  1903               	skipnz
  9356     0A4C  0AF1               	incf	___awdiv@divisor+1,f
  9357     0A4D                     l2715:
  9358     0A4D  01F5               	clrf	___awdiv@sign
  9359     0A4E  0AF5               	incf	___awdiv@sign,f
  9360     0A4F                     l2717:
  9361     0A4F  1FF3               	btfss	___awdiv@dividend+1,7
  9362     0A50  2A52               	goto	u3021
  9363     0A51  2A53               	goto	u3020
  9364     0A52                     u3021:
  9365     0A52  2A5C               	goto	l2723
  9366     0A53                     u3020:
  9367     0A53                     l2719:
  9368     0A53  09F2               	comf	___awdiv@dividend,f
  9369     0A54  09F3               	comf	___awdiv@dividend+1,f
  9370     0A55  0AF2               	incf	___awdiv@dividend,f
  9371     0A56  1903               	skipnz
  9372     0A57  0AF3               	incf	___awdiv@dividend+1,f
  9373     0A58                     l2721:
  9374     0A58  3001               	movlw	1
  9375     0A59  00FF               	movwf	btemp+1
  9376     0A5A  087F               	movf	btemp+1,w
  9377     0A5B  06F5               	xorwf	___awdiv@sign,f
  9378     0A5C                     l2723:
  9379     0A5C  01F6               	clrf	___awdiv@quotient
  9380     0A5D  01F7               	clrf	___awdiv@quotient+1
  9381     0A5E                     l2725:
  9382     0A5E  0870               	movf	___awdiv@divisor,w
  9383     0A5F  0471               	iorwf	___awdiv@divisor+1,w
  9384     0A60  1903               	btfsc	3,2
  9385     0A61  2A63               	goto	u3031
  9386     0A62  2A64               	goto	u3030
  9387     0A63                     u3031:
  9388     0A63  2A9B               	goto	l2745
  9389     0A64                     u3030:
  9390     0A64                     l2727:
  9391     0A64  01F4               	clrf	___awdiv@counter
  9392     0A65  0AF4               	incf	___awdiv@counter,f
  9393     0A66  2A72               	goto	l2733
  9394     0A67                     l2729:
  9395     0A67  3001               	movlw	1
  9396     0A68                     u3045:
  9397     0A68  1003               	clrc
  9398     0A69  0DF0               	rlf	___awdiv@divisor,f
  9399     0A6A  0DF1               	rlf	___awdiv@divisor+1,f
  9400     0A6B  3EFF               	addlw	-1
  9401     0A6C  1D03               	skipz
  9402     0A6D  2A68               	goto	u3045
  9403     0A6E                     l2731:
  9404     0A6E  3001               	movlw	1
  9405     0A6F  00FF               	movwf	btemp+1
  9406     0A70  087F               	movf	btemp+1,w
  9407     0A71  07F4               	addwf	___awdiv@counter,f
  9408     0A72                     l2733:
  9409     0A72  1FF1               	btfss	___awdiv@divisor+1,7
  9410     0A73  2A75               	goto	u3051
  9411     0A74  2A76               	goto	u3050
  9412     0A75                     u3051:
  9413     0A75  2A67               	goto	l2729
  9414     0A76                     u3050:
  9415     0A76                     l2735:
  9416     0A76  3001               	movlw	1
  9417     0A77                     u3065:
  9418     0A77  1003               	clrc
  9419     0A78  0DF6               	rlf	___awdiv@quotient,f
  9420     0A79  0DF7               	rlf	___awdiv@quotient+1,f
  9421     0A7A  3EFF               	addlw	-1
  9422     0A7B  1D03               	skipz
  9423     0A7C  2A77               	goto	u3065
  9424     0A7D  0871               	movf	___awdiv@divisor+1,w
  9425     0A7E  0273               	subwf	___awdiv@dividend+1,w
  9426     0A7F  1D03               	skipz
  9427     0A80  2A83               	goto	u3075
  9428     0A81  0870               	movf	___awdiv@divisor,w
  9429     0A82  0272               	subwf	___awdiv@dividend,w
  9430     0A83                     u3075:
  9431     0A83  1C03               	skipc
  9432     0A84  2A86               	goto	u3071
  9433     0A85  2A87               	goto	u3070
  9434     0A86                     u3071:
  9435     0A86  2A8E               	goto	l2741
  9436     0A87                     u3070:
  9437     0A87                     l2737:
  9438     0A87  0870               	movf	___awdiv@divisor,w
  9439     0A88  02F2               	subwf	___awdiv@dividend,f
  9440     0A89  0871               	movf	___awdiv@divisor+1,w
  9441     0A8A  1C03               	skipc
  9442     0A8B  03F3               	decf	___awdiv@dividend+1,f
  9443     0A8C  02F3               	subwf	___awdiv@dividend+1,f
  9444     0A8D                     l2739:
  9445     0A8D  1476               	bsf	___awdiv@quotient,0
  9446     0A8E                     l2741:
  9447     0A8E  3001               	movlw	1
  9448     0A8F                     u3085:
  9449     0A8F  1003               	clrc
  9450     0A90  0CF1               	rrf	___awdiv@divisor+1,f
  9451     0A91  0CF0               	rrf	___awdiv@divisor,f
  9452     0A92  3EFF               	addlw	-1
  9453     0A93  1D03               	skipz
  9454     0A94  2A8F               	goto	u3085
  9455     0A95                     l2743:
  9456     0A95  3001               	movlw	1
  9457     0A96  02F4               	subwf	___awdiv@counter,f
  9458     0A97  1D03               	btfss	3,2
  9459     0A98  2A9A               	goto	u3091
  9460     0A99  2A9B               	goto	u3090
  9461     0A9A                     u3091:
  9462     0A9A  2A76               	goto	l2735
  9463     0A9B                     u3090:
  9464     0A9B                     l2745:
  9465     0A9B  0875               	movf	___awdiv@sign,w
  9466     0A9C  1903               	btfsc	3,2
  9467     0A9D  2A9F               	goto	u3101
  9468     0A9E  2AA0               	goto	u3100
  9469     0A9F                     u3101:
  9470     0A9F  2AA5               	goto	l2749
  9471     0AA0                     u3100:
  9472     0AA0                     l2747:
  9473     0AA0  09F6               	comf	___awdiv@quotient,f
  9474     0AA1  09F7               	comf	___awdiv@quotient+1,f
  9475     0AA2  0AF6               	incf	___awdiv@quotient,f
  9476     0AA3  1903               	skipnz
  9477     0AA4  0AF7               	incf	___awdiv@quotient+1,f
  9478     0AA5                     l2749:
  9479     0AA5  0877               	movf	___awdiv@quotient+1,w
  9480     0AA6  00F1               	movwf	?___awdiv+1
  9481     0AA7  0876               	movf	___awdiv@quotient,w
  9482     0AA8  00F0               	movwf	?___awdiv
  9483     0AA9                     l777:
  9484     0AA9  0008               	return
  9485     0AAA                     __end_of___awdiv:
  9486                           
  9487                           	psect	text41
  9488     1622                     __ptext41:	
  9489 ;; *************** function _memset *****************
  9490 ;; Defined at:
  9491 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memset.c"
  9492 ;; Parameters:    Size  Location     Type
  9493 ;;  dest            1    wreg     PTR void 
  9494 ;;		 -> lcd_show_max(6), lcd_show(6), 
  9495 ;;  c               2    0[COMMON] int 
  9496 ;;  n               2    2[COMMON] unsigned int 
  9497 ;; Auto vars:     Size  Location     Type
  9498 ;;  dest            1    5[COMMON] PTR void 
  9499 ;;		 -> lcd_show_max(6), lcd_show(6), 
  9500 ;;  p               1    4[COMMON] PTR unsigned char 
  9501 ;;		 -> lcd_show_max(6), lcd_show(6), 
  9502 ;; Return value:  Size  Location     Type
  9503 ;;                  1    wreg      PTR void 
  9504 ;; Registers used:
  9505 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  9506 ;; Tracked objects:
  9507 ;;		On entry : 0/0
  9508 ;;		On exit  : 0/0
  9509 ;;		Unchanged: 0/0
  9510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9511 ;;      Params:         4       0       0       0       0
  9512 ;;      Locals:         2       0       0       0       0
  9513 ;;      Temps:          0       0       0       0       0
  9514 ;;      Totals:         6       0       0       0       0
  9515 ;;Total ram usage:        6 bytes
  9516 ;; Hardware stack levels used: 1
  9517 ;; This function calls:
  9518 ;;		Nothing
  9519 ;; This function is called by:
  9520 ;;		_Convert_uint16_to_string
  9521 ;;		_Convert_uint8_to_string
  9522 ;;		_Convert_uint32_to_string
  9523 ;; This function uses a non-reentrant model
  9524 ;;
  9525                           
  9526     1622                     _memset:	
  9527                           ;psect for function _memset
  9528                           
  9529                           
  9530                           ;incstack = 0
  9531                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0+btemp+1]
  9532                           ;memset@dest stored from wreg
  9533     1622  00F5               	movwf	memset@dest
  9534     1623                     l3085:
  9535     1623  0875               	movf	memset@dest,w
  9536     1624  00F4               	movwf	memset@p
  9537     1625  2E2F               	goto	l3091
  9538     1626                     l3087:
  9539     1626  0874               	movf	memset@p,w
  9540     1627  0084               	movwf	4
  9541     1628  0870               	movf	memset@c,w
  9542     1629  1383               	bcf	3,7	;select IRP bank0
  9543     162A  0080               	movwf	0
  9544     162B                     l3089:
  9545     162B  3001               	movlw	1
  9546     162C  00FF               	movwf	btemp+1
  9547     162D  087F               	movf	btemp+1,w
  9548     162E  07F4               	addwf	memset@p,f
  9549     162F                     l3091:
  9550     162F  3001               	movlw	1
  9551     1630  02F2               	subwf	memset@n,f
  9552     1631  3000               	movlw	0
  9553     1632  1C03               	skipc
  9554     1633  03F3               	decf	memset@n+1,f
  9555     1634  02F3               	subwf	memset@n+1,f
  9556     1635  0A72               	incf	memset@n,w
  9557     1636  1D03               	skipz
  9558     1637  2E3C               	goto	u3621
  9559     1638  0A73               	incf	memset@n+1,w
  9560     1639  1D03               	btfss	3,2
  9561     163A  2E3C               	goto	u3621
  9562     163B  2E3D               	goto	u3620
  9563     163C                     u3621:
  9564     163C  2E26               	goto	l3087
  9565     163D                     u3620:
  9566     163D                     l1086:
  9567     163D  0008               	return
  9568     163E                     __end_of_memset:
  9569                           
  9570                           	psect	text42
  9571     170E                     __ptext42:	
  9572 ;; *************** function _ADC_Start_Conversion_Blocking *****************
  9573 ;; Defined at:
  9574 ;;		line 78 in file "MCAL_LAYER/ADC/hal_adc.c"
  9575 ;; Parameters:    Size  Location     Type
  9576 ;;  adc             1    wreg     PTR const struct .
  9577 ;;		 -> adc(3), 
  9578 ;;  channel         1    5[COMMON] enum E1595
  9579 ;;  result          2    6[COMMON] unsigned short 
  9580 ;; Auto vars:     Size  Location     Type
  9581 ;;  adc             1    9[COMMON] PTR const struct .
  9582 ;;		 -> adc(3), 
  9583 ;;  ret             1    0        unsigned char 
  9584 ;; Return value:  Size  Location     Type
  9585 ;;                  1    wreg      unsigned char 
  9586 ;; Registers used:
  9587 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9588 ;; Tracked objects:
  9589 ;;		On entry : 0/0
  9590 ;;		On exit  : 0/0
  9591 ;;		Unchanged: 0/0
  9592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9593 ;;      Params:         3       0       0       0       0
  9594 ;;      Locals:         1       0       0       0       0
  9595 ;;      Temps:          1       0       0       0       0
  9596 ;;      Totals:         5       0       0       0       0
  9597 ;;Total ram usage:        5 bytes
  9598 ;; Hardware stack levels used: 1
  9599 ;; Hardware stack levels required when called: 1
  9600 ;; This function calls:
  9601 ;;		_ADC_Get_Conversion_Result
  9602 ;;		_ADC_Start_Conversion
  9603 ;; This function is called by:
  9604 ;;		_main
  9605 ;; This function uses a non-reentrant model
  9606 ;;
  9607                           
  9608     170E                     _ADC_Start_Conversion_Blocking:	
  9609                           ;psect for function _ADC_Start_Conversion_Blocking
  9610                           
  9611                           
  9612                           ;incstack = 0
  9613                           ; Regs used in _ADC_Start_Conversion_Blocking: [wreg-fsr0h+status,2+status,0+btemp+1+pcl
      +                          ath+cstack]
  9614                           ;ADC_Start_Conversion_Blocking@adc stored from wreg
  9615     170E  00F9               	movwf	ADC_Start_Conversion_Blocking@adc
  9616     170F                     l3263:
  9617     170F                     l3265:
  9618                           
  9619                           ;MCAL_LAYER/ADC/hal_adc.c: 80:     if(adc == ((void*)0)){
  9620     170F  0879               	movf	ADC_Start_Conversion_Blocking@adc,w
  9621     1710  1D03               	btfss	3,2
  9622     1711  2F13               	goto	u3941
  9623     1712  2F14               	goto	u3940
  9624     1713                     u3941:
  9625     1713  2F15               	goto	l189
  9626     1714                     u3940:
  9627     1714                     l3267:
  9628                           
  9629                           ;MCAL_LAYER/ADC/hal_adc.c: 82:     }
  9630     1714  2F35               	goto	l191
  9631     1715                     l189:	
  9632                           ;MCAL_LAYER/ADC/hal_adc.c: 83:     else{
  9633                           
  9634                           
  9635                           ;MCAL_LAYER/ADC/hal_adc.c: 84:         (ADCON0bits.GO_nDONE = 0);
  9636     1715  1283               	bcf	3,5	;RP0=0, select bank0
  9637     1716  1303               	bcf	3,6	;RP1=0, select bank0
  9638     1717  111F               	bcf	31,2	;volatile
  9639     1718                     l3269:
  9640                           
  9641                           ;MCAL_LAYER/ADC/hal_adc.c: 85:         (ADCON0bits.CHS = adc->channel);
  9642     1718  0879               	movf	ADC_Start_Conversion_Blocking@adc,w
  9643     1719  0084               	movwf	4
  9644     171A  1383               	bcf	3,7	;select IRP bank0
  9645     171B  0800               	movf	0,w
  9646     171C  00F8               	movwf	??_ADC_Start_Conversion_Blocking
  9647     171D  0DF8               	rlf	??_ADC_Start_Conversion_Blocking,f
  9648     171E  0DF8               	rlf	??_ADC_Start_Conversion_Blocking,f
  9649     171F  0DF8               	rlf	??_ADC_Start_Conversion_Blocking,f
  9650     1720  081F               	movf	31,w	;volatile
  9651     1721  0678               	xorwf	??_ADC_Start_Conversion_Blocking,w
  9652     1722  39C7               	andlw	-57
  9653     1723  0678               	xorwf	??_ADC_Start_Conversion_Blocking,w
  9654     1724  009F               	movwf	31	;volatile
  9655     1725                     l3271:
  9656                           
  9657                           ;MCAL_LAYER/ADC/hal_adc.c: 86:         ADC_Start_Conversion(adc);
  9658     1725  0879               	movf	ADC_Start_Conversion_Blocking@adc,w
  9659     1726  160A  118A  254B  160A  118A  	fcall	_ADC_Start_Conversion
  9660     172B                     l3273:
  9661                           
  9662                           ;MCAL_LAYER/ADC/hal_adc.c: 87:         ADC_Get_Conversion_Result(adc,result);
  9663     172B  0876               	movf	ADC_Start_Conversion_Blocking@result,w
  9664     172C  00F0               	movwf	ADC_Get_Conversion_Result@result
  9665     172D  0877               	movf	ADC_Start_Conversion_Blocking@result+1,w
  9666     172E  00F1               	movwf	ADC_Get_Conversion_Result@result+1
  9667     172F  0879               	movf	ADC_Start_Conversion_Blocking@adc,w
  9668     1730  120A  158A  202F  160A  118A  	fcall	_ADC_Get_Conversion_Result
  9669     1735                     l191:
  9670     1735  0008               	return
  9671     1736                     __end_of_ADC_Start_Conversion_Blocking:
  9672                           
  9673                           	psect	text43
  9674     154B                     __ptext43:	
  9675 ;; *************** function _ADC_Start_Conversion *****************
  9676 ;; Defined at:
  9677 ;;		line 37 in file "MCAL_LAYER/ADC/hal_adc.c"
  9678 ;; Parameters:    Size  Location     Type
  9679 ;;  adc             1    wreg     PTR const struct .
  9680 ;;		 -> adc(3), 
  9681 ;; Auto vars:     Size  Location     Type
  9682 ;;  adc             1    0[COMMON] PTR const struct .
  9683 ;;		 -> adc(3), 
  9684 ;;  ret             1    0        unsigned char 
  9685 ;; Return value:  Size  Location     Type
  9686 ;;                  1    wreg      unsigned char 
  9687 ;; Registers used:
  9688 ;;		wreg, status,2, status,0
  9689 ;; Tracked objects:
  9690 ;;		On entry : 0/0
  9691 ;;		On exit  : 0/0
  9692 ;;		Unchanged: 0/0
  9693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9694 ;;      Params:         0       0       0       0       0
  9695 ;;      Locals:         1       0       0       0       0
  9696 ;;      Temps:          0       0       0       0       0
  9697 ;;      Totals:         1       0       0       0       0
  9698 ;;Total ram usage:        1 bytes
  9699 ;; Hardware stack levels used: 1
  9700 ;; This function calls:
  9701 ;;		Nothing
  9702 ;; This function is called by:
  9703 ;;		_ADC_Start_Conversion_Blocking
  9704 ;; This function uses a non-reentrant model
  9705 ;;
  9706                           
  9707     154B                     _ADC_Start_Conversion:	
  9708                           ;psect for function _ADC_Start_Conversion
  9709                           
  9710                           
  9711                           ;incstack = 0
  9712                           ; Regs used in _ADC_Start_Conversion: [wreg+status,2+status,0]
  9713                           ;ADC_Start_Conversion@adc stored from wreg
  9714     154B  00F0               	movwf	ADC_Start_Conversion@adc
  9715     154C                     l3107:
  9716     154C                     l3109:
  9717                           
  9718                           ;MCAL_LAYER/ADC/hal_adc.c: 39:     if(adc == ((void*)0)){
  9719     154C  0870               	movf	ADC_Start_Conversion@adc,w
  9720     154D  1D03               	btfss	3,2
  9721     154E  2D50               	goto	u3631
  9722     154F  2D51               	goto	u3630
  9723     1550                     u3631:
  9724     1550  2D52               	goto	l168
  9725     1551                     u3630:
  9726     1551                     l3111:
  9727                           
  9728                           ;MCAL_LAYER/ADC/hal_adc.c: 41:     }
  9729     1551  2D59               	goto	l173
  9730     1552                     l168:	
  9731                           ;MCAL_LAYER/ADC/hal_adc.c: 42:     else{
  9732                           
  9733                           
  9734                           ;MCAL_LAYER/ADC/hal_adc.c: 43:         ADCON0bits.GO_nDONE = 1;
  9735     1552  1283               	bcf	3,5	;RP0=0, select bank0
  9736     1553  1303               	bcf	3,6	;RP1=0, select bank0
  9737     1554  151F               	bsf	31,2	;volatile
  9738     1555                     l170:	
  9739                           ;MCAL_LAYER/ADC/hal_adc.c: 44:         while(ADCON0bits.GO_nDONE);
  9740                           
  9741     1555  191F               	btfsc	31,2	;volatile
  9742     1556  2D58               	goto	u3641
  9743     1557  2D59               	goto	u3640
  9744     1558                     u3641:
  9745     1558  2D55               	goto	l170
  9746     1559                     u3640:
  9747     1559                     l173:
  9748     1559  0008               	return
  9749     155A                     __end_of_ADC_Start_Conversion:
  9750                           
  9751                           	psect	text44
  9752     082F                     __ptext44:	
  9753 ;; *************** function _ADC_Get_Conversion_Result *****************
  9754 ;; Defined at:
  9755 ;;		line 60 in file "MCAL_LAYER/ADC/hal_adc.c"
  9756 ;; Parameters:    Size  Location     Type
  9757 ;;  adc             1    wreg     PTR const struct .
  9758 ;;		 -> adc(3), 
  9759 ;;  result          2    0[COMMON] PTR unsigned short 
  9760 ;;		 -> RAM(512), 
  9761 ;; Auto vars:     Size  Location     Type
  9762 ;;  adc             1    4[COMMON] PTR const struct .
  9763 ;;		 -> adc(3), 
  9764 ;;  ret             1    0        unsigned char 
  9765 ;; Return value:  Size  Location     Type
  9766 ;;                  1    wreg      unsigned char 
  9767 ;; Registers used:
  9768 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  9769 ;; Tracked objects:
  9770 ;;		On entry : 0/0
  9771 ;;		On exit  : 0/0
  9772 ;;		Unchanged: 0/0
  9773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9774 ;;      Params:         2       0       0       0       0
  9775 ;;      Locals:         1       0       0       0       0
  9776 ;;      Temps:          2       0       0       0       0
  9777 ;;      Totals:         5       0       0       0       0
  9778 ;;Total ram usage:        5 bytes
  9779 ;; Hardware stack levels used: 1
  9780 ;; This function calls:
  9781 ;;		Nothing
  9782 ;; This function is called by:
  9783 ;;		_ADC_Start_Conversion_Blocking
  9784 ;; This function uses a non-reentrant model
  9785 ;;
  9786                           
  9787     082F                     _ADC_Get_Conversion_Result:	
  9788                           ;psect for function _ADC_Get_Conversion_Result
  9789                           
  9790                           
  9791                           ;incstack = 0
  9792                           ; Regs used in _ADC_Get_Conversion_Result: [wreg-fsr0h+status,2+status,0+btemp+1]
  9793                           ;ADC_Get_Conversion_Result@adc stored from wreg
  9794     082F  00F4               	movwf	ADC_Get_Conversion_Result@adc
  9795     0830                     l3113:
  9796     0830                     l3115:
  9797                           
  9798                           ;MCAL_LAYER/ADC/hal_adc.c: 62:     if(adc == ((void*)0)){
  9799     0830  0874               	movf	ADC_Get_Conversion_Result@adc,w
  9800     0831  1D03               	btfss	3,2
  9801     0832  2834               	goto	u3651
  9802     0833  2835               	goto	u3650
  9803     0834                     u3651:
  9804     0834  2836               	goto	l3119
  9805     0835                     u3650:
  9806     0835                     l3117:
  9807                           
  9808                           ;MCAL_LAYER/ADC/hal_adc.c: 64:     }
  9809     0835  2870               	goto	l186
  9810     0836                     l3119:
  9811                           
  9812                           ;MCAL_LAYER/ADC/hal_adc.c: 66:         if(adc->format == RIGHT_JUSTIFIED){
  9813     0836  0874               	movf	ADC_Get_Conversion_Result@adc,w
  9814     0837  3E02               	addlw	2
  9815     0838  0084               	movwf	4
  9816     0839  1383               	bcf	3,7	;select IRP bank0
  9817     083A  0800               	movf	0,w
  9818     083B  1D03               	btfss	3,2
  9819     083C  283E               	goto	u3661
  9820     083D  283F               	goto	u3660
  9821     083E                     u3661:
  9822     083E  284E               	goto	l3123
  9823     083F                     u3660:
  9824     083F                     l3121:
  9825                           
  9826                           ;MCAL_LAYER/ADC/hal_adc.c: 67:             *result = (uint16)(ADRESL + (ADRESH << 8));
  9827     083F  0870               	movf	ADC_Get_Conversion_Result@result,w
  9828     0840  0084               	movwf	4
  9829     0841  1783               	bsf	3,7
  9830     0842  1C71               	btfss	ADC_Get_Conversion_Result@result+1,0
  9831     0843  1383               	bcf	3,7
  9832     0844  1683               	bsf	3,5	;RP0=1, select bank1
  9833     0845  1303               	bcf	3,6	;RP1=0, select bank1
  9834     0846  081E               	movf	30,w	;volatile
  9835     0847  0080               	movwf	0
  9836     0848  0A84               	incf	4,f
  9837     0849  1283               	bcf	3,5	;RP0=0, select bank0
  9838     084A  1303               	bcf	3,6	;RP1=0, select bank0
  9839     084B  081E               	movf	30,w	;volatile
  9840     084C  0080               	movwf	0
  9841                           
  9842                           ;MCAL_LAYER/ADC/hal_adc.c: 68:         }
  9843     084D  2870               	goto	l186
  9844     084E                     l3123:
  9845     084E  0874               	movf	ADC_Get_Conversion_Result@adc,w
  9846     084F  3E02               	addlw	2
  9847     0850  0084               	movwf	4
  9848     0851  0300               	decf	0,w
  9849     0852  1D03               	btfss	3,2
  9850     0853  2855               	goto	u3671
  9851     0854  2856               	goto	u3670
  9852     0855                     u3671:
  9853     0855  2870               	goto	l182
  9854     0856                     u3670:
  9855     0856                     l3125:
  9856                           
  9857                           ;MCAL_LAYER/ADC/hal_adc.c: 70:             *result = (uint16)((ADRESL + (ADRESH << 8)) >
      +                          > 6);
  9858     0856  1283               	bcf	3,5	;RP0=0, select bank0
  9859     0857  1303               	bcf	3,6	;RP1=0, select bank0
  9860     0858  081E               	movf	30,w	;volatile
  9861     0859  00F3               	movwf	??_ADC_Get_Conversion_Result+1
  9862     085A  1683               	bsf	3,5	;RP0=1, select bank1
  9863     085B  1303               	bcf	3,6	;RP1=0, select bank1
  9864     085C  081E               	movf	30,w	;volatile
  9865     085D  00F2               	movwf	??_ADC_Get_Conversion_Result
  9866     085E  3006               	movlw	6
  9867     085F  00FF               	movwf	btemp+1
  9868     0860                     u3685:
  9869     0860  0D73               	rlf	??_ADC_Get_Conversion_Result+1,w
  9870     0861  0CF3               	rrf	??_ADC_Get_Conversion_Result+1,f
  9871     0862  0CF2               	rrf	??_ADC_Get_Conversion_Result,f
  9872     0863  0BFF               	decfsz	btemp+1,f
  9873     0864  2860               	goto	u3685
  9874     0865  0870               	movf	ADC_Get_Conversion_Result@result,w
  9875     0866  0084               	movwf	4
  9876     0867  1783               	bsf	3,7
  9877     0868  1C71               	btfss	ADC_Get_Conversion_Result@result+1,0
  9878     0869  1383               	bcf	3,7
  9879     086A  0872               	movf	??_ADC_Get_Conversion_Result,w
  9880     086B  0080               	movwf	0
  9881     086C  0A84               	incf	4,f
  9882     086D  0873               	movf	??_ADC_Get_Conversion_Result+1,w
  9883     086E  0080               	movwf	0
  9884     086F  2870               	goto	l186
  9885     0870                     l182:	
  9886                           ;MCAL_LAYER/ADC/hal_adc.c: 73:     }
  9887                           
  9888     0870                     l186:
  9889     0870  0008               	return
  9890     0871                     __end_of_ADC_Get_Conversion_Result:
  9891     007E                     btemp	set	126	;btemp
  9892     007E                     wtemp0	set	126
  9893                           
  9894                           	psect	config
  9895                           
  9896                           ;Config register CONFIG @ 0x2007
  9897                           ;	Oscillator Selection bits
  9898                           ;	FOSC = EXTRC, RC oscillator
  9899                           ;	Watchdog Timer Enable bit
  9900                           ;	WDTE = OFF, WDT disabled
  9901                           ;	Power-up Timer Enable bit
  9902                           ;	PWRTE = OFF, PWRT disabled
  9903                           ;	Brown-out Reset Enable bit
  9904                           ;	BOREN = OFF, BOR disabled
  9905                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  9906                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  9907                           ;	Data EEPROM Memory Code Protection bit
  9908                           ;	CPD = OFF, Data EEPROM code protection off
  9909                           ;	Flash Program Memory Write Enable bits
  9910                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  9911                           ;	In-Circuit Debugger Mode bit
  9912                           ;	DEBUG = 0x1, unprogrammed default
  9913                           ;	Flash Program Memory Code Protection bit
  9914                           ;	CP = OFF, Code protection off
  9915     2007                     	org	8199
  9916     2007  3F3B               	dw	16187

Data Sizes:
    Strings     33
    Constant    12
    Data        48
    BSS         88
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     67      80
    BANK1            80      0      80
    BANK3            96      0      43
    BANK2            96      0       0

Pointer List with Targets:

    ADC_Get_Conversion_Result@adc	PTR const struct . size(1) Largest target is 3
		 -> adc(BANK1[3]), 

    ADC_Get_Conversion_Result@result	PTR unsigned short  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    ADC_INIT@adc	PTR const struct . size(1) Largest target is 3
		 -> adc(BANK1[3]), 

    ADC_Start_Conversion@adc	PTR const struct . size(1) Largest target is 3
		 -> adc(BANK1[3]), 

    ADC_Start_Conversion_Blocking@adc	PTR const struct . size(1) Largest target is 3
		 -> adc(BANK1[3]), 

    Convert_uint16_to_string@str	PTR unsigned char  size(1) Largest target is 6
		 -> lcd_show(BANK1[6]), lcd_show_max(BANK1[6]), 

    EXT_INTX_HANDLER	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    EXT_RB4_HIGH_HANDLER	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    EXT_RB4_LOW_HANDLER	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    EXT_RB5_HIGH_HANDLER	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    EXT_RB5_LOW_HANDLER	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    EXT_RB6_HIGH_HANDLER	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    EXT_RB6_LOW_HANDLER	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    EXT_RB7_HIGH_HANDLER	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    EXT_RB7_LOW_HANDLER	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    f$.$buffer	PTR unsigned char  size(1) Largest target is 0

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    gpio_pin_direction_initialize@pin	PTR const struct . size(1) Largest target is 7
		 -> keypad(BANK1[7]), keypad$COLOUMNS_PIN(BANK1[3]), keypad$ROWS_PIN(BANK1[4]), lcd(BANK1[6]), 
		 -> lcd$pins(BANK1[4]), motor1(BANK1[2]), motor1$pins(BANK1[2]), motor2(BANK1[2]), 
		 -> motor2$pins(BANK1[2]), 

    gpio_pin_initialize@pin	PTR const struct . size(1) Largest target is 7
		 -> keypad(BANK1[7]), keypad$COLOUMNS_PIN(BANK1[3]), keypad$ROWS_PIN(BANK1[4]), lcd(BANK1[6]), 
		 -> lcd$pins(BANK1[4]), motor1(BANK1[2]), motor1$pins(BANK1[2]), motor2(BANK1[2]), 
		 -> motor2$pins(BANK1[2]), 

    gpio_pin_read_logic@logic	PTR enum E1519 size(1) Largest target is 1
		 -> keypad_read_value@val(BANK0[1]), 

    gpio_pin_read_logic@pin	PTR const struct . size(1) Largest target is 7
		 -> keypad(BANK1[7]), keypad$COLOUMNS_PIN(BANK1[3]), 

    gpio_pin_write_logic@pin	PTR const struct . size(1) Largest target is 7
		 -> keypad(BANK1[7]), keypad$COLOUMNS_PIN(BANK1[3]), keypad$ROWS_PIN(BANK1[4]), lcd(BANK1[6]), 
		 -> lcd$pins(BANK1[4]), motor1(BANK1[2]), motor1$pins(BANK1[2]), motor2(BANK1[2]), 
		 -> motor2$pins(BANK1[2]), 

    keypad_initialize@keypad	PTR const struct . size(1) Largest target is 7
		 -> keypad(BANK1[7]), 

    keypad_read_value@keypad	PTR const struct . size(1) Largest target is 7
		 -> keypad(BANK1[7]), 

    keypad_read_value@value	PTR unsigned char  size(1) Largest target is 4
		 -> temp(BANK1[4]), val(BANK0[1]), 

    lcd_4bits_initialize@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd(BANK1[6]), 

    lcd_4bits_send_char@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd(BANK1[6]), 

    lcd_4bits_send_command@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd(BANK1[6]), 

    lcd_4bits_send_string@data	PTR unsigned char  size(2) Largest target is 15
		 -> lcd_show(BANK1[6]), lcd_show_max(BANK1[6]), STR_4(CODE[11]), STR_5(CODE[15]), 
		 -> STR_6(CODE[15]), 

    lcd_4bits_send_string@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd(BANK1[6]), 

    lcd_4bits_send_string_pos@data	PTR unsigned char  size(2) Largest target is 15
		 -> lcd_show(BANK1[6]), lcd_show_max(BANK1[6]), STR_4(CODE[11]), STR_5(CODE[15]), 
		 -> STR_6(CODE[15]), 

    lcd_4bits_send_string_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd(BANK1[6]), 

    memset@dest	PTR void  size(1) Largest target is 6
		 -> lcd_show(BANK1[6]), lcd_show_max(BANK1[6]), 

    memset@p	PTR unsigned char  size(1) Largest target is 6
		 -> lcd_show(BANK1[6]), lcd_show_max(BANK1[6]), 

    motor_initialize@motor	PTR const struct . size(1) Largest target is 2
		 -> motor1(BANK1[2]), motor2(BANK1[2]), 

    motor_turn_left@motor	PTR const struct . size(1) Largest target is 2
		 -> motor2(BANK1[2]), 

    motor_turn_off@motor	PTR const struct . size(1) Largest target is 2
		 -> motor1(BANK1[2]), motor2(BANK1[2]), 

    motor_turn_right@motor	PTR const struct . size(1) Largest target is 2
		 -> motor1(BANK1[2]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTB(SFR0[1]), PORTC(SFR0[1]), PORTD(SFR0[1]), 
		 -> PORTE(SFR0[1]), 

    READ_DATA_EEPROM@data	PTR unsigned char  size(1) Largest target is 2
		 -> Max_Temp(BANK0[2]), 

    Result_Format@adc	PTR const struct . size(1) Largest target is 3
		 -> adc(BANK1[3]), 

    S1219$buffer	PTR unsigned char  size(1) Largest target is 0

    S1219$source	PTR const unsigned char  size(1) Largest target is 0

    send_4bits@lcd	PTR struct . size(1) Largest target is 6
		 -> lcd(BANK1[6]), 

    send_enable_signal@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd(BANK1[6]), 

    set_cursor@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd(BANK1[6]), 

    sp__memset	PTR void  size(1) Largest target is 6
		 -> lcd_show(BANK1[6]), lcd_show_max(BANK1[6]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 11
		 -> Convert_uint16_to_string@temp(BANK0[6]), Convert_uint32_to_string@temp(COMMON[11]), Convert_uint8_to_string@temp(COMMON[4]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(SFR1[1]), TRISB(SFR1[1]), TRISC(SFR1[1]), TRISD(SFR1[1]), 
		 -> TRISE(SFR1[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _motor_turn_right->_gpio_pin_write_logic
    _motor_turn_off->_gpio_pin_write_logic
    _motor_turn_left->_gpio_pin_write_logic
    _set_cursor->_lcd_4bits_send_command
    _lcd_4bits_send_string->_lcd_4bits_send_char
    _lcd_4bits_send_char->_send_4bits
    _keypad_read_value->_gpio_pin_read_logic
    _keypad_read_value->_gpio_pin_write_logic
    _mcal_initialize->_ADC_INIT
    _ADC_INIT->_Result_Format
    _ecu_initialzie->_motor_initialize
    _motor_initialize->_gpio_pin_initialize
    _lcd_4bits_initialize->_lcd_4bits_send_command
    _lcd_4bits_send_command->_send_4bits
    _send_enable_signal->_gpio_pin_write_logic
    _send_4bits->_gpio_pin_write_logic
    _keypad_initialize->_gpio_pin_initialize
    _gpio_pin_initialize->_gpio_pin_write_logic
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    ___fldiv->___xxtofl
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _ADC_Start_Conversion_Blocking->_ADC_Get_Conversion_Result

Critical Paths under _main in BANK0

    _main->___fltol
    _lcd_4bits_send_string_pos->_lcd_4bits_send_string
    _lcd_4bits_send_string_pos->_set_cursor
    _set_cursor->_lcd_4bits_send_command
    _lcd_4bits_send_string->_lcd_4bits_send_char
    _ecu_initialzie->_lcd_4bits_initialize
    _lcd_4bits_initialize->_lcd_4bits_send_command
    ___fltol->___fldiv
    ___fldiv->___flmul
    _Convert_uint16_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   59969
                                             62 BANK0      5     5      0
      _ADC_Start_Conversion_Blocking
           _Convert_uint16_to_string
                   _READ_DATA_EEPROM
                  _WRITE_DATA_EEPROM
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
             _apllication_initilaize
                  _keypad_read_value
          _lcd_4bits_send_string_pos
                    _motor_turn_left
                     _motor_turn_off
                   _motor_turn_right
 ---------------------------------------------------------------------------------
 (1) _motor_turn_right                                     2     2      0    2372
                                              8 COMMON     2     2      0
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _motor_turn_off                                       2     2      0    2372
                                              8 COMMON     2     2      0
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _motor_turn_left                                      2     2      0    2339
                                              8 COMMON     2     2      0
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _lcd_4bits_send_string_pos                            6     2      4   19504
                                              6 BANK0      6     2      4
              _lcd_4bits_send_string
                         _set_cursor
 ---------------------------------------------------------------------------------
 (2) _set_cursor                                           4     2      2    9726
                                              2 BANK0      4     2      2
             _lcd_4bits_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bits_send_string                                4     2      2    8331
                                              2 BANK0      4     2      2
                _lcd_4bits_send_char
 ---------------------------------------------------------------------------------
 (3) _lcd_4bits_send_char                                  4     3      1    8108
                                             12 COMMON     2     1      1
                                              0 BANK0      2     2      0
               _gpio_pin_write_logic
                         _send_4bits
                 _send_enable_signal
 ---------------------------------------------------------------------------------
 (1) _keypad_read_value                                    9     8      1    3449
                                              8 COMMON     3     2      1
                                              0 BANK0      5     5      0
                             ___bmul
                _gpio_pin_read_logic
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_read_logic                                  8     7      1     464
                                              0 COMMON     8     7      1
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1     118
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _apllication_initilaize                               0     0      0   19792
                     _ecu_initialzie
                    _mcal_initialize
 ---------------------------------------------------------------------------------
 (2) _mcal_initialize                                      1     1      0     210
                           _ADC_INIT
 ---------------------------------------------------------------------------------
 (3) _ADC_INIT                                             3     3      0     208
                                              3 COMMON     3     3      0
                      _Result_Format
 ---------------------------------------------------------------------------------
 (4) _Result_Format                                        4     4      0      85
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _ecu_initialzie                                       0     0      0   19582
                  _keypad_initialize
               _lcd_4bits_initialize
                   _motor_initialize
 ---------------------------------------------------------------------------------
 (3) _motor_initialize                                     2     2      0    3330
                                             12 COMMON     2     2      0
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (3) _lcd_4bits_initialize                                 6     6      0   12817
                                              2 BANK0      6     6      0
                _gpio_pin_initialize
             _lcd_4bits_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bits_send_command                               4     3      1    9198
                                             12 COMMON     2     1      1
                                              0 BANK0      2     2      0
               _gpio_pin_write_logic
                         _send_4bits
                 _send_enable_signal
 ---------------------------------------------------------------------------------
 (4) _send_enable_signal                                   3     3      0    2454
                                              8 COMMON     3     3      0
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _send_4bits                                           4     3      1    2892
                                              8 COMMON     4     3      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _keypad_initialize                                    4     4      0    3435
                                              0 BANK0      3     3      0
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_initialize                                  4     4      0    3188
                                              8 COMMON     4     4      0
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                 8     7      1    2230
                                              0 COMMON     8     7      1
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_initialize                        7     7      0     394
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                             52 BANK0     10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2417
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1273
                                             26 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _WRITE_DATA_EEPROM                                    4     1      3     219
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _READ_DATA_EEPROM                                     3     0      3     196
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (1) _Convert_uint16_to_string                            11     8      3    4560
                                             29 BANK0     11     8      3
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             19    16      3    3376
                                             12 BANK0     17    14      3
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     2      2    2850
                                              8 BANK0      4     2      2
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           12    10      2    2543
                                             10 COMMON     4     2      2
                                              0 BANK0      8     8      0
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     782
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMMON     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                               6     2      4     651
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _ADC_Start_Conversion_Blocking                        6     3      3     593
                                              5 COMMON     5     2      3
          _ADC_Get_Conversion_Result
               _ADC_Start_Conversion
 ---------------------------------------------------------------------------------
 (2) _ADC_Start_Conversion                                 2     2      0      63
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Get_Conversion_Result                            6     4      2     227
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Start_Conversion_Blocking
     _ADC_Get_Conversion_Result
     _ADC_Start_Conversion
   _Convert_uint16_to_string
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _READ_DATA_EEPROM
   _WRITE_DATA_EEPROM
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
   ___fltol
     ___fldiv (ARG)
     ___flmul (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _apllication_initilaize
     _ecu_initialzie
       _keypad_initialize
         _gpio_pin_initialize
           _gpio_pin_direction_initialize
           _gpio_pin_write_logic
       _lcd_4bits_initialize
         _gpio_pin_initialize
         _lcd_4bits_send_command
           _gpio_pin_write_logic
           _send_4bits
             _gpio_pin_write_logic
           _send_enable_signal
             _gpio_pin_write_logic
       _motor_initialize
         _gpio_pin_initialize
     _mcal_initialize
       _ADC_INIT
         _Result_Format
   _keypad_read_value
     ___bmul
     _gpio_pin_read_logic
     _gpio_pin_write_logic
   _lcd_4bits_send_string_pos
     _lcd_4bits_send_string
       _lcd_4bits_send_char
         _gpio_pin_write_logic
         _send_4bits
         _send_enable_signal
     _set_cursor
       _lcd_4bits_send_command
   _motor_turn_left
     _gpio_pin_write_logic
   _motor_turn_off
     _gpio_pin_write_logic
   _motor_turn_right
     _gpio_pin_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      2B       9       44.8%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      50       7      100.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     43      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      D9      12        0.0%
ABS                  0      0      D9       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Aug 16 14:41:41 2024

         ADC_Get_Conversion_Result@adc 0074                           ___fldiv@aexp 0053  
                         ___fldiv@bexp 0052                                      pc 0002  
                         ___fldiv@sign 004B                         ___bmul@product 0071  
                                   l30 08B7                                     l25 0D8F  
                                   l35 08FF                                     l53 16E6  
                                   l48 17FF                                     l69 0949  
                                   l93 0022                                     l94 0023  
                                   l89 0993                           ___awdiv@sign 0075  
          keypad_read_value@l_coloumns 0024                                     fsr 0004  
                  __Umul8_16@word_mpld 0076                       _READ_DATA_EEPROM 156B  
                                  l200 16C2                                    l104 1765  
                                  l113 15BB                                    l123 1607  
                                  l221 157C                                    l118 1621  
                                  l215 1694                                    l311 0C37  
                                  l160 082E                                    l128 15ED  
                                  l217 1698                                    l145 15D4  
            _lcd_4bits_send_string_pos 16C3                                    l170 1555  
                                  l218 169E                                    l306 0FFF  
                                  l173 1559                                    l421 1537  
                                  l325 0CD9                                    l182 0870  
                                  l158 080D                                    l191 1735  
                                  l168 1552                                    l186 0870  
                                  l266 0F1F                                    l506 154A  
                                  l189 1715                                    l525 17CA  
                                  l197 16A6                                    l359 0C2A  
                                  l199 16AA                                    l650 15A4  
                                  l538 0B1F                                    l483 01E2  
                                  l825 0B82                                    l818 0B97  
                                  l828 0B97                                    l790 0A42  
                                  l777 0AA9                                    l981 0316  
                                  l983 048E                                    l997 0408  
                                  _adc 00C9                                    _abs 155A  
                                  _lcd 00BF                                    _val 006F  
                                  fsr0 0004                                    indf 0000  
                         ___awmod@sign 0075                        _mcal_initialize 1531  
                    ?_motor_initialize 0070                           ___flmul@aexp 0032  
                         ___flmul@bexp 0033                           ___flmul@sign 002D  
                         ___flmul@temp 0038                           ___flmul@prod 0034  
                   ??_motor_initialize 007C                           ___fltol@exp1 005D  
                                 l1003 047A                                   l1021 07D3  
                                 l1040 16FB                                   l1042 170D  
                                 l1131 0112                                   l1027 0743  
                                 ?_abs 0076                                   l1144 156A  
                                 l1137 167D                                   l1065 0DB2  
                                 l1067 0E47                                   l3011 17B5  
                                 l1156 09E9                                   l1093 165C  
                                 l3101 1653                                   l3021 17C4  
                                 l3005 17A2                                   l1086 163D  
                                 l1078 0E11                                   l3111 1551  
                                 l1167 0802                                   l1079 0E1D  
                                 l3007 17A9                                   l3031 081E  
                                 l3023 0804                                   l3121 083F  
                                 l3113 0830                                   l3041 1660  
                                 l3017 17B6                                   l3009 17AF  
                                 l3105 15BC                                   l3033 0824  
                                 l3025 0805                                   l3123 084E  
                                 l3115 0830                                   l3107 154C  
                                 l3043 1663                                   l3019 17BE  
                                 l3035 082A                                   l3027 080A  
                                 l3131 0C2D                                   l3051 1739  
                                 l3211 16CB                                   l3125 0856  
                                 l3117 0835                                   l3109 154C  
                                 l3045 166D                                   l3221 090C  
                                 l3301 1572                                   l3029 0811  
                                 l3037 082D                                   l3141 0C5B  
                                 l3133 0C32                                   l3053 173A  
                                 l3213 16CC                                   l3119 0836  
                                 l3047 167B                                   l3231 093E  
                                 l3223 091A                                   l3303 1573  
                                 l3311 1545                                   l3151 0C97  
                                 l3143 0C69                                   l3135 0C3A  
                                 l3071 17CF                                   l3055 173F  
                                 l3063 175C                                   l3207 16C6  
                                 l3225 0921                                   l3217 0900  
                                 l3305 1574                                   l3401 02C5  
                                 l4041 16BA                                   l3161 1531  
                                 l3153 0CA0                                   l3145 0C72  
                                 l3137 0C44                                   l3129 0C2C  
                                 l3313 0AAD                                   l3081 17FE  
                                 l3073 17D4                                   l3057 1742  
                                 l3065 1764                                   l3209 16C6  
                                 l3233 1609                                   l3091 162F  
                                 l3227 092E                                   l3219 0909  
                                 l3307 1575                                   l3411 02D8  
                                 l3403 02C9                                   l4043 0FF6  
                                 l2611 0F27                                   l3163 1531  
                                 l3171 159A                                   l3147 0C80  
                                 l3155 0CAE                                   l3139 0C52  
                                 l3331 0AB9                                   l3315 0AB1  
                                 l3075 17D7                                   l3059 174F  
                                 l3243 15EF                                   l3235 1609  
                                 l3085 1623                                   l3093 1641  
                                 l3229 093A                                   l3501 03ED  
                                 l3421 02F0                                   l3413 02E0  
                                 l3405 02CD                                   l3181 16E8  
                                 l2701 0EC4                                   l2621 0F59  
                                 l2613 0F2A                                   l3309 1540  
                                 l3173 159C                                   l3165 1591  
                                 l3149 0C89                                   l3157 0CD8  
                                 l3341 0ADF                                   l3333 0AC1  
                                 l3325 0AB8                                   l3317 0AB6  
                                 l3077 17EA                                   l3069 17CE  
                                 l3245 15EF                                   l3253 15D6  
                                 l3237 160E                                   l3271 1725  
                                 l3263 170F                                   l3087 1626  
                                 l2711 0A44                                   l3095 1645  
                                 l3511 0412                                   l3503 03F1  
                                 l3431 0303                                   l3423 02F4  
                                 l3415 02E1                                   l3407 02CE  
                                 l3191 1709                                   l3183 16EA  
                                 l2703 0EEC                                   l2631 0F90  
                                 l2623 0F62                                   l2615 0F34  
                                 l2607 0F21                                   l3175 159E  
                                 l3167 1592                                   l3351 0AF3  
                                 l3335 0AC7                                   l3319 0AB7  
                                 l3079 17F0                                   l3247 15F4  
                                 l3255 15D6                                   l3239 160F  
                     ??_motor_turn_off 0078                                   l3273 172B  
                                 l3265 170F                                   l3089 162B  
                                 l2721 0A58                                   l2713 0A48  
                                 l2801 09D2                                   l3097 1647  
                                 l3281 1685                                   l3521 0450  
                                 l3513 0420                                   l3505 0405  
                                 l3441 032A                                   l3433 030B  
                                 l3425 02F8                                   l3409 02D3  
                                 l3417 02E3                                   l3185 16F1  
                                 l3601 058E                                   l3361 0B20  
                                 l2633 0F9F                                   l2625 0F70  
                                 l2617 0F42                                   l2641 0FFE  
                                 l2609 0F22                                   l3177 15A3  
                                 l3169 1596                                   l3353 0B0B  
                                 l3337 0ACD                                   l3249 15F5  
                                 l3257 15DB                                   l3267 1714  
                                 l2731 0A6E                                   l2723 0A5C  
                                 l2715 0A4D                                   l3099 1649  
                                 l3291 1691                                   l3283 1689  
                                 l3531 047E                                   l3523 045E  
                                 l3515 0424                                   l3443 032E  
                                 l3435 030C                                   l3427 02F9  
                                 l3419 02EB                                   l3187 16F5  
                                 l3611 05EC                                   l3603 05AA  
                                 l3371 0B48                                   l3363 0B2B  
                                 l2707 0F13                                   l2635 0FC6  
                                 l2627 0F79                                   l2619 0F4B  
                                 l2651 094B                                   l3355 0B0F  
                                 l3347 0AE2                                   l3339 0AD6  
                                 l3259 15DC                                   l3269 1718  
                                 l2741 0A8E                                   l2733 0A72  
                                 l2725 0A5E                                   l2717 0A4F  
                                 l2709 0A43                                   l2805 155A  
                                 l2901 00BC                                   l3293 1693  
                                 l3285 168B                                   l3277 167E  
                                 l3533 0482                                   l3525 046D  
                                 l3517 043D                                   l3509 040D  
                                 l3461 036F                                   l3453 0345  
                                 l3429 02FE                                   l3437 030E  
                                 l3189 1704                                   l3621 0676  
                                 l3613 0609                                   l3605 05B3  
                                 l3373 0B50                                   l3701 0DC6  
                                 l2629 0F87                                   l2821 0BAC  
                                 l2813 0B99                                   l2653 0950  
                                 l2661 0004                                   l3357 0B15  
                                 l3349 0AEC                                   l2743 0A95  
                                 l2735 0A76                                   l2727 0A64  
                                 l2719 0A53                                   l2807 155E  
                                 l2911 00E6                                   l2903 00C1  
                                 l3295 1699                                   l3287 168E  
                                 l3279 1682                                   l3535 0484  
                                 l3527 0471                                   l3519 0443  
                                 l3471 038D                                   l3463 0371  
                                 l3455 0357                                   l3439 031E  
                                 l3447 0337                                   l3631 0706  
                                 l3623 06A1                                   l3615 0620  
                                 l3607 05C1                                   l3551 049C  
                                 l3383 0B5E                                   l3375 0B52  
                                 l3367 0B34                                   l3711 0DEC  
                                 l3703 0DCA                                   l2639 0FEE  
                                 l2831 0BE8                                   l2823 0BBA  
                                 l2815 0B9A                                   l2655 0953  
                                 l2671 0019                                   l2663 0004  
                                 l3359 0B19                                   l2737 0A87  
                                 l2729 0A67                                   l2745 0A9B  
                                 l2761 09F6                                   l2753 09EA  
                                 l2809 155F                                   l2905 00C6  
                                 l2913 00EC                                   l3297 156B  
                                 l3289 168F                                   l3537 0488  
                                 l3529 0479                                   l3465 0376  
                                 l3473 0396                                   l3481 03BB  
                                 l3457 035F                                   l3449 033C  
                                 l3633 070F                                   l3641 0723  
                                 l3625 06C7                                   l3617 063D  
                                 l3609 05DE                                   l3561 04B1  
                                 l3553 049D                                   l3545 048F  
                                 l3393 0B77                                   l3385 0B67  
                                 l3377 0B56                                   l3369 0B47  
                                 l3721 0E15                                   l3713 0DF5  
                                 l3705 0DD3                                   l2681 0E4F  
                                 l2833 0BF1                                   l2825 0BC3  
                                 l2841 0C29                                   l2817 0B9F  
                                 l2657 0992                                   l2649 094B  
                                 l2665 0009                                   l2747 0AA0  
                                 l2739 0A8D                                   l2771 0A0F  
                                 l2763 09FA                                   l2755 09EB  
                                 l2907 00CB                                   l2915 00F3  
                                 l3299 156F                                   l3491 03D8  
                                 l3483 03C1                                   l3475 03A8  
                                 l3467 0388                                   l3459 0367  
                                 l3643 0727                                   l3635 0713  
                                 l3627 06EF                                   l3619 0668  
                                 l3571 04C7                                   l3563 04B9  
                                 l3555 04A2                                   l3547 0494  
                                 l3395 0B87                                   l3387 0B70  
                                 l3731 0E3F                                   l3723 0E1F  
                                 l3715 0DFC                                   l3707 0DDA  
                                 l2691 0E87                                   l2683 0E59  
                                 l2675 0E49                                   l2835 0BFF  
                                 l2827 0BD1                                   l2819 0BA2  
                                 l2667 000C                                   l2851 087C  
                                 l2931 0CE4                                   l2749 0AA5  
                                 l2781 0A2E                                   l2773 0A13  
                                 l2765 09FF                                   l2757 09EF  
                                 l2909 00D4                                   l3493 03D9  
                                 l3485 03C9                                   l3477 03A9  
                                 l3469 038C                                   l3661 0778  
                                 l3653 0748                                   l3645 0728  
                                 l3637 0714                                   l3629 06F8  
                                 l3581 04E3                                   l3573 04CC  
                                 l3565 04BE                                   l3557 04A7  
                                 l3549 0498                                   l3397 0B8C  
                                 l3725 0E35                                   l3717 0E07  
                                 l3709 0DDE                                   l2693 0E95  
                                 l2685 0E67                                   l2677 0E49  
                                 l2837 0C08                                   l2829 0BDA  
                                 l2669 0015                                   l2853 08B6  
                                 l2845 0874                                   l2941 0D00  
                                 l2933 0CF7                                   l2925 0CDD  
                                 l2861 16A5                                   l2775 0A17  
                                 l2767 0A05                                   l2783 0A34  
                                 l2759 09F4                                   l2791 0994  
                                 l2919 00FB                                   l3495 03E2  
                                 l3487 03CB                                   l3479 03B7  
                                 l3399 02C0                                   l3671 07AF  
                                 l3655 074D                                   l3663 077E  
                                 l3647 072C                                   l3639 071D  
                                 l3591 0504                                   l3583 04E8  
                                 l3575 04D1                                   l3567 04C2  
                                 l3559 04AF                                   l3727 0E3A  
                                 l3719 0E0B                                   l2695 0E9E  
                                 l2687 0E70                                   l2679 0E4E  
                                 l2839 0C16                                   l2847 0874  
                                 l2951 0D39                                   l2943 0D06  
                                 l2927 0CDE                                   l2785 0A39  
                                 l2777 0A21                                   l2769 0A08  
                                 l2793 0999                                   l2881 0049  
                                 l2873 0027                                   l3489 03D4  
                                 l3497 03E8                                   l3673 07B1  
                                 l3681 07C7                                   l3665 078B  
                                 l3657 075B                                   l3649 0740  
                                 l3593 0511                                   l3585 04ED  
                                 l3577 04D9                                   l3569 04C6  
                                 l3729 0E3E                                   l2697 0EAC  
                                 l2689 0E7E                                   l2849 0879  
                                 l2961 0D67                                   l2953 0D3F  
                                 l2945 0D0C                                   l2929 0CE3  
                                 l2865 16AE                                   l2857 16A0  
                                 l3921 017F                                   l3913 0113  
                                 l2787 0A3E                                   l2779 0A27  
                                 l2795 099E                                   l2891 0079  
                                 l2883 004F                                   l2875 0036  
                                 l3499 03EC                                   l3683 07CB  
                                 l3675 07BD                                   l3667 0796  
                                 l3659 075F                                   l3595 052C  
                                 l3579 04DB                                   l3691 0D9A  
                                 l2699 0EB5                                   l2963 0D71  
                                 l2955 0D49                                   l2947 0D1B  
                                 l2939 0CF8                                   l2859 16A0  
                                 l2971 08BB                                   l3931 01AE  
                                 l3923 018A                                   l3915 0118  
                                 l2797 09A5                                   l2893 007B  
                                 l2885 005B                                   l2877 003C  
                                 l3677 07C1                                   l3669 07A5  
                                 l3597 0548                                   l3589 04F6  
                                 l3693 0DAA                                   l2965 0D7B  
                                 l2957 0D53                                   l2949 0D25  
                                 l2973 08BB                                   l3941 01C7  
                                 l3925 0192                                   l3917 0123  
                                 l2799 09B4                                   l2895 0082  
                                 l2887 0067                                   l2879 0045  
                                 l3679 07C2                                   l3599 0572  
                                 l3695 0DBA                                   l3687 0D91  
                                 l2967 0D85                                   l2959 0D5D  
                                 l2983 15A6                                   l2975 08C0  
                                 l3943 01D6                                   l3927 019A  
                                 l3919 012E                                   l2897 00A1  
                                 l2889 0074                                   l3689 0D96  
                                 l2993 1799                                   l2985 15A6  
                                 l2977 08C3                                   l3961 01FA  
                                 l3953 01E5                                   l3945 01DC  
                                 l3937 01B2                                   l3929 019F  
                                 l2899 00B6                                   l3699 0DC3  
                                 l2995 179B                                   l2987 15AB  
                                 l2979 08FE                                   l3971 0256  
                                 l3955 01F4                                   l3947 01E4  
                                 l3939 01BB                                   l3963 0200  
                                 l2997 17A0                                   l2989 15AC  
                                 l3981 0288                                   l3973 0264  
                                 l3965 020B                                   l2999 17A1  
                                 l3983 0295                                   l3975 026F  
                                 l3967 0212                                   l3959 01F6  
                                 l3985 02A1                                   l3977 0278  
                                 l3969 0251                                   l3987 02AD  
                                 l3979 027F                                   l3989 02B1  
                                 STR_1 103A                                   STR_2 103A  
                                 STR_4 1020                                   STR_5 101C  
                                 STR_6 102B                                   u3010 0A48  
                                 u3011 0A47                                   u3100 0AA0  
                                 u3020 0A53                                   u3004 0EF9  
                                 u3101 0A9F                                   u3021 0A52  
                                 u3005 0EF7                                   u3030 0A64  
                                 u3110 09EF                                   u3031 0A63  
                                 u3111 09EE                                   u3120 09FA  
                                 u3200 0999                                   u4000 0B1F  
                                 u3121 09F9                                   u3201 0998  
                                 u4001 0B1E                                   u3050 0A76  
                                 u3130 0A05                                   u3210 099E  
                                 u4010 0B2B                                   u3051 0A75  
                                 u3131 0A04                                   u3211 099D  
                                 u4011 0B2A                                   u3220 09B4  
                                 u4100 0B8C                                   u4020 0B42  
                                 u3300 0BDA                                   u3045 0A68  
                                 u3221 09B3                                   u4101 0B8B  
                                 u3301 0BD9                                   u3070 0A87  
                                 u3150 0A17                                   u3230 09D2  
                                 u4110 02CD                                   u4030 0B56  
                                 u3310 0BE8                                   u3071 0A86  
                                 u3151 0A16                                   u3231 09D1  
                                 u4111 02CC                                   u4031 0B55  
                                 u3311 0BE7                                   u3160 0A21  
                                 u3240 155E                                   u3400 005B  
                                 u4120 02D3                                   u4040 0B5D  
                                 u3320 0BF1                                   u3065 0A77  
                                 u3161 0A20                                   u3145 0A09  
                                 u3241 155D                                   u3401 005A  
                                 u4121 02D2                                   u4041 0B5C  
                                 u4025 0B3D                                   u3321 0BF0  
                                 u3090 0A9B                                   u3410 0067  
                                 u4130 02D8                                   u3330 0BFF  
                                 u3250 0B9F                                   u3091 0A9A  
                                 u3075 0A83                                   u3235 09CE  
                                 u3411 0066                                   u4131 02D7  
                                 u3331 0BFE                                   u3251 0B9E  
                                 u3180 0A34                                   u3420 0080  
                                 u4300 03EC                                   u4220 038C  
                                 u4140 02F8                                   u4060 0B6F  
                                 u3340 0C08                                   u3260 0BAC  
                                 u3500 0D0C                                   u3085 0A8F  
                                 u3181 0A33                                   u3165 0A1D  
                                 u3421 007E                                   u4301 03EB  
                                 u4221 038B                                   u4205 0378  
                                 u4141 02F7                                   u4061 0B6E  
                                 u3341 0C07                                   u3261 0BAB  
                                 u3501 0D0B                                   u3190 0A39  
                                 u3430 0081                                   u4310 03F1  
                                 u4150 02FE                                   u4070 0B76  
                                 u2710 0F27                                   u3350 0C16  
                                 u3270 0BBA                                   u3510 08C0  
                                 u3191 0A38                                   u3175 0A28  
                                 u4311 03F0                                   u4215 0381  
                                 u4151 02FD                                   u4071 0B75  
                                 u4055 0B5F                                   u2711 0F26  
                                 u3351 0C15                                   u3271 0BB9  
                                 u3511 08BF                                   u3440 00BC  
                                 u4320 0405                                   u4240 03A8  
                                 u4160 0303                                   u4400 049C  
                                 u2800 0F90                                   u2720 0F34  
                                 u3280 0BC3                                   u3360 0879  
                                 u3600 17D4                                   u3441 00BB  
                                 u4321 0404                                   u4241 03A7  
                                 u4161 0302                                   u4401 049B  
                                 u2801 0F8F                                   u2721 0F33  
                                 u3281 0BC2                                   u3361 0878  
                                 u3601 17D3                            main@counter 0061  
                                 u3450 00C1                                   u4330 040C  
                                 u4250 03C1                                   u4170 031E  
                                 u4410 04A2                                   u4090 0B87  
                                 u2810 0F9E                                   u2730 0F42  
                                 u3290 0BD1                                   u3530 15AB  
                                 u3610 17FE                                   u3451 00C0  
                                 u4331 040B                                   u4251 03C0  
                                 u4235 038F                                   u4171 031D  
                                 u4411 04A1                                   u4091 0B86  
                                 u2811 0F9D                                   u2731 0F41  
                                 u3291 0BD0                                   u3531 15AA  
                                 u3611 17FD                                   u3620 163D  
                                 u3460 00C6                                   u4340 0412  
                                 u4260 03C9                                   u4180 033C  
                                 u4420 04A7                                   u2900 0E67  
                                 u2740 0F4B                                   u3540 17A0  
                                 u3380 16A5                                   u3700 0C37  
                                 u5300 01E2                                   u3621 163C  
                                 u3461 00C5                                   u4341 0411  
                                 u4261 03C8                                   u4245 03A4  
                                 u4181 033B                                   u4501 0580  
                                 u4421 04A6                                   u4085 0B79  
                                 u2901 0E66                                   u2741 0F4A  
                                 u3541 179F                                   u3381 16A4  
                                 u3701 0C36                                   u3525 08D1  
                                 u5301 01E1                                   u3630 1551  
                                 u3470 00CB                                   u3390 0036  
                                 u4350 0424                                   u4190 0376  
                                 u4502 0587                                   u4430 04C6  
                                 u2910 0E70                                   u2750 0F59  
                                 u3550 17B5                                   u3710 0C44  
                                 u5310 01F4                                   u3631 1550  
                                 u3471 00CA                                   u3391 0035  
                                 u4351 0423                                   u4191 0375  
                                 u4511 059C                                   u4503 058E  
                                 u4431 04C5                                   u2911 0E6F  
                                 u2751 0F58                                   u3551 17B4  
                                 u3375 0889                                   u3711 0C43  
                                 u5311 01F3                                   u3640 1559  
                                 u3480 00F2                                   u4360 0433  
                                 u4280 03D8                                   u4512 05A3  
                                 u4440 04CC                                   u2920 0E7E  
                                 u2824 0FAC                                   u2760 0F62  
                                 u3560 17CA                                   u2840 0950  
                                 u3800 0CAE                                   u3720 0C52  
                                 u5320 0200                                   u3641 1558  
                                 u3481 00F1                                   u4281 03D7  
                                 u4601 06B9                                   u4513 05AA  
                                 u4441 04CB                                   u2921 0E7D  
                                 u2825 0FAA                                   u2761 0F61  
                                 u3561 17C9                                   u2841 094F  
                                 u3801 0CAD                                   u3721 0C51  
                                 u5321 01FF                                   u3650 0835  
                                 u4370 0450                                   u4610 06D5  
                                 u4602 06C0                                   u4450 04D1  
                                 u2930 0E87                                   u2834 0FD3  
                                 u2770 0F70                                   u3490 0CE3  
                                 u3570 080A                                   u3730 0C5B  
                                 u5330 0212                                   u3651 0834  
                                 u4371 044F                                   u4275 03CD  
                                 u4603 06C7                                   u4531 05D0  
                                 u4451 04D0                                   u2931 0E86  
                                 u2835 0FD1                                   u2771 0F6F  
                                 u3491 0CE2                                   u3571 0809  
                                 u3731 0C5A                                   u5331 0211  
                                 u3660 083F                                   u3580 167B  
                                 u3900 0949                                   u4380 046D  
                                 u4700 0747                                   u4532 05D7  
                                 u4460 04E8                                   u2940 0E95  
                                 u2780 0F79                                   u3820 1596  
                                 u3740 0C69                                   u5340 0256  
                                 u3661 083E                                   u3581 167A  
                                 u3901 0948                                   u4381 046C  
                                 u4365 042E                                   u4701 0746  
                                 u4621 06E1                                   u4541 05FB  
                                 u4533 05DE                                   u4525 05AC  
                                 u4461 04E7                                   u2941 0E94  
                                 u2781 0F78                                   u3821 1595  
                                 u3741 0C68                                   u5341 0255  
                                 u3670 0856                                   u4390 0482  
                                 u4710 074D                                   u4622 06E8  
                                 u4542 0602                                   u4470 04ED  
                                 u2950 0E9E                                   u2790 0F87  
                                 u2870 0009                                   u3830 15A3  
                                 u3814 0CCE                                   u3750 0C72  
                                 u3590 173F                                   u3910 160E  
                                 u5350 026F                                   u5270 019A  
                                 u3671 0855                                   u4391 0481  
                                 u4375 044C                                   u4295 03DB  
                                 u4711 074C                                   u4623 06EF  
                                 u4615 06D0                                   u4543 0609  
                                 u4471 04EC                                   u2951 0E9D  
                                 u2791 0F86                                   u2855 096F  
                                 u2871 0008                                   u3831 15A2  
                                 u3815 0CCC                                   u3751 0C71  
                                 u3591 173E                                   u3911 160D  
                                 u5351 026E                                   u5407 01CF  
                                 u5271 0199                                   u3840 16F5  
                                 u4720 075F                                   u2960 0EAC  
                                 u2880 0E4E                                   u3760 0C80  
                                 u3920 15F4                                   u5360 0278  
                                 u5280 019F                                   u4385 0469  
                                 u3841 16F4                                   u4721 075E  
                                 u4561 062F                                   u4481 053A  
                                 u2961 0EAB                                   u2881 0E4D  
                                 u2865 0982                                   u3761 0C7F  
                                 u5417 0ADA                                   u3921 15F3  
                                 u5361 0277                                   u5281 019E  
                                 u4730 076E                                   u4650 0713  
                                 u4562 0636                                   u4482 0541  
                                 u4810 0DD9                                   u2970 0EB5  
                                 u2890 0E59                                   u3770 0C89  
                                 u3690 0C32                                   u3930 15DB  
                                 u5370 0288                                   u5290 01C7  
                                 u4651 0712                                   u4635 06F1  
                                 u4571 065A                                   u4563 063D  
                                 u4555 060B                                   u4491 0556  
                                 u4483 0548                                   u4811 0DD8  
                                 u2971 0EB4                                   u2891 0E58  
                                 u5427 0D14                                   u3771 0C88  
                                 u3691 0C31                                   u3931 15DA  
                                 u5371 0287                                   u5291 01C6  
                                 u3940 1714                                   u3860 1709  
                                 u4740 078B                                   u4572 0661  
                                 u4492 055D                                   u4900 0E3E  
                                 u2980 0EC3                                   u3780 0C97  
                                 u5380 02AD                                   u3685 0860  
                                 u3941 1713                                   u3861 1708  
                                 u4741 078A                                   u4645 0708  
                                 u4581 0685                                   u4573 0668  
                                 u4493 0564                                   u4901 0E3D  
                                 u4805 0DCB                                   u2981 0EC2  
                                 u5437 0D2B                                   u3781 0C96  
                                 u5381 02AC                                   u3950 1698  
                                 u4750 07A5                                   u4670 0727  
                                 u4590 06AD                                   u4582 068C  
                                 u4830 0DFB                                   u3790 0CA0  
                                 u3951 1697                                   u3855 16FC  
                                 u4751 07A4                                   u4735 0769  
                                 u4671 0726                                   u4583 0693  
                                 u4831 0DFA                                   u5447 0D3D  
                                 u3791 0C9F                                   u4760 07C1  
                                 u4680 072C                                   u3960 0AB6  
                                 u3880 16CB                                   u4761 07C0  
                                 u4745 0787                                   u4681 072B  
                                 u4665 0716                                   u4825 0DED  
                                 u5457 0017                                   u3961 0AB5  
                                 u3881 16CA                                   u5385 02A9  
                                 u3890 0904                                   u4690 0740  
                                 u4850 0E0B                                   u4770 0D96  
                                 u2994 0ED1                                   u3970 0ACD  
                                 u4755 07A1                                   u4691 073F  
                                 u4595 06A8                                   u4851 0E0A  
                                 u4771 0D95                                   u2995 0ECF  
                                 u3971 0ACC                                   u4860 0E11  
                                 u4780 0D9A                                   u3980 0AF3  
                                 u4861 0E10                                   u4845 0E00  
                                 u4781 0D99                                   u3981 0AF2  
                                 u5397 01A7                                   u4870 0E15  
                                 u4790 0DBA                                   u3990 0B15  
                                 u4871 0E14                                   u4791 0DB9  
                                 u3991 0B14                                   u4880 0E2A  
                                 u4890 0E3A                                   u4891 0E39  
                                 u4885 0E25                                   _Temp 0063  
                                 abs@a 0076                                   _dbuf 0190  
                                 _flag 0065                       __end_of_ADC_INIT 082F  
                                 _main 0113                                   _pass 00B4  
                                 _prec 00DC                                   _temp 00C5  
                                 btemp 007E                                   start 0000  
                  _EXT_RB4_LOW_HANDLER 006A                        ___fldiv@new_exp 004C  
                    ___bmul@multiplier 0072                      set_cursor@coloumn 0023  
                 keypad_read_value@val 0020                                  ??_abs 0078  
                 _gpio_pin_write_logic 0F20       ADC_Start_Conversion_Blocking@adc 0079  
               lcd_4bits_send_char@lcd 0021                 lcd_4bits_send_char@ret 0020  
                        ___fltol@sign1 005C                      ??_motor_turn_left 0078  
                                ?_main 0070                        __end_of___fldiv 048F  
                      __end_of___awdiv 0AAA                                  _EEADR 010D  
                      __end_of___awmod 0A43                        __end_of___flmul 07D4  
                      __end_of___fltol 0B98                        ___awdiv@divisor 0070  
                      ___awdiv@counter 0074                           vfpfcnvrt@fmt 007A  
               ?_lcd_4bits_send_string 0022                                  _PORTA 0005  
                                _PORTB 0006                                  _PORTC 0007  
                                _PORTD 0008                                  _PORTE 0009  
                                _TRISA 0085                                  _TRISB 0086  
                                _TRISC 0087                                  _TRISD 0088  
                                _TRISE 0089                                  _flags 00DE  
                 _ADC_Start_Conversion 154B                   _EXT_RB7_HIGH_HANDLER 00E1  
                                _fputc 0994                                  _width 00DA  
                                _putch 0802                                  main@i 0062  
                                pclath 000A          lcd_4bits_send_command@command 007C  
                                status 0003                                  wtemp0 007E  
                      __end_of_sprintf 165D                    _EXT_RB5_LOW_HANDLER 0068  
       ?_gpio_pin_direction_initialize 0070                        __initialization 07D4  
                         __end_of_main 02C0                  ?_gpio_pin_write_logic 0070  
 ADC_Start_Conversion_Blocking@channel 0075                __end_of_mcal_initialize 1538  
             gpio_pin_read_logic@logic 0070            __end_of_lcd_4bits_send_char 0900  
                               ??_main 005E                lcd_4bits_send_char@data 007C  
              ?_lcd_4bits_send_command 007C                       _EXT_INTX_HANDLER 006C  
                    ?_motor_turn_right 0070                  ?_ADC_Start_Conversion 0070  
                   ??_motor_turn_right 0078                                 ?_fputc 0070  
                               _ADRESH 001E                                 _ADRESL 009E  
                               _EEDATA 010C                                 _EECON2 018D  
                     ___awdiv@dividend 0072                                 ?_putch 0070  
                        vfpfcnvrt@done 0020               keypad_read_value@counter 0021  
                 READ_DATA_EEPROM@data 0072                       __end_of___xxtofl 0E48  
                  _EXT_RB6_LOW_HANDLER 0066                keypad_initialize@l_rows 0021  
                __end_of_Result_Format 16C3                           vfprintf@cfmt 002B  
              keypad_initialize@keypad 0020                                 ___bmul 1590  
                            ??___fldiv 0042                              ??___awdiv 0074  
                            ??___awmod 0074                              ??___flmul 0028  
                            ??___fltol 0058             ??_Convert_uint16_to_string 0040  
                               _keypad 00B8                                 _memset 1622  
                     ___awdiv@quotient 0076                        ___awmod@divisor 0070  
                               _motor1 00CE                                 _motor2 00CC  
                      ___awmod@counter 0074                   WRITE_DATA_EEPROM@add 0070  
       __end_of_lcd_4bits_send_command 08B8                                 fputc@c 0070  
                            ?_ADC_INIT 0070                                 putch@c 0070  
                     __end_of_vfprintf 167E                ADC_Start_Conversion@adc 0070  
                            ??_sprintf 002F                           ___xxtofl@arg 007A  
                         ___xxtofl@exp 0079                           ___xxtofl@val 0070  
              __end_of__initialization 07FC               __end_of_READ_DATA_EEPROM 157D  
                           ___fltol@f1 0054                    _EXT_RB7_LOW_HANDLER 00E0  
                  ___bmul@multiplicand 0070                 ??_gpio_pin_write_logic 0071  
                       __pcstackCOMMON 0070           __end_of_lcd_4bits_initialize 0D90  
                         __pidataBANK1 1766                          __end_of_fputc 09EA  
                        __end_of_putch 0803           Convert_uint16_to_string@data 003D  
                     ?_mcal_initialize 0070           Convert_uint16_to_string@temp 0041  
                        send_4bits@lcd 007B                          send_4bits@ret 007A  
                           ??_ADC_INIT 0073                 ??_ADC_Start_Conversion 0070  
               keypad_read_value@value 0078             ?_ADC_Get_Conversion_Result 0070  
                              ??_fputc 0073                                ??_putch 0070  
                           __pbssBANK0 0063                             __pbssBANK1 00D0  
                           __pbssBANK3 0190      __end_of_lcd_4bits_send_string_pos 16E7  
                      _motor_turn_left 15EE                      __end_of__Umul8_16 170E  
                           __pmaintext 0113                                ?___bmul 0070  
          Convert_uint16_to_string@str 003F                                ?_memset 0070  
              ??_lcd_4bits_send_string 007E                              ?___xxtofl 0070  
            lcd_4bits_send_command@lcd 0021              lcd_4bits_send_command@ret 0020  
    __end_of_ADC_Get_Conversion_Result 0871                             __stringtab 1000  
                           _btn_values 1010                         _tris_registers 00AA  
      ??_ADC_Start_Conversion_Blocking 0078                    _gpio_pin_initialize 0B98  
                              ___fldiv 02C0                                ___awdiv 0A43  
                  _gpio_pin_read_logic 0C2B                                ___awmod 09EA  
                              ___flmul 048F                                ___fltol 0B20  
                              _adc_res 00EE                              ?_vfprintf 0028  
                              __ptext1 1608                                __ptext2 15D5  
                              __ptext3 15EE                                __ptext4 16C3  
                              __ptext5 1736                                __ptext6 17CB  
                              __ptext7 08B8                                __ptext8 0AAA  
                              __ptext9 0C2B               ??_apllication_initilaize 007E  
      ??_gpio_pin_direction_initialize 0070                                _counter 00DF  
                           ??___xxtofl 0074                       ___awmod@dividend 0072  
           __end_of_send_enable_signal 0024                   ?_gpio_pin_initialize 0070  
                           _send_4bits 094A                   ?_gpio_pin_read_logic 0070  
                              _sprintf 163E                                clrloop0 1539  
                 _lcd_4bits_initialize 0CDA                   end_of_initialization 07FC  
              __end_of_motor_turn_left 1608                  WRITE_DATA_EEPROM@data 0072  
          lcd_4bits_initialize@counter 0025                                fputc@fp 0072  
                              memset@c 0070                                memset@n 0072  
                              memset@p 0074                  motor_turn_right@motor 0079  
                           _set_cursor 1736                      __end_of_vfpfcnvrt 0113  
                     vfpfcnvrt@convarg 0023                             ??_vfprintf 007E  
                         _lcd_show_max 00E2                         _ecu_initialzie 15BC  
                        ___xxtofl@sign 0078                  ??_gpio_pin_initialize 0078  
                ??_gpio_pin_read_logic 0071                            ___fldiv@grs 004E  
                          ___fldiv@rem 0047                  ?_lcd_4bits_initialize 0070  
                          ___flmul@grs 002E                      ?_READ_DATA_EEPROM 0070  
                     _motor_initialize 15A5                     ??_READ_DATA_EEPROM 0073  
        Convert_uint32_to_string@F1655 01B0          Convert_uint16_to_string@F1649 00D0  
                       __end_of___bmul 15A5                            vfpfcnvrt@ap 007B  
                          vfpfcnvrt@cp 0022                            vfpfcnvrt@fp 0021  
               __end_of_ecu_initialzie 15D5  __end_of_ADC_Start_Conversion_Blocking 1736  
        _ADC_Start_Conversion_Blocking 170E               lcd_4bits_send_string@lcd 0025  
             lcd_4bits_send_string@ret 0024                         __end_of_memset 163E  
                  start_initialization 07D4                      send_4bits@command 0078  
                          __end_of_abs 156B                            ?_send_4bits 0078  
__end_of_gpio_pin_direction_initialize 0F20          _gpio_pin_direction_initialize 0E48  
          ??_ADC_Get_Conversion_Result 0072          lcd_4bits_send_string_pos@data 0028  
            ?_Convert_uint16_to_string 003D    ADC_Start_Conversion_Blocking@result 0076  
                     ?_motor_turn_left 0070                    READ_DATA_EEPROM@add 0070  
              keypad_read_value@l_rows 0023                keypad_read_value@keypad 0022  
                          ?_set_cursor 0022                            vfprintf@fmt 0028  
                             ??___bmul 0071                             init_fetch0 157D  
                            __Umul8_16 16E7                            __pdataBANK1 00A0  
         Convert_uint8_to_string@F1643 00D6                               ??_memset 0074  
                      ?_ecu_initialzie 0070                             memset@dest 0075  
              lcd_4bits_initialize@lcd 0027                lcd_4bits_initialize@ret 0026  
        __end_of_lcd_4bits_send_string 1800                              ___fldiv@a 003A  
                            ___fldiv@b 003E                              ___flmul@a 0024  
                            ___flmul@b 0020                              ___latbits 0002  
                        __pcstackBANK0 0020                 ??_lcd_4bits_initialize 0022  
                          ADC_INIT@adc 0075                            ADC_INIT@ret 0074  
               _apllication_initilaize 1540                   motor_turn_left@motor 0079  
           ?_lcd_4bits_send_string_pos 0026                       _motor_turn_right 1608  
                       _motor_turn_off 15D5              _ADC_Get_Conversion_Result 082F  
                        _Result_Format 169F                               ?___fldiv 003A  
                             ?___awdiv 0070                               ?___awmod 0070  
                             ?___flmul 0020               ??_lcd_4bits_send_command 007D  
                             ?___fltol 0054                             ?__Umul8_16 0070  
            gpio_pin_write_logic@logic 0070                              __pstrings 1000  
                             _ADC_INIT 0803              lcd_4bits_send_string@data 0022  
       ?_ADC_Start_Conversion_Blocking 0075                   _EXT_RB4_HIGH_HANDLER 006B  
                             ?_sprintf 002C            keypad_initialize@l_coloumns 0022  
                  motor_initialize@ret 007C                 __end_of_motor_turn_off 15EE  
                            clear_ram0 1538                     _send_enable_signal 0003  
                       ?_Result_Format 0070                    _lcd_4bits_send_char 08B8  
     gpio_pin_direction_initialize@pin 0075                    ?_send_enable_signal 0070  
                            _vfpfcnvrt 0024                             _ADCON0bits 001F  
                          __stringbase 100F                             _ADCON1bits 009F  
                        set_cursor@Row 0022                          set_cursor@lcd 0025  
                        set_cursor@ret 0024               __end_of_motor_initialize 15BC  
               gpio_pin_initialize@pin 007B                 gpio_pin_initialize@ret 007A  
                 ?_lcd_4bits_send_char 007C                             vfpfcnvrt@c 0027  
              gpio_pin_write_logic@pin 0077                gpio_pin_write_logic@ret 0076  
                 ??_send_enable_signal 0078                      _keypad_initialize 1796  
                             _Max_Temp 006D                      _keypad_read_value 0AAA  
                    ??_mcal_initialize 0076                     ?_keypad_initialize 0070  
               gpio_pin_read_logic@pin 0077                 gpio_pin_read_logic@ret 0076  
                   ?_keypad_read_value 0078                  send_enable_signal@lcd 007A  
                send_enable_signal@ret 0079                        ?_motor_turn_off 0070  
                           _EECON1bits 018C                WRITE_DATA_EEPROM@status 0073  
                           vfprintf@ap 0029                             vfprintf@fp 002A  
                  ??_keypad_initialize 007C                    ??_keypad_read_value 0079  
                          ??__Umul8_16 0072                             ?_vfpfcnvrt 007A  
     __end_of_Convert_uint16_to_string 094A                     __end_of__stringtab 1010  
          __end_of_gpio_pin_initialize 0C2B                     __end_of_btn_values 101C  
          __end_of_gpio_pin_read_logic 0CDA                             sprintf@fmt 002C  
                  motor_turn_off@motor 0079                               ___xxtofl 0D90  
                ??_lcd_4bits_send_char 007D                   _EXT_RB5_HIGH_HANDLER 0069  
            __end_of_keypad_initialize 17CB                               __ptext10 1590  
                             __ptext11 1540                               __ptext20 094A  
                             __ptext12 1531                               __ptext21 1796  
                             __ptext13 0803                               __ptext30 167E  
                             __ptext22 0B98                               __ptext14 169F  
                             __ptext31 156B                               __ptext23 0F20  
                             __ptext15 15BC                               __ptext40 0A43  
                             __ptext32 0900                               __ptext24 0E48  
                             __ptext16 15A5                               __ptext41 1622  
                             __ptext33 163E                               __ptext25 0D90  
                             __ptext17 0CDA                               __ptext42 170E  
                             __ptext34 165D                               __ptext26 0B20  
                             __ptext18 0871                           ??_send_4bits 0079  
                             __ptext43 154B                               __ptext35 0024  
                             __ptext27 048F                               __ptext19 0003  
                             __ptext44 082F                               __ptext36 0994  
                             __ptext28 16E7                               __ptext37 0802  
                             __ptext29 02C0                               __ptext38 155A  
                             __ptext39 09EA              __end_of_keypad_read_value 0B20  
                             _lcd_show 00E8        Convert_uint16_to_string@counter 0047  
                      ??_Result_Format 0070                    motor_turn_right@ret 0078  
                         ??_set_cursor 007E                       ??_ecu_initialzie 007E  
                             _vfprintf 165D                     __end_of_send_4bits 0994  
                motor_initialize@motor 007D                             _INTCONbits 000B  
             __end_of_motor_turn_right 1622                               init_ram0 1581  
         __end_of_gpio_pin_write_logic 1000                       Result_Format@adc 0072  
               _lcd_4bits_send_command 0871                ?_apllication_initilaize 0070  
                   __end_of_set_cursor 1766                              sprintf@ap 0030  
                   motor_turn_left@ret 0078                      _WRITE_DATA_EEPROM 167E  
                   ?_WRITE_DATA_EEPROM 0070            ??_lcd_4bits_send_string_pos 007E  
                            stringcode 100A           __end_of_ADC_Start_Conversion 155A  
                  ??_WRITE_DATA_EEPROM 0073                            ??_vfpfcnvrt 007C  
               __Umul8_16@multiplicand 0070                               sprintf@f 0032  
                    motor_turn_off@ret 0078                               sprintf@s 0031  
     lcd_4bits_send_string_pos@coloumn 0027                         _port_registers 00A0  
             _Convert_uint16_to_string 0900                  _lcd_4bits_send_string 17CB  
                             stringdir 100A                               stringtab 1000  
       __end_of_apllication_initilaize 154B                   _EXT_RB6_HIGH_HANDLER 0067  
            __end_of_WRITE_DATA_EEPROM 169F        ADC_Get_Conversion_Result@result 0070  
                 __Umul8_16@multiplier 0078           lcd_4bits_send_string_pos@Row 0026  
         lcd_4bits_send_string_pos@lcd 002B           lcd_4bits_send_string_pos@ret 002A  
                    __Umul8_16@product 0074  
