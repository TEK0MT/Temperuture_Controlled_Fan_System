

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Aug 15 06:43:28 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	maintext,global,class=CODE,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2,group=3
    48                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    50                           	psect	text31,local,class=CODE,merge=1,delta=2,group=3
    51                           	psect	text32,local,class=CODE,merge=1,delta=2,group=3
    52                           	psect	text33,local,class=CODE,merge=1,delta=2,group=3
    53                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2,group=3
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	psect	text38,local,class=CODE,merge=1,delta=2
    58                           	psect	text39,local,class=CODE,merge=1,delta=2
    59                           	psect	text40,local,class=CODE,merge=1,delta=2
    60                           	psect	intentry,global,class=CODE,delta=2
    61                           	psect	text41,local,class=CODE,merge=1,delta=2
    62                           	psect	text42,local,class=CODE,merge=1,delta=2
    63                           	psect	text43,local,class=CODE,merge=1,delta=2
    64                           	psect	text44,local,class=CODE,merge=1,delta=2
    65                           	psect	text45,local,class=CODE,merge=1,delta=2
    66                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    67                           	dabs	1,0x7E,2
    68     0000                     
    69                           ; Generated 12/10/2023 GMT
    70                           ; 
    71                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    72                           ; All rights reserved.
    73                           ; 
    74                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    75                           ; 
    76                           ; Redistribution and use in source and binary forms, with or without modification, are
    77                           ; permitted provided that the following conditions are met:
    78                           ; 
    79                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    80                           ;        conditions and the following disclaimer.
    81                           ; 
    82                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    83                           ;        of conditions and the following disclaimer in the documentation and/or other
    84                           ;        materials provided with the distribution. Publication is not required when
    85                           ;        this file is used in an embedded application.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC16F877A Definitions
   101                           ; 
   102                           ; SFR Addresses
   103     0000                     	;# 
   104     0001                     	;# 
   105     0002                     	;# 
   106     0003                     	;# 
   107     0004                     	;# 
   108     0005                     	;# 
   109     0006                     	;# 
   110     0007                     	;# 
   111     0008                     	;# 
   112     0009                     	;# 
   113     000A                     	;# 
   114     000B                     	;# 
   115     000C                     	;# 
   116     000D                     	;# 
   117     000E                     	;# 
   118     000E                     	;# 
   119     000F                     	;# 
   120     0010                     	;# 
   121     0011                     	;# 
   122     0012                     	;# 
   123     0013                     	;# 
   124     0014                     	;# 
   125     0015                     	;# 
   126     0015                     	;# 
   127     0016                     	;# 
   128     0017                     	;# 
   129     0018                     	;# 
   130     0019                     	;# 
   131     001A                     	;# 
   132     001B                     	;# 
   133     001B                     	;# 
   134     001C                     	;# 
   135     001D                     	;# 
   136     001E                     	;# 
   137     001F                     	;# 
   138     0081                     	;# 
   139     0085                     	;# 
   140     0086                     	;# 
   141     0087                     	;# 
   142     0088                     	;# 
   143     0089                     	;# 
   144     008C                     	;# 
   145     008D                     	;# 
   146     008E                     	;# 
   147     0091                     	;# 
   148     0092                     	;# 
   149     0093                     	;# 
   150     0094                     	;# 
   151     0098                     	;# 
   152     0099                     	;# 
   153     009C                     	;# 
   154     009D                     	;# 
   155     009E                     	;# 
   156     009F                     	;# 
   157     010C                     	;# 
   158     010D                     	;# 
   159     010E                     	;# 
   160     010F                     	;# 
   161     018C                     	;# 
   162     018D                     	;# 
   163     0000                     	;# 
   164     0001                     	;# 
   165     0002                     	;# 
   166     0003                     	;# 
   167     0004                     	;# 
   168     0005                     	;# 
   169     0006                     	;# 
   170     0007                     	;# 
   171     0008                     	;# 
   172     0009                     	;# 
   173     000A                     	;# 
   174     000B                     	;# 
   175     000C                     	;# 
   176     000D                     	;# 
   177     000E                     	;# 
   178     000E                     	;# 
   179     000F                     	;# 
   180     0010                     	;# 
   181     0011                     	;# 
   182     0012                     	;# 
   183     0013                     	;# 
   184     0014                     	;# 
   185     0015                     	;# 
   186     0015                     	;# 
   187     0016                     	;# 
   188     0017                     	;# 
   189     0018                     	;# 
   190     0019                     	;# 
   191     001A                     	;# 
   192     001B                     	;# 
   193     001B                     	;# 
   194     001C                     	;# 
   195     001D                     	;# 
   196     001E                     	;# 
   197     001F                     	;# 
   198     0081                     	;# 
   199     0085                     	;# 
   200     0086                     	;# 
   201     0087                     	;# 
   202     0088                     	;# 
   203     0089                     	;# 
   204     008C                     	;# 
   205     008D                     	;# 
   206     008E                     	;# 
   207     0091                     	;# 
   208     0092                     	;# 
   209     0093                     	;# 
   210     0094                     	;# 
   211     0098                     	;# 
   212     0099                     	;# 
   213     009C                     	;# 
   214     009D                     	;# 
   215     009E                     	;# 
   216     009F                     	;# 
   217     010C                     	;# 
   218     010D                     	;# 
   219     010E                     	;# 
   220     010F                     	;# 
   221     018C                     	;# 
   222     018D                     	;# 
   223     0000                     	;# 
   224     0001                     	;# 
   225     0002                     	;# 
   226     0003                     	;# 
   227     0004                     	;# 
   228     0005                     	;# 
   229     0006                     	;# 
   230     0007                     	;# 
   231     0008                     	;# 
   232     0009                     	;# 
   233     000A                     	;# 
   234     000B                     	;# 
   235     000C                     	;# 
   236     000D                     	;# 
   237     000E                     	;# 
   238     000E                     	;# 
   239     000F                     	;# 
   240     0010                     	;# 
   241     0011                     	;# 
   242     0012                     	;# 
   243     0013                     	;# 
   244     0014                     	;# 
   245     0015                     	;# 
   246     0015                     	;# 
   247     0016                     	;# 
   248     0017                     	;# 
   249     0018                     	;# 
   250     0019                     	;# 
   251     001A                     	;# 
   252     001B                     	;# 
   253     001B                     	;# 
   254     001C                     	;# 
   255     001D                     	;# 
   256     001E                     	;# 
   257     001F                     	;# 
   258     0081                     	;# 
   259     0085                     	;# 
   260     0086                     	;# 
   261     0087                     	;# 
   262     0088                     	;# 
   263     0089                     	;# 
   264     008C                     	;# 
   265     008D                     	;# 
   266     008E                     	;# 
   267     0091                     	;# 
   268     0092                     	;# 
   269     0093                     	;# 
   270     0094                     	;# 
   271     0098                     	;# 
   272     0099                     	;# 
   273     009C                     	;# 
   274     009D                     	;# 
   275     009E                     	;# 
   276     009F                     	;# 
   277     010C                     	;# 
   278     010D                     	;# 
   279     010E                     	;# 
   280     010F                     	;# 
   281     018C                     	;# 
   282     018D                     	;# 
   283     0000                     	;# 
   284     0001                     	;# 
   285     0002                     	;# 
   286     0003                     	;# 
   287     0004                     	;# 
   288     0005                     	;# 
   289     0006                     	;# 
   290     0007                     	;# 
   291     0008                     	;# 
   292     0009                     	;# 
   293     000A                     	;# 
   294     000B                     	;# 
   295     000C                     	;# 
   296     000D                     	;# 
   297     000E                     	;# 
   298     000E                     	;# 
   299     000F                     	;# 
   300     0010                     	;# 
   301     0011                     	;# 
   302     0012                     	;# 
   303     0013                     	;# 
   304     0014                     	;# 
   305     0015                     	;# 
   306     0015                     	;# 
   307     0016                     	;# 
   308     0017                     	;# 
   309     0018                     	;# 
   310     0019                     	;# 
   311     001A                     	;# 
   312     001B                     	;# 
   313     001B                     	;# 
   314     001C                     	;# 
   315     001D                     	;# 
   316     001E                     	;# 
   317     001F                     	;# 
   318     0081                     	;# 
   319     0085                     	;# 
   320     0086                     	;# 
   321     0087                     	;# 
   322     0088                     	;# 
   323     0089                     	;# 
   324     008C                     	;# 
   325     008D                     	;# 
   326     008E                     	;# 
   327     0091                     	;# 
   328     0092                     	;# 
   329     0093                     	;# 
   330     0094                     	;# 
   331     0098                     	;# 
   332     0099                     	;# 
   333     009C                     	;# 
   334     009D                     	;# 
   335     009E                     	;# 
   336     009F                     	;# 
   337     010C                     	;# 
   338     010D                     	;# 
   339     010E                     	;# 
   340     010F                     	;# 
   341     018C                     	;# 
   342     018D                     	;# 
   343     0000                     	;# 
   344     0001                     	;# 
   345     0002                     	;# 
   346     0003                     	;# 
   347     0004                     	;# 
   348     0005                     	;# 
   349     0006                     	;# 
   350     0007                     	;# 
   351     0008                     	;# 
   352     0009                     	;# 
   353     000A                     	;# 
   354     000B                     	;# 
   355     000C                     	;# 
   356     000D                     	;# 
   357     000E                     	;# 
   358     000E                     	;# 
   359     000F                     	;# 
   360     0010                     	;# 
   361     0011                     	;# 
   362     0012                     	;# 
   363     0013                     	;# 
   364     0014                     	;# 
   365     0015                     	;# 
   366     0015                     	;# 
   367     0016                     	;# 
   368     0017                     	;# 
   369     0018                     	;# 
   370     0019                     	;# 
   371     001A                     	;# 
   372     001B                     	;# 
   373     001B                     	;# 
   374     001C                     	;# 
   375     001D                     	;# 
   376     001E                     	;# 
   377     001F                     	;# 
   378     0081                     	;# 
   379     0085                     	;# 
   380     0086                     	;# 
   381     0087                     	;# 
   382     0088                     	;# 
   383     0089                     	;# 
   384     008C                     	;# 
   385     008D                     	;# 
   386     008E                     	;# 
   387     0091                     	;# 
   388     0092                     	;# 
   389     0093                     	;# 
   390     0094                     	;# 
   391     0098                     	;# 
   392     0099                     	;# 
   393     009C                     	;# 
   394     009D                     	;# 
   395     009E                     	;# 
   396     009F                     	;# 
   397     010C                     	;# 
   398     010D                     	;# 
   399     010E                     	;# 
   400     010F                     	;# 
   401     018C                     	;# 
   402     018D                     	;# 
   403     0000                     	;# 
   404     0001                     	;# 
   405     0002                     	;# 
   406     0003                     	;# 
   407     0004                     	;# 
   408     0005                     	;# 
   409     0006                     	;# 
   410     0007                     	;# 
   411     0008                     	;# 
   412     0009                     	;# 
   413     000A                     	;# 
   414     000B                     	;# 
   415     000C                     	;# 
   416     000D                     	;# 
   417     000E                     	;# 
   418     000E                     	;# 
   419     000F                     	;# 
   420     0010                     	;# 
   421     0011                     	;# 
   422     0012                     	;# 
   423     0013                     	;# 
   424     0014                     	;# 
   425     0015                     	;# 
   426     0015                     	;# 
   427     0016                     	;# 
   428     0017                     	;# 
   429     0018                     	;# 
   430     0019                     	;# 
   431     001A                     	;# 
   432     001B                     	;# 
   433     001B                     	;# 
   434     001C                     	;# 
   435     001D                     	;# 
   436     001E                     	;# 
   437     001F                     	;# 
   438     0081                     	;# 
   439     0085                     	;# 
   440     0086                     	;# 
   441     0087                     	;# 
   442     0088                     	;# 
   443     0089                     	;# 
   444     008C                     	;# 
   445     008D                     	;# 
   446     008E                     	;# 
   447     0091                     	;# 
   448     0092                     	;# 
   449     0093                     	;# 
   450     0094                     	;# 
   451     0098                     	;# 
   452     0099                     	;# 
   453     009C                     	;# 
   454     009D                     	;# 
   455     009E                     	;# 
   456     009F                     	;# 
   457     010C                     	;# 
   458     010D                     	;# 
   459     010E                     	;# 
   460     010F                     	;# 
   461     018C                     	;# 
   462     018D                     	;# 
   463     0000                     	;# 
   464     0001                     	;# 
   465     0002                     	;# 
   466     0003                     	;# 
   467     0004                     	;# 
   468     0005                     	;# 
   469     0006                     	;# 
   470     0007                     	;# 
   471     0008                     	;# 
   472     0009                     	;# 
   473     000A                     	;# 
   474     000B                     	;# 
   475     000C                     	;# 
   476     000D                     	;# 
   477     000E                     	;# 
   478     000E                     	;# 
   479     000F                     	;# 
   480     0010                     	;# 
   481     0011                     	;# 
   482     0012                     	;# 
   483     0013                     	;# 
   484     0014                     	;# 
   485     0015                     	;# 
   486     0015                     	;# 
   487     0016                     	;# 
   488     0017                     	;# 
   489     0018                     	;# 
   490     0019                     	;# 
   491     001A                     	;# 
   492     001B                     	;# 
   493     001B                     	;# 
   494     001C                     	;# 
   495     001D                     	;# 
   496     001E                     	;# 
   497     001F                     	;# 
   498     0081                     	;# 
   499     0085                     	;# 
   500     0086                     	;# 
   501     0087                     	;# 
   502     0088                     	;# 
   503     0089                     	;# 
   504     008C                     	;# 
   505     008D                     	;# 
   506     008E                     	;# 
   507     0091                     	;# 
   508     0092                     	;# 
   509     0093                     	;# 
   510     0094                     	;# 
   511     0098                     	;# 
   512     0099                     	;# 
   513     009C                     	;# 
   514     009D                     	;# 
   515     009E                     	;# 
   516     009F                     	;# 
   517     010C                     	;# 
   518     010D                     	;# 
   519     010E                     	;# 
   520     010F                     	;# 
   521     018C                     	;# 
   522     018D                     	;# 
   523     0000                     	;# 
   524     0001                     	;# 
   525     0002                     	;# 
   526     0003                     	;# 
   527     0004                     	;# 
   528     0005                     	;# 
   529     0006                     	;# 
   530     0007                     	;# 
   531     0008                     	;# 
   532     0009                     	;# 
   533     000A                     	;# 
   534     000B                     	;# 
   535     000C                     	;# 
   536     000D                     	;# 
   537     000E                     	;# 
   538     000E                     	;# 
   539     000F                     	;# 
   540     0010                     	;# 
   541     0011                     	;# 
   542     0012                     	;# 
   543     0013                     	;# 
   544     0014                     	;# 
   545     0015                     	;# 
   546     0015                     	;# 
   547     0016                     	;# 
   548     0017                     	;# 
   549     0018                     	;# 
   550     0019                     	;# 
   551     001A                     	;# 
   552     001B                     	;# 
   553     001B                     	;# 
   554     001C                     	;# 
   555     001D                     	;# 
   556     001E                     	;# 
   557     001F                     	;# 
   558     0081                     	;# 
   559     0085                     	;# 
   560     0086                     	;# 
   561     0087                     	;# 
   562     0088                     	;# 
   563     0089                     	;# 
   564     008C                     	;# 
   565     008D                     	;# 
   566     008E                     	;# 
   567     0091                     	;# 
   568     0092                     	;# 
   569     0093                     	;# 
   570     0094                     	;# 
   571     0098                     	;# 
   572     0099                     	;# 
   573     009C                     	;# 
   574     009D                     	;# 
   575     009E                     	;# 
   576     009F                     	;# 
   577     010C                     	;# 
   578     010D                     	;# 
   579     010E                     	;# 
   580     010F                     	;# 
   581     018C                     	;# 
   582     018D                     	;# 
   583     0000                     	;# 
   584     0001                     	;# 
   585     0002                     	;# 
   586     0003                     	;# 
   587     0004                     	;# 
   588     0005                     	;# 
   589     0006                     	;# 
   590     0007                     	;# 
   591     0008                     	;# 
   592     0009                     	;# 
   593     000A                     	;# 
   594     000B                     	;# 
   595     000C                     	;# 
   596     000D                     	;# 
   597     000E                     	;# 
   598     000E                     	;# 
   599     000F                     	;# 
   600     0010                     	;# 
   601     0011                     	;# 
   602     0012                     	;# 
   603     0013                     	;# 
   604     0014                     	;# 
   605     0015                     	;# 
   606     0015                     	;# 
   607     0016                     	;# 
   608     0017                     	;# 
   609     0018                     	;# 
   610     0019                     	;# 
   611     001A                     	;# 
   612     001B                     	;# 
   613     001B                     	;# 
   614     001C                     	;# 
   615     001D                     	;# 
   616     001E                     	;# 
   617     001F                     	;# 
   618     0081                     	;# 
   619     0085                     	;# 
   620     0086                     	;# 
   621     0087                     	;# 
   622     0088                     	;# 
   623     0089                     	;# 
   624     008C                     	;# 
   625     008D                     	;# 
   626     008E                     	;# 
   627     0091                     	;# 
   628     0092                     	;# 
   629     0093                     	;# 
   630     0094                     	;# 
   631     0098                     	;# 
   632     0099                     	;# 
   633     009C                     	;# 
   634     009D                     	;# 
   635     009E                     	;# 
   636     009F                     	;# 
   637     010C                     	;# 
   638     010D                     	;# 
   639     010E                     	;# 
   640     010F                     	;# 
   641     018C                     	;# 
   642     018D                     	;# 
   643     0000                     	;# 
   644     0001                     	;# 
   645     0002                     	;# 
   646     0003                     	;# 
   647     0004                     	;# 
   648     0005                     	;# 
   649     0006                     	;# 
   650     0007                     	;# 
   651     0008                     	;# 
   652     0009                     	;# 
   653     000A                     	;# 
   654     000B                     	;# 
   655     000C                     	;# 
   656     000D                     	;# 
   657     000E                     	;# 
   658     000E                     	;# 
   659     000F                     	;# 
   660     0010                     	;# 
   661     0011                     	;# 
   662     0012                     	;# 
   663     0013                     	;# 
   664     0014                     	;# 
   665     0015                     	;# 
   666     0015                     	;# 
   667     0016                     	;# 
   668     0017                     	;# 
   669     0018                     	;# 
   670     0019                     	;# 
   671     001A                     	;# 
   672     001B                     	;# 
   673     001B                     	;# 
   674     001C                     	;# 
   675     001D                     	;# 
   676     001E                     	;# 
   677     001F                     	;# 
   678     0081                     	;# 
   679     0085                     	;# 
   680     0086                     	;# 
   681     0087                     	;# 
   682     0088                     	;# 
   683     0089                     	;# 
   684     008C                     	;# 
   685     008D                     	;# 
   686     008E                     	;# 
   687     0091                     	;# 
   688     0092                     	;# 
   689     0093                     	;# 
   690     0094                     	;# 
   691     0098                     	;# 
   692     0099                     	;# 
   693     009C                     	;# 
   694     009D                     	;# 
   695     009E                     	;# 
   696     009F                     	;# 
   697     010C                     	;# 
   698     010D                     	;# 
   699     010E                     	;# 
   700     010F                     	;# 
   701     018C                     	;# 
   702     018D                     	;# 
   703     0000                     	;# 
   704     0001                     	;# 
   705     0002                     	;# 
   706     0003                     	;# 
   707     0004                     	;# 
   708     0005                     	;# 
   709     0006                     	;# 
   710     0007                     	;# 
   711     0008                     	;# 
   712     0009                     	;# 
   713     000A                     	;# 
   714     000B                     	;# 
   715     000C                     	;# 
   716     000D                     	;# 
   717     000E                     	;# 
   718     000E                     	;# 
   719     000F                     	;# 
   720     0010                     	;# 
   721     0011                     	;# 
   722     0012                     	;# 
   723     0013                     	;# 
   724     0014                     	;# 
   725     0015                     	;# 
   726     0015                     	;# 
   727     0016                     	;# 
   728     0017                     	;# 
   729     0018                     	;# 
   730     0019                     	;# 
   731     001A                     	;# 
   732     001B                     	;# 
   733     001B                     	;# 
   734     001C                     	;# 
   735     001D                     	;# 
   736     001E                     	;# 
   737     001F                     	;# 
   738     0081                     	;# 
   739     0085                     	;# 
   740     0086                     	;# 
   741     0087                     	;# 
   742     0088                     	;# 
   743     0089                     	;# 
   744     008C                     	;# 
   745     008D                     	;# 
   746     008E                     	;# 
   747     0091                     	;# 
   748     0092                     	;# 
   749     0093                     	;# 
   750     0094                     	;# 
   751     0098                     	;# 
   752     0099                     	;# 
   753     009C                     	;# 
   754     009D                     	;# 
   755     009E                     	;# 
   756     009F                     	;# 
   757     010C                     	;# 
   758     010D                     	;# 
   759     010E                     	;# 
   760     010F                     	;# 
   761     018C                     	;# 
   762     018D                     	;# 
   763     0000                     	;# 
   764     0001                     	;# 
   765     0002                     	;# 
   766     0003                     	;# 
   767     0004                     	;# 
   768     0005                     	;# 
   769     0006                     	;# 
   770     0007                     	;# 
   771     0008                     	;# 
   772     0009                     	;# 
   773     000A                     	;# 
   774     000B                     	;# 
   775     000C                     	;# 
   776     000D                     	;# 
   777     000E                     	;# 
   778     000E                     	;# 
   779     000F                     	;# 
   780     0010                     	;# 
   781     0011                     	;# 
   782     0012                     	;# 
   783     0013                     	;# 
   784     0014                     	;# 
   785     0015                     	;# 
   786     0015                     	;# 
   787     0016                     	;# 
   788     0017                     	;# 
   789     0018                     	;# 
   790     0019                     	;# 
   791     001A                     	;# 
   792     001B                     	;# 
   793     001B                     	;# 
   794     001C                     	;# 
   795     001D                     	;# 
   796     001E                     	;# 
   797     001F                     	;# 
   798     0081                     	;# 
   799     0085                     	;# 
   800     0086                     	;# 
   801     0087                     	;# 
   802     0088                     	;# 
   803     0089                     	;# 
   804     008C                     	;# 
   805     008D                     	;# 
   806     008E                     	;# 
   807     0091                     	;# 
   808     0092                     	;# 
   809     0093                     	;# 
   810     0094                     	;# 
   811     0098                     	;# 
   812     0099                     	;# 
   813     009C                     	;# 
   814     009D                     	;# 
   815     009E                     	;# 
   816     009F                     	;# 
   817     010C                     	;# 
   818     010D                     	;# 
   819     010E                     	;# 
   820     010F                     	;# 
   821     018C                     	;# 
   822     018D                     	;# 
   823                           
   824                           	psect	idataBANK0
   825     17B7                     __pidataBANK0:
   826                           
   827                           ;initializer for Enable_INTX@F1629
   828     17B7  3481               	retlw	129
   829                           
   830                           ;initializer for _pin8
   831     17B8  343B               	retlw	59
   832                           
   833                           ;initializer for _pin7
   834     17B9  3433               	retlw	51
   835                           
   836                           ;initializer for _pin6
   837     17BA  342B               	retlw	43
   838                           
   839                           ;initializer for _pin5
   840     17BB  3423               	retlw	35
   841                           
   842                           ;initializer for _pin4
   843     17BC  341B               	retlw	27
   844                           
   845                           ;initializer for _pin3
   846     17BD  3413               	retlw	19
   847                           
   848                           ;initializer for _pin2
   849     17BE  340B               	retlw	11
   850                           
   851                           ;initializer for _pin1
   852     17BF  3403               	retlw	3
   853                           
   854                           ;initializer for _adc
   855     17C0  3400               	retlw	0
   856     17C1  3404               	retlw	4
   857     17C2  3400               	retlw	0
   858                           
   859                           ;initializer for _motor2
   860     17C3  3413               	retlw	19
   861     17C4  341B               	retlw	27
   862                           
   863                           ;initializer for _motor1
   864     17C5  3403               	retlw	3
   865     17C6  340B               	retlw	11
   866                           
   867                           	psect	idataBANK1
   868     0879                     __pidataBANK1:
   869                           
   870                           ;initializer for _port_registers
   871     0879  3405               	retlw	5
   872     087A  3400               	retlw	0
   873     087B  3406               	retlw	6
   874     087C  3400               	retlw	0
   875     087D  3407               	retlw	7
   876     087E  3400               	retlw	0
   877     087F  3408               	retlw	8
   878     0880  3400               	retlw	0
   879     0881  3409               	retlw	9
   880     0882  3400               	retlw	0
   881                           
   882                           ;initializer for _tris_registers
   883     0883  3485               	retlw	133
   884     0884  3400               	retlw	0
   885     0885  3486               	retlw	134
   886     0886  3400               	retlw	0
   887     0887  3487               	retlw	135
   888     0888  3400               	retlw	0
   889     0889  3488               	retlw	136
   890     088A  3400               	retlw	0
   891     088B  3489               	retlw	137
   892     088C  3400               	retlw	0
   893                           
   894                           ;initializer for _lcd
   895     088D  3402               	retlw	2
   896     088E  340A               	retlw	10
   897     088F  3412               	retlw	18
   898     0890  341A               	retlw	26
   899     0891  3422               	retlw	34
   900     0892  342A               	retlw	42
   901     0006                     _PORTBbits	set	6
   902     000B                     _INTCONbits	set	11
   903     001E                     _ADRESH	set	30
   904     001F                     _ADCON0bits	set	31
   905     0009                     _PORTE	set	9
   906     0008                     _PORTD	set	8
   907     0007                     _PORTC	set	7
   908     0006                     _PORTB	set	6
   909     0005                     _PORTA	set	5
   910     0081                     _OPTION_REGbits	set	129
   911     009E                     _ADRESL	set	158
   912     009F                     _ADCON1bits	set	159
   913     0089                     _TRISE	set	137
   914     0088                     _TRISD	set	136
   915     0087                     _TRISC	set	135
   916     0086                     _TRISB	set	134
   917     0085                     _TRISA	set	133
   918     010C                     _EEDATA	set	268
   919     010D                     _EEADR	set	269
   920     018D                     _EECON2	set	397
   921     018C                     _EECON1bits	set	396
   922                           
   923                           	psect	strings
   924     0800                     __pstrings:
   925     0800                     stringtab:
   926     0800                     __stringtab:
   927                           
   928                           ;	String table - string pointers are 1 byte each
   929     0800  1BFF               	btfsc	btemp+1,7
   930     0801  280A               	ljmp	stringcode
   931     0802  1383               	bcf	3,7
   932     0803  187F               	btfsc	btemp+1,0
   933     0804  1783               	bsf	3,7
   934     0805  0800               	movf	0,w
   935     0806  0A84               	incf	4,f
   936     0807  1903               	skipnz
   937     0808  0AFF               	incf	btemp+1,f
   938     0809  0008               	return
   939     080A                     stringcode:
   940     080A                     stringdir:
   941     080A  3008               	movlw	high stringdir
   942     080B  008A               	movwf	10
   943     080C  0804               	movf	4,w
   944     080D  0A84               	incf	4,f
   945     080E  0782               	addwf	2,f
   946     080F                     __stringbase:
   947     080F  3400               	retlw	0
   948     0810                     __end_of__stringtab:
   949     0810                     STR_4:
   950     0810  3454               	retlw	84	;'T'
   951     0811  3465               	retlw	101	;'e'
   952     0812  346D               	retlw	109	;'m'
   953     0813  3470               	retlw	112	;'p'
   954     0814  3420               	retlw	32	;' '
   955     0815  3469               	retlw	105	;'i'
   956     0816  3473               	retlw	115	;'s'
   957     0817  3420               	retlw	32	;' '
   958     0818  343A               	retlw	58	;':'
   959     0819  3420               	retlw	32	;' '
   960     081A  3400               	retlw	0
   961     081B                     STR_1:
   962     081B  3425               	retlw	37	;'%'
   963     081C  3469               	retlw	105	;'i'
   964     081D  3400               	retlw	0
   965     081B                     
   966                           	psect	cinit
   967     000F                     start_initialization:	
   968                           ; #config settings
   969                           
   970     000F                     __initialization:
   971                           
   972                           ; Initialize objects allocated to BANK1
   973     000F  1383               	bcf	3,7	;select IRP bank0
   974     0010  30D5               	movlw	low (__pdataBANK1+26)
   975     0011  00FD               	movwf	btemp+-1
   976     0012  3008               	movlw	high __pidataBANK1
   977     0013  00FE               	movwf	btemp
   978     0014  3079               	movlw	low __pidataBANK1
   979     0015  00FF               	movwf	btemp+1
   980     0016  30BB               	movlw	low __pdataBANK1
   981     0017  0084               	movwf	4
   982     0018  160A  118A  27F1  120A  118A  	fcall	init_ram0
   983                           
   984                           ; Initialize objects allocated to BANK0
   985     001D  3070               	movlw	low (__pdataBANK0+16)
   986     001E  00FD               	movwf	btemp+-1
   987     001F  3017               	movlw	high __pidataBANK0
   988     0020  00FE               	movwf	btemp
   989     0021  30B7               	movlw	low __pidataBANK0
   990     0022  00FF               	movwf	btemp+1
   991     0023  3060               	movlw	low __pdataBANK0
   992     0024  0084               	movwf	4
   993     0025  160A  118A  27F1  120A  118A  	fcall	init_ram0
   994                           
   995                           ; Clear objects allocated to BANK3
   996     002A  1783               	bsf	3,7	;select IRP bank2
   997     002B  3090               	movlw	low __pbssBANK3
   998     002C  0084               	movwf	4
   999     002D  30B0               	movlw	low (__pbssBANK3+32)
  1000     002E  160A  118A  277C  120A  118A  	fcall	clear_ram0
  1001                           
  1002                           ; Clear objects allocated to BANK1
  1003     0033  1383               	bcf	3,7	;select IRP bank0
  1004     0034  30A0               	movlw	low __pbssBANK1
  1005     0035  0084               	movwf	4
  1006     0036  30BB               	movlw	low (__pbssBANK1+27)
  1007     0037  160A  118A  277C  120A  118A  	fcall	clear_ram0
  1008                           
  1009                           ; Clear objects allocated to BANK0
  1010     003C  304E               	movlw	low __pbssBANK0
  1011     003D  0084               	movwf	4
  1012     003E  3060               	movlw	low (__pbssBANK0+18)
  1013     003F  160A  118A  277C  120A  118A  	fcall	clear_ram0
  1014                           
  1015                           ; Clear objects allocated to COMMON
  1016     0044  01F9               	clrf	__pbssCOMMON& (0+127)
  1017     0045  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
  1018     0046  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
  1019     0047                     end_of_initialization:	
  1020                           ;End of C runtime variable initialization code
  1021                           
  1022     0047                     __end_of__initialization:
  1023     0047  0183               	clrf	3
  1024     0048  120A  118A  2B90   	ljmp	_main	;jump to C main() function
  1025                           
  1026                           	psect	bssCOMMON
  1027     0079                     __pbssCOMMON:
  1028     0079                     _counter:
  1029     0079                     	ds	1
  1030     007A                     _EXT_RB4_HIGH_HANDLER:
  1031     007A                     	ds	1
  1032     007B                     _EXT_INTX_HANDLER:
  1033     007B                     	ds	1
  1034                           
  1035                           	psect	bssBANK0
  1036     004E                     __pbssBANK0:
  1037     004E                     _width:
  1038     004E                     	ds	2
  1039     0050                     _prec:
  1040     0050                     	ds	2
  1041     0052                     _Temp:
  1042     0052                     	ds	2
  1043     0054                     _flags:
  1044     0054                     	ds	1
  1045     0055                     _EXT_RB7_LOW_HANDLER:
  1046     0055                     	ds	1
  1047     0056                     _EXT_RB7_HIGH_HANDLER:
  1048     0056                     	ds	1
  1049     0057                     _EXT_RB6_LOW_HANDLER:
  1050     0057                     	ds	1
  1051     0058                     _EXT_RB6_HIGH_HANDLER:
  1052     0058                     	ds	1
  1053     0059                     _EXT_RB5_LOW_HANDLER:
  1054     0059                     	ds	1
  1055     005A                     _EXT_RB5_HIGH_HANDLER:
  1056     005A                     	ds	1
  1057     005B                     _EXT_RB4_LOW_HANDLER:
  1058     005B                     	ds	1
  1059     005C                     _Max_Temp:
  1060     005C                     	ds	2
  1061     005E                     _adc_res:
  1062     005E                     	ds	2
  1063                           
  1064                           	psect	dataBANK0
  1065     0060                     __pdataBANK0:
  1066     0060                     Enable_INTX@F1629:
  1067     0060                     	ds	1
  1068     0061                     _pin8:
  1069     0061                     	ds	1
  1070     0062                     _pin7:
  1071     0062                     	ds	1
  1072     0063                     _pin6:
  1073     0063                     	ds	1
  1074     0064                     _pin5:
  1075     0064                     	ds	1
  1076     0065                     _pin4:
  1077     0065                     	ds	1
  1078     0066                     _pin3:
  1079     0066                     	ds	1
  1080     0067                     _pin2:
  1081     0067                     	ds	1
  1082     0068                     _pin1:
  1083     0068                     	ds	1
  1084     0069                     _adc:
  1085     0069                     	ds	3
  1086     006C                     _motor2:
  1087     006C                     	ds	2
  1088     006E                     _motor1:
  1089     006E                     	ds	2
  1090                           
  1091                           	psect	bssBANK1
  1092     00A0                     __pbssBANK1:
  1093     00A0                     Convert_uint32_to_string@F1655:
  1094     00A0                     	ds	11
  1095     00AB                     Convert_uint16_to_string@F1649:
  1096     00AB                     	ds	6
  1097     00B1                     Convert_uint8_to_string@F1643:
  1098     00B1                     	ds	4
  1099     00B5                     _lcd_show:
  1100     00B5                     	ds	6
  1101                           
  1102                           	psect	dataBANK1
  1103     00BB                     __pdataBANK1:
  1104     00BB                     _port_registers:
  1105     00BB                     	ds	10
  1106     00C5                     _tris_registers:
  1107     00C5                     	ds	10
  1108     00CF                     _lcd:
  1109     00CF                     	ds	6
  1110                           
  1111                           	psect	bssBANK3
  1112     0190                     __pbssBANK3:
  1113     0190                     _dbuf:
  1114     0190                     	ds	32
  1115                           
  1116                           	psect	inittext
  1117     17ED                     init_fetch0:	
  1118                           ;	Called with low address in FSR and high address in W
  1119                           
  1120     17ED  087E               	movf	btemp,w
  1121     17EE  008A               	movwf	10
  1122     17EF  087F               	movf	btemp+1,w
  1123     17F0  0082               	movwf	2
  1124     17F1                     init_ram0:	
  1125                           ;Called with:
  1126                           ;	high address of idata address in btemp 
  1127                           ;	low address of idata address in btemp+1 
  1128                           ;	low address of data in FSR
  1129                           ;	high address + 1 of data in btemp-1
  1130                           
  1131     17F1  160A  118A  27ED  160A  118A  	fcall	init_fetch0
  1132     17F6  0080               	movwf	0
  1133     17F7  0A84               	incf	4,f
  1134     17F8  0804               	movf	4,w
  1135     17F9  067D               	xorwf	btemp+-1,w
  1136     17FA  1903               	btfsc	3,2
  1137     17FB  3400               	retlw	0
  1138     17FC  0AFF               	incf	btemp+1,f
  1139     17FD  1903               	btfsc	3,2
  1140     17FE  0AFE               	incf	btemp,f
  1141     17FF  2FF1               	goto	init_ram0
  1142                           
  1143                           	psect	clrtext
  1144     177C                     clear_ram0:	
  1145                           ;	Called with FSR containing the base address, and
  1146                           ;	W with the last address+1
  1147                           
  1148     177C  0064               	clrwdt	;clear the watchdog before getting into this loop
  1149     177D                     clrloop0:
  1150     177D  0180               	clrf	0	;clear RAM location pointed to by FSR
  1151     177E  0A84               	incf	4,f	;increment pointer
  1152     177F  0604               	xorwf	4,w	;XOR with final address
  1153     1780  1903               	btfsc	3,2	;have we reached the end yet?
  1154     1781  3400               	retlw	0	;all done for this memory range, return
  1155     1782  0604               	xorwf	4,w	;XOR again to restore value
  1156     1783  2F7D               	goto	clrloop0	;do the next byte
  1157                           
  1158                           	psect	cstackBANK1
  1159     00D5                     __pcstackBANK1:
  1160     00D5                     Convert_uint16_to_string@temp:
  1161                           
  1162                           ; 6 bytes @ 0x0
  1163     00D5                     	ds	6
  1164     00DB                     Convert_uint16_to_string@counter:
  1165                           
  1166                           ; 1 bytes @ 0x6
  1167     00DB                     	ds	1
  1168                           
  1169                           	psect	cstackCOMMON
  1170     0070                     __pcstackCOMMON:
  1171     0070                     ?_gpio_pin_initialize:
  1172     0070                     ?_send_enable_signal:	
  1173                           ; 1 bytes @ 0x0
  1174                           
  1175     0070                     ?_apllication_initilaize:	
  1176                           ; 1 bytes @ 0x0
  1177                           
  1178     0070                     ?_mcal_initialize:	
  1179                           ; 1 bytes @ 0x0
  1180                           
  1181     0070                     ?_putch:	
  1182                           ; 1 bytes @ 0x0
  1183                           
  1184     0070                     ?_lcd_4bits_initialize:	
  1185                           ; 1 bytes @ 0x0
  1186                           
  1187     0070                     ?_motor_initialize:	
  1188                           ; 1 bytes @ 0x0
  1189                           
  1190     0070                     ?_motor_turn_right:	
  1191                           ; 1 bytes @ 0x0
  1192                           
  1193     0070                     ?_motor_turn_left:	
  1194                           ; 1 bytes @ 0x0
  1195                           
  1196     0070                     ?_motor_turn_off:	
  1197                           ; 1 bytes @ 0x0
  1198                           
  1199     0070                     ?_ecu_initialzie:	
  1200                           ; 1 bytes @ 0x0
  1201                           
  1202     0070                     ?_gpio_pin_direction_initialize:	
  1203                           ; 1 bytes @ 0x0
  1204                           
  1205     0070                     ?_ISR_INTX:	
  1206                           ; 1 bytes @ 0x0
  1207                           
  1208     0070                     ??_ISR_INTX:	
  1209                           ; 1 bytes @ 0x0
  1210                           
  1211     0070                     ?_ISR_RB4:	
  1212                           ; 1 bytes @ 0x0
  1213                           
  1214     0070                     ??_ISR_RB4:	
  1215                           ; 1 bytes @ 0x0
  1216                           
  1217     0070                     ?_ISR_RB5:	
  1218                           ; 1 bytes @ 0x0
  1219                           
  1220     0070                     ??_ISR_RB5:	
  1221                           ; 1 bytes @ 0x0
  1222                           
  1223     0070                     ?_ISR_RB6:	
  1224                           ; 1 bytes @ 0x0
  1225                           
  1226     0070                     ??_ISR_RB6:	
  1227                           ; 1 bytes @ 0x0
  1228                           
  1229     0070                     ?_ISR_RB7:	
  1230                           ; 1 bytes @ 0x0
  1231                           
  1232     0070                     ??_ISR_RB7:	
  1233                           ; 1 bytes @ 0x0
  1234                           
  1235     0070                     ?_InterruptManager:	
  1236                           ; 1 bytes @ 0x0
  1237                           
  1238     0070                     ?_main:	
  1239                           ; 1 bytes @ 0x0
  1240                           
  1241     0070                     ISR_RB4@n:	
  1242                           ; 2 bytes @ 0x0
  1243                           
  1244     0070                     ISR_RB5@n:	
  1245                           ; 1 bytes @ 0x0
  1246                           
  1247     0070                     ISR_RB6@n:	
  1248                           ; 1 bytes @ 0x0
  1249                           
  1250     0070                     ISR_RB7@n:	
  1251                           ; 1 bytes @ 0x0
  1252                           
  1253     0070                     putch@c:	
  1254                           ; 1 bytes @ 0x0
  1255                           
  1256                           
  1257                           ; 1 bytes @ 0x0
  1258     0070                     	ds	1
  1259     0071                     ??_InterruptManager:
  1260                           
  1261                           ; 1 bytes @ 0x1
  1262     0071                     	ds	2
  1263     0073                     ?_gpio_pin_write_logic:
  1264     0073                     ?_memset:	
  1265                           ; 1 bytes @ 0x3
  1266                           
  1267     0073                     ?_Result_Format:	
  1268                           ; 1 bytes @ 0x3
  1269                           
  1270     0073                     ??_Result_Format:	
  1271                           ; 1 bytes @ 0x3
  1272                           
  1273     0073                     ??_putch:	
  1274                           ; 1 bytes @ 0x3
  1275                           
  1276     0073                     ?_ADC_Start_Conversion:	
  1277                           ; 1 bytes @ 0x3
  1278                           
  1279     0073                     ??_ADC_Start_Conversion:	
  1280                           ; 1 bytes @ 0x3
  1281                           
  1282     0073                     ?_ADC_Get_Conversion_Result:	
  1283                           ; 1 bytes @ 0x3
  1284                           
  1285     0073                     ?_WRITE_DATA_EEPROM:	
  1286                           ; 1 bytes @ 0x3
  1287                           
  1288     0073                     ??_gpio_pin_direction_initialize:	
  1289                           ; 1 bytes @ 0x3
  1290                           
  1291     0073                     ?__Umul8_16:	
  1292                           ; 1 bytes @ 0x3
  1293                           
  1294     0073                     ?_fputc:	
  1295                           ; 2 bytes @ 0x3
  1296                           
  1297     0073                     ?___awdiv:	
  1298                           ; 2 bytes @ 0x3
  1299                           
  1300     0073                     ?___awmod:	
  1301                           ; 2 bytes @ 0x3
  1302                           
  1303     0073                     ?___lwdiv:	
  1304                           ; 2 bytes @ 0x3
  1305                           
  1306     0073                     ?___xxtofl:	
  1307                           ; 2 bytes @ 0x3
  1308                           
  1309     0073                     ADC_Start_Conversion@adc:	
  1310                           ; 4 bytes @ 0x3
  1311                           
  1312     0073                     gpio_pin_write_logic@logic:	
  1313                           ; 1 bytes @ 0x3
  1314                           
  1315     0073                     __Umul8_16@multiplicand:	
  1316                           ; 1 bytes @ 0x3
  1317                           
  1318     0073                     ADC_Get_Conversion_Result@result:	
  1319                           ; 1 bytes @ 0x3
  1320                           
  1321     0073                     WRITE_DATA_EEPROM@add:	
  1322                           ; 2 bytes @ 0x3
  1323                           
  1324     0073                     ___awdiv@divisor:	
  1325                           ; 2 bytes @ 0x3
  1326                           
  1327     0073                     ___awmod@divisor:	
  1328                           ; 2 bytes @ 0x3
  1329                           
  1330     0073                     ___lwdiv@divisor:	
  1331                           ; 2 bytes @ 0x3
  1332                           
  1333     0073                     memset@c:	
  1334                           ; 2 bytes @ 0x3
  1335                           
  1336     0073                     fputc@c:	
  1337                           ; 2 bytes @ 0x3
  1338                           
  1339     0073                     ___xxtofl@val:	
  1340                           ; 2 bytes @ 0x3
  1341                           
  1342                           
  1343                           ; 4 bytes @ 0x3
  1344     0073                     	ds	1
  1345     0074                     gpio_pin_write_logic@ret:
  1346                           
  1347                           ; 1 bytes @ 0x4
  1348     0074                     	ds	1
  1349     0075                     ??__Umul8_16:
  1350     0075                     ??_ADC_Get_Conversion_Result:	
  1351                           ; 1 bytes @ 0x5
  1352                           
  1353     0075                     Result_Format@adc:	
  1354                           ; 1 bytes @ 0x5
  1355                           
  1356     0075                     WRITE_DATA_EEPROM@data:	
  1357                           ; 1 bytes @ 0x5
  1358                           
  1359     0075                     gpio_pin_write_logic@pin:	
  1360                           ; 1 bytes @ 0x5
  1361                           
  1362     0075                     fputc@fp:	
  1363                           ; 1 bytes @ 0x5
  1364                           
  1365     0075                     ___awdiv@dividend:	
  1366                           ; 1 bytes @ 0x5
  1367                           
  1368     0075                     ___awmod@dividend:	
  1369                           ; 2 bytes @ 0x5
  1370                           
  1371     0075                     ___lwdiv@dividend:	
  1372                           ; 2 bytes @ 0x5
  1373                           
  1374     0075                     memset@n:	
  1375                           ; 2 bytes @ 0x5
  1376                           
  1377                           
  1378                           ; 2 bytes @ 0x5
  1379     0075                     	ds	1
  1380     0076                     ??_send_4bits:
  1381     0076                     ??_send_enable_signal:	
  1382                           ; 1 bytes @ 0x6
  1383                           
  1384     0076                     ??_motor_turn_right:	
  1385                           ; 1 bytes @ 0x6
  1386                           
  1387     0076                     ??_motor_turn_left:	
  1388                           ; 1 bytes @ 0x6
  1389                           
  1390     0076                     ??_motor_turn_off:	
  1391                           ; 1 bytes @ 0x6
  1392                           
  1393     0076                     ??_ADC_INIT:	
  1394                           ; 1 bytes @ 0x6
  1395                           
  1396     0076                     ??_WRITE_DATA_EEPROM:	
  1397                           ; 1 bytes @ 0x6
  1398                           
  1399     0076                     motor_turn_right@ret:	
  1400                           ; 1 bytes @ 0x6
  1401                           
  1402     0076                     motor_turn_left@ret:	
  1403                           ; 1 bytes @ 0x6
  1404                           
  1405     0076                     motor_turn_off@ret:	
  1406                           ; 1 bytes @ 0x6
  1407                           
  1408     0076                     WRITE_DATA_EEPROM@status:	
  1409                           ; 1 bytes @ 0x6
  1410                           
  1411                           
  1412                           ; 1 bytes @ 0x6
  1413     0076                     	ds	1
  1414     0077                     ??_lcd_4bits_send_command:
  1415     0077                     ??_memset:	
  1416                           ; 1 bytes @ 0x7
  1417                           
  1418     0077                     ??_sprintf:	
  1419                           ; 1 bytes @ 0x7
  1420                           
  1421     0077                     ??_mcal_initialize:	
  1422                           ; 1 bytes @ 0x7
  1423                           
  1424     0077                     ??_vfprintf:	
  1425                           ; 1 bytes @ 0x7
  1426                           
  1427     0077                     ??_lcd_4bits_send_char:	
  1428                           ; 1 bytes @ 0x7
  1429                           
  1430     0077                     ??___awdiv:	
  1431                           ; 1 bytes @ 0x7
  1432                           
  1433     0077                     ??___awmod:	
  1434                           ; 1 bytes @ 0x7
  1435                           
  1436     0077                     ??___lwdiv:	
  1437                           ; 1 bytes @ 0x7
  1438                           
  1439     0077                     motor_turn_right@motor:	
  1440                           ; 1 bytes @ 0x7
  1441                           
  1442     0077                     motor_turn_left@motor:	
  1443                           ; 1 bytes @ 0x7
  1444                           
  1445     0077                     motor_turn_off@motor:	
  1446                           ; 1 bytes @ 0x7
  1447                           
  1448     0077                     ADC_Get_Conversion_Result@adc:	
  1449                           ; 1 bytes @ 0x7
  1450                           
  1451                           
  1452                           ; 1 bytes @ 0x7
  1453     0077                     	ds	1
  1454     0078                     ??_set_cursor:
  1455     0078                     ??_apllication_initilaize:	
  1456                           ; 1 bytes @ 0x8
  1457                           
  1458     0078                     ??_lcd_4bits_send_string:	
  1459                           ; 1 bytes @ 0x8
  1460                           
  1461     0078                     ??_lcd_4bits_send_string_pos:	
  1462                           ; 1 bytes @ 0x8
  1463                           
  1464     0078                     ??_motor_initialize:	
  1465                           ; 1 bytes @ 0x8
  1466                           
  1467     0078                     ??_ecu_initialzie:	
  1468                           ; 1 bytes @ 0x8
  1469                           
  1470     0078                     ??_main:	
  1471                           ; 1 bytes @ 0x8
  1472                           
  1473                           
  1474                           ; 1 bytes @ 0x8
  1475     0078                     	ds	1
  1476     0079                     ?_ADC_INIT:
  1477                           
  1478                           	psect	cstackBANK0
  1479     0020                     __pcstackBANK0:	
  1480                           ; 1 bytes @ 0x9
  1481                           
  1482     0020                     ??_gpio_pin_write_logic:
  1483     0020                     ??_fputc:	
  1484                           ; 1 bytes @ 0x0
  1485                           
  1486     0020                     ?_ADC_Start_Conversion_Blocking:	
  1487                           ; 1 bytes @ 0x0
  1488                           
  1489     0020                     ??___xxtofl:	
  1490                           ; 1 bytes @ 0x0
  1491                           
  1492     0020                     ADC_INIT@ret:	
  1493                           ; 1 bytes @ 0x0
  1494                           
  1495     0020                     ADC_Start_Conversion_Blocking@channel:	
  1496                           ; 1 bytes @ 0x0
  1497                           
  1498     0020                     gpio_pin_direction_initialize@ret:	
  1499                           ; 1 bytes @ 0x0
  1500                           
  1501     0020                     ___awdiv@counter:	
  1502                           ; 1 bytes @ 0x0
  1503                           
  1504     0020                     ___awmod@counter:	
  1505                           ; 1 bytes @ 0x0
  1506                           
  1507     0020                     ___lwdiv@counter:	
  1508                           ; 1 bytes @ 0x0
  1509                           
  1510     0020                     memset@p:	
  1511                           ; 1 bytes @ 0x0
  1512                           
  1513     0020                     __Umul8_16@product:	
  1514                           ; 1 bytes @ 0x0
  1515                           
  1516                           
  1517                           ; 2 bytes @ 0x0
  1518     0020                     	ds	1
  1519     0021                     ADC_INIT@adc:
  1520     0021                     gpio_pin_direction_initialize@pin:	
  1521                           ; 1 bytes @ 0x1
  1522                           
  1523     0021                     ___awdiv@sign:	
  1524                           ; 1 bytes @ 0x1
  1525                           
  1526     0021                     ___awmod@sign:	
  1527                           ; 1 bytes @ 0x1
  1528                           
  1529     0021                     memset@dest:	
  1530                           ; 1 bytes @ 0x1
  1531                           
  1532     0021                     ADC_Start_Conversion_Blocking@result:	
  1533                           ; 1 bytes @ 0x1
  1534                           
  1535     0021                     ___lwdiv@quotient:	
  1536                           ; 2 bytes @ 0x1
  1537                           
  1538                           
  1539                           ; 2 bytes @ 0x1
  1540     0021                     	ds	1
  1541     0022                     ?_abs:
  1542     0022                     ___awdiv@quotient:	
  1543                           ; 2 bytes @ 0x2
  1544                           
  1545     0022                     __Umul8_16@word_mpld:	
  1546                           ; 2 bytes @ 0x2
  1547                           
  1548     0022                     abs@a:	
  1549                           ; 2 bytes @ 0x2
  1550                           
  1551                           
  1552                           ; 2 bytes @ 0x2
  1553     0022                     	ds	1
  1554     0023                     ??_ADC_Start_Conversion_Blocking:
  1555                           
  1556                           ; 1 bytes @ 0x3
  1557     0023                     	ds	1
  1558     0024                     ??_abs:
  1559     0024                     ADC_Start_Conversion_Blocking@adc:	
  1560                           ; 1 bytes @ 0x4
  1561                           
  1562     0024                     __Umul8_16@multiplier:	
  1563                           ; 1 bytes @ 0x4
  1564                           
  1565     0024                     ___xxtofl@sign:	
  1566                           ; 1 bytes @ 0x4
  1567                           
  1568                           
  1569                           ; 1 bytes @ 0x4
  1570     0024                     	ds	1
  1571     0025                     ??_gpio_pin_initialize:
  1572     0025                     ?_send_4bits:	
  1573                           ; 1 bytes @ 0x5
  1574                           
  1575     0025                     send_4bits@command:	
  1576                           ; 1 bytes @ 0x5
  1577                           
  1578     0025                     send_enable_signal@ret:	
  1579                           ; 1 bytes @ 0x5
  1580                           
  1581     0025                     ___xxtofl@exp:	
  1582                           ; 1 bytes @ 0x5
  1583                           
  1584                           
  1585                           ; 1 bytes @ 0x5
  1586     0025                     	ds	1
  1587     0026                     ?_vfpfcnvrt:
  1588     0026                     send_4bits@ret:	
  1589                           ; 1 bytes @ 0x6
  1590                           
  1591     0026                     send_enable_signal@lcd:	
  1592                           ; 1 bytes @ 0x6
  1593                           
  1594     0026                     vfpfcnvrt@fmt:	
  1595                           ; 1 bytes @ 0x6
  1596                           
  1597     0026                     ___xxtofl@arg:	
  1598                           ; 1 bytes @ 0x6
  1599                           
  1600                           
  1601                           ; 4 bytes @ 0x6
  1602     0026                     	ds	1
  1603     0027                     send_4bits@lcd:
  1604     0027                     gpio_pin_initialize@ret:	
  1605                           ; 1 bytes @ 0x7
  1606                           
  1607     0027                     vfpfcnvrt@ap:	
  1608                           ; 1 bytes @ 0x7
  1609                           
  1610                           
  1611                           ; 1 bytes @ 0x7
  1612     0027                     	ds	1
  1613     0028                     ?_lcd_4bits_send_command:
  1614     0028                     ?_lcd_4bits_send_char:	
  1615                           ; 1 bytes @ 0x8
  1616                           
  1617     0028                     ??_vfpfcnvrt:	
  1618                           ; 1 bytes @ 0x8
  1619                           
  1620     0028                     lcd_4bits_send_command@command:	
  1621                           ; 1 bytes @ 0x8
  1622                           
  1623     0028                     lcd_4bits_send_char@data:	
  1624                           ; 1 bytes @ 0x8
  1625                           
  1626     0028                     gpio_pin_initialize@pin:	
  1627                           ; 1 bytes @ 0x8
  1628                           
  1629                           
  1630                           ; 1 bytes @ 0x8
  1631     0028                     	ds	1
  1632     0029                     lcd_4bits_send_command@ret:
  1633     0029                     lcd_4bits_send_char@ret:	
  1634                           ; 1 bytes @ 0x9
  1635                           
  1636     0029                     motor_initialize@ret:	
  1637                           ; 1 bytes @ 0x9
  1638                           
  1639                           
  1640                           ; 1 bytes @ 0x9
  1641     0029                     	ds	1
  1642     002A                     ?___flmul:
  1643     002A                     lcd_4bits_send_command@lcd:	
  1644                           ; 4 bytes @ 0xA
  1645                           
  1646     002A                     lcd_4bits_send_char@lcd:	
  1647                           ; 1 bytes @ 0xA
  1648                           
  1649     002A                     motor_initialize@motor:	
  1650                           ; 1 bytes @ 0xA
  1651                           
  1652     002A                     vfpfcnvrt@done:	
  1653                           ; 1 bytes @ 0xA
  1654                           
  1655     002A                     ___flmul@b:	
  1656                           ; 1 bytes @ 0xA
  1657                           
  1658                           
  1659                           ; 4 bytes @ 0xA
  1660     002A                     	ds	1
  1661     002B                     ?_set_cursor:
  1662     002B                     ??_lcd_4bits_initialize:	
  1663                           ; 1 bytes @ 0xB
  1664                           
  1665     002B                     ?_lcd_4bits_send_string:	
  1666                           ; 1 bytes @ 0xB
  1667                           
  1668     002B                     set_cursor@Row:	
  1669                           ; 1 bytes @ 0xB
  1670                           
  1671     002B                     vfpfcnvrt@fp:	
  1672                           ; 1 bytes @ 0xB
  1673                           
  1674     002B                     lcd_4bits_send_string@data:	
  1675                           ; 1 bytes @ 0xB
  1676                           
  1677                           
  1678                           ; 2 bytes @ 0xB
  1679     002B                     	ds	1
  1680     002C                     set_cursor@coloumn:
  1681     002C                     vfpfcnvrt@cp:	
  1682                           ; 1 bytes @ 0xC
  1683                           
  1684                           
  1685                           ; 1 bytes @ 0xC
  1686     002C                     	ds	1
  1687     002D                     lcd_4bits_send_string@ret:
  1688     002D                     set_cursor@ret:	
  1689                           ; 1 bytes @ 0xD
  1690                           
  1691     002D                     vfpfcnvrt@convarg:	
  1692                           ; 1 bytes @ 0xD
  1693                           
  1694                           
  1695                           ; 4 bytes @ 0xD
  1696     002D                     	ds	1
  1697     002E                     lcd_4bits_initialize@counter:
  1698     002E                     lcd_4bits_send_string@lcd:	
  1699                           ; 1 bytes @ 0xE
  1700                           
  1701     002E                     set_cursor@lcd:	
  1702                           ; 1 bytes @ 0xE
  1703                           
  1704     002E                     ___flmul@a:	
  1705                           ; 1 bytes @ 0xE
  1706                           
  1707                           
  1708                           ; 4 bytes @ 0xE
  1709     002E                     	ds	1
  1710     002F                     ?_lcd_4bits_send_string_pos:
  1711     002F                     lcd_4bits_initialize@ret:	
  1712                           ; 1 bytes @ 0xF
  1713                           
  1714     002F                     lcd_4bits_send_string_pos@Row:	
  1715                           ; 1 bytes @ 0xF
  1716                           
  1717                           
  1718                           ; 1 bytes @ 0xF
  1719     002F                     	ds	1
  1720     0030                     lcd_4bits_initialize@lcd:
  1721     0030                     lcd_4bits_send_string_pos@coloumn:	
  1722                           ; 1 bytes @ 0x10
  1723                           
  1724                           
  1725                           ; 1 bytes @ 0x10
  1726     0030                     	ds	1
  1727     0031                     vfpfcnvrt@c:
  1728     0031                     lcd_4bits_send_string_pos@data:	
  1729                           ; 1 bytes @ 0x11
  1730                           
  1731                           
  1732                           ; 2 bytes @ 0x11
  1733     0031                     	ds	1
  1734     0032                     ??___flmul:
  1735     0032                     ?_vfprintf:	
  1736                           ; 1 bytes @ 0x12
  1737                           
  1738     0032                     vfprintf@fmt:	
  1739                           ; 2 bytes @ 0x12
  1740                           
  1741                           
  1742                           ; 1 bytes @ 0x12
  1743     0032                     	ds	1
  1744     0033                     lcd_4bits_send_string_pos@ret:
  1745     0033                     vfprintf@ap:	
  1746                           ; 1 bytes @ 0x13
  1747                           
  1748                           
  1749                           ; 1 bytes @ 0x13
  1750     0033                     	ds	1
  1751     0034                     lcd_4bits_send_string_pos@lcd:
  1752     0034                     vfprintf@fp:	
  1753                           ; 1 bytes @ 0x14
  1754                           
  1755                           
  1756                           ; 1 bytes @ 0x14
  1757     0034                     	ds	1
  1758     0035                     vfprintf@cfmt:
  1759                           
  1760                           ; 1 bytes @ 0x15
  1761     0035                     	ds	1
  1762     0036                     ?_sprintf:
  1763     0036                     sprintf@fmt:	
  1764                           ; 2 bytes @ 0x16
  1765                           
  1766                           
  1767                           ; 1 bytes @ 0x16
  1768     0036                     	ds	1
  1769     0037                     ___flmul@sign:
  1770                           
  1771                           ; 1 bytes @ 0x17
  1772     0037                     	ds	1
  1773     0038                     ___flmul@grs:
  1774                           
  1775                           ; 4 bytes @ 0x18
  1776     0038                     	ds	1
  1777     0039                     sprintf@ap:
  1778                           
  1779                           ; 1 bytes @ 0x19
  1780     0039                     	ds	1
  1781     003A                     sprintf@s:
  1782                           
  1783                           ; 1 bytes @ 0x1A
  1784     003A                     	ds	1
  1785     003B                     sprintf@f:
  1786                           
  1787                           ; 11 bytes @ 0x1B
  1788     003B                     	ds	1
  1789     003C                     ___flmul@aexp:
  1790                           
  1791                           ; 1 bytes @ 0x1C
  1792     003C                     	ds	1
  1793     003D                     ___flmul@bexp:
  1794                           
  1795                           ; 1 bytes @ 0x1D
  1796     003D                     	ds	1
  1797     003E                     ___flmul@prod:
  1798                           
  1799                           ; 4 bytes @ 0x1E
  1800     003E                     	ds	4
  1801     0042                     ___flmul@temp:
  1802                           
  1803                           ; 2 bytes @ 0x22
  1804     0042                     	ds	2
  1805     0044                     ?___fltol:
  1806     0044                     ___fltol@f1:	
  1807                           ; 4 bytes @ 0x24
  1808                           
  1809                           
  1810                           ; 4 bytes @ 0x24
  1811     0044                     	ds	2
  1812     0046                     ?_Convert_uint16_to_string:
  1813     0046                     Convert_uint16_to_string@data:	
  1814                           ; 1 bytes @ 0x26
  1815                           
  1816                           
  1817                           ; 2 bytes @ 0x26
  1818     0046                     	ds	2
  1819     0048                     ??___fltol:
  1820     0048                     Convert_uint16_to_string@str:	
  1821                           ; 1 bytes @ 0x28
  1822                           
  1823                           
  1824                           ; 1 bytes @ 0x28
  1825     0048                     	ds	1
  1826     0049                     ??_Convert_uint16_to_string:
  1827                           
  1828                           ; 1 bytes @ 0x29
  1829     0049                     	ds	3
  1830     004C                     ___fltol@sign1:
  1831                           
  1832                           ; 1 bytes @ 0x2C
  1833     004C                     	ds	1
  1834     004D                     ___fltol@exp1:
  1835                           
  1836                           ; 1 bytes @ 0x2D
  1837     004D                     	ds	1
  1838                           
  1839                           	psect	maintext
  1840     0390                     __pmaintext:	
  1841 ;;
  1842 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1843 ;;
  1844 ;; *************** function _main *****************
  1845 ;; Defined at:
  1846 ;;		line 14 in file "Temperature_Controlled_Fan_System.c"
  1847 ;; Parameters:    Size  Location     Type
  1848 ;;		None
  1849 ;; Auto vars:     Size  Location     Type
  1850 ;;		None
  1851 ;; Return value:  Size  Location     Type
  1852 ;;                  2  595[None  ] int 
  1853 ;; Registers used:
  1854 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1855 ;; Tracked objects:
  1856 ;;		On entry : B00/0
  1857 ;;		On exit  : 0/0
  1858 ;;		Unchanged: 0/0
  1859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1860 ;;      Params:         0       0       0       0       0
  1861 ;;      Locals:         0       0       0       0       0
  1862 ;;      Temps:          0       0       0       0       0
  1863 ;;      Totals:         0       0       0       0       0
  1864 ;;Total ram usage:        0 bytes
  1865 ;; Hardware stack levels required when called: 8
  1866 ;; This function calls:
  1867 ;;		_ADC_Start_Conversion_Blocking
  1868 ;;		_Convert_uint16_to_string
  1869 ;;		_WRITE_DATA_EEPROM
  1870 ;;		___flmul
  1871 ;;		___fltol
  1872 ;;		___lwdiv
  1873 ;;		___xxtofl
  1874 ;;		_apllication_initilaize
  1875 ;;		_lcd_4bits_send_string_pos
  1876 ;;		_motor_turn_left
  1877 ;;		_motor_turn_off
  1878 ;;		_motor_turn_right
  1879 ;; This function is called by:
  1880 ;;		Startup code after reset
  1881 ;; This function uses a non-reentrant model
  1882 ;;
  1883                           
  1884     0390                     _main:	
  1885                           ;psect for function _main
  1886                           
  1887     0390                     l4751:	
  1888                           ;incstack = 0
  1889                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1890                           
  1891                           
  1892                           ;Temperature_Controlled_Fan_System.c: 15:     apllication_initilaize();
  1893     0390  120A  158A  2021  120A  118A  	fcall	_apllication_initilaize
  1894     0395                     l4753:
  1895                           
  1896                           ;Temperature_Controlled_Fan_System.c: 16:     WRITE_DATA_EEPROM(0x00,&Max_Temp);
  1897     0395  3000               	movlw	0
  1898     0396  00F3               	movwf	WRITE_DATA_EEPROM@add
  1899     0397  00F4               	movwf	WRITE_DATA_EEPROM@add+1
  1900     0398  305C               	movlw	(low _Max_Temp)& (0+255)
  1901     0399  00F5               	movwf	WRITE_DATA_EEPROM@data
  1902     039A  120A  158A  210E  120A  118A  	fcall	_WRITE_DATA_EEPROM
  1903     039F                     l4755:
  1904                           
  1905                           ;Temperature_Controlled_Fan_System.c: 18:     ADC_Start_Conversion_Blocking(&adc,CHANNEL
      +                          0,&adc_res);
  1906     039F  1283               	bcf	3,5	;RP0=0, select bank0
  1907     03A0  1303               	bcf	3,6	;RP1=0, select bank0
  1908     03A1  01A0               	clrf	ADC_Start_Conversion_Blocking@channel
  1909     03A2  305E               	movlw	low (_adc_res| 0)
  1910     03A3  00A1               	movwf	ADC_Start_Conversion_Blocking@result
  1911     03A4  3000               	movlw	high (_adc_res| 0)
  1912     03A5  00A2               	movwf	ADC_Start_Conversion_Blocking@result+1
  1913     03A6  3069               	movlw	(low (_adc| 0))& (0+255)
  1914     03A7  120A  158A  21C7  120A  118A  	fcall	_ADC_Start_Conversion_Blocking
  1915     03AC                     l4757:
  1916                           
  1917                           ;Temperature_Controlled_Fan_System.c: 20:     Temp = adc_res * 4.8828125f;
  1918     03AC  1283               	bcf	3,5	;RP0=0, select bank0
  1919     03AD  1303               	bcf	3,6	;RP1=0, select bank0
  1920     03AE  085E               	movf	_adc_res,w
  1921     03AF  00F3               	movwf	___xxtofl@val
  1922     03B0  085F               	movf	_adc_res+1,w
  1923     03B1  00F4               	movwf	___xxtofl@val+1
  1924     03B2  01F5               	clrf	___xxtofl@val+2
  1925     03B3  01F6               	clrf	___xxtofl@val+3
  1926     03B4  3000               	movlw	0
  1927     03B5  120A  118A  2740  120A  118A  	fcall	___xxtofl
  1928     03BA  0876               	movf	?___xxtofl+3,w
  1929     03BB  1283               	bcf	3,5	;RP0=0, select bank0
  1930     03BC  1303               	bcf	3,6	;RP1=0, select bank0
  1931     03BD  00B1               	movwf	___flmul@a+3
  1932     03BE  0875               	movf	?___xxtofl+2,w
  1933     03BF  00B0               	movwf	___flmul@a+2
  1934     03C0  0874               	movf	?___xxtofl+1,w
  1935     03C1  00AF               	movwf	___flmul@a+1
  1936     03C2  0873               	movf	?___xxtofl,w
  1937     03C3  00AE               	movwf	___flmul@a
  1938     03C4  3040               	movlw	64
  1939     03C5  00AD               	movwf	___flmul@b+3
  1940     03C6  309C               	movlw	156
  1941     03C7  00AC               	movwf	___flmul@b+2
  1942     03C8  3040               	movlw	64
  1943     03C9  00AB               	movwf	___flmul@b+1
  1944     03CA  3000               	movlw	0
  1945     03CB  00AA               	movwf	___flmul@b
  1946     03CC  120A  118A  204B  120A  118A  	fcall	___flmul
  1947     03D1  1283               	bcf	3,5	;RP0=0, select bank0
  1948     03D2  1303               	bcf	3,6	;RP1=0, select bank0
  1949     03D3  082D               	movf	?___flmul+3,w
  1950     03D4  00C7               	movwf	___fltol@f1+3
  1951     03D5  082C               	movf	?___flmul+2,w
  1952     03D6  00C6               	movwf	___fltol@f1+2
  1953     03D7  082B               	movf	?___flmul+1,w
  1954     03D8  00C5               	movwf	___fltol@f1+1
  1955     03D9  082A               	movf	?___flmul,w
  1956     03DA  00C4               	movwf	___fltol@f1
  1957     03DB  120A  158A  255B  120A  118A  	fcall	___fltol
  1958     03E0  1283               	bcf	3,5	;RP0=0, select bank0
  1959     03E1  1303               	bcf	3,6	;RP1=0, select bank0
  1960     03E2  0845               	movf	?___fltol+1,w
  1961     03E3  00D3               	movwf	_Temp+1
  1962     03E4  0844               	movf	?___fltol,w
  1963     03E5  00D2               	movwf	_Temp
  1964     03E6                     l4759:
  1965                           
  1966                           ;Temperature_Controlled_Fan_System.c: 21:     Temp /= 10;
  1967     03E6  300A               	movlw	10
  1968     03E7  00F3               	movwf	___lwdiv@divisor
  1969     03E8  3000               	movlw	0
  1970     03E9  00F4               	movwf	___lwdiv@divisor+1
  1971     03EA  0853               	movf	_Temp+1,w
  1972     03EB  00F6               	movwf	___lwdiv@dividend+1
  1973     03EC  0852               	movf	_Temp,w
  1974     03ED  00F5               	movwf	___lwdiv@dividend
  1975     03EE  120A  158A  22C4  120A  118A  	fcall	___lwdiv
  1976     03F3  0874               	movf	?___lwdiv+1,w
  1977     03F4  1283               	bcf	3,5	;RP0=0, select bank0
  1978     03F5  1303               	bcf	3,6	;RP1=0, select bank0
  1979     03F6  00D3               	movwf	_Temp+1
  1980     03F7  0873               	movf	?___lwdiv,w
  1981     03F8  00D2               	movwf	_Temp
  1982     03F9                     l4761:
  1983                           
  1984                           ;Temperature_Controlled_Fan_System.c: 22:     if(Temp > Max_Temp){
  1985     03F9  0853               	movf	_Temp+1,w
  1986     03FA  025D               	subwf	_Max_Temp+1,w
  1987     03FB  1D03               	skipz
  1988     03FC  2BFF               	goto	u6755
  1989     03FD  0852               	movf	_Temp,w
  1990     03FE  025C               	subwf	_Max_Temp,w
  1991     03FF                     u6755:
  1992     03FF  1803               	skipnc
  1993     0400  2C02               	goto	u6751
  1994     0401  2C03               	goto	u6750
  1995     0402                     u6751:
  1996     0402  2C07               	goto	l4765
  1997     0403                     u6750:
  1998     0403                     l4763:
  1999                           
  2000                           ;Temperature_Controlled_Fan_System.c: 23:         Max_Temp = Temp;
  2001     0403  0853               	movf	_Temp+1,w
  2002     0404  00DD               	movwf	_Max_Temp+1
  2003     0405  0852               	movf	_Temp,w
  2004     0406  00DC               	movwf	_Max_Temp
  2005     0407                     l4765:
  2006                           
  2007                           ;Temperature_Controlled_Fan_System.c: 25:     Convert_uint16_to_string(Temp,lcd_show);
  2008     0407  0853               	movf	_Temp+1,w
  2009     0408  00C7               	movwf	Convert_uint16_to_string@data+1
  2010     0409  0852               	movf	_Temp,w
  2011     040A  00C6               	movwf	Convert_uint16_to_string@data
  2012     040B  30B5               	movlw	(low (_lcd_show| 0))& (0+255)
  2013     040C  00C8               	movwf	Convert_uint16_to_string@str
  2014     040D  120A  158A  2399  120A  118A  	fcall	_Convert_uint16_to_string
  2015     0412                     l4767:
  2016                           
  2017                           ;Temperature_Controlled_Fan_System.c: 26:     lcd_4bits_send_string_pos(&lcd,1,1,"Temp i
      +                          s : ");
  2018     0412  1283               	bcf	3,5	;RP0=0, select bank0
  2019     0413  1303               	bcf	3,6	;RP1=0, select bank0
  2020     0414  01AF               	clrf	lcd_4bits_send_string_pos@Row
  2021     0415  0AAF               	incf	lcd_4bits_send_string_pos@Row,f
  2022     0416  01B0               	clrf	lcd_4bits_send_string_pos@coloumn
  2023     0417  0AB0               	incf	lcd_4bits_send_string_pos@coloumn,f
  2024     0418  3001               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2025     0419  00B1               	movwf	lcd_4bits_send_string_pos@data
  2026     041A  3080               	movlw	128
  2027     041B  00B2               	movwf	lcd_4bits_send_string_pos@data+1
  2028     041C  30CF               	movlw	(low (_lcd| 0))& (0+255)
  2029     041D  120A  158A  2153  120A  118A  	fcall	_lcd_4bits_send_string_pos
  2030     0422                     l4769:
  2031                           
  2032                           ;Temperature_Controlled_Fan_System.c: 27:     lcd_4bits_send_string_pos(&lcd,1,10,lcd_sh
      +                          ow);
  2033     0422  1283               	bcf	3,5	;RP0=0, select bank0
  2034     0423  1303               	bcf	3,6	;RP1=0, select bank0
  2035     0424  01AF               	clrf	lcd_4bits_send_string_pos@Row
  2036     0425  0AAF               	incf	lcd_4bits_send_string_pos@Row,f
  2037     0426  300A               	movlw	10
  2038     0427  00B0               	movwf	lcd_4bits_send_string_pos@coloumn
  2039     0428  30B5               	movlw	(low (_lcd_show| 0))& (0+255)
  2040     0429  00B1               	movwf	lcd_4bits_send_string_pos@data
  2041     042A  3000               	movlw	0
  2042     042B  00B2               	movwf	lcd_4bits_send_string_pos@data+1
  2043     042C  30CF               	movlw	(low (_lcd| 0))& (0+255)
  2044     042D  120A  158A  2153  120A  118A  	fcall	_lcd_4bits_send_string_pos
  2045     0432                     l4771:
  2046                           
  2047                           ;Temperature_Controlled_Fan_System.c: 28:     if((Temp >= 50) && (Temp < 60)){
  2048     0432  3000               	movlw	0
  2049     0433  1283               	bcf	3,5	;RP0=0, select bank0
  2050     0434  1303               	bcf	3,6	;RP1=0, select bank0
  2051     0435  0253               	subwf	_Temp+1,w
  2052     0436  3032               	movlw	50
  2053     0437  1903               	skipnz
  2054     0438  0252               	subwf	_Temp,w
  2055     0439  1C03               	skipc
  2056     043A  2C3C               	goto	u6761
  2057     043B  2C3D               	goto	u6760
  2058     043C                     u6761:
  2059     043C  2C4D               	goto	l4777
  2060     043D                     u6760:
  2061     043D                     l4773:
  2062     043D  3000               	movlw	0
  2063     043E  0253               	subwf	_Temp+1,w
  2064     043F  303C               	movlw	60
  2065     0440  1903               	skipnz
  2066     0441  0252               	subwf	_Temp,w
  2067     0442  1803               	skipnc
  2068     0443  2C45               	goto	u6771
  2069     0444  2C46               	goto	u6770
  2070     0445                     u6771:
  2071     0445  2C4D               	goto	l4777
  2072     0446                     u6770:
  2073     0446                     l4775:
  2074                           
  2075                           ;Temperature_Controlled_Fan_System.c: 29:         motor_turn_right(&motor1);
  2076     0446  306E               	movlw	(low (_motor1| 0))& (0+255)
  2077     0447  120A  158A  205F  120A  118A  	fcall	_motor_turn_right
  2078                           
  2079                           ;Temperature_Controlled_Fan_System.c: 30:     }
  2080     044C  2C6F               	goto	l4783
  2081     044D                     l4777:
  2082     044D  3000               	movlw	0
  2083     044E  0253               	subwf	_Temp+1,w
  2084     044F  303C               	movlw	60
  2085     0450  1903               	skipnz
  2086     0451  0252               	subwf	_Temp,w
  2087     0452  1C03               	skipc
  2088     0453  2C55               	goto	u6781
  2089     0454  2C56               	goto	u6780
  2090     0455                     u6781:
  2091     0455  2C63               	goto	l4781
  2092     0456                     u6780:
  2093     0456                     l4779:
  2094                           
  2095                           ;Temperature_Controlled_Fan_System.c: 32:         motor_turn_right(&motor1);
  2096     0456  306E               	movlw	(low (_motor1| 0))& (0+255)
  2097     0457  120A  158A  205F  120A  118A  	fcall	_motor_turn_right
  2098                           
  2099                           ;Temperature_Controlled_Fan_System.c: 33:         motor_turn_left(&motor2);
  2100     045C  306C               	movlw	(low (_motor2| 0))& (0+255)
  2101     045D  120A  158A  2045  120A  118A  	fcall	_motor_turn_left
  2102                           
  2103                           ;Temperature_Controlled_Fan_System.c: 34:     }
  2104     0462  2C6F               	goto	l4783
  2105     0463                     l4781:
  2106                           
  2107                           ;Temperature_Controlled_Fan_System.c: 36:         motor_turn_off(&motor1);
  2108     0463  306E               	movlw	(low (_motor1| 0))& (0+255)
  2109     0464  120A  158A  202C  120A  118A  	fcall	_motor_turn_off
  2110                           
  2111                           ;Temperature_Controlled_Fan_System.c: 37:         motor_turn_off(&motor2);
  2112     0469  306C               	movlw	(low (_motor2| 0))& (0+255)
  2113     046A  120A  158A  202C  120A  118A  	fcall	_motor_turn_off
  2114     046F                     l4783:
  2115                           
  2116                           ;Temperature_Controlled_Fan_System.c: 40:     WRITE_DATA_EEPROM(0x00,Max_Temp);
  2117     046F  3000               	movlw	0
  2118     0470  00F3               	movwf	WRITE_DATA_EEPROM@add
  2119     0471  00F4               	movwf	WRITE_DATA_EEPROM@add+1
  2120     0472  1283               	bcf	3,5	;RP0=0, select bank0
  2121     0473  1303               	bcf	3,6	;RP1=0, select bank0
  2122     0474  085C               	movf	_Max_Temp,w
  2123     0475  00F5               	movwf	WRITE_DATA_EEPROM@data
  2124     0476  120A  158A  210E  120A  118A  	fcall	_WRITE_DATA_EEPROM
  2125     047B  2B9F               	goto	l4755
  2126     047C  120A  118A  280C   	ljmp	start
  2127     047F                     __end_of_main:
  2128                           
  2129                           	psect	text1
  2130     085F                     __ptext1:	
  2131 ;; *************** function _motor_turn_right *****************
  2132 ;; Defined at:
  2133 ;;		line 19 in file "ECU_LAYER/Motor/ecu_motor_driver.c"
  2134 ;; Parameters:    Size  Location     Type
  2135 ;;  motor           1    wreg     PTR const struct .
  2136 ;;		 -> motor1(2), 
  2137 ;; Auto vars:     Size  Location     Type
  2138 ;;  motor           1    7[COMMON] PTR const struct .
  2139 ;;		 -> motor1(2), 
  2140 ;;  ret             1    6[COMMON] unsigned char 
  2141 ;; Return value:  Size  Location     Type
  2142 ;;                  1    wreg      unsigned char 
  2143 ;; Registers used:
  2144 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2145 ;; Tracked objects:
  2146 ;;		On entry : 0/0
  2147 ;;		On exit  : 0/0
  2148 ;;		Unchanged: 0/0
  2149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2150 ;;      Params:         0       0       0       0       0
  2151 ;;      Locals:         2       0       0       0       0
  2152 ;;      Temps:          0       0       0       0       0
  2153 ;;      Totals:         2       0       0       0       0
  2154 ;;Total ram usage:        2 bytes
  2155 ;; Hardware stack levels used: 1
  2156 ;; Hardware stack levels required when called: 3
  2157 ;; This function calls:
  2158 ;;		_gpio_pin_write_logic
  2159 ;; This function is called by:
  2160 ;;		_main
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163                           
  2164     085F                     _motor_turn_right:	
  2165                           ;psect for function _motor_turn_right
  2166                           
  2167                           
  2168                           ;incstack = 0
  2169                           ; Regs used in _motor_turn_right: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2170                           ;motor_turn_right@motor stored from wreg
  2171     085F  00F7               	movwf	motor_turn_right@motor
  2172     0860                     l4541:
  2173     0860                     l4543:
  2174                           
  2175                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 21:     if(motor == ((void*)0)){
  2176     0860  0877               	movf	motor_turn_right@motor,w
  2177     0861  1D03               	btfss	3,2
  2178     0862  2864               	goto	u6421
  2179     0863  2865               	goto	u6420
  2180     0864                     u6421:
  2181     0864  2866               	goto	l4547
  2182     0865                     u6420:
  2183     0865                     l4545:
  2184                           
  2185                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 23:     }
  2186     0865  2878               	goto	l118
  2187     0866                     l4547:
  2188                           
  2189                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 25:         ret = gpio_pin_write_logic(&(motor->pin
      +                          s[0]),GPIO_HIGH);
  2190     0866  01F3               	clrf	gpio_pin_write_logic@logic
  2191     0867  0AF3               	incf	gpio_pin_write_logic@logic,f
  2192     0868  0877               	movf	motor_turn_right@motor,w
  2193     0869  120A  118A  256E  120A  158A  	fcall	_gpio_pin_write_logic
  2194     086E  00F6               	movwf	motor_turn_right@ret
  2195                           
  2196                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 26:         ret = gpio_pin_write_logic(&(motor->pin
      +                          s[1]),GPIO_LOW);
  2197     086F  01F3               	clrf	gpio_pin_write_logic@logic
  2198     0870  0877               	movf	motor_turn_right@motor,w
  2199     0871  3E01               	addlw	1
  2200     0872  120A  118A  256E  120A  158A  	fcall	_gpio_pin_write_logic
  2201     0877  00F6               	movwf	motor_turn_right@ret
  2202     0878                     l118:
  2203     0878  0008               	return
  2204     0879                     __end_of_motor_turn_right:
  2205                           
  2206                           	psect	text2
  2207     082C                     __ptext2:	
  2208 ;; *************** function _motor_turn_off *****************
  2209 ;; Defined at:
  2210 ;;		line 41 in file "ECU_LAYER/Motor/ecu_motor_driver.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;  motor           1    wreg     PTR const struct .
  2213 ;;		 -> motor2(2), motor1(2), 
  2214 ;; Auto vars:     Size  Location     Type
  2215 ;;  motor           1    7[COMMON] PTR const struct .
  2216 ;;		 -> motor2(2), motor1(2), 
  2217 ;;  ret             1    6[COMMON] unsigned char 
  2218 ;; Return value:  Size  Location     Type
  2219 ;;                  1    wreg      unsigned char 
  2220 ;; Registers used:
  2221 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2222 ;; Tracked objects:
  2223 ;;		On entry : 0/0
  2224 ;;		On exit  : 0/0
  2225 ;;		Unchanged: 0/0
  2226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2227 ;;      Params:         0       0       0       0       0
  2228 ;;      Locals:         2       0       0       0       0
  2229 ;;      Temps:          0       0       0       0       0
  2230 ;;      Totals:         2       0       0       0       0
  2231 ;;Total ram usage:        2 bytes
  2232 ;; Hardware stack levels used: 1
  2233 ;; Hardware stack levels required when called: 3
  2234 ;; This function calls:
  2235 ;;		_gpio_pin_write_logic
  2236 ;; This function is called by:
  2237 ;;		_main
  2238 ;; This function uses a non-reentrant model
  2239 ;;
  2240                           
  2241     082C                     _motor_turn_off:	
  2242                           ;psect for function _motor_turn_off
  2243                           
  2244                           
  2245                           ;incstack = 0
  2246                           ; Regs used in _motor_turn_off: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2247                           ;motor_turn_off@motor stored from wreg
  2248     082C  00F7               	movwf	motor_turn_off@motor
  2249     082D                     l4561:
  2250     082D                     l4563:
  2251                           
  2252                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 43:     if(motor == ((void*)0)){
  2253     082D  0877               	movf	motor_turn_off@motor,w
  2254     082E  1D03               	btfss	3,2
  2255     082F  2831               	goto	u6441
  2256     0830  2832               	goto	u6440
  2257     0831                     u6441:
  2258     0831  2833               	goto	l4567
  2259     0832                     u6440:
  2260     0832                     l4565:
  2261                           
  2262                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 45:     }
  2263     0832  2844               	goto	l128
  2264     0833                     l4567:
  2265                           
  2266                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 47:         ret = gpio_pin_write_logic(&(motor->pin
      +                          s[0]),GPIO_LOW);
  2267     0833  01F3               	clrf	gpio_pin_write_logic@logic
  2268     0834  0877               	movf	motor_turn_off@motor,w
  2269     0835  120A  118A  256E  120A  158A  	fcall	_gpio_pin_write_logic
  2270     083A  00F6               	movwf	motor_turn_off@ret
  2271                           
  2272                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 48:         ret = gpio_pin_write_logic(&(motor->pin
      +                          s[1]),GPIO_LOW);
  2273     083B  01F3               	clrf	gpio_pin_write_logic@logic
  2274     083C  0877               	movf	motor_turn_off@motor,w
  2275     083D  3E01               	addlw	1
  2276     083E  120A  118A  256E  120A  158A  	fcall	_gpio_pin_write_logic
  2277     0843  00F6               	movwf	motor_turn_off@ret
  2278     0844                     l128:
  2279     0844  0008               	return
  2280     0845                     __end_of_motor_turn_off:
  2281                           
  2282                           	psect	text3
  2283     0845                     __ptext3:	
  2284 ;; *************** function _motor_turn_left *****************
  2285 ;; Defined at:
  2286 ;;		line 30 in file "ECU_LAYER/Motor/ecu_motor_driver.c"
  2287 ;; Parameters:    Size  Location     Type
  2288 ;;  motor           1    wreg     PTR const struct .
  2289 ;;		 -> motor2(2), 
  2290 ;; Auto vars:     Size  Location     Type
  2291 ;;  motor           1    7[COMMON] PTR const struct .
  2292 ;;		 -> motor2(2), 
  2293 ;;  ret             1    6[COMMON] unsigned char 
  2294 ;; Return value:  Size  Location     Type
  2295 ;;                  1    wreg      unsigned char 
  2296 ;; Registers used:
  2297 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2298 ;; Tracked objects:
  2299 ;;		On entry : 0/0
  2300 ;;		On exit  : 0/0
  2301 ;;		Unchanged: 0/0
  2302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2303 ;;      Params:         0       0       0       0       0
  2304 ;;      Locals:         2       0       0       0       0
  2305 ;;      Temps:          0       0       0       0       0
  2306 ;;      Totals:         2       0       0       0       0
  2307 ;;Total ram usage:        2 bytes
  2308 ;; Hardware stack levels used: 1
  2309 ;; Hardware stack levels required when called: 3
  2310 ;; This function calls:
  2311 ;;		_gpio_pin_write_logic
  2312 ;; This function is called by:
  2313 ;;		_main
  2314 ;; This function uses a non-reentrant model
  2315 ;;
  2316                           
  2317     0845                     _motor_turn_left:	
  2318                           ;psect for function _motor_turn_left
  2319                           
  2320                           
  2321                           ;incstack = 0
  2322                           ; Regs used in _motor_turn_left: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2323                           ;motor_turn_left@motor stored from wreg
  2324     0845  00F7               	movwf	motor_turn_left@motor
  2325     0846                     l4551:
  2326     0846                     l4553:
  2327                           
  2328                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 32:     if(motor == ((void*)0)){
  2329     0846  0877               	movf	motor_turn_left@motor,w
  2330     0847  1D03               	btfss	3,2
  2331     0848  284A               	goto	u6431
  2332     0849  284B               	goto	u6430
  2333     084A                     u6431:
  2334     084A  284C               	goto	l4557
  2335     084B                     u6430:
  2336     084B                     l4555:
  2337                           
  2338                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 34:     }
  2339     084B  285E               	goto	l123
  2340     084C                     l4557:
  2341                           
  2342                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 36:         ret = gpio_pin_write_logic(&(motor->pin
      +                          s[0]),GPIO_LOW);
  2343     084C  01F3               	clrf	gpio_pin_write_logic@logic
  2344     084D  0877               	movf	motor_turn_left@motor,w
  2345     084E  120A  118A  256E  120A  158A  	fcall	_gpio_pin_write_logic
  2346     0853  00F6               	movwf	motor_turn_left@ret
  2347                           
  2348                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 37:         ret = gpio_pin_write_logic(&(motor->pin
      +                          s[1]),GPIO_HIGH);
  2349     0854  01F3               	clrf	gpio_pin_write_logic@logic
  2350     0855  0AF3               	incf	gpio_pin_write_logic@logic,f
  2351     0856  0877               	movf	motor_turn_left@motor,w
  2352     0857  3E01               	addlw	1
  2353     0858  120A  118A  256E  120A  158A  	fcall	_gpio_pin_write_logic
  2354     085D  00F6               	movwf	motor_turn_left@ret
  2355     085E                     l123:
  2356     085E  0008               	return
  2357     085F                     __end_of_motor_turn_left:
  2358                           
  2359                           	psect	text4
  2360     0953                     __ptext4:	
  2361 ;; *************** function _lcd_4bits_send_string_pos *****************
  2362 ;; Defined at:
  2363 ;;		line 94 in file "ECU_LAYER/LCD/ecu_lcd.c"
  2364 ;; Parameters:    Size  Location     Type
  2365 ;;  lcd             1    wreg     PTR const struct .
  2366 ;;		 -> lcd(6), 
  2367 ;;  Row             1   15[BANK0 ] unsigned char 
  2368 ;;  coloumn         1   16[BANK0 ] unsigned char 
  2369 ;;  data            2   17[BANK0 ] PTR unsigned char 
  2370 ;;		 -> STR_4(11), lcd_show(6), 
  2371 ;; Auto vars:     Size  Location     Type
  2372 ;;  lcd             1   20[BANK0 ] PTR const struct .
  2373 ;;		 -> lcd(6), 
  2374 ;;  ret             1   19[BANK0 ] unsigned char 
  2375 ;; Return value:  Size  Location     Type
  2376 ;;                  1    wreg      unsigned char 
  2377 ;; Registers used:
  2378 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2379 ;; Tracked objects:
  2380 ;;		On entry : 0/0
  2381 ;;		On exit  : 0/0
  2382 ;;		Unchanged: 0/0
  2383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2384 ;;      Params:         0       4       0       0       0
  2385 ;;      Locals:         0       2       0       0       0
  2386 ;;      Temps:          0       0       0       0       0
  2387 ;;      Totals:         0       6       0       0       0
  2388 ;;Total ram usage:        6 bytes
  2389 ;; Hardware stack levels used: 1
  2390 ;; Hardware stack levels required when called: 6
  2391 ;; This function calls:
  2392 ;;		_lcd_4bits_send_string
  2393 ;;		_set_cursor
  2394 ;; This function is called by:
  2395 ;;		_main
  2396 ;; This function uses a non-reentrant model
  2397 ;;
  2398                           
  2399     0953                     _lcd_4bits_send_string_pos:	
  2400                           ;psect for function _lcd_4bits_send_string_pos
  2401                           
  2402                           
  2403                           ;incstack = 0
  2404                           ; Regs used in _lcd_4bits_send_string_pos: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+
      +                          cstack]
  2405                           ;lcd_4bits_send_string_pos@lcd stored from wreg
  2406     0953  1283               	bcf	3,5	;RP0=0, select bank0
  2407     0954  1303               	bcf	3,6	;RP1=0, select bank0
  2408     0955  00B4               	movwf	lcd_4bits_send_string_pos@lcd
  2409     0956                     l4515:
  2410     0956                     l4517:
  2411                           
  2412                           ;ECU_LAYER/LCD/ecu_lcd.c: 96:     if(lcd == ((void*)0)){
  2413     0956  0834               	movf	lcd_4bits_send_string_pos@lcd,w
  2414     0957  1D03               	btfss	3,2
  2415     0958  295A               	goto	u6391
  2416     0959  295B               	goto	u6390
  2417     095A                     u6391:
  2418     095A  295C               	goto	l4521
  2419     095B                     u6390:
  2420     095B                     l4519:
  2421                           
  2422                           ;ECU_LAYER/LCD/ecu_lcd.c: 98:     }
  2423     095B  2976               	goto	l53
  2424     095C                     l4521:
  2425                           
  2426                           ;ECU_LAYER/LCD/ecu_lcd.c: 100:         ret = set_cursor(lcd,Row,coloumn);
  2427     095C  082F               	movf	lcd_4bits_send_string_pos@Row,w
  2428     095D  00AB               	movwf	set_cursor@Row
  2429     095E  0830               	movf	lcd_4bits_send_string_pos@coloumn,w
  2430     095F  00AC               	movwf	set_cursor@coloumn
  2431     0960  0834               	movf	lcd_4bits_send_string_pos@lcd,w
  2432     0961  120A  158A  221D  120A  158A  	fcall	_set_cursor
  2433     0966  1283               	bcf	3,5	;RP0=0, select bank0
  2434     0967  1303               	bcf	3,6	;RP1=0, select bank0
  2435     0968  00B3               	movwf	lcd_4bits_send_string_pos@ret
  2436                           
  2437                           ;ECU_LAYER/LCD/ecu_lcd.c: 101:         ret = lcd_4bits_send_string(lcd,data);
  2438     0969  0831               	movf	lcd_4bits_send_string_pos@data,w
  2439     096A  00AB               	movwf	lcd_4bits_send_string@data
  2440     096B  0832               	movf	lcd_4bits_send_string_pos@data+1,w
  2441     096C  00AC               	movwf	lcd_4bits_send_string@data+1
  2442     096D  0834               	movf	lcd_4bits_send_string_pos@lcd,w
  2443     096E  120A  158A  224D  120A  158A  	fcall	_lcd_4bits_send_string
  2444     0973  1283               	bcf	3,5	;RP0=0, select bank0
  2445     0974  1303               	bcf	3,6	;RP1=0, select bank0
  2446     0975  00B3               	movwf	lcd_4bits_send_string_pos@ret
  2447     0976                     l53:
  2448     0976  0008               	return
  2449     0977                     __end_of_lcd_4bits_send_string_pos:
  2450                           
  2451                           	psect	text5
  2452     0A1D                     __ptext5:	
  2453 ;; *************** function _set_cursor *****************
  2454 ;; Defined at:
  2455 ;;		line 183 in file "ECU_LAYER/LCD/ecu_lcd.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;  lcd             1    wreg     PTR const struct .
  2458 ;;		 -> lcd(6), 
  2459 ;;  Row             1   11[BANK0 ] unsigned char 
  2460 ;;  coloumn         1   12[BANK0 ] unsigned char 
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;  lcd             1   14[BANK0 ] PTR const struct .
  2463 ;;		 -> lcd(6), 
  2464 ;;  ret             1   13[BANK0 ] unsigned char 
  2465 ;; Return value:  Size  Location     Type
  2466 ;;                  1    wreg      unsigned char 
  2467 ;; Registers used:
  2468 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2469 ;; Tracked objects:
  2470 ;;		On entry : 0/0
  2471 ;;		On exit  : 0/0
  2472 ;;		Unchanged: 0/0
  2473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2474 ;;      Params:         0       2       0       0       0
  2475 ;;      Locals:         0       2       0       0       0
  2476 ;;      Temps:          0       0       0       0       0
  2477 ;;      Totals:         0       4       0       0       0
  2478 ;;Total ram usage:        4 bytes
  2479 ;; Hardware stack levels used: 1
  2480 ;; Hardware stack levels required when called: 5
  2481 ;; This function calls:
  2482 ;;		_lcd_4bits_send_command
  2483 ;; This function is called by:
  2484 ;;		_lcd_4bits_send_string_pos
  2485 ;;		_lcd_4bits_send_char_pos
  2486 ;; This function uses a non-reentrant model
  2487 ;;
  2488                           
  2489     0A1D                     _set_cursor:	
  2490                           ;psect for function _set_cursor
  2491                           
  2492                           
  2493                           ;incstack = 0
  2494                           ; Regs used in _set_cursor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2495                           ;set_cursor@lcd stored from wreg
  2496     0A1D  1283               	bcf	3,5	;RP0=0, select bank0
  2497     0A1E  1303               	bcf	3,6	;RP1=0, select bank0
  2498     0A1F  00AE               	movwf	set_cursor@lcd
  2499     0A20                     l4421:
  2500                           
  2501                           ;ECU_LAYER/LCD/ecu_lcd.c: 184:     uint8 ret = 0x00;
  2502     0A20  01AD               	clrf	set_cursor@ret
  2503     0A21                     l4423:
  2504                           
  2505                           ;ECU_LAYER/LCD/ecu_lcd.c: 185:     if(lcd == ((void*)0)){
  2506     0A21  082E               	movf	set_cursor@lcd,w
  2507     0A22  1D03               	btfss	3,2
  2508     0A23  2A25               	goto	u6281
  2509     0A24  2A26               	goto	u6280
  2510     0A25                     u6281:
  2511     0A25  2A43               	goto	l4433
  2512     0A26                     u6280:
  2513     0A26                     l4425:
  2514                           
  2515                           ;ECU_LAYER/LCD/ecu_lcd.c: 186:         ret = 0x01;
  2516     0A26  01AD               	clrf	set_cursor@ret
  2517     0A27  0AAD               	incf	set_cursor@ret,f
  2518                           
  2519                           ;ECU_LAYER/LCD/ecu_lcd.c: 187:     }
  2520     0A28  2A4B               	goto	l4435
  2521     0A29                     l4427:
  2522                           
  2523                           ;ECU_LAYER/LCD/ecu_lcd.c: 191:                 ret = lcd_4bits_send_command(lcd,(0x80 + 
      +                          coloumn));
  2524     0A29  082C               	movf	set_cursor@coloumn,w
  2525     0A2A  3E80               	addlw	128
  2526     0A2B  00A8               	movwf	lcd_4bits_send_command@command
  2527     0A2C  082E               	movf	set_cursor@lcd,w
  2528     0A2D  120A  158A  230A  120A  158A  	fcall	_lcd_4bits_send_command
  2529     0A32  1283               	bcf	3,5	;RP0=0, select bank0
  2530     0A33  1303               	bcf	3,6	;RP1=0, select bank0
  2531     0A34  00AD               	movwf	set_cursor@ret
  2532                           
  2533                           ;ECU_LAYER/LCD/ecu_lcd.c: 192:                 break;
  2534     0A35  2A4B               	goto	l4435
  2535     0A36                     l4429:
  2536                           
  2537                           ;ECU_LAYER/LCD/ecu_lcd.c: 194:                 ret = lcd_4bits_send_command(lcd,(0xC0 + 
      +                          coloumn));
  2538     0A36  082C               	movf	set_cursor@coloumn,w
  2539     0A37  3EC0               	addlw	192
  2540     0A38  00A8               	movwf	lcd_4bits_send_command@command
  2541     0A39  082E               	movf	set_cursor@lcd,w
  2542     0A3A  120A  158A  230A  120A  158A  	fcall	_lcd_4bits_send_command
  2543     0A3F  1283               	bcf	3,5	;RP0=0, select bank0
  2544     0A40  1303               	bcf	3,6	;RP1=0, select bank0
  2545     0A41  00AD               	movwf	set_cursor@ret
  2546                           
  2547                           ;ECU_LAYER/LCD/ecu_lcd.c: 195:                 break;
  2548     0A42  2A4B               	goto	l4435
  2549     0A43                     l4433:
  2550     0A43  082B               	movf	set_cursor@Row,w
  2551                           
  2552                           ; Switch size 1, requested type "simple"
  2553                           ; Number of cases is 2, Range of values is 1 to 2
  2554                           ; switch strategies available:
  2555                           ; Name         Instructions Cycles
  2556                           ; simple_byte            7     4 (average)
  2557                           ; direct_byte           17    11 (fixed)
  2558                           ; jumptable            263     9 (fixed)
  2559                           ;	Chosen strategy is simple_byte
  2560     0A44  3A01               	xorlw	1	; case 1
  2561     0A45  1903               	skipnz
  2562     0A46  2A29               	goto	l4427
  2563     0A47  3A03               	xorlw	3	; case 2
  2564     0A48  1903               	skipnz
  2565     0A49  2A36               	goto	l4429
  2566     0A4A  2A4B               	goto	l4435
  2567     0A4B                     l4435:
  2568                           
  2569                           ;ECU_LAYER/LCD/ecu_lcd.c: 200:     return ret;
  2570     0A4B  082D               	movf	set_cursor@ret,w
  2571     0A4C                     l104:
  2572     0A4C  0008               	return
  2573     0A4D                     __end_of_set_cursor:
  2574                           
  2575                           	psect	text6
  2576     0A4D                     __ptext6:	
  2577 ;; *************** function _lcd_4bits_send_string *****************
  2578 ;; Defined at:
  2579 ;;		line 82 in file "ECU_LAYER/LCD/ecu_lcd.c"
  2580 ;; Parameters:    Size  Location     Type
  2581 ;;  lcd             1    wreg     PTR const struct .
  2582 ;;		 -> lcd(6), 
  2583 ;;  data            2   11[BANK0 ] PTR unsigned char 
  2584 ;;		 -> STR_4(11), lcd_show(6), 
  2585 ;; Auto vars:     Size  Location     Type
  2586 ;;  lcd             1   14[BANK0 ] PTR const struct .
  2587 ;;		 -> lcd(6), 
  2588 ;;  ret             1   13[BANK0 ] unsigned char 
  2589 ;; Return value:  Size  Location     Type
  2590 ;;                  1    wreg      unsigned char 
  2591 ;; Registers used:
  2592 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2593 ;; Tracked objects:
  2594 ;;		On entry : 0/0
  2595 ;;		On exit  : 0/0
  2596 ;;		Unchanged: 0/0
  2597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2598 ;;      Params:         0       2       0       0       0
  2599 ;;      Locals:         0       2       0       0       0
  2600 ;;      Temps:          0       0       0       0       0
  2601 ;;      Totals:         0       4       0       0       0
  2602 ;;Total ram usage:        4 bytes
  2603 ;; Hardware stack levels used: 1
  2604 ;; Hardware stack levels required when called: 5
  2605 ;; This function calls:
  2606 ;;		_lcd_4bits_send_char
  2607 ;; This function is called by:
  2608 ;;		_lcd_4bits_send_string_pos
  2609 ;; This function uses a non-reentrant model
  2610 ;;
  2611                           
  2612     0A4D                     _lcd_4bits_send_string:	
  2613                           ;psect for function _lcd_4bits_send_string
  2614                           
  2615                           
  2616                           ;incstack = 0
  2617                           ; Regs used in _lcd_4bits_send_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  2618                           ;lcd_4bits_send_string@lcd stored from wreg
  2619     0A4D  1283               	bcf	3,5	;RP0=0, select bank0
  2620     0A4E  1303               	bcf	3,6	;RP1=0, select bank0
  2621     0A4F  00AE               	movwf	lcd_4bits_send_string@lcd
  2622     0A50                     l4439:
  2623                           
  2624                           ;ECU_LAYER/LCD/ecu_lcd.c: 83:     uint8 ret = 0x00;
  2625     0A50  01AD               	clrf	lcd_4bits_send_string@ret
  2626     0A51                     l4441:
  2627                           
  2628                           ;ECU_LAYER/LCD/ecu_lcd.c: 84:     if(lcd == ((void*)0)){
  2629     0A51  082E               	movf	lcd_4bits_send_string@lcd,w
  2630     0A52  1D03               	btfss	3,2
  2631     0A53  2A55               	goto	u6291
  2632     0A54  2A56               	goto	u6290
  2633     0A55                     u6291:
  2634     0A55  2A72               	goto	l4449
  2635     0A56                     u6290:
  2636     0A56                     l4443:
  2637                           
  2638                           ;ECU_LAYER/LCD/ecu_lcd.c: 85:         ret = 0x01;
  2639     0A56  01AD               	clrf	lcd_4bits_send_string@ret
  2640     0A57  0AAD               	incf	lcd_4bits_send_string@ret,f
  2641                           
  2642                           ;ECU_LAYER/LCD/ecu_lcd.c: 86:     }
  2643     0A58  2A80               	goto	l4451
  2644     0A59                     l4445:
  2645                           
  2646                           ;ECU_LAYER/LCD/ecu_lcd.c: 89:             ret = lcd_4bits_send_char(lcd,*data++);
  2647     0A59  082C               	movf	lcd_4bits_send_string@data+1,w
  2648     0A5A  00FF               	movwf	btemp+1
  2649     0A5B  082B               	movf	lcd_4bits_send_string@data,w
  2650     0A5C  0084               	movwf	4
  2651     0A5D  120A  158A  2000  120A  158A  	fcall	stringtab
  2652     0A62  00A8               	movwf	lcd_4bits_send_char@data
  2653     0A63  082E               	movf	lcd_4bits_send_string@lcd,w
  2654     0A64  120A  158A  2351  120A  158A  	fcall	_lcd_4bits_send_char
  2655     0A69  1283               	bcf	3,5	;RP0=0, select bank0
  2656     0A6A  1303               	bcf	3,6	;RP1=0, select bank0
  2657     0A6B  00AD               	movwf	lcd_4bits_send_string@ret
  2658     0A6C                     l4447:
  2659     0A6C  3001               	movlw	1
  2660     0A6D  07AB               	addwf	lcd_4bits_send_string@data,f
  2661     0A6E  1803               	skipnc
  2662     0A6F  0AAC               	incf	lcd_4bits_send_string@data+1,f
  2663     0A70  3000               	movlw	0
  2664     0A71  07AC               	addwf	lcd_4bits_send_string@data+1,f
  2665     0A72                     l4449:
  2666                           
  2667                           ;ECU_LAYER/LCD/ecu_lcd.c: 88:         while(*data){
  2668     0A72  082C               	movf	lcd_4bits_send_string@data+1,w
  2669     0A73  00FF               	movwf	btemp+1
  2670     0A74  082B               	movf	lcd_4bits_send_string@data,w
  2671     0A75  0084               	movwf	4
  2672     0A76  120A  158A  2000  120A  158A  	fcall	stringtab
  2673     0A7B  3A00               	xorlw	0
  2674     0A7C  1D03               	skipz
  2675     0A7D  2A7F               	goto	u6301
  2676     0A7E  2A80               	goto	u6300
  2677     0A7F                     u6301:
  2678     0A7F  2A59               	goto	l4445
  2679     0A80                     u6300:
  2680     0A80                     l4451:
  2681                           
  2682                           ;ECU_LAYER/LCD/ecu_lcd.c: 92:     return ret;
  2683     0A80  082D               	movf	lcd_4bits_send_string@ret,w
  2684     0A81                     l48:
  2685     0A81  0008               	return
  2686     0A82                     __end_of_lcd_4bits_send_string:
  2687                           
  2688                           	psect	text7
  2689     0B51                     __ptext7:	
  2690 ;; *************** function _lcd_4bits_send_char *****************
  2691 ;; Defined at:
  2692 ;;		line 57 in file "ECU_LAYER/LCD/ecu_lcd.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;  lcd             1    wreg     PTR const struct .
  2695 ;;		 -> lcd(6), 
  2696 ;;  data            1    8[BANK0 ] unsigned char 
  2697 ;; Auto vars:     Size  Location     Type
  2698 ;;  lcd             1   10[BANK0 ] PTR const struct .
  2699 ;;		 -> lcd(6), 
  2700 ;;  ret             1    9[BANK0 ] unsigned char 
  2701 ;; Return value:  Size  Location     Type
  2702 ;;                  1    wreg      unsigned char 
  2703 ;; Registers used:
  2704 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2705 ;; Tracked objects:
  2706 ;;		On entry : 0/0
  2707 ;;		On exit  : 0/0
  2708 ;;		Unchanged: 0/0
  2709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2710 ;;      Params:         0       1       0       0       0
  2711 ;;      Locals:         0       2       0       0       0
  2712 ;;      Temps:          1       0       0       0       0
  2713 ;;      Totals:         1       3       0       0       0
  2714 ;;Total ram usage:        4 bytes
  2715 ;; Hardware stack levels used: 1
  2716 ;; Hardware stack levels required when called: 4
  2717 ;; This function calls:
  2718 ;;		_gpio_pin_write_logic
  2719 ;;		_send_4bits
  2720 ;;		_send_enable_signal
  2721 ;; This function is called by:
  2722 ;;		_lcd_4bits_send_string
  2723 ;;		_lcd_4bits_send_char_pos
  2724 ;;		_lcd_4bit_custom_character
  2725 ;; This function uses a non-reentrant model
  2726 ;;
  2727                           
  2728     0B51                     _lcd_4bits_send_char:	
  2729                           ;psect for function _lcd_4bits_send_char
  2730                           
  2731                           
  2732                           ;incstack = 0
  2733                           ; Regs used in _lcd_4bits_send_char: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  2734                           ;lcd_4bits_send_char@lcd stored from wreg
  2735     0B51  1283               	bcf	3,5	;RP0=0, select bank0
  2736     0B52  1303               	bcf	3,6	;RP1=0, select bank0
  2737     0B53  00AA               	movwf	lcd_4bits_send_char@lcd
  2738     0B54                     l4371:
  2739     0B54                     l4373:
  2740                           
  2741                           ;ECU_LAYER/LCD/ecu_lcd.c: 59:     if(lcd == ((void*)0)){
  2742     0B54  082A               	movf	lcd_4bits_send_char@lcd,w
  2743     0B55  1D03               	btfss	3,2
  2744     0B56  2B58               	goto	u6231
  2745     0B57  2B59               	goto	u6230
  2746     0B58                     u6231:
  2747     0B58  2B5C               	goto	l4377
  2748     0B59                     u6230:
  2749     0B59                     l4375:
  2750                           
  2751                           ;ECU_LAYER/LCD/ecu_lcd.c: 60:         ret = 0x01;
  2752     0B59  01A9               	clrf	lcd_4bits_send_char@ret
  2753     0B5A  0AA9               	incf	lcd_4bits_send_char@ret,f
  2754                           
  2755                           ;ECU_LAYER/LCD/ecu_lcd.c: 61:     }
  2756     0B5B  2B97               	goto	l4379
  2757     0B5C                     l4377:
  2758                           
  2759                           ;ECU_LAYER/LCD/ecu_lcd.c: 63:         ret = gpio_pin_write_logic(&(lcd->rs),GPIO_HIGH);
  2760     0B5C  01F3               	clrf	gpio_pin_write_logic@logic
  2761     0B5D  0AF3               	incf	gpio_pin_write_logic@logic,f
  2762     0B5E  082A               	movf	lcd_4bits_send_char@lcd,w
  2763     0B5F  120A  118A  256E  120A  158A  	fcall	_gpio_pin_write_logic
  2764     0B64  1283               	bcf	3,5	;RP0=0, select bank0
  2765     0B65  1303               	bcf	3,6	;RP1=0, select bank0
  2766     0B66  00A9               	movwf	lcd_4bits_send_char@ret
  2767                           
  2768                           ;ECU_LAYER/LCD/ecu_lcd.c: 64:         ret = send_4bits(lcd,(data >> 4));
  2769     0B67  0828               	movf	lcd_4bits_send_char@data,w
  2770     0B68  00F7               	movwf	??_lcd_4bits_send_char
  2771     0B69  3004               	movlw	4
  2772     0B6A                     u6245:
  2773     0B6A  1003               	clrc
  2774     0B6B  0CF7               	rrf	??_lcd_4bits_send_char,f
  2775     0B6C  3EFF               	addlw	-1
  2776     0B6D  1D03               	skipz
  2777     0B6E  2B6A               	goto	u6245
  2778     0B6F  0877               	movf	??_lcd_4bits_send_char,w
  2779     0B70  00A5               	movwf	send_4bits@command
  2780     0B71  082A               	movf	lcd_4bits_send_char@lcd,w
  2781     0B72  120A  158A  23E9  120A  158A  	fcall	_send_4bits
  2782     0B77  1283               	bcf	3,5	;RP0=0, select bank0
  2783     0B78  1303               	bcf	3,6	;RP1=0, select bank0
  2784     0B79  00A9               	movwf	lcd_4bits_send_char@ret
  2785                           
  2786                           ;ECU_LAYER/LCD/ecu_lcd.c: 65:          ret = send_enable_signal(lcd);
  2787     0B7A  082A               	movf	lcd_4bits_send_char@lcd,w
  2788     0B7B  120A  158A  2177  120A  158A  	fcall	_send_enable_signal
  2789     0B80  1283               	bcf	3,5	;RP0=0, select bank0
  2790     0B81  1303               	bcf	3,6	;RP1=0, select bank0
  2791     0B82  00A9               	movwf	lcd_4bits_send_char@ret
  2792                           
  2793                           ;ECU_LAYER/LCD/ecu_lcd.c: 66:         ret = send_4bits(lcd,data);
  2794     0B83  0828               	movf	lcd_4bits_send_char@data,w
  2795     0B84  00A5               	movwf	send_4bits@command
  2796     0B85  082A               	movf	lcd_4bits_send_char@lcd,w
  2797     0B86  120A  158A  23E9  120A  158A  	fcall	_send_4bits
  2798     0B8B  1283               	bcf	3,5	;RP0=0, select bank0
  2799     0B8C  1303               	bcf	3,6	;RP1=0, select bank0
  2800     0B8D  00A9               	movwf	lcd_4bits_send_char@ret
  2801                           
  2802                           ;ECU_LAYER/LCD/ecu_lcd.c: 67:         ret = send_enable_signal(lcd);
  2803     0B8E  082A               	movf	lcd_4bits_send_char@lcd,w
  2804     0B8F  120A  158A  2177  120A  158A  	fcall	_send_enable_signal
  2805     0B94  1283               	bcf	3,5	;RP0=0, select bank0
  2806     0B95  1303               	bcf	3,6	;RP1=0, select bank0
  2807     0B96  00A9               	movwf	lcd_4bits_send_char@ret
  2808     0B97                     l4379:
  2809                           
  2810                           ;ECU_LAYER/LCD/ecu_lcd.c: 69:     return ret;
  2811     0B97  0829               	movf	lcd_4bits_send_char@ret,w
  2812     0B98                     l35:
  2813     0B98  0008               	return
  2814     0B99                     __end_of_lcd_4bits_send_char:
  2815                           
  2816                           	psect	text8
  2817     0821                     __ptext8:	
  2818 ;; *************** function _apllication_initilaize *****************
  2819 ;; Defined at:
  2820 ;;		line 44 in file "Temperature_Controlled_Fan_System.c"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;		None
  2823 ;; Auto vars:     Size  Location     Type
  2824 ;;		None
  2825 ;; Return value:  Size  Location     Type
  2826 ;;                  1    wreg      void 
  2827 ;; Registers used:
  2828 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2829 ;; Tracked objects:
  2830 ;;		On entry : 0/0
  2831 ;;		On exit  : 0/0
  2832 ;;		Unchanged: 0/0
  2833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2834 ;;      Params:         0       0       0       0       0
  2835 ;;      Locals:         0       0       0       0       0
  2836 ;;      Temps:          0       0       0       0       0
  2837 ;;      Totals:         0       0       0       0       0
  2838 ;;Total ram usage:        0 bytes
  2839 ;; Hardware stack levels used: 1
  2840 ;; Hardware stack levels required when called: 7
  2841 ;; This function calls:
  2842 ;;		_ecu_initialzie
  2843 ;;		_mcal_initialize
  2844 ;; This function is called by:
  2845 ;;		_main
  2846 ;; This function uses a non-reentrant model
  2847 ;;
  2848                           
  2849     0821                     _apllication_initilaize:	
  2850                           ;psect for function _apllication_initilaize
  2851                           
  2852     0821                     l4585:	
  2853                           ;incstack = 0
  2854                           ; Regs used in _apllication_initilaize: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  2855                           
  2856                           
  2857                           ;Temperature_Controlled_Fan_System.c: 45:     ecu_initialzie();
  2858     0821  160A  118A  27DA  120A  158A  	fcall	_ecu_initialzie
  2859     0826                     l4587:
  2860                           
  2861                           ;Temperature_Controlled_Fan_System.c: 46:     mcal_initialize();
  2862     0826  160A  118A  2775  120A  158A  	fcall	_mcal_initialize
  2863     082B                     l607:
  2864     082B  0008               	return
  2865     082C                     __end_of_apllication_initilaize:
  2866                           
  2867                           	psect	text9
  2868     1775                     __ptext9:	
  2869 ;; *************** function _mcal_initialize *****************
  2870 ;; Defined at:
  2871 ;;		line 12 in file "MCAL_LAYER/MCAL_LAYER.c"
  2872 ;; Parameters:    Size  Location     Type
  2873 ;;		None
  2874 ;; Auto vars:     Size  Location     Type
  2875 ;;  ret             1    0        unsigned char 
  2876 ;; Return value:  Size  Location     Type
  2877 ;;                  1    wreg      unsigned char 
  2878 ;; Registers used:
  2879 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2880 ;; Tracked objects:
  2881 ;;		On entry : 0/0
  2882 ;;		On exit  : 0/0
  2883 ;;		Unchanged: 0/0
  2884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2885 ;;      Params:         0       0       0       0       0
  2886 ;;      Locals:         0       0       0       0       0
  2887 ;;      Temps:          0       0       0       0       0
  2888 ;;      Totals:         0       0       0       0       0
  2889 ;;Total ram usage:        0 bytes
  2890 ;; Hardware stack levels used: 1
  2891 ;; Hardware stack levels required when called: 4
  2892 ;; This function calls:
  2893 ;;		_ADC_INIT
  2894 ;; This function is called by:
  2895 ;;		_apllication_initilaize
  2896 ;; This function uses a non-reentrant model
  2897 ;;
  2898                           
  2899     1775                     _mcal_initialize:	
  2900                           ;psect for function _mcal_initialize
  2901                           
  2902     1775                     l4499:	
  2903                           ;incstack = 0
  2904                           ; Regs used in _mcal_initialize: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2905                           
  2906     1775                     l4501:
  2907     1775  3069               	movlw	(low (_adc| 0))& (0+255)
  2908     1776  120A  158A  21F1  160A  118A  	fcall	_ADC_INIT
  2909     177B                     l614:
  2910     177B  0008               	return
  2911     177C                     __end_of_mcal_initialize:
  2912                           
  2913                           	psect	text10
  2914     09F1                     __ptext10:	
  2915 ;; *************** function _ADC_INIT *****************
  2916 ;; Defined at:
  2917 ;;		line 12 in file "MCAL_LAYER/ADC/hal_adc.c"
  2918 ;; Parameters:    Size  Location     Type
  2919 ;;  adc             1    wreg     PTR const struct .
  2920 ;;		 -> adc(3), 
  2921 ;; Auto vars:     Size  Location     Type
  2922 ;;  adc             1    1[BANK0 ] PTR const struct .
  2923 ;;		 -> adc(3), 
  2924 ;;  ret             1    0[BANK0 ] unsigned char 
  2925 ;; Return value:  Size  Location     Type
  2926 ;;                  1    wreg      unsigned char 
  2927 ;; Registers used:
  2928 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2934 ;;      Params:         0       0       0       0       0
  2935 ;;      Locals:         0       2       0       0       0
  2936 ;;      Temps:          1       0       0       0       0
  2937 ;;      Totals:         1       2       0       0       0
  2938 ;;Total ram usage:        3 bytes
  2939 ;; Hardware stack levels used: 1
  2940 ;; Hardware stack levels required when called: 3
  2941 ;; This function calls:
  2942 ;;		_Result_Format
  2943 ;; This function is called by:
  2944 ;;		_mcal_initialize
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948     09F1                     _ADC_INIT:	
  2949                           ;psect for function _ADC_INIT
  2950                           
  2951                           
  2952                           ;incstack = 0
  2953                           ; Regs used in _ADC_INIT: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2954                           ;ADC_INIT@adc stored from wreg
  2955     09F1  1283               	bcf	3,5	;RP0=0, select bank0
  2956     09F2  1303               	bcf	3,6	;RP1=0, select bank0
  2957     09F3  00A1               	movwf	ADC_INIT@adc
  2958     09F4                     l4393:
  2959                           
  2960                           ;MCAL_LAYER/ADC/hal_adc.c: 13:     uint8 ret = 0x00;
  2961     09F4  01A0               	clrf	ADC_INIT@ret
  2962     09F5                     l4395:
  2963                           
  2964                           ;MCAL_LAYER/ADC/hal_adc.c: 14:     if(adc == ((void*)0)){
  2965     09F5  0821               	movf	ADC_INIT@adc,w
  2966     09F6  1D03               	btfss	3,2
  2967     09F7  29F9               	goto	u6261
  2968     09F8  29FA               	goto	u6260
  2969     09F9                     u6261:
  2970     09F9  29FD               	goto	l170
  2971     09FA                     u6260:
  2972     09FA                     l4397:
  2973                           
  2974                           ;MCAL_LAYER/ADC/hal_adc.c: 15:         ret = 0x01;
  2975     09FA  01A0               	clrf	ADC_INIT@ret
  2976     09FB  0AA0               	incf	ADC_INIT@ret,f
  2977                           
  2978                           ;MCAL_LAYER/ADC/hal_adc.c: 16:     }
  2979     09FC  2A1B               	goto	l4407
  2980     09FD                     l170:	
  2981                           ;MCAL_LAYER/ADC/hal_adc.c: 17:     else{
  2982                           
  2983                           
  2984                           ;MCAL_LAYER/ADC/hal_adc.c: 18:         (ADCON0bits.ADON = 0);
  2985     09FD  101F               	bcf	31,0	;volatile
  2986                           
  2987                           ;MCAL_LAYER/ADC/hal_adc.c: 19:         (ADCON0bits.GO_nDONE = 0);
  2988     09FE  111F               	bcf	31,2	;volatile
  2989     09FF                     l4399:
  2990                           
  2991                           ;MCAL_LAYER/ADC/hal_adc.c: 20:         (ADCON0bits.CHS = adc->channel);
  2992     09FF  0821               	movf	ADC_INIT@adc,w
  2993     0A00  0084               	movwf	4
  2994     0A01  1383               	bcf	3,7	;select IRP bank0
  2995     0A02  0800               	movf	0,w
  2996     0A03  00F6               	movwf	??_ADC_INIT
  2997     0A04  0DF6               	rlf	??_ADC_INIT,f
  2998     0A05  0DF6               	rlf	??_ADC_INIT,f
  2999     0A06  0DF6               	rlf	??_ADC_INIT,f
  3000     0A07  081F               	movf	31,w	;volatile
  3001     0A08  0676               	xorwf	??_ADC_INIT,w
  3002     0A09  39C7               	andlw	-57
  3003     0A0A  0676               	xorwf	??_ADC_INIT,w
  3004     0A0B  009F               	movwf	31	;volatile
  3005     0A0C                     l4401:
  3006                           
  3007                           ;MCAL_LAYER/ADC/hal_adc.c: 21:         Result_Format(adc);
  3008     0A0C  0821               	movf	ADC_INIT@adc,w
  3009     0A0D  120A  158A  212F  120A  158A  	fcall	_Result_Format
  3010     0A12                     l4403:
  3011                           
  3012                           ;MCAL_LAYER/ADC/hal_adc.c: 22:         (ADCON1bits.PCFG = 0x04);
  3013     0A12  1683               	bsf	3,5	;RP0=1, select bank1
  3014     0A13  1303               	bcf	3,6	;RP1=0, select bank1
  3015     0A14  081F               	movf	31,w	;volatile
  3016     0A15  39F0               	andlw	-16
  3017     0A16  3804               	iorlw	4
  3018     0A17  009F               	movwf	31	;volatile
  3019     0A18                     l4405:
  3020                           
  3021                           ;MCAL_LAYER/ADC/hal_adc.c: 23:         (ADCON0bits.ADON = 1);
  3022     0A18  1283               	bcf	3,5	;RP0=0, select bank0
  3023     0A19  1303               	bcf	3,6	;RP1=0, select bank0
  3024     0A1A  141F               	bsf	31,0	;volatile
  3025     0A1B                     l4407:
  3026                           
  3027                           ;MCAL_LAYER/ADC/hal_adc.c: 25:     return ret;
  3028     0A1B  0820               	movf	ADC_INIT@ret,w
  3029     0A1C                     l172:
  3030     0A1C  0008               	return
  3031     0A1D                     __end_of_ADC_INIT:
  3032                           
  3033                           	psect	text11
  3034     092F                     __ptext11:	
  3035 ;; *************** function _Result_Format *****************
  3036 ;; Defined at:
  3037 ;;		line 92 in file "MCAL_LAYER/ADC/hal_adc.c"
  3038 ;; Parameters:    Size  Location     Type
  3039 ;;  adc             1    wreg     PTR const struct .
  3040 ;;		 -> adc(3), 
  3041 ;; Auto vars:     Size  Location     Type
  3042 ;;  adc             1    5[COMMON] PTR const struct .
  3043 ;;		 -> adc(3), 
  3044 ;;  ret             1    0        unsigned char 
  3045 ;; Return value:  Size  Location     Type
  3046 ;;                  1    wreg      unsigned char 
  3047 ;; Registers used:
  3048 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3049 ;; Tracked objects:
  3050 ;;		On entry : 0/0
  3051 ;;		On exit  : 0/0
  3052 ;;		Unchanged: 0/0
  3053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3054 ;;      Params:         0       0       0       0       0
  3055 ;;      Locals:         1       0       0       0       0
  3056 ;;      Temps:          2       0       0       0       0
  3057 ;;      Totals:         3       0       0       0       0
  3058 ;;Total ram usage:        3 bytes
  3059 ;; Hardware stack levels used: 1
  3060 ;; Hardware stack levels required when called: 2
  3061 ;; This function calls:
  3062 ;;		Nothing
  3063 ;; This function is called by:
  3064 ;;		_ADC_INIT
  3065 ;; This function uses a non-reentrant model
  3066 ;;
  3067                           
  3068     092F                     _Result_Format:	
  3069                           ;psect for function _Result_Format
  3070                           
  3071                           
  3072                           ;incstack = 0
  3073                           ; Regs used in _Result_Format: [wreg-fsr0h+status,2+status,0]
  3074                           ;Result_Format@adc stored from wreg
  3075     092F  00F5               	movwf	Result_Format@adc
  3076     0930                     l4257:
  3077     0930                     l4259:
  3078                           
  3079                           ;MCAL_LAYER/ADC/hal_adc.c: 94:     if(adc == ((void*)0)){
  3080     0930  0875               	movf	Result_Format@adc,w
  3081     0931  1D03               	btfss	3,2
  3082     0932  2934               	goto	u6101
  3083     0933  2935               	goto	u6100
  3084     0934                     u6101:
  3085     0934  293E               	goto	l4265
  3086     0935                     u6100:
  3087     0935                     l4261:
  3088                           
  3089                           ;MCAL_LAYER/ADC/hal_adc.c: 96:     }
  3090     0935  2952               	goto	l212
  3091     0936                     l209:	
  3092                           ;MCAL_LAYER/ADC/hal_adc.c: 99:             case RIGHT_JUSTIFIED :
  3093                           
  3094                           
  3095                           ;MCAL_LAYER/ADC/hal_adc.c: 100:                 ADCON1bits.ADFM = 1;
  3096     0936  1683               	bsf	3,5	;RP0=1, select bank1
  3097     0937  1303               	bcf	3,6	;RP1=0, select bank1
  3098     0938  179F               	bsf	31,7	;volatile
  3099                           
  3100                           ;MCAL_LAYER/ADC/hal_adc.c: 101:             break;
  3101     0939  2952               	goto	l212
  3102     093A                     l211:	
  3103                           ;MCAL_LAYER/ADC/hal_adc.c: 102:             case LEFT_JUSTIFIED :
  3104                           
  3105                           
  3106                           ;MCAL_LAYER/ADC/hal_adc.c: 103:                 ADCON1bits.ADFM = 0;
  3107     093A  1683               	bsf	3,5	;RP0=1, select bank1
  3108     093B  1303               	bcf	3,6	;RP1=0, select bank1
  3109     093C  139F               	bcf	31,7	;volatile
  3110                           
  3111                           ;MCAL_LAYER/ADC/hal_adc.c: 104:             break;
  3112     093D  2952               	goto	l212
  3113     093E                     l4265:
  3114     093E  0875               	movf	Result_Format@adc,w
  3115     093F  3E02               	addlw	2
  3116     0940  0084               	movwf	4
  3117     0941  1383               	bcf	3,7	;select IRP bank0
  3118     0942  0800               	movf	0,w
  3119     0943  00F3               	movwf	??_Result_Format
  3120     0944  01F4               	clrf	??_Result_Format+1
  3121                           
  3122                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3123                           ; Switch size 1, requested type "simple"
  3124                           ; Number of cases is 1, Range of values is 0 to 0
  3125                           ; switch strategies available:
  3126                           ; Name         Instructions Cycles
  3127                           ; simple_byte            4     3 (average)
  3128                           ; direct_byte           11     8 (fixed)
  3129                           ; jumptable            260     6 (fixed)
  3130                           ;	Chosen strategy is simple_byte
  3131     0945  0874               	movf	??_Result_Format+1,w
  3132     0946  3A00               	xorlw	0	; case 0
  3133     0947  1903               	skipnz
  3134     0948  294A               	goto	l4835
  3135     0949  2952               	goto	l212
  3136     094A                     l4835:
  3137                           
  3138                           ; Switch size 1, requested type "simple"
  3139                           ; Number of cases is 2, Range of values is 0 to 1
  3140                           ; switch strategies available:
  3141                           ; Name         Instructions Cycles
  3142                           ; simple_byte            7     4 (average)
  3143                           ; direct_byte           14     8 (fixed)
  3144                           ; jumptable            260     6 (fixed)
  3145                           ;	Chosen strategy is simple_byte
  3146     094A  0873               	movf	??_Result_Format,w
  3147     094B  3A00               	xorlw	0	; case 0
  3148     094C  1903               	skipnz
  3149     094D  2936               	goto	l209
  3150     094E  3A01               	xorlw	1	; case 1
  3151     094F  1903               	skipnz
  3152     0950  293A               	goto	l211
  3153     0951  2952               	goto	l212
  3154     0952                     l212:
  3155     0952  0008               	return
  3156     0953                     __end_of_Result_Format:
  3157                           
  3158                           	psect	text12
  3159     17DA                     __ptext12:	
  3160 ;; *************** function _ecu_initialzie *****************
  3161 ;; Defined at:
  3162 ;;		line 29 in file "ECU_LAYER/ECU_LAYER.c"
  3163 ;; Parameters:    Size  Location     Type
  3164 ;;		None
  3165 ;; Auto vars:     Size  Location     Type
  3166 ;;		None
  3167 ;; Return value:  Size  Location     Type
  3168 ;;                  1    wreg      void 
  3169 ;; Registers used:
  3170 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3171 ;; Tracked objects:
  3172 ;;		On entry : 0/0
  3173 ;;		On exit  : 0/0
  3174 ;;		Unchanged: 0/0
  3175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3176 ;;      Params:         0       0       0       0       0
  3177 ;;      Locals:         0       0       0       0       0
  3178 ;;      Temps:          0       0       0       0       0
  3179 ;;      Totals:         0       0       0       0       0
  3180 ;;Total ram usage:        0 bytes
  3181 ;; Hardware stack levels used: 1
  3182 ;; Hardware stack levels required when called: 6
  3183 ;; This function calls:
  3184 ;;		_lcd_4bits_initialize
  3185 ;;		_motor_initialize
  3186 ;; This function is called by:
  3187 ;;		_apllication_initilaize
  3188 ;; This function uses a non-reentrant model
  3189 ;;
  3190                           
  3191     17DA                     _ecu_initialzie:	
  3192                           ;psect for function _ecu_initialzie
  3193                           
  3194     17DA                     l4475:	
  3195                           ;incstack = 0
  3196                           ; Regs used in _ecu_initialzie: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3197                           
  3198                           
  3199                           ;ECU_LAYER/ECU_LAYER.c: 31:     motor_initialize(&motor1);
  3200     17DA  306E               	movlw	(low (_motor1| 0))& (0+255)
  3201     17DB  120A  158A  2093  160A  118A  	fcall	_motor_initialize
  3202                           
  3203                           ;ECU_LAYER/ECU_LAYER.c: 32:     motor_initialize(&motor2);
  3204     17E0  306C               	movlw	(low (_motor2| 0))& (0+255)
  3205     17E1  120A  158A  2093  160A  118A  	fcall	_motor_initialize
  3206                           
  3207                           ;ECU_LAYER/ECU_LAYER.c: 41:     lcd_4bits_initialize(&lcd);
  3208     17E6  30CF               	movlw	(low (_lcd| 0))& (0+255)
  3209     17E7  120A  158A  266C  160A  118A  	fcall	_lcd_4bits_initialize
  3210     17EC                     l157:
  3211     17EC  0008               	return
  3212     17ED                     __end_of_ecu_initialzie:
  3213                           
  3214                           	psect	text13
  3215     0893                     __ptext13:	
  3216 ;; *************** function _motor_initialize *****************
  3217 ;; Defined at:
  3218 ;;		line 8 in file "ECU_LAYER/Motor/ecu_motor_driver.c"
  3219 ;; Parameters:    Size  Location     Type
  3220 ;;  motor           1    wreg     PTR const struct .
  3221 ;;		 -> motor2(2), motor1(2), 
  3222 ;; Auto vars:     Size  Location     Type
  3223 ;;  motor           1   10[BANK0 ] PTR const struct .
  3224 ;;		 -> motor2(2), motor1(2), 
  3225 ;;  ret             1    9[BANK0 ] unsigned char 
  3226 ;; Return value:  Size  Location     Type
  3227 ;;                  1    wreg      unsigned char 
  3228 ;; Registers used:
  3229 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3230 ;; Tracked objects:
  3231 ;;		On entry : 0/0
  3232 ;;		On exit  : 0/0
  3233 ;;		Unchanged: 0/0
  3234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3235 ;;      Params:         0       0       0       0       0
  3236 ;;      Locals:         0       2       0       0       0
  3237 ;;      Temps:          0       0       0       0       0
  3238 ;;      Totals:         0       2       0       0       0
  3239 ;;Total ram usage:        2 bytes
  3240 ;; Hardware stack levels used: 1
  3241 ;; Hardware stack levels required when called: 4
  3242 ;; This function calls:
  3243 ;;		_gpio_pin_initialize
  3244 ;; This function is called by:
  3245 ;;		_ecu_initialzie
  3246 ;; This function uses a non-reentrant model
  3247 ;;
  3248                           
  3249     0893                     _motor_initialize:	
  3250                           ;psect for function _motor_initialize
  3251                           
  3252                           
  3253                           ;incstack = 0
  3254                           ; Regs used in _motor_initialize: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3255                           ;motor_initialize@motor stored from wreg
  3256     0893  1283               	bcf	3,5	;RP0=0, select bank0
  3257     0894  1303               	bcf	3,6	;RP1=0, select bank0
  3258     0895  00AA               	movwf	motor_initialize@motor
  3259     0896                     l4383:
  3260     0896                     l4385:
  3261                           
  3262                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 10:     if(motor == ((void*)0)){
  3263     0896  082A               	movf	motor_initialize@motor,w
  3264     0897  1D03               	btfss	3,2
  3265     0898  289A               	goto	u6251
  3266     0899  289B               	goto	u6250
  3267     089A                     u6251:
  3268     089A  289C               	goto	l4389
  3269     089B                     u6250:
  3270     089B                     l4387:
  3271                           
  3272                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 12:     }
  3273     089B  28AF               	goto	l113
  3274     089C                     l4389:
  3275                           
  3276                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 14:         ret = gpio_pin_initialize(&(motor->pins
      +                          [0]));
  3277     089C  082A               	movf	motor_initialize@motor,w
  3278     089D  120A  158A  25D3  120A  158A  	fcall	_gpio_pin_initialize
  3279     08A2  1283               	bcf	3,5	;RP0=0, select bank0
  3280     08A3  1303               	bcf	3,6	;RP1=0, select bank0
  3281     08A4  00A9               	movwf	motor_initialize@ret
  3282                           
  3283                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 15:         ret = gpio_pin_initialize(&(motor->pins
      +                          [1]));
  3284     08A5  082A               	movf	motor_initialize@motor,w
  3285     08A6  3E01               	addlw	1
  3286     08A7  120A  158A  25D3  120A  158A  	fcall	_gpio_pin_initialize
  3287     08AC  1283               	bcf	3,5	;RP0=0, select bank0
  3288     08AD  1303               	bcf	3,6	;RP1=0, select bank0
  3289     08AE  00A9               	movwf	motor_initialize@ret
  3290     08AF                     l113:
  3291     08AF  0008               	return
  3292     08B0                     __end_of_motor_initialize:
  3293                           
  3294                           	psect	text14
  3295     0E6C                     __ptext14:	
  3296 ;; *************** function _lcd_4bits_initialize *****************
  3297 ;; Defined at:
  3298 ;;		line 14 in file "ECU_LAYER/LCD/ecu_lcd.c"
  3299 ;; Parameters:    Size  Location     Type
  3300 ;;  lcd             1    wreg     PTR const struct .
  3301 ;;		 -> lcd(6), 
  3302 ;; Auto vars:     Size  Location     Type
  3303 ;;  lcd             1   16[BANK0 ] PTR const struct .
  3304 ;;		 -> lcd(6), 
  3305 ;;  ret             1   15[BANK0 ] unsigned char 
  3306 ;;  counter         1   14[BANK0 ] unsigned char 
  3307 ;; Return value:  Size  Location     Type
  3308 ;;                  1    wreg      unsigned char 
  3309 ;; Registers used:
  3310 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3311 ;; Tracked objects:
  3312 ;;		On entry : 0/0
  3313 ;;		On exit  : 0/0
  3314 ;;		Unchanged: 0/0
  3315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3316 ;;      Params:         0       0       0       0       0
  3317 ;;      Locals:         0       3       0       0       0
  3318 ;;      Temps:          0       3       0       0       0
  3319 ;;      Totals:         0       6       0       0       0
  3320 ;;Total ram usage:        6 bytes
  3321 ;; Hardware stack levels used: 1
  3322 ;; Hardware stack levels required when called: 5
  3323 ;; This function calls:
  3324 ;;		_gpio_pin_initialize
  3325 ;;		_lcd_4bits_send_command
  3326 ;; This function is called by:
  3327 ;;		_ecu_initialzie
  3328 ;; This function uses a non-reentrant model
  3329 ;;
  3330                           
  3331     0E6C                     _lcd_4bits_initialize:	
  3332                           ;psect for function _lcd_4bits_initialize
  3333                           
  3334                           
  3335                           ;incstack = 0
  3336                           ; Regs used in _lcd_4bits_initialize: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  3337                           ;lcd_4bits_initialize@lcd stored from wreg
  3338     0E6C  1283               	bcf	3,5	;RP0=0, select bank0
  3339     0E6D  1303               	bcf	3,6	;RP1=0, select bank0
  3340     0E6E  00B0               	movwf	lcd_4bits_initialize@lcd
  3341     0E6F                     l4325:
  3342                           
  3343                           ;ECU_LAYER/LCD/ecu_lcd.c: 16:     uint8 counter = 0x00;
  3344     0E6F  01AE               	clrf	lcd_4bits_initialize@counter
  3345     0E70                     l4327:
  3346                           
  3347                           ;ECU_LAYER/LCD/ecu_lcd.c: 17:     if(lcd == ((void*)0)){
  3348     0E70  0830               	movf	lcd_4bits_initialize@lcd,w
  3349     0E71  1D03               	btfss	3,2
  3350     0E72  2E74               	goto	u6211
  3351     0E73  2E75               	goto	u6210
  3352     0E74                     u6211:
  3353     0E74  2E76               	goto	l4331
  3354     0E75                     u6210:
  3355     0E75                     l4329:
  3356                           
  3357                           ;ECU_LAYER/LCD/ecu_lcd.c: 19:     }
  3358     0E75  2F21               	goto	l25
  3359     0E76                     l4331:
  3360                           
  3361                           ;ECU_LAYER/LCD/ecu_lcd.c: 21:         ret = gpio_pin_initialize(&(lcd->rs));
  3362     0E76  0830               	movf	lcd_4bits_initialize@lcd,w
  3363     0E77  120A  158A  25D3  120A  158A  	fcall	_gpio_pin_initialize
  3364     0E7C  1283               	bcf	3,5	;RP0=0, select bank0
  3365     0E7D  1303               	bcf	3,6	;RP1=0, select bank0
  3366     0E7E  00AF               	movwf	lcd_4bits_initialize@ret
  3367                           
  3368                           ;ECU_LAYER/LCD/ecu_lcd.c: 22:         ret = gpio_pin_initialize(&(lcd->en));
  3369     0E7F  0830               	movf	lcd_4bits_initialize@lcd,w
  3370     0E80  3E01               	addlw	1
  3371     0E81  120A  158A  25D3  120A  158A  	fcall	_gpio_pin_initialize
  3372     0E86  1283               	bcf	3,5	;RP0=0, select bank0
  3373     0E87  1303               	bcf	3,6	;RP1=0, select bank0
  3374     0E88  00AF               	movwf	lcd_4bits_initialize@ret
  3375     0E89                     l4333:
  3376                           
  3377                           ;ECU_LAYER/LCD/ecu_lcd.c: 23:         for(counter = 0x00;counter < 4;counter++){
  3378     0E89  01AE               	clrf	lcd_4bits_initialize@counter
  3379     0E8A                     l4339:
  3380     0E8A  082E               	movf	lcd_4bits_initialize@counter,w
  3381     0E8B  0730               	addwf	lcd_4bits_initialize@lcd,w
  3382     0E8C  3E02               	addlw	2
  3383     0E8D  120A  158A  25D3  120A  158A  	fcall	_gpio_pin_initialize
  3384     0E92                     l4341:
  3385                           
  3386                           ;ECU_LAYER/LCD/ecu_lcd.c: 25:         }
  3387     0E92  3001               	movlw	1
  3388     0E93  00FF               	movwf	btemp+1
  3389     0E94  087F               	movf	btemp+1,w
  3390     0E95  1283               	bcf	3,5	;RP0=0, select bank0
  3391     0E96  1303               	bcf	3,6	;RP1=0, select bank0
  3392     0E97  07AE               	addwf	lcd_4bits_initialize@counter,f
  3393     0E98                     l4343:
  3394     0E98  3004               	movlw	4
  3395     0E99  022E               	subwf	lcd_4bits_initialize@counter,w
  3396     0E9A  1C03               	skipc
  3397     0E9B  2E9D               	goto	u6221
  3398     0E9C  2E9E               	goto	u6220
  3399     0E9D                     u6221:
  3400     0E9D  2E8A               	goto	l4339
  3401     0E9E                     u6220:
  3402     0E9E                     l4345:
  3403                           
  3404                           ;ECU_LAYER/LCD/ecu_lcd.c: 26:         _delay((unsigned long)((150)*(8000000UL/4000.0)));
  3405     0E9E  3002               	movlw	2
  3406     0E9F  1283               	bcf	3,5	;RP0=0, select bank0
  3407     0EA0  1303               	bcf	3,6	;RP1=0, select bank0
  3408     0EA1  00AD               	movwf	??_lcd_4bits_initialize+2
  3409     0EA2  3086               	movlw	134
  3410     0EA3  00AC               	movwf	??_lcd_4bits_initialize+1
  3411     0EA4  3098               	movlw	152
  3412     0EA5  00AB               	movwf	??_lcd_4bits_initialize
  3413     0EA6                     u6797:
  3414     0EA6  0BAB               	decfsz	??_lcd_4bits_initialize,f
  3415     0EA7  2EA6               	goto	u6797
  3416     0EA8  0BAC               	decfsz	??_lcd_4bits_initialize+1,f
  3417     0EA9  2EA6               	goto	u6797
  3418     0EAA  0BAD               	decfsz	??_lcd_4bits_initialize+2,f
  3419     0EAB  2EA6               	goto	u6797
  3420     0EAC  0000               	nop
  3421     0EAD                     l4347:
  3422     0EAD  3038               	movlw	56
  3423     0EAE  1283               	bcf	3,5	;RP0=0, select bank0
  3424     0EAF  1303               	bcf	3,6	;RP1=0, select bank0
  3425     0EB0  00A8               	movwf	lcd_4bits_send_command@command
  3426     0EB1  0830               	movf	lcd_4bits_initialize@lcd,w
  3427     0EB2  120A  158A  230A  120A  158A  	fcall	_lcd_4bits_send_command
  3428     0EB7                     l4349:
  3429                           
  3430                           ;ECU_LAYER/LCD/ecu_lcd.c: 28:         _delay((unsigned long)((50)*(8000000UL/4000.0)));
  3431     0EB7  3082               	movlw	130
  3432     0EB8  1283               	bcf	3,5	;RP0=0, select bank0
  3433     0EB9  1303               	bcf	3,6	;RP1=0, select bank0
  3434     0EBA  00AC               	movwf	??_lcd_4bits_initialize+1
  3435     0EBB  30DD               	movlw	221
  3436     0EBC  00AB               	movwf	??_lcd_4bits_initialize
  3437     0EBD                     u6807:
  3438     0EBD  0BAB               	decfsz	??_lcd_4bits_initialize,f
  3439     0EBE  2EBD               	goto	u6807
  3440     0EBF  0BAC               	decfsz	??_lcd_4bits_initialize+1,f
  3441     0EC0  2EBD               	goto	u6807
  3442     0EC1  3038               	movlw	56
  3443     0EC2  1283               	bcf	3,5	;RP0=0, select bank0
  3444     0EC3  1303               	bcf	3,6	;RP1=0, select bank0
  3445     0EC4  00A8               	movwf	lcd_4bits_send_command@command
  3446     0EC5  0830               	movf	lcd_4bits_initialize@lcd,w
  3447     0EC6  120A  158A  230A  120A  158A  	fcall	_lcd_4bits_send_command
  3448     0ECB                     l4351:
  3449                           
  3450                           ;ECU_LAYER/LCD/ecu_lcd.c: 30:         _delay((unsigned long)((150)*(8000000UL/4000000.0)
      +                          ));
  3451     0ECB  3063               	movlw	99
  3452     0ECC  1283               	bcf	3,5	;RP0=0, select bank0
  3453     0ECD  1303               	bcf	3,6	;RP1=0, select bank0
  3454     0ECE  00AB               	movwf	??_lcd_4bits_initialize
  3455     0ECF                     u6817:
  3456     0ECF  0BAB               	decfsz	??_lcd_4bits_initialize,f
  3457     0ED0  2ECF               	goto	u6817
  3458     0ED1                     l4353:
  3459     0ED1  3038               	movlw	56
  3460     0ED2  1283               	bcf	3,5	;RP0=0, select bank0
  3461     0ED3  1303               	bcf	3,6	;RP1=0, select bank0
  3462     0ED4  00A8               	movwf	lcd_4bits_send_command@command
  3463     0ED5  0830               	movf	lcd_4bits_initialize@lcd,w
  3464     0ED6  120A  158A  230A  120A  158A  	fcall	_lcd_4bits_send_command
  3465     0EDB                     l4355:
  3466     0EDB  1283               	bcf	3,5	;RP0=0, select bank0
  3467     0EDC  1303               	bcf	3,6	;RP1=0, select bank0
  3468     0EDD  01A8               	clrf	lcd_4bits_send_command@command
  3469     0EDE  0AA8               	incf	lcd_4bits_send_command@command,f
  3470     0EDF  0830               	movf	lcd_4bits_initialize@lcd,w
  3471     0EE0  120A  158A  230A  120A  158A  	fcall	_lcd_4bits_send_command
  3472     0EE5                     l4357:
  3473     0EE5  3002               	movlw	2
  3474     0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  3475     0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  3476     0EE8  00A8               	movwf	lcd_4bits_send_command@command
  3477     0EE9  0830               	movf	lcd_4bits_initialize@lcd,w
  3478     0EEA  120A  158A  230A  120A  158A  	fcall	_lcd_4bits_send_command
  3479     0EEF                     l4359:
  3480     0EEF  3006               	movlw	6
  3481     0EF0  1283               	bcf	3,5	;RP0=0, select bank0
  3482     0EF1  1303               	bcf	3,6	;RP1=0, select bank0
  3483     0EF2  00A8               	movwf	lcd_4bits_send_command@command
  3484     0EF3  0830               	movf	lcd_4bits_initialize@lcd,w
  3485     0EF4  120A  158A  230A  120A  158A  	fcall	_lcd_4bits_send_command
  3486     0EF9                     l4361:
  3487     0EF9  300C               	movlw	12
  3488     0EFA  1283               	bcf	3,5	;RP0=0, select bank0
  3489     0EFB  1303               	bcf	3,6	;RP1=0, select bank0
  3490     0EFC  00A8               	movwf	lcd_4bits_send_command@command
  3491     0EFD  0830               	movf	lcd_4bits_initialize@lcd,w
  3492     0EFE  120A  158A  230A  120A  158A  	fcall	_lcd_4bits_send_command
  3493     0F03                     l4363:
  3494     0F03  3010               	movlw	16
  3495     0F04  1283               	bcf	3,5	;RP0=0, select bank0
  3496     0F05  1303               	bcf	3,6	;RP1=0, select bank0
  3497     0F06  00A8               	movwf	lcd_4bits_send_command@command
  3498     0F07  0830               	movf	lcd_4bits_initialize@lcd,w
  3499     0F08  120A  158A  230A  120A  158A  	fcall	_lcd_4bits_send_command
  3500     0F0D                     l4365:
  3501     0F0D  3028               	movlw	40
  3502     0F0E  1283               	bcf	3,5	;RP0=0, select bank0
  3503     0F0F  1303               	bcf	3,6	;RP1=0, select bank0
  3504     0F10  00A8               	movwf	lcd_4bits_send_command@command
  3505     0F11  0830               	movf	lcd_4bits_initialize@lcd,w
  3506     0F12  120A  158A  230A  120A  158A  	fcall	_lcd_4bits_send_command
  3507     0F17                     l4367:
  3508     0F17  3080               	movlw	128
  3509     0F18  1283               	bcf	3,5	;RP0=0, select bank0
  3510     0F19  1303               	bcf	3,6	;RP1=0, select bank0
  3511     0F1A  00A8               	movwf	lcd_4bits_send_command@command
  3512     0F1B  0830               	movf	lcd_4bits_initialize@lcd,w
  3513     0F1C  120A  158A  230A  120A  158A  	fcall	_lcd_4bits_send_command
  3514     0F21                     l25:
  3515     0F21  0008               	return
  3516     0F22                     __end_of_lcd_4bits_initialize:
  3517                           
  3518                           	psect	text15
  3519     0B0A                     __ptext15:	
  3520 ;; *************** function _lcd_4bits_send_command *****************
  3521 ;; Defined at:
  3522 ;;		line 43 in file "ECU_LAYER/LCD/ecu_lcd.c"
  3523 ;; Parameters:    Size  Location     Type
  3524 ;;  lcd             1    wreg     PTR const struct .
  3525 ;;		 -> lcd(6), 
  3526 ;;  command         1    8[BANK0 ] unsigned char 
  3527 ;; Auto vars:     Size  Location     Type
  3528 ;;  lcd             1   10[BANK0 ] PTR const struct .
  3529 ;;		 -> lcd(6), 
  3530 ;;  ret             1    9[BANK0 ] unsigned char 
  3531 ;; Return value:  Size  Location     Type
  3532 ;;                  1    wreg      unsigned char 
  3533 ;; Registers used:
  3534 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3535 ;; Tracked objects:
  3536 ;;		On entry : 0/0
  3537 ;;		On exit  : 0/0
  3538 ;;		Unchanged: 0/0
  3539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3540 ;;      Params:         0       1       0       0       0
  3541 ;;      Locals:         0       2       0       0       0
  3542 ;;      Temps:          1       0       0       0       0
  3543 ;;      Totals:         1       3       0       0       0
  3544 ;;Total ram usage:        4 bytes
  3545 ;; Hardware stack levels used: 1
  3546 ;; Hardware stack levels required when called: 4
  3547 ;; This function calls:
  3548 ;;		_gpio_pin_write_logic
  3549 ;;		_send_4bits
  3550 ;;		_send_enable_signal
  3551 ;; This function is called by:
  3552 ;;		_lcd_4bits_initialize
  3553 ;;		_set_cursor
  3554 ;;		_lcd_4bit_custom_character
  3555 ;; This function uses a non-reentrant model
  3556 ;;
  3557                           
  3558     0B0A                     _lcd_4bits_send_command:	
  3559                           ;psect for function _lcd_4bits_send_command
  3560                           
  3561                           
  3562                           ;incstack = 0
  3563                           ; Regs used in _lcd_4bits_send_command: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  3564                           ;lcd_4bits_send_command@lcd stored from wreg
  3565     0B0A  1283               	bcf	3,5	;RP0=0, select bank0
  3566     0B0B  1303               	bcf	3,6	;RP1=0, select bank0
  3567     0B0C  00AA               	movwf	lcd_4bits_send_command@lcd
  3568     0B0D                     l4245:
  3569     0B0D                     l4247:
  3570                           
  3571                           ;ECU_LAYER/LCD/ecu_lcd.c: 45:     if(lcd == ((void*)0)){
  3572     0B0D  082A               	movf	lcd_4bits_send_command@lcd,w
  3573     0B0E  1D03               	btfss	3,2
  3574     0B0F  2B11               	goto	u6081
  3575     0B10  2B12               	goto	u6080
  3576     0B11                     u6081:
  3577     0B11  2B15               	goto	l4251
  3578     0B12                     u6080:
  3579     0B12                     l4249:
  3580                           
  3581                           ;ECU_LAYER/LCD/ecu_lcd.c: 46:         ret = 0x01;
  3582     0B12  01A9               	clrf	lcd_4bits_send_command@ret
  3583     0B13  0AA9               	incf	lcd_4bits_send_command@ret,f
  3584                           
  3585                           ;ECU_LAYER/LCD/ecu_lcd.c: 47:     }
  3586     0B14  2B4F               	goto	l4253
  3587     0B15                     l4251:
  3588                           
  3589                           ;ECU_LAYER/LCD/ecu_lcd.c: 49:         ret = gpio_pin_write_logic(&(lcd->rs),GPIO_LOW);
  3590     0B15  01F3               	clrf	gpio_pin_write_logic@logic
  3591     0B16  082A               	movf	lcd_4bits_send_command@lcd,w
  3592     0B17  120A  118A  256E  120A  158A  	fcall	_gpio_pin_write_logic
  3593     0B1C  1283               	bcf	3,5	;RP0=0, select bank0
  3594     0B1D  1303               	bcf	3,6	;RP1=0, select bank0
  3595     0B1E  00A9               	movwf	lcd_4bits_send_command@ret
  3596                           
  3597                           ;ECU_LAYER/LCD/ecu_lcd.c: 50:         ret = send_4bits(lcd,(command >> 4));
  3598     0B1F  0828               	movf	lcd_4bits_send_command@command,w
  3599     0B20  00F7               	movwf	??_lcd_4bits_send_command
  3600     0B21  3004               	movlw	4
  3601     0B22                     u6095:
  3602     0B22  1003               	clrc
  3603     0B23  0CF7               	rrf	??_lcd_4bits_send_command,f
  3604     0B24  3EFF               	addlw	-1
  3605     0B25  1D03               	skipz
  3606     0B26  2B22               	goto	u6095
  3607     0B27  0877               	movf	??_lcd_4bits_send_command,w
  3608     0B28  00A5               	movwf	send_4bits@command
  3609     0B29  082A               	movf	lcd_4bits_send_command@lcd,w
  3610     0B2A  120A  158A  23E9  120A  158A  	fcall	_send_4bits
  3611     0B2F  1283               	bcf	3,5	;RP0=0, select bank0
  3612     0B30  1303               	bcf	3,6	;RP1=0, select bank0
  3613     0B31  00A9               	movwf	lcd_4bits_send_command@ret
  3614                           
  3615                           ;ECU_LAYER/LCD/ecu_lcd.c: 51:         ret = send_enable_signal(lcd);
  3616     0B32  082A               	movf	lcd_4bits_send_command@lcd,w
  3617     0B33  120A  158A  2177  120A  158A  	fcall	_send_enable_signal
  3618     0B38  1283               	bcf	3,5	;RP0=0, select bank0
  3619     0B39  1303               	bcf	3,6	;RP1=0, select bank0
  3620     0B3A  00A9               	movwf	lcd_4bits_send_command@ret
  3621                           
  3622                           ;ECU_LAYER/LCD/ecu_lcd.c: 52:         ret = send_4bits(lcd,command);
  3623     0B3B  0828               	movf	lcd_4bits_send_command@command,w
  3624     0B3C  00A5               	movwf	send_4bits@command
  3625     0B3D  082A               	movf	lcd_4bits_send_command@lcd,w
  3626     0B3E  120A  158A  23E9  120A  158A  	fcall	_send_4bits
  3627     0B43  1283               	bcf	3,5	;RP0=0, select bank0
  3628     0B44  1303               	bcf	3,6	;RP1=0, select bank0
  3629     0B45  00A9               	movwf	lcd_4bits_send_command@ret
  3630                           
  3631                           ;ECU_LAYER/LCD/ecu_lcd.c: 53:         ret = send_enable_signal(lcd);
  3632     0B46  082A               	movf	lcd_4bits_send_command@lcd,w
  3633     0B47  120A  158A  2177  120A  158A  	fcall	_send_enable_signal
  3634     0B4C  1283               	bcf	3,5	;RP0=0, select bank0
  3635     0B4D  1303               	bcf	3,6	;RP1=0, select bank0
  3636     0B4E  00A9               	movwf	lcd_4bits_send_command@ret
  3637     0B4F                     l4253:
  3638                           
  3639                           ;ECU_LAYER/LCD/ecu_lcd.c: 55:     return ret;
  3640     0B4F  0829               	movf	lcd_4bits_send_command@ret,w
  3641     0B50                     l30:
  3642     0B50  0008               	return
  3643     0B51                     __end_of_lcd_4bits_send_command:
  3644                           
  3645                           	psect	text16
  3646     0977                     __ptext16:	
  3647 ;; *************** function _send_enable_signal *****************
  3648 ;; Defined at:
  3649 ;;		line 171 in file "ECU_LAYER/LCD/ecu_lcd.c"
  3650 ;; Parameters:    Size  Location     Type
  3651 ;;  lcd             1    wreg     PTR const struct .
  3652 ;;		 -> lcd(6), 
  3653 ;; Auto vars:     Size  Location     Type
  3654 ;;  lcd             1    6[BANK0 ] PTR const struct .
  3655 ;;		 -> lcd(6), 
  3656 ;;  ret             1    5[BANK0 ] unsigned char 
  3657 ;; Return value:  Size  Location     Type
  3658 ;;                  1    wreg      unsigned char 
  3659 ;; Registers used:
  3660 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3661 ;; Tracked objects:
  3662 ;;		On entry : 0/0
  3663 ;;		On exit  : 0/0
  3664 ;;		Unchanged: 0/0
  3665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3666 ;;      Params:         0       0       0       0       0
  3667 ;;      Locals:         0       2       0       0       0
  3668 ;;      Temps:          1       0       0       0       0
  3669 ;;      Totals:         1       2       0       0       0
  3670 ;;Total ram usage:        3 bytes
  3671 ;; Hardware stack levels used: 1
  3672 ;; Hardware stack levels required when called: 3
  3673 ;; This function calls:
  3674 ;;		_gpio_pin_write_logic
  3675 ;; This function is called by:
  3676 ;;		_lcd_4bits_send_command
  3677 ;;		_lcd_4bits_send_char
  3678 ;; This function uses a non-reentrant model
  3679 ;;
  3680                           
  3681     0977                     _send_enable_signal:	
  3682                           ;psect for function _send_enable_signal
  3683                           
  3684                           
  3685                           ;incstack = 0
  3686                           ; Regs used in _send_enable_signal: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3687                           ;send_enable_signal@lcd stored from wreg
  3688     0977  1283               	bcf	3,5	;RP0=0, select bank0
  3689     0978  1303               	bcf	3,6	;RP1=0, select bank0
  3690     0979  00A6               	movwf	send_enable_signal@lcd
  3691     097A                     l4057:
  3692     097A                     l4059:
  3693                           
  3694                           ;ECU_LAYER/LCD/ecu_lcd.c: 173:     if(lcd == ((void*)0)){
  3695     097A  0826               	movf	send_enable_signal@lcd,w
  3696     097B  1D03               	btfss	3,2
  3697     097C  297E               	goto	u5591
  3698     097D  297F               	goto	u5590
  3699     097E                     u5591:
  3700     097E  2982               	goto	l4063
  3701     097F                     u5590:
  3702     097F                     l4061:
  3703                           
  3704                           ;ECU_LAYER/LCD/ecu_lcd.c: 174:         ret = 0x01;
  3705     097F  01A5               	clrf	send_enable_signal@ret
  3706     0980  0AA5               	incf	send_enable_signal@ret,f
  3707                           
  3708                           ;ECU_LAYER/LCD/ecu_lcd.c: 175:     }
  3709     0981  299C               	goto	l93
  3710     0982                     l4063:
  3711     0982  01F3               	clrf	gpio_pin_write_logic@logic
  3712     0983  0AF3               	incf	gpio_pin_write_logic@logic,f
  3713     0984  0826               	movf	send_enable_signal@lcd,w
  3714     0985  3E01               	addlw	1
  3715     0986  120A  118A  256E  120A  158A  	fcall	_gpio_pin_write_logic
  3716     098B                     l4065:
  3717                           
  3718                           ;ECU_LAYER/LCD/ecu_lcd.c: 178:         _delay((unsigned long)((5)*(8000000UL/4000000.0))
      +                          );
  3719     098B  3003               	movlw	3
  3720     098C  00F6               	movwf	??_send_enable_signal
  3721     098D                     u6827:
  3722     098D  0BF6               	decfsz	??_send_enable_signal,f
  3723     098E  298D               	goto	u6827
  3724     098F                     l4067:
  3725                           
  3726                           ;ECU_LAYER/LCD/ecu_lcd.c: 179:         ret = gpio_pin_write_logic(&(lcd->en),GPIO_LOW);
  3727     098F  01F3               	clrf	gpio_pin_write_logic@logic
  3728     0990  1283               	bcf	3,5	;RP0=0, select bank0
  3729     0991  1303               	bcf	3,6	;RP1=0, select bank0
  3730     0992  0826               	movf	send_enable_signal@lcd,w
  3731     0993  3E01               	addlw	1
  3732     0994  120A  118A  256E  120A  158A  	fcall	_gpio_pin_write_logic
  3733     0999  1283               	bcf	3,5	;RP0=0, select bank0
  3734     099A  1303               	bcf	3,6	;RP1=0, select bank0
  3735     099B  00A5               	movwf	send_enable_signal@ret
  3736     099C                     l93:	
  3737                           ;ECU_LAYER/LCD/ecu_lcd.c: 180:     }
  3738                           
  3739                           
  3740                           ;ECU_LAYER/LCD/ecu_lcd.c: 181:     return ret;
  3741     099C  0825               	movf	send_enable_signal@ret,w
  3742     099D                     l94:
  3743     099D  0008               	return
  3744     099E                     __end_of_send_enable_signal:
  3745                           
  3746                           	psect	text17
  3747     0BE9                     __ptext17:	
  3748 ;; *************** function _send_4bits *****************
  3749 ;; Defined at:
  3750 ;;		line 157 in file "ECU_LAYER/LCD/ecu_lcd.c"
  3751 ;; Parameters:    Size  Location     Type
  3752 ;;  lcd             1    wreg     PTR struct .
  3753 ;;		 -> lcd(6), 
  3754 ;;  command         1    5[BANK0 ] unsigned char 
  3755 ;; Auto vars:     Size  Location     Type
  3756 ;;  lcd             1    7[BANK0 ] PTR struct .
  3757 ;;		 -> lcd(6), 
  3758 ;;  ret             1    6[BANK0 ] unsigned char 
  3759 ;; Return value:  Size  Location     Type
  3760 ;;                  1    wreg      unsigned char 
  3761 ;; Registers used:
  3762 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3763 ;; Tracked objects:
  3764 ;;		On entry : 0/0
  3765 ;;		On exit  : 0/0
  3766 ;;		Unchanged: 0/0
  3767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3768 ;;      Params:         0       1       0       0       0
  3769 ;;      Locals:         0       2       0       0       0
  3770 ;;      Temps:          1       0       0       0       0
  3771 ;;      Totals:         1       3       0       0       0
  3772 ;;Total ram usage:        4 bytes
  3773 ;; Hardware stack levels used: 1
  3774 ;; Hardware stack levels required when called: 3
  3775 ;; This function calls:
  3776 ;;		_gpio_pin_write_logic
  3777 ;; This function is called by:
  3778 ;;		_lcd_4bits_send_command
  3779 ;;		_lcd_4bits_send_char
  3780 ;; This function uses a non-reentrant model
  3781 ;;
  3782                           
  3783     0BE9                     _send_4bits:	
  3784                           ;psect for function _send_4bits
  3785                           
  3786                           
  3787                           ;incstack = 0
  3788                           ; Regs used in _send_4bits: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3789                           ;send_4bits@lcd stored from wreg
  3790     0BE9  1283               	bcf	3,5	;RP0=0, select bank0
  3791     0BEA  1303               	bcf	3,6	;RP1=0, select bank0
  3792     0BEB  00A7               	movwf	send_4bits@lcd
  3793     0BEC                     l4045:
  3794     0BEC                     l4047:
  3795                           
  3796                           ;ECU_LAYER/LCD/ecu_lcd.c: 159:     if(lcd == ((void*)0)){
  3797     0BEC  0827               	movf	send_4bits@lcd,w
  3798     0BED  1D03               	btfss	3,2
  3799     0BEE  2BF0               	goto	u5561
  3800     0BEF  2BF1               	goto	u5560
  3801     0BF0                     u5561:
  3802     0BF0  2BF4               	goto	l4051
  3803     0BF1                     u5560:
  3804     0BF1                     l4049:
  3805                           
  3806                           ;ECU_LAYER/LCD/ecu_lcd.c: 160:         ret = 0x01;
  3807     0BF1  01A6               	clrf	send_4bits@ret
  3808     0BF2  0AA6               	incf	send_4bits@ret,f
  3809                           
  3810                           ;ECU_LAYER/LCD/ecu_lcd.c: 161:     }
  3811     0BF3  2C3B               	goto	l4053
  3812     0BF4                     l4051:
  3813                           
  3814                           ;ECU_LAYER/LCD/ecu_lcd.c: 163:         ret = gpio_pin_write_logic(&(lcd->pins[0]),((comm
      +                          and >> 0) & 0x01));
  3815     0BF4  0825               	movf	send_4bits@command,w
  3816     0BF5  3901               	andlw	1
  3817     0BF6  00F3               	movwf	gpio_pin_write_logic@logic
  3818     0BF7  0827               	movf	send_4bits@lcd,w
  3819     0BF8  3E02               	addlw	2
  3820     0BF9  120A  118A  256E  120A  158A  	fcall	_gpio_pin_write_logic
  3821     0BFE  1283               	bcf	3,5	;RP0=0, select bank0
  3822     0BFF  1303               	bcf	3,6	;RP1=0, select bank0
  3823     0C00  00A6               	movwf	send_4bits@ret
  3824                           
  3825                           ;ECU_LAYER/LCD/ecu_lcd.c: 164:         ret = gpio_pin_write_logic(&(lcd->pins[1]),((comm
      +                          and >> 1) & 0x01));
  3826     0C01  0825               	movf	send_4bits@command,w
  3827     0C02  00F6               	movwf	??_send_4bits
  3828     0C03  1003               	clrc
  3829     0C04  0C76               	rrf	??_send_4bits,w
  3830     0C05  3901               	andlw	1
  3831     0C06  00F3               	movwf	gpio_pin_write_logic@logic
  3832     0C07  0827               	movf	send_4bits@lcd,w
  3833     0C08  3E03               	addlw	3
  3834     0C09  120A  118A  256E  120A  158A  	fcall	_gpio_pin_write_logic
  3835     0C0E  1283               	bcf	3,5	;RP0=0, select bank0
  3836     0C0F  1303               	bcf	3,6	;RP1=0, select bank0
  3837     0C10  00A6               	movwf	send_4bits@ret
  3838                           
  3839                           ;ECU_LAYER/LCD/ecu_lcd.c: 165:         ret = gpio_pin_write_logic(&(lcd->pins[2]),((comm
      +                          and >> 2) & 0x01));
  3840     0C11  0825               	movf	send_4bits@command,w
  3841     0C12  00F6               	movwf	??_send_4bits
  3842     0C13  3002               	movlw	2
  3843     0C14                     u5575:
  3844     0C14  1003               	clrc
  3845     0C15  0CF6               	rrf	??_send_4bits,f
  3846     0C16  3EFF               	addlw	-1
  3847     0C17  1D03               	skipz
  3848     0C18  2C14               	goto	u5575
  3849     0C19  0876               	movf	??_send_4bits,w
  3850     0C1A  3901               	andlw	1
  3851     0C1B  00F3               	movwf	gpio_pin_write_logic@logic
  3852     0C1C  0827               	movf	send_4bits@lcd,w
  3853     0C1D  3E04               	addlw	4
  3854     0C1E  120A  118A  256E  120A  158A  	fcall	_gpio_pin_write_logic
  3855     0C23  1283               	bcf	3,5	;RP0=0, select bank0
  3856     0C24  1303               	bcf	3,6	;RP1=0, select bank0
  3857     0C25  00A6               	movwf	send_4bits@ret
  3858                           
  3859                           ;ECU_LAYER/LCD/ecu_lcd.c: 166:         ret = gpio_pin_write_logic(&(lcd->pins[3]),((comm
      +                          and >> 3) & 0x01));
  3860     0C26  0825               	movf	send_4bits@command,w
  3861     0C27  00F6               	movwf	??_send_4bits
  3862     0C28  3003               	movlw	3
  3863     0C29                     u5585:
  3864     0C29  1003               	clrc
  3865     0C2A  0CF6               	rrf	??_send_4bits,f
  3866     0C2B  3EFF               	addlw	-1
  3867     0C2C  1D03               	skipz
  3868     0C2D  2C29               	goto	u5585
  3869     0C2E  0876               	movf	??_send_4bits,w
  3870     0C2F  3901               	andlw	1
  3871     0C30  00F3               	movwf	gpio_pin_write_logic@logic
  3872     0C31  0827               	movf	send_4bits@lcd,w
  3873     0C32  3E05               	addlw	5
  3874     0C33  120A  118A  256E  120A  158A  	fcall	_gpio_pin_write_logic
  3875     0C38  1283               	bcf	3,5	;RP0=0, select bank0
  3876     0C39  1303               	bcf	3,6	;RP1=0, select bank0
  3877     0C3A  00A6               	movwf	send_4bits@ret
  3878     0C3B                     l4053:
  3879                           
  3880                           ;ECU_LAYER/LCD/ecu_lcd.c: 168:     return ret;
  3881     0C3B  0826               	movf	send_4bits@ret,w
  3882     0C3C                     l89:
  3883     0C3C  0008               	return
  3884     0C3D                     __end_of_send_4bits:
  3885                           
  3886                           	psect	text18
  3887     0DD3                     __ptext18:	
  3888 ;; *************** function _gpio_pin_initialize *****************
  3889 ;; Defined at:
  3890 ;;		line 103 in file "MCAL_LAYER/GPIO/mcal_gpio.c"
  3891 ;; Parameters:    Size  Location     Type
  3892 ;;  pin             1    wreg     PTR const struct .
  3893 ;;		 -> lcd$pins(4), lcd(6), motor2$pins(2), motor2(2), 
  3894 ;;		 -> motor1$pins(2), motor1(2), 
  3895 ;; Auto vars:     Size  Location     Type
  3896 ;;  pin             1    8[BANK0 ] PTR const struct .
  3897 ;;		 -> lcd$pins(4), lcd(6), motor2$pins(2), motor2(2), 
  3898 ;;		 -> motor1$pins(2), motor1(2), 
  3899 ;;  ret             1    7[BANK0 ] unsigned char 
  3900 ;; Return value:  Size  Location     Type
  3901 ;;                  1    wreg      unsigned char 
  3902 ;; Registers used:
  3903 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3904 ;; Tracked objects:
  3905 ;;		On entry : 0/0
  3906 ;;		On exit  : 0/0
  3907 ;;		Unchanged: 0/0
  3908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3909 ;;      Params:         0       0       0       0       0
  3910 ;;      Locals:         0       2       0       0       0
  3911 ;;      Temps:          0       2       0       0       0
  3912 ;;      Totals:         0       4       0       0       0
  3913 ;;Total ram usage:        4 bytes
  3914 ;; Hardware stack levels used: 1
  3915 ;; Hardware stack levels required when called: 3
  3916 ;; This function calls:
  3917 ;;		_gpio_pin_direction_initialize
  3918 ;;		_gpio_pin_write_logic
  3919 ;; This function is called by:
  3920 ;;		_lcd_4bits_initialize
  3921 ;;		_motor_initialize
  3922 ;; This function uses a non-reentrant model
  3923 ;;
  3924                           
  3925     0DD3                     _gpio_pin_initialize:	
  3926                           ;psect for function _gpio_pin_initialize
  3927                           
  3928                           
  3929                           ;incstack = 0
  3930                           ; Regs used in _gpio_pin_initialize: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  3931                           ;gpio_pin_initialize@pin stored from wreg
  3932     0DD3  1283               	bcf	3,5	;RP0=0, select bank0
  3933     0DD4  1303               	bcf	3,6	;RP1=0, select bank0
  3934     0DD5  00A8               	movwf	gpio_pin_initialize@pin
  3935     0DD6                     l4213:
  3936                           
  3937                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 104:     uint8 ret = 0x00;
  3938     0DD6  01A7               	clrf	gpio_pin_initialize@ret
  3939     0DD7                     l4215:
  3940                           
  3941                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 105:     if (pin == ((void*)0)) {
  3942     0DD7  0828               	movf	gpio_pin_initialize@pin,w
  3943     0DD8  1D03               	btfss	3,2
  3944     0DD9  2DDB               	goto	u5971
  3945     0DDA  2DDC               	goto	u5970
  3946     0DDB                     u5971:
  3947     0DDB  2DDF               	goto	l4219
  3948     0DDC                     u5970:
  3949     0DDC                     l4217:
  3950                           
  3951                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 106:         ret = 0x01;
  3952     0DDC  01A7               	clrf	gpio_pin_initialize@ret
  3953     0DDD  0AA7               	incf	gpio_pin_initialize@ret,f
  3954                           
  3955                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 107:     } else {
  3956     0DDE  2E68               	goto	l4241
  3957     0DDF                     l4219:
  3958                           
  3959                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 108:         if ((pin->port == PORTA_INDEX && pin->pin < 6
      +                          ) || (pin->port == PORTB_INDEX && pin->pin < 8) || (pin->port == PORTC_INDEX && pin->pin
      +                           < 8) ||
  3960     0DDF  0828               	movf	gpio_pin_initialize@pin,w
  3961     0DE0  0084               	movwf	4
  3962     0DE1  1383               	bcf	3,7	;select IRP bank0
  3963     0DE2  0800               	movf	0,w
  3964     0DE3  3907               	andlw	7
  3965     0DE4  3A00               	xorlw	0
  3966     0DE5  1D03               	skipz
  3967     0DE6  2DE8               	goto	u5981
  3968     0DE7  2DE9               	goto	u5980
  3969     0DE8                     u5981:
  3970     0DE8  2DF7               	goto	l4223
  3971     0DE9                     u5980:
  3972     0DE9                     l4221:
  3973     0DE9  0828               	movf	gpio_pin_initialize@pin,w
  3974     0DEA  0084               	movwf	4
  3975     0DEB  0C00               	rrf	0,w
  3976     0DEC  00A5               	movwf	??_gpio_pin_initialize
  3977     0DED  0CA5               	rrf	??_gpio_pin_initialize,f
  3978     0DEE  0C25               	rrf	??_gpio_pin_initialize,w
  3979     0DEF  3907               	andlw	7
  3980     0DF0  00A6               	movwf	??_gpio_pin_initialize+1
  3981     0DF1  3006               	movlw	6
  3982     0DF2  0226               	subwf	??_gpio_pin_initialize+1,w
  3983     0DF3  1C03               	skipc
  3984     0DF4  2DF6               	goto	u5991
  3985     0DF5  2DF7               	goto	u5990
  3986     0DF6                     u5991:
  3987     0DF6  2E53               	goto	l4239
  3988     0DF7                     u5990:
  3989     0DF7                     l4223:
  3990     0DF7  0828               	movf	gpio_pin_initialize@pin,w
  3991     0DF8  0084               	movwf	4
  3992     0DF9  0800               	movf	0,w
  3993     0DFA  3907               	andlw	7
  3994     0DFB  3A01               	xorlw	1
  3995     0DFC  1D03               	skipz
  3996     0DFD  2DFF               	goto	u6001
  3997     0DFE  2E00               	goto	u6000
  3998     0DFF                     u6001:
  3999     0DFF  2E0E               	goto	l4227
  4000     0E00                     u6000:
  4001     0E00                     l4225:
  4002     0E00  0828               	movf	gpio_pin_initialize@pin,w
  4003     0E01  0084               	movwf	4
  4004     0E02  0C00               	rrf	0,w
  4005     0E03  00A5               	movwf	??_gpio_pin_initialize
  4006     0E04  0CA5               	rrf	??_gpio_pin_initialize,f
  4007     0E05  0C25               	rrf	??_gpio_pin_initialize,w
  4008     0E06  3907               	andlw	7
  4009     0E07  00A6               	movwf	??_gpio_pin_initialize+1
  4010     0E08  3008               	movlw	8
  4011     0E09  0226               	subwf	??_gpio_pin_initialize+1,w
  4012     0E0A  1C03               	skipc
  4013     0E0B  2E0D               	goto	u6011
  4014     0E0C  2E0E               	goto	u6010
  4015     0E0D                     u6011:
  4016     0E0D  2E53               	goto	l4239
  4017     0E0E                     u6010:
  4018     0E0E                     l4227:
  4019     0E0E  0828               	movf	gpio_pin_initialize@pin,w
  4020     0E0F  0084               	movwf	4
  4021     0E10  0800               	movf	0,w
  4022     0E11  3907               	andlw	7
  4023     0E12  3A02               	xorlw	2
  4024     0E13  1D03               	skipz
  4025     0E14  2E16               	goto	u6021
  4026     0E15  2E17               	goto	u6020
  4027     0E16                     u6021:
  4028     0E16  2E25               	goto	l4231
  4029     0E17                     u6020:
  4030     0E17                     l4229:
  4031     0E17  0828               	movf	gpio_pin_initialize@pin,w
  4032     0E18  0084               	movwf	4
  4033     0E19  0C00               	rrf	0,w
  4034     0E1A  00A5               	movwf	??_gpio_pin_initialize
  4035     0E1B  0CA5               	rrf	??_gpio_pin_initialize,f
  4036     0E1C  0C25               	rrf	??_gpio_pin_initialize,w
  4037     0E1D  3907               	andlw	7
  4038     0E1E  00A6               	movwf	??_gpio_pin_initialize+1
  4039     0E1F  3008               	movlw	8
  4040     0E20  0226               	subwf	??_gpio_pin_initialize+1,w
  4041     0E21  1C03               	skipc
  4042     0E22  2E24               	goto	u6031
  4043     0E23  2E25               	goto	u6030
  4044     0E24                     u6031:
  4045     0E24  2E53               	goto	l4239
  4046     0E25                     u6030:
  4047     0E25                     l4231:
  4048     0E25  0828               	movf	gpio_pin_initialize@pin,w
  4049     0E26  0084               	movwf	4
  4050     0E27  0800               	movf	0,w
  4051     0E28  3907               	andlw	7
  4052     0E29  3A03               	xorlw	3
  4053     0E2A  1D03               	skipz
  4054     0E2B  2E2D               	goto	u6041
  4055     0E2C  2E2E               	goto	u6040
  4056     0E2D                     u6041:
  4057     0E2D  2E3C               	goto	l4235
  4058     0E2E                     u6040:
  4059     0E2E                     l4233:
  4060     0E2E  0828               	movf	gpio_pin_initialize@pin,w
  4061     0E2F  0084               	movwf	4
  4062     0E30  0C00               	rrf	0,w
  4063     0E31  00A5               	movwf	??_gpio_pin_initialize
  4064     0E32  0CA5               	rrf	??_gpio_pin_initialize,f
  4065     0E33  0C25               	rrf	??_gpio_pin_initialize,w
  4066     0E34  3907               	andlw	7
  4067     0E35  00A6               	movwf	??_gpio_pin_initialize+1
  4068     0E36  3008               	movlw	8
  4069     0E37  0226               	subwf	??_gpio_pin_initialize+1,w
  4070     0E38  1C03               	skipc
  4071     0E39  2E3B               	goto	u6051
  4072     0E3A  2E3C               	goto	u6050
  4073     0E3B                     u6051:
  4074     0E3B  2E53               	goto	l4239
  4075     0E3C                     u6050:
  4076     0E3C                     l4235:
  4077     0E3C  0828               	movf	gpio_pin_initialize@pin,w
  4078     0E3D  0084               	movwf	4
  4079     0E3E  0800               	movf	0,w
  4080     0E3F  3907               	andlw	7
  4081     0E40  3A04               	xorlw	4
  4082     0E41  1D03               	skipz
  4083     0E42  2E44               	goto	u6061
  4084     0E43  2E45               	goto	u6060
  4085     0E44                     u6061:
  4086     0E44  2DDC               	goto	l4217
  4087     0E45                     u6060:
  4088     0E45                     l4237:
  4089     0E45  0828               	movf	gpio_pin_initialize@pin,w
  4090     0E46  0084               	movwf	4
  4091     0E47  0C00               	rrf	0,w
  4092     0E48  00A5               	movwf	??_gpio_pin_initialize
  4093     0E49  0CA5               	rrf	??_gpio_pin_initialize,f
  4094     0E4A  0C25               	rrf	??_gpio_pin_initialize,w
  4095     0E4B  3907               	andlw	7
  4096     0E4C  00A6               	movwf	??_gpio_pin_initialize+1
  4097     0E4D  3003               	movlw	3
  4098     0E4E  0226               	subwf	??_gpio_pin_initialize+1,w
  4099     0E4F  1803               	skipnc
  4100     0E50  2E52               	goto	u6071
  4101     0E51  2E53               	goto	u6070
  4102     0E52                     u6071:
  4103     0E52  2DDC               	goto	l4217
  4104     0E53                     u6070:
  4105     0E53                     l4239:
  4106                           
  4107                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 109:                 (pin->port == PORTD_INDEX && pin->pin
      +                           < 8) || (pin->port == PORTE_INDEX && pin->pin < 3)) {;MCAL_LAYER/GPIO/mcal_gpio.c: 110:
      +                                       gpio_pin_direction_initialize(pin);
  4108     0E53  0828               	movf	gpio_pin_initialize@pin,w
  4109     0E54  120A  158A  2722  120A  158A  	fcall	_gpio_pin_direction_initialize
  4110                           
  4111                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 111:             gpio_pin_write_logic(pin, pin->logic);
  4112     0E59  1283               	bcf	3,5	;RP0=0, select bank0
  4113     0E5A  1303               	bcf	3,6	;RP1=0, select bank0
  4114     0E5B  0828               	movf	gpio_pin_initialize@pin,w
  4115     0E5C  0084               	movwf	4
  4116     0E5D  3000               	movlw	0
  4117     0E5E  1383               	bcf	3,7	;select IRP bank0
  4118     0E5F  1B00               	btfsc	0,6
  4119     0E60  3001               	movlw	1
  4120     0E61  00F3               	movwf	gpio_pin_write_logic@logic
  4121     0E62  0828               	movf	gpio_pin_initialize@pin,w
  4122     0E63  120A  118A  256E  120A  158A  	fcall	_gpio_pin_write_logic
  4123     0E68                     l4241:	
  4124                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 112:         } else {
  4125                           
  4126                           
  4127                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 116:     return ret;
  4128     0E68  1283               	bcf	3,5	;RP0=0, select bank0
  4129     0E69  1303               	bcf	3,6	;RP1=0, select bank0
  4130     0E6A  0827               	movf	gpio_pin_initialize@ret,w
  4131     0E6B                     l371:
  4132     0E6B  0008               	return
  4133     0E6C                     __end_of_gpio_pin_initialize:
  4134                           
  4135                           	psect	text19
  4136     056E                     __ptext19:	
  4137 ;; *************** function _gpio_pin_write_logic *****************
  4138 ;; Defined at:
  4139 ;;		line 50 in file "MCAL_LAYER/GPIO/mcal_gpio.c"
  4140 ;; Parameters:    Size  Location     Type
  4141 ;;  pin             1    wreg     PTR const struct .
  4142 ;;		 -> lcd$pins(4), lcd(6), motor2$pins(2), motor2(2), 
  4143 ;;		 -> motor1$pins(2), motor1(2), 
  4144 ;;  logic           1    3[COMMON] enum E1519
  4145 ;; Auto vars:     Size  Location     Type
  4146 ;;  pin             1    5[COMMON] PTR const struct .
  4147 ;;		 -> lcd$pins(4), lcd(6), motor2$pins(2), motor2(2), 
  4148 ;;		 -> motor1$pins(2), motor1(2), 
  4149 ;;  ret             1    4[COMMON] unsigned char 
  4150 ;; Return value:  Size  Location     Type
  4151 ;;                  1    wreg      unsigned char 
  4152 ;; Registers used:
  4153 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4154 ;; Tracked objects:
  4155 ;;		On entry : 0/0
  4156 ;;		On exit  : 0/0
  4157 ;;		Unchanged: 0/0
  4158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4159 ;;      Params:         1       0       0       0       0
  4160 ;;      Locals:         2       0       0       0       0
  4161 ;;      Temps:          0       5       0       0       0
  4162 ;;      Totals:         3       5       0       0       0
  4163 ;;Total ram usage:        8 bytes
  4164 ;; Hardware stack levels used: 1
  4165 ;; Hardware stack levels required when called: 2
  4166 ;; This function calls:
  4167 ;;		Nothing
  4168 ;; This function is called by:
  4169 ;;		_lcd_4bits_send_command
  4170 ;;		_lcd_4bits_send_char
  4171 ;;		_send_4bits
  4172 ;;		_send_enable_signal
  4173 ;;		_motor_turn_right
  4174 ;;		_motor_turn_left
  4175 ;;		_motor_turn_off
  4176 ;;		_gpio_pin_initialize
  4177 ;; This function uses a non-reentrant model
  4178 ;;
  4179                           
  4180     056E                     _gpio_pin_write_logic:	
  4181                           ;psect for function _gpio_pin_write_logic
  4182                           
  4183                           
  4184                           ;incstack = 0
  4185                           ; Regs used in _gpio_pin_write_logic: [wreg-fsr0h+status,2+status,0+btemp+1]
  4186                           ;gpio_pin_write_logic@pin stored from wreg
  4187     056E  00F5               	movwf	gpio_pin_write_logic@pin
  4188     056F                     l4003:
  4189                           
  4190                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 51:     uint8 ret = 0x00;
  4191     056F  01F4               	clrf	gpio_pin_write_logic@ret
  4192     0570                     l4005:
  4193                           
  4194                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 52:     if (pin == ((void*)0)) {
  4195     0570  0875               	movf	gpio_pin_write_logic@pin,w
  4196     0571  1D03               	btfss	3,2
  4197     0572  2D74               	goto	u5431
  4198     0573  2D75               	goto	u5430
  4199     0574                     u5431:
  4200     0574  2D78               	goto	l4009
  4201     0575                     u5430:
  4202     0575                     l4007:
  4203                           
  4204                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 53:         ret = 0x01;
  4205     0575  01F4               	clrf	gpio_pin_write_logic@ret
  4206     0576  0AF4               	incf	gpio_pin_write_logic@ret,f
  4207                           
  4208                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 54:     } else {
  4209     0577  2E56               	goto	l4037
  4210     0578                     l4009:
  4211                           
  4212                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 55:         if ((pin->port == PORTA_INDEX && pin->pin < 6)
      +                           || (pin->port == PORTB_INDEX && pin->pin < 8) || (pin->port == PORTC_INDEX && pin->pin 
      +                          < 8) ||
  4213     0578  0875               	movf	gpio_pin_write_logic@pin,w
  4214     0579  0084               	movwf	4
  4215     057A  1383               	bcf	3,7	;select IRP bank0
  4216     057B  0800               	movf	0,w
  4217     057C  3907               	andlw	7
  4218     057D  3A00               	xorlw	0
  4219     057E  1D03               	skipz
  4220     057F  2D81               	goto	u5441
  4221     0580  2D82               	goto	u5440
  4222     0581                     u5441:
  4223     0581  2D92               	goto	l4013
  4224     0582                     u5440:
  4225     0582                     l4011:
  4226     0582  0875               	movf	gpio_pin_write_logic@pin,w
  4227     0583  0084               	movwf	4
  4228     0584  0C00               	rrf	0,w
  4229     0585  1283               	bcf	3,5	;RP0=0, select bank0
  4230     0586  1303               	bcf	3,6	;RP1=0, select bank0
  4231     0587  00A0               	movwf	??_gpio_pin_write_logic
  4232     0588  0CA0               	rrf	??_gpio_pin_write_logic,f
  4233     0589  0C20               	rrf	??_gpio_pin_write_logic,w
  4234     058A  3907               	andlw	7
  4235     058B  00A1               	movwf	??_gpio_pin_write_logic+1
  4236     058C  3006               	movlw	6
  4237     058D  0221               	subwf	??_gpio_pin_write_logic+1,w
  4238     058E  1C03               	skipc
  4239     058F  2D91               	goto	u5451
  4240     0590  2D92               	goto	u5450
  4241     0591                     u5451:
  4242     0591  2E46               	goto	l4035
  4243     0592                     u5450:
  4244     0592                     l4013:
  4245     0592  0875               	movf	gpio_pin_write_logic@pin,w
  4246     0593  0084               	movwf	4
  4247     0594  0800               	movf	0,w
  4248     0595  3907               	andlw	7
  4249     0596  3A01               	xorlw	1
  4250     0597  1D03               	skipz
  4251     0598  2D9A               	goto	u5461
  4252     0599  2D9B               	goto	u5460
  4253     059A                     u5461:
  4254     059A  2DAB               	goto	l4017
  4255     059B                     u5460:
  4256     059B                     l4015:
  4257     059B  0875               	movf	gpio_pin_write_logic@pin,w
  4258     059C  0084               	movwf	4
  4259     059D  0C00               	rrf	0,w
  4260     059E  1283               	bcf	3,5	;RP0=0, select bank0
  4261     059F  1303               	bcf	3,6	;RP1=0, select bank0
  4262     05A0  00A0               	movwf	??_gpio_pin_write_logic
  4263     05A1  0CA0               	rrf	??_gpio_pin_write_logic,f
  4264     05A2  0C20               	rrf	??_gpio_pin_write_logic,w
  4265     05A3  3907               	andlw	7
  4266     05A4  00A1               	movwf	??_gpio_pin_write_logic+1
  4267     05A5  3008               	movlw	8
  4268     05A6  0221               	subwf	??_gpio_pin_write_logic+1,w
  4269     05A7  1C03               	skipc
  4270     05A8  2DAA               	goto	u5471
  4271     05A9  2DAB               	goto	u5470
  4272     05AA                     u5471:
  4273     05AA  2E46               	goto	l4035
  4274     05AB                     u5470:
  4275     05AB                     l4017:
  4276     05AB  0875               	movf	gpio_pin_write_logic@pin,w
  4277     05AC  0084               	movwf	4
  4278     05AD  0800               	movf	0,w
  4279     05AE  3907               	andlw	7
  4280     05AF  3A02               	xorlw	2
  4281     05B0  1D03               	skipz
  4282     05B1  2DB3               	goto	u5481
  4283     05B2  2DB4               	goto	u5480
  4284     05B3                     u5481:
  4285     05B3  2DC4               	goto	l4021
  4286     05B4                     u5480:
  4287     05B4                     l4019:
  4288     05B4  0875               	movf	gpio_pin_write_logic@pin,w
  4289     05B5  0084               	movwf	4
  4290     05B6  0C00               	rrf	0,w
  4291     05B7  1283               	bcf	3,5	;RP0=0, select bank0
  4292     05B8  1303               	bcf	3,6	;RP1=0, select bank0
  4293     05B9  00A0               	movwf	??_gpio_pin_write_logic
  4294     05BA  0CA0               	rrf	??_gpio_pin_write_logic,f
  4295     05BB  0C20               	rrf	??_gpio_pin_write_logic,w
  4296     05BC  3907               	andlw	7
  4297     05BD  00A1               	movwf	??_gpio_pin_write_logic+1
  4298     05BE  3008               	movlw	8
  4299     05BF  0221               	subwf	??_gpio_pin_write_logic+1,w
  4300     05C0  1C03               	skipc
  4301     05C1  2DC3               	goto	u5491
  4302     05C2  2DC4               	goto	u5490
  4303     05C3                     u5491:
  4304     05C3  2E46               	goto	l4035
  4305     05C4                     u5490:
  4306     05C4                     l4021:
  4307     05C4  0875               	movf	gpio_pin_write_logic@pin,w
  4308     05C5  0084               	movwf	4
  4309     05C6  0800               	movf	0,w
  4310     05C7  3907               	andlw	7
  4311     05C8  3A03               	xorlw	3
  4312     05C9  1D03               	skipz
  4313     05CA  2DCC               	goto	u5501
  4314     05CB  2DCD               	goto	u5500
  4315     05CC                     u5501:
  4316     05CC  2DDD               	goto	l4025
  4317     05CD                     u5500:
  4318     05CD                     l4023:
  4319     05CD  0875               	movf	gpio_pin_write_logic@pin,w
  4320     05CE  0084               	movwf	4
  4321     05CF  0C00               	rrf	0,w
  4322     05D0  1283               	bcf	3,5	;RP0=0, select bank0
  4323     05D1  1303               	bcf	3,6	;RP1=0, select bank0
  4324     05D2  00A0               	movwf	??_gpio_pin_write_logic
  4325     05D3  0CA0               	rrf	??_gpio_pin_write_logic,f
  4326     05D4  0C20               	rrf	??_gpio_pin_write_logic,w
  4327     05D5  3907               	andlw	7
  4328     05D6  00A1               	movwf	??_gpio_pin_write_logic+1
  4329     05D7  3008               	movlw	8
  4330     05D8  0221               	subwf	??_gpio_pin_write_logic+1,w
  4331     05D9  1C03               	skipc
  4332     05DA  2DDC               	goto	u5511
  4333     05DB  2DDD               	goto	u5510
  4334     05DC                     u5511:
  4335     05DC  2E46               	goto	l4035
  4336     05DD                     u5510:
  4337     05DD                     l4025:
  4338     05DD  0875               	movf	gpio_pin_write_logic@pin,w
  4339     05DE  0084               	movwf	4
  4340     05DF  0800               	movf	0,w
  4341     05E0  3907               	andlw	7
  4342     05E1  3A04               	xorlw	4
  4343     05E2  1D03               	skipz
  4344     05E3  2DE5               	goto	u5521
  4345     05E4  2DE6               	goto	u5520
  4346     05E5                     u5521:
  4347     05E5  2D75               	goto	l4007
  4348     05E6                     u5520:
  4349     05E6                     l4027:
  4350     05E6  0875               	movf	gpio_pin_write_logic@pin,w
  4351     05E7  0084               	movwf	4
  4352     05E8  0C00               	rrf	0,w
  4353     05E9  1283               	bcf	3,5	;RP0=0, select bank0
  4354     05EA  1303               	bcf	3,6	;RP1=0, select bank0
  4355     05EB  00A0               	movwf	??_gpio_pin_write_logic
  4356     05EC  0CA0               	rrf	??_gpio_pin_write_logic,f
  4357     05ED  0C20               	rrf	??_gpio_pin_write_logic,w
  4358     05EE  3907               	andlw	7
  4359     05EF  00A1               	movwf	??_gpio_pin_write_logic+1
  4360     05F0  3003               	movlw	3
  4361     05F1  0221               	subwf	??_gpio_pin_write_logic+1,w
  4362     05F2  1803               	skipnc
  4363     05F3  2DF5               	goto	u5531
  4364     05F4  2DF6               	goto	u5530
  4365     05F5                     u5531:
  4366     05F5  2D75               	goto	l4007
  4367     05F6                     u5530:
  4368     05F6  2E46               	goto	l4035
  4369     05F7                     l4029:
  4370                           
  4371                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 60:                     (*port_registers[pin->port] |= (0x
      +                          01 << pin->pin));
  4372     05F7  3001               	movlw	1
  4373     05F8  00A0               	movwf	??_gpio_pin_write_logic
  4374     05F9  0875               	movf	gpio_pin_write_logic@pin,w
  4375     05FA  0084               	movwf	4
  4376     05FB  0C00               	rrf	0,w
  4377     05FC  00A1               	movwf	??_gpio_pin_write_logic+1
  4378     05FD  0CA1               	rrf	??_gpio_pin_write_logic+1,f
  4379     05FE  0C21               	rrf	??_gpio_pin_write_logic+1,w
  4380     05FF  3907               	andlw	7
  4381     0600  3E01               	addlw	1
  4382     0601  2E04               	goto	u5544
  4383     0602                     u5545:
  4384     0602  1003               	clrc
  4385     0603  0DA0               	rlf	??_gpio_pin_write_logic,f
  4386     0604                     u5544:
  4387     0604  3EFF               	addlw	-1
  4388     0605  1D03               	skipz
  4389     0606  2E02               	goto	u5545
  4390     0607  0820               	movf	??_gpio_pin_write_logic,w
  4391     0608  00FF               	movwf	btemp+1
  4392     0609  0875               	movf	gpio_pin_write_logic@pin,w
  4393     060A  0084               	movwf	4
  4394     060B  0800               	movf	0,w
  4395     060C  3907               	andlw	7
  4396     060D  00A2               	movwf	??_gpio_pin_write_logic+2
  4397     060E  0722               	addwf	??_gpio_pin_write_logic+2,w
  4398     060F  3EBB               	addlw	(low (_port_registers| 0))& (0+255)
  4399     0610  0084               	movwf	4
  4400     0611  0800               	movf	0,w
  4401     0612  00A3               	movwf	??_gpio_pin_write_logic+3
  4402     0613  0A84               	incf	4,f
  4403     0614  0800               	movf	0,w
  4404     0615  00A4               	movwf	??_gpio_pin_write_logic+4
  4405     0616  0823               	movf	??_gpio_pin_write_logic+3,w
  4406     0617  0084               	movwf	4
  4407     0618  1783               	bsf	3,7
  4408     0619  1C24               	btfss	??_gpio_pin_write_logic+4,0
  4409     061A  1383               	bcf	3,7
  4410     061B  087F               	movf	btemp+1,w
  4411     061C  0480               	iorwf	0,f
  4412                           
  4413                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 61:                     break;
  4414     061D  2E56               	goto	l4037
  4415     061E                     l4031:
  4416                           
  4417                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 63:                     (*port_registers[pin->port] &= ~(0
      +                          x01 << pin->pin));
  4418     061E  3001               	movlw	1
  4419     061F  00A0               	movwf	??_gpio_pin_write_logic
  4420     0620  0875               	movf	gpio_pin_write_logic@pin,w
  4421     0621  0084               	movwf	4
  4422     0622  0C00               	rrf	0,w
  4423     0623  00A1               	movwf	??_gpio_pin_write_logic+1
  4424     0624  0CA1               	rrf	??_gpio_pin_write_logic+1,f
  4425     0625  0C21               	rrf	??_gpio_pin_write_logic+1,w
  4426     0626  3907               	andlw	7
  4427     0627  3E01               	addlw	1
  4428     0628  2E2B               	goto	u5554
  4429     0629                     u5555:
  4430     0629  1003               	clrc
  4431     062A  0DA0               	rlf	??_gpio_pin_write_logic,f
  4432     062B                     u5554:
  4433     062B  3EFF               	addlw	-1
  4434     062C  1D03               	skipz
  4435     062D  2E29               	goto	u5555
  4436     062E  0820               	movf	??_gpio_pin_write_logic,w
  4437     062F  3AFF               	xorlw	255
  4438     0630  00FF               	movwf	btemp+1
  4439     0631  0875               	movf	gpio_pin_write_logic@pin,w
  4440     0632  0084               	movwf	4
  4441     0633  0800               	movf	0,w
  4442     0634  3907               	andlw	7
  4443     0635  00A2               	movwf	??_gpio_pin_write_logic+2
  4444     0636  0722               	addwf	??_gpio_pin_write_logic+2,w
  4445     0637  3EBB               	addlw	(low (_port_registers| 0))& (0+255)
  4446     0638  0084               	movwf	4
  4447     0639  0800               	movf	0,w
  4448     063A  00A3               	movwf	??_gpio_pin_write_logic+3
  4449     063B  0A84               	incf	4,f
  4450     063C  0800               	movf	0,w
  4451     063D  00A4               	movwf	??_gpio_pin_write_logic+4
  4452     063E  0823               	movf	??_gpio_pin_write_logic+3,w
  4453     063F  0084               	movwf	4
  4454     0640  1783               	bsf	3,7
  4455     0641  1C24               	btfss	??_gpio_pin_write_logic+4,0
  4456     0642  1383               	bcf	3,7
  4457     0643  087F               	movf	btemp+1,w
  4458     0644  0580               	andwf	0,f
  4459                           
  4460                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 64:                     break;
  4461     0645  2E56               	goto	l4037
  4462     0646                     l4035:
  4463     0646  0873               	movf	gpio_pin_write_logic@logic,w
  4464     0647  00A0               	movwf	??_gpio_pin_write_logic
  4465     0648  01A1               	clrf	??_gpio_pin_write_logic+1
  4466                           
  4467                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4468                           ; Switch size 1, requested type "simple"
  4469                           ; Number of cases is 1, Range of values is 0 to 0
  4470                           ; switch strategies available:
  4471                           ; Name         Instructions Cycles
  4472                           ; simple_byte            4     3 (average)
  4473                           ; direct_byte           11     8 (fixed)
  4474                           ; jumptable            260     6 (fixed)
  4475                           ;	Chosen strategy is simple_byte
  4476     0649  0821               	movf	??_gpio_pin_write_logic+1,w
  4477     064A  3A00               	xorlw	0	; case 0
  4478     064B  1903               	skipnz
  4479     064C  2E4E               	goto	l4837
  4480     064D  2E56               	goto	l4037
  4481     064E                     l4837:
  4482                           
  4483                           ; Switch size 1, requested type "simple"
  4484                           ; Number of cases is 2, Range of values is 0 to 1
  4485                           ; switch strategies available:
  4486                           ; Name         Instructions Cycles
  4487                           ; simple_byte            7     4 (average)
  4488                           ; direct_byte           14     8 (fixed)
  4489                           ; jumptable            260     6 (fixed)
  4490                           ;	Chosen strategy is simple_byte
  4491     064E  0820               	movf	??_gpio_pin_write_logic,w
  4492     064F  3A00               	xorlw	0	; case 0
  4493     0650  1903               	skipnz
  4494     0651  2E1E               	goto	l4031
  4495     0652  3A01               	xorlw	1	; case 1
  4496     0653  1903               	skipnz
  4497     0654  2DF7               	goto	l4029
  4498     0655  2E56               	goto	l4037
  4499     0656                     l4037:
  4500                           
  4501                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 70:     return ret;
  4502     0656  0874               	movf	gpio_pin_write_logic@ret,w
  4503     0657                     l318:
  4504     0657  0008               	return
  4505     0658                     __end_of_gpio_pin_write_logic:
  4506                           
  4507                           	psect	text20
  4508     0F22                     __ptext20:	
  4509 ;; *************** function _gpio_pin_direction_initialize *****************
  4510 ;; Defined at:
  4511 ;;		line 12 in file "MCAL_LAYER/GPIO/mcal_gpio.c"
  4512 ;; Parameters:    Size  Location     Type
  4513 ;;  pin             1    wreg     PTR const struct .
  4514 ;;		 -> Enable_INTX@pin_obj(1), lcd$pins(4), lcd(6), motor2$pins(2), 
  4515 ;;		 -> motor2(2), motor1$pins(2), motor1(2), 
  4516 ;; Auto vars:     Size  Location     Type
  4517 ;;  pin             1    1[BANK0 ] PTR const struct .
  4518 ;;		 -> Enable_INTX@pin_obj(1), lcd$pins(4), lcd(6), motor2$pins(2), 
  4519 ;;		 -> motor2(2), motor1$pins(2), motor1(2), 
  4520 ;;  ret             1    0[BANK0 ] unsigned char 
  4521 ;; Return value:  Size  Location     Type
  4522 ;;                  1    wreg      unsigned char 
  4523 ;; Registers used:
  4524 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4525 ;; Tracked objects:
  4526 ;;		On entry : 0/0
  4527 ;;		On exit  : 0/0
  4528 ;;		Unchanged: 0/0
  4529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4530 ;;      Params:         0       0       0       0       0
  4531 ;;      Locals:         0       2       0       0       0
  4532 ;;      Temps:          5       0       0       0       0
  4533 ;;      Totals:         5       2       0       0       0
  4534 ;;Total ram usage:        7 bytes
  4535 ;; Hardware stack levels used: 1
  4536 ;; Hardware stack levels required when called: 2
  4537 ;; This function calls:
  4538 ;;		Nothing
  4539 ;; This function is called by:
  4540 ;;		_gpio_pin_initialize
  4541 ;;		_Enable_INTX
  4542 ;;		_Enable_RBX
  4543 ;; This function uses a non-reentrant model
  4544 ;;
  4545                           
  4546     0F22                     _gpio_pin_direction_initialize:	
  4547                           ;psect for function _gpio_pin_direction_initialize
  4548                           
  4549                           
  4550                           ;incstack = 0
  4551                           ; Regs used in _gpio_pin_direction_initialize: [wreg-fsr0h+status,2+status,0+btemp+1]
  4552                           ;gpio_pin_direction_initialize@pin stored from wreg
  4553     0F22  1283               	bcf	3,5	;RP0=0, select bank0
  4554     0F23  1303               	bcf	3,6	;RP1=0, select bank0
  4555     0F24  00A1               	movwf	gpio_pin_direction_initialize@pin
  4556     0F25                     l4071:
  4557                           
  4558                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 13:     uint8 ret = 0x00;
  4559     0F25  01A0               	clrf	gpio_pin_direction_initialize@ret
  4560     0F26                     l4073:
  4561                           
  4562                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 14:     if (pin == ((void*)0)) {
  4563     0F26  0821               	movf	gpio_pin_direction_initialize@pin,w
  4564     0F27  1D03               	btfss	3,2
  4565     0F28  2F2A               	goto	u5601
  4566     0F29  2F2B               	goto	u5600
  4567     0F2A                     u5601:
  4568     0F2A  2F2C               	goto	l4077
  4569     0F2B                     u5600:
  4570     0F2B                     l4075:
  4571                           
  4572                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 16:     } else {
  4573     0F2B  2FFF               	goto	l278
  4574     0F2C                     l4077:
  4575                           
  4576                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 17:         if ((pin->port == PORTA_INDEX && pin->pin < 6)
      +                           || (pin->port == PORTB_INDEX && pin->pin < 8) || (pin->port == PORTC_INDEX && pin->pin 
      +                          < 8) ||
  4577     0F2C  0821               	movf	gpio_pin_direction_initialize@pin,w
  4578     0F2D  0084               	movwf	4
  4579     0F2E  1383               	bcf	3,7	;select IRP bank0
  4580     0F2F  0800               	movf	0,w
  4581     0F30  3907               	andlw	7
  4582     0F31  3A00               	xorlw	0
  4583     0F32  1D03               	skipz
  4584     0F33  2F35               	goto	u5611
  4585     0F34  2F36               	goto	u5610
  4586     0F35                     u5611:
  4587     0F35  2F44               	goto	l4081
  4588     0F36                     u5610:
  4589     0F36                     l4079:
  4590     0F36  0821               	movf	gpio_pin_direction_initialize@pin,w
  4591     0F37  0084               	movwf	4
  4592     0F38  0C00               	rrf	0,w
  4593     0F39  00F3               	movwf	??_gpio_pin_direction_initialize
  4594     0F3A  0CF3               	rrf	??_gpio_pin_direction_initialize,f
  4595     0F3B  0C73               	rrf	??_gpio_pin_direction_initialize,w
  4596     0F3C  3907               	andlw	7
  4597     0F3D  00F4               	movwf	??_gpio_pin_direction_initialize+1
  4598     0F3E  3006               	movlw	6
  4599     0F3F  0274               	subwf	??_gpio_pin_direction_initialize+1,w
  4600     0F40  1C03               	skipc
  4601     0F41  2F43               	goto	u5621
  4602     0F42  2F44               	goto	u5620
  4603     0F43                     u5621:
  4604     0F43  2FF0               	goto	l4103
  4605     0F44                     u5620:
  4606     0F44                     l4081:
  4607     0F44  0821               	movf	gpio_pin_direction_initialize@pin,w
  4608     0F45  0084               	movwf	4
  4609     0F46  0800               	movf	0,w
  4610     0F47  3907               	andlw	7
  4611     0F48  3A01               	xorlw	1
  4612     0F49  1D03               	skipz
  4613     0F4A  2F4C               	goto	u5631
  4614     0F4B  2F4D               	goto	u5630
  4615     0F4C                     u5631:
  4616     0F4C  2F5B               	goto	l4085
  4617     0F4D                     u5630:
  4618     0F4D                     l4083:
  4619     0F4D  0821               	movf	gpio_pin_direction_initialize@pin,w
  4620     0F4E  0084               	movwf	4
  4621     0F4F  0C00               	rrf	0,w
  4622     0F50  00F3               	movwf	??_gpio_pin_direction_initialize
  4623     0F51  0CF3               	rrf	??_gpio_pin_direction_initialize,f
  4624     0F52  0C73               	rrf	??_gpio_pin_direction_initialize,w
  4625     0F53  3907               	andlw	7
  4626     0F54  00F4               	movwf	??_gpio_pin_direction_initialize+1
  4627     0F55  3008               	movlw	8
  4628     0F56  0274               	subwf	??_gpio_pin_direction_initialize+1,w
  4629     0F57  1C03               	skipc
  4630     0F58  2F5A               	goto	u5641
  4631     0F59  2F5B               	goto	u5640
  4632     0F5A                     u5641:
  4633     0F5A  2FF0               	goto	l4103
  4634     0F5B                     u5640:
  4635     0F5B                     l4085:
  4636     0F5B  0821               	movf	gpio_pin_direction_initialize@pin,w
  4637     0F5C  0084               	movwf	4
  4638     0F5D  0800               	movf	0,w
  4639     0F5E  3907               	andlw	7
  4640     0F5F  3A02               	xorlw	2
  4641     0F60  1D03               	skipz
  4642     0F61  2F63               	goto	u5651
  4643     0F62  2F64               	goto	u5650
  4644     0F63                     u5651:
  4645     0F63  2F72               	goto	l4089
  4646     0F64                     u5650:
  4647     0F64                     l4087:
  4648     0F64  0821               	movf	gpio_pin_direction_initialize@pin,w
  4649     0F65  0084               	movwf	4
  4650     0F66  0C00               	rrf	0,w
  4651     0F67  00F3               	movwf	??_gpio_pin_direction_initialize
  4652     0F68  0CF3               	rrf	??_gpio_pin_direction_initialize,f
  4653     0F69  0C73               	rrf	??_gpio_pin_direction_initialize,w
  4654     0F6A  3907               	andlw	7
  4655     0F6B  00F4               	movwf	??_gpio_pin_direction_initialize+1
  4656     0F6C  3008               	movlw	8
  4657     0F6D  0274               	subwf	??_gpio_pin_direction_initialize+1,w
  4658     0F6E  1C03               	skipc
  4659     0F6F  2F71               	goto	u5661
  4660     0F70  2F72               	goto	u5660
  4661     0F71                     u5661:
  4662     0F71  2FF0               	goto	l4103
  4663     0F72                     u5660:
  4664     0F72                     l4089:
  4665     0F72  0821               	movf	gpio_pin_direction_initialize@pin,w
  4666     0F73  0084               	movwf	4
  4667     0F74  0800               	movf	0,w
  4668     0F75  3907               	andlw	7
  4669     0F76  3A03               	xorlw	3
  4670     0F77  1D03               	skipz
  4671     0F78  2F7A               	goto	u5671
  4672     0F79  2F7B               	goto	u5670
  4673     0F7A                     u5671:
  4674     0F7A  2F89               	goto	l4093
  4675     0F7B                     u5670:
  4676     0F7B                     l4091:
  4677     0F7B  0821               	movf	gpio_pin_direction_initialize@pin,w
  4678     0F7C  0084               	movwf	4
  4679     0F7D  0C00               	rrf	0,w
  4680     0F7E  00F3               	movwf	??_gpio_pin_direction_initialize
  4681     0F7F  0CF3               	rrf	??_gpio_pin_direction_initialize,f
  4682     0F80  0C73               	rrf	??_gpio_pin_direction_initialize,w
  4683     0F81  3907               	andlw	7
  4684     0F82  00F4               	movwf	??_gpio_pin_direction_initialize+1
  4685     0F83  3008               	movlw	8
  4686     0F84  0274               	subwf	??_gpio_pin_direction_initialize+1,w
  4687     0F85  1C03               	skipc
  4688     0F86  2F88               	goto	u5681
  4689     0F87  2F89               	goto	u5680
  4690     0F88                     u5681:
  4691     0F88  2FF0               	goto	l4103
  4692     0F89                     u5680:
  4693     0F89                     l4093:
  4694     0F89  0821               	movf	gpio_pin_direction_initialize@pin,w
  4695     0F8A  0084               	movwf	4
  4696     0F8B  0800               	movf	0,w
  4697     0F8C  3907               	andlw	7
  4698     0F8D  3A04               	xorlw	4
  4699     0F8E  1D03               	skipz
  4700     0F8F  2F91               	goto	u5691
  4701     0F90  2F92               	goto	u5690
  4702     0F91                     u5691:
  4703     0F91  2FFC               	goto	l262
  4704     0F92                     u5690:
  4705     0F92                     l4095:
  4706     0F92  0821               	movf	gpio_pin_direction_initialize@pin,w
  4707     0F93  0084               	movwf	4
  4708     0F94  0C00               	rrf	0,w
  4709     0F95  00F3               	movwf	??_gpio_pin_direction_initialize
  4710     0F96  0CF3               	rrf	??_gpio_pin_direction_initialize,f
  4711     0F97  0C73               	rrf	??_gpio_pin_direction_initialize,w
  4712     0F98  3907               	andlw	7
  4713     0F99  00F4               	movwf	??_gpio_pin_direction_initialize+1
  4714     0F9A  3003               	movlw	3
  4715     0F9B  0274               	subwf	??_gpio_pin_direction_initialize+1,w
  4716     0F9C  1803               	skipnc
  4717     0F9D  2F9F               	goto	u5701
  4718     0F9E  2FA0               	goto	u5700
  4719     0F9F                     u5701:
  4720     0F9F  2FFC               	goto	l262
  4721     0FA0                     u5700:
  4722     0FA0  2FF0               	goto	l4103
  4723     0FA1                     l4097:
  4724                           
  4725                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 21:                     (*tris_registers[pin->port] &= ~(0
      +                          x01 << pin->pin));
  4726     0FA1  3001               	movlw	1
  4727     0FA2  00F3               	movwf	??_gpio_pin_direction_initialize
  4728     0FA3  0821               	movf	gpio_pin_direction_initialize@pin,w
  4729     0FA4  0084               	movwf	4
  4730     0FA5  0C00               	rrf	0,w
  4731     0FA6  00F4               	movwf	??_gpio_pin_direction_initialize+1
  4732     0FA7  0CF4               	rrf	??_gpio_pin_direction_initialize+1,f
  4733     0FA8  0C74               	rrf	??_gpio_pin_direction_initialize+1,w
  4734     0FA9  3907               	andlw	7
  4735     0FAA  3E01               	addlw	1
  4736     0FAB  2FAE               	goto	u5714
  4737     0FAC                     u5715:
  4738     0FAC  1003               	clrc
  4739     0FAD  0DF3               	rlf	??_gpio_pin_direction_initialize,f
  4740     0FAE                     u5714:
  4741     0FAE  3EFF               	addlw	-1
  4742     0FAF  1D03               	skipz
  4743     0FB0  2FAC               	goto	u5715
  4744     0FB1  0873               	movf	??_gpio_pin_direction_initialize,w
  4745     0FB2  3AFF               	xorlw	255
  4746     0FB3  00FF               	movwf	btemp+1
  4747     0FB4  0821               	movf	gpio_pin_direction_initialize@pin,w
  4748     0FB5  0084               	movwf	4
  4749     0FB6  0800               	movf	0,w
  4750     0FB7  3907               	andlw	7
  4751     0FB8  00F5               	movwf	??_gpio_pin_direction_initialize+2
  4752     0FB9  0775               	addwf	??_gpio_pin_direction_initialize+2,w
  4753     0FBA  3EC5               	addlw	(low (_tris_registers| 0))& (0+255)
  4754     0FBB  0084               	movwf	4
  4755     0FBC  0800               	movf	0,w
  4756     0FBD  00F6               	movwf	??_gpio_pin_direction_initialize+3
  4757     0FBE  0A84               	incf	4,f
  4758     0FBF  0800               	movf	0,w
  4759     0FC0  00F7               	movwf	??_gpio_pin_direction_initialize+4
  4760     0FC1  0876               	movf	??_gpio_pin_direction_initialize+3,w
  4761     0FC2  0084               	movwf	4
  4762     0FC3  1783               	bsf	3,7
  4763     0FC4  1C77               	btfss	??_gpio_pin_direction_initialize+4,0
  4764     0FC5  1383               	bcf	3,7
  4765     0FC6  087F               	movf	btemp+1,w
  4766     0FC7  0580               	andwf	0,f
  4767                           
  4768                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 22:                     break;
  4769     0FC8  2FFE               	goto	l4105
  4770     0FC9                     l4099:
  4771                           
  4772                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 24:                     (*tris_registers[pin->port] |= (0x
      +                          01 << pin->pin));
  4773     0FC9  3001               	movlw	1
  4774     0FCA  00F3               	movwf	??_gpio_pin_direction_initialize
  4775     0FCB  0821               	movf	gpio_pin_direction_initialize@pin,w
  4776     0FCC  0084               	movwf	4
  4777     0FCD  0C00               	rrf	0,w
  4778     0FCE  00F4               	movwf	??_gpio_pin_direction_initialize+1
  4779     0FCF  0CF4               	rrf	??_gpio_pin_direction_initialize+1,f
  4780     0FD0  0C74               	rrf	??_gpio_pin_direction_initialize+1,w
  4781     0FD1  3907               	andlw	7
  4782     0FD2  3E01               	addlw	1
  4783     0FD3  2FD6               	goto	u5724
  4784     0FD4                     u5725:
  4785     0FD4  1003               	clrc
  4786     0FD5  0DF3               	rlf	??_gpio_pin_direction_initialize,f
  4787     0FD6                     u5724:
  4788     0FD6  3EFF               	addlw	-1
  4789     0FD7  1D03               	skipz
  4790     0FD8  2FD4               	goto	u5725
  4791     0FD9  0873               	movf	??_gpio_pin_direction_initialize,w
  4792     0FDA  00FF               	movwf	btemp+1
  4793     0FDB  0821               	movf	gpio_pin_direction_initialize@pin,w
  4794     0FDC  0084               	movwf	4
  4795     0FDD  0800               	movf	0,w
  4796     0FDE  3907               	andlw	7
  4797     0FDF  00F5               	movwf	??_gpio_pin_direction_initialize+2
  4798     0FE0  0775               	addwf	??_gpio_pin_direction_initialize+2,w
  4799     0FE1  3EC5               	addlw	(low (_tris_registers| 0))& (0+255)
  4800     0FE2  0084               	movwf	4
  4801     0FE3  0800               	movf	0,w
  4802     0FE4  00F6               	movwf	??_gpio_pin_direction_initialize+3
  4803     0FE5  0A84               	incf	4,f
  4804     0FE6  0800               	movf	0,w
  4805     0FE7  00F7               	movwf	??_gpio_pin_direction_initialize+4
  4806     0FE8  0876               	movf	??_gpio_pin_direction_initialize+3,w
  4807     0FE9  0084               	movwf	4
  4808     0FEA  1783               	bsf	3,7
  4809     0FEB  1C77               	btfss	??_gpio_pin_direction_initialize+4,0
  4810     0FEC  1383               	bcf	3,7
  4811     0FED  087F               	movf	btemp+1,w
  4812     0FEE  0480               	iorwf	0,f
  4813                           
  4814                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 25:                     break;
  4815     0FEF  2FFE               	goto	l4105
  4816     0FF0                     l4103:
  4817     0FF0  0821               	movf	gpio_pin_direction_initialize@pin,w
  4818     0FF1  0084               	movwf	4
  4819     0FF2  0D00               	rlf	0,w
  4820     0FF3  0D00               	rlf	0,w
  4821     0FF4  3901               	andlw	1
  4822                           
  4823                           ; Switch size 1, requested type "simple"
  4824                           ; Number of cases is 2, Range of values is 0 to 1
  4825                           ; switch strategies available:
  4826                           ; Name         Instructions Cycles
  4827                           ; simple_byte            7     4 (average)
  4828                           ; direct_byte           14     8 (fixed)
  4829                           ; jumptable            260     6 (fixed)
  4830                           ;	Chosen strategy is simple_byte
  4831     0FF5  3A00               	xorlw	0	; case 0
  4832     0FF6  1903               	skipnz
  4833     0FF7  2FA1               	goto	l4097
  4834     0FF8  3A01               	xorlw	1	; case 1
  4835     0FF9  1903               	skipnz
  4836     0FFA  2FC9               	goto	l4099
  4837     0FFB  2FFE               	goto	l4105
  4838     0FFC                     l262:
  4839                           
  4840                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 28:             ret = 0x01;
  4841     0FFC  01A0               	clrf	gpio_pin_direction_initialize@ret
  4842     0FFD  0AA0               	incf	gpio_pin_direction_initialize@ret,f
  4843     0FFE                     l4105:
  4844                           
  4845                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 30:         return ret;
  4846     0FFE  0820               	movf	gpio_pin_direction_initialize@ret,w
  4847     0FFF                     l278:
  4848     0FFF  0008               	return
  4849     1000                     __end_of_gpio_pin_direction_initialize:
  4850                           
  4851                           	psect	text21
  4852     0740                     __ptext21:	
  4853 ;; *************** function ___xxtofl *****************
  4854 ;; Defined at:
  4855 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
  4856 ;; Parameters:    Size  Location     Type
  4857 ;;  sign            1    wreg     unsigned char 
  4858 ;;  val             4    3[COMMON] long 
  4859 ;; Auto vars:     Size  Location     Type
  4860 ;;  sign            1    4[BANK0 ] unsigned char 
  4861 ;;  arg             4    6[BANK0 ] unsigned long 
  4862 ;;  exp             1    5[BANK0 ] unsigned char 
  4863 ;; Return value:  Size  Location     Type
  4864 ;;                  4    3[COMMON] unsigned char 
  4865 ;; Registers used:
  4866 ;;		wreg, status,2, status,0, btemp+1
  4867 ;; Tracked objects:
  4868 ;;		On entry : 0/0
  4869 ;;		On exit  : 0/0
  4870 ;;		Unchanged: 0/0
  4871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4872 ;;      Params:         4       0       0       0       0
  4873 ;;      Locals:         0       6       0       0       0
  4874 ;;      Temps:          0       4       0       0       0
  4875 ;;      Totals:         4      10       0       0       0
  4876 ;;Total ram usage:       14 bytes
  4877 ;; Hardware stack levels used: 1
  4878 ;; Hardware stack levels required when called: 2
  4879 ;; This function calls:
  4880 ;;		Nothing
  4881 ;; This function is called by:
  4882 ;;		_main
  4883 ;; This function uses a non-reentrant model
  4884 ;;
  4885                           
  4886     0740                     ___xxtofl:	
  4887                           ;psect for function ___xxtofl
  4888                           
  4889                           
  4890                           ;incstack = 0
  4891                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  4892                           ;___xxtofl@sign stored from wreg
  4893     0740  1283               	bcf	3,5	;RP0=0, select bank0
  4894     0741  1303               	bcf	3,6	;RP1=0, select bank0
  4895     0742  00A4               	movwf	___xxtofl@sign
  4896     0743                     l4615:
  4897     0743  0824               	movf	___xxtofl@sign,w
  4898     0744  1903               	btfsc	3,2
  4899     0745  2F47               	goto	u6531
  4900     0746  2F48               	goto	u6530
  4901     0747                     u6531:
  4902     0747  2F5C               	goto	l4621
  4903     0748                     u6530:
  4904     0748                     l4617:
  4905     0748  1FF6               	btfss	___xxtofl@val+3,7
  4906     0749  2F4B               	goto	u6541
  4907     074A  2F4C               	goto	u6540
  4908     074B                     u6541:
  4909     074B  2F5C               	goto	l4621
  4910     074C                     u6540:
  4911     074C                     l4619:
  4912     074C  0973               	comf	___xxtofl@val,w
  4913     074D  00A6               	movwf	___xxtofl@arg
  4914     074E  0974               	comf	___xxtofl@val+1,w
  4915     074F  00A7               	movwf	___xxtofl@arg+1
  4916     0750  0975               	comf	___xxtofl@val+2,w
  4917     0751  00A8               	movwf	___xxtofl@arg+2
  4918     0752  0976               	comf	___xxtofl@val+3,w
  4919     0753  00A9               	movwf	___xxtofl@arg+3
  4920     0754  0AA6               	incf	___xxtofl@arg,f
  4921     0755  1903               	skipnz
  4922     0756  0AA7               	incf	___xxtofl@arg+1,f
  4923     0757  1903               	skipnz
  4924     0758  0AA8               	incf	___xxtofl@arg+2,f
  4925     0759  1903               	skipnz
  4926     075A  0AA9               	incf	___xxtofl@arg+3,f
  4927     075B  2F64               	goto	l1141
  4928     075C                     l4621:
  4929     075C  0876               	movf	___xxtofl@val+3,w
  4930     075D  00A9               	movwf	___xxtofl@arg+3
  4931     075E  0875               	movf	___xxtofl@val+2,w
  4932     075F  00A8               	movwf	___xxtofl@arg+2
  4933     0760  0874               	movf	___xxtofl@val+1,w
  4934     0761  00A7               	movwf	___xxtofl@arg+1
  4935     0762  0873               	movf	___xxtofl@val,w
  4936     0763  00A6               	movwf	___xxtofl@arg
  4937     0764                     l1141:
  4938     0764  0876               	movf	___xxtofl@val+3,w
  4939     0765  0475               	iorwf	___xxtofl@val+2,w
  4940     0766  0474               	iorwf	___xxtofl@val+1,w
  4941     0767  0473               	iorwf	___xxtofl@val,w
  4942     0768  1D03               	skipz
  4943     0769  2F6B               	goto	u6551
  4944     076A  2F6C               	goto	u6550
  4945     076B                     u6551:
  4946     076B  2F75               	goto	l4627
  4947     076C                     u6550:
  4948     076C                     l4623:
  4949     076C  3000               	movlw	0
  4950     076D  00F6               	movwf	?___xxtofl+3
  4951     076E  3000               	movlw	0
  4952     076F  00F5               	movwf	?___xxtofl+2
  4953     0770  3000               	movlw	0
  4954     0771  00F4               	movwf	?___xxtofl+1
  4955     0772  3000               	movlw	0
  4956     0773  00F3               	movwf	?___xxtofl
  4957     0774  2FF9               	goto	l1143
  4958     0775                     l4627:
  4959     0775  3096               	movlw	150
  4960     0776  00A5               	movwf	___xxtofl@exp
  4961     0777  2F85               	goto	l4633
  4962     0778                     l4629:
  4963     0778  3001               	movlw	1
  4964     0779  00FF               	movwf	btemp+1
  4965     077A  087F               	movf	btemp+1,w
  4966     077B  07A5               	addwf	___xxtofl@exp,f
  4967     077C                     l4631:
  4968     077C  3001               	movlw	1
  4969     077D                     u6565:
  4970     077D  1003               	clrc
  4971     077E  0CA9               	rrf	___xxtofl@arg+3,f
  4972     077F  0CA8               	rrf	___xxtofl@arg+2,f
  4973     0780  0CA7               	rrf	___xxtofl@arg+1,f
  4974     0781  0CA6               	rrf	___xxtofl@arg,f
  4975     0782  3EFF               	addlw	-1
  4976     0783  1D03               	skipz
  4977     0784  2F7D               	goto	u6565
  4978     0785                     l4633:
  4979     0785  30FE               	movlw	254
  4980     0786  0529               	andwf	___xxtofl@arg+3,w
  4981     0787  1D03               	btfss	3,2
  4982     0788  2F8A               	goto	u6571
  4983     0789  2F8B               	goto	u6570
  4984     078A                     u6571:
  4985     078A  2F78               	goto	l4629
  4986     078B                     u6570:
  4987     078B  2FA7               	goto	l4641
  4988     078C                     l4635:
  4989     078C  3001               	movlw	1
  4990     078D  00FF               	movwf	btemp+1
  4991     078E  087F               	movf	btemp+1,w
  4992     078F  07A5               	addwf	___xxtofl@exp,f
  4993     0790                     l4637:
  4994     0790  3001               	movlw	1
  4995     0791  07A6               	addwf	___xxtofl@arg,f
  4996     0792  3000               	movlw	0
  4997     0793  1803               	skipnc
  4998     0794  3001               	movlw	1
  4999     0795  07A7               	addwf	___xxtofl@arg+1,f
  5000     0796  3000               	movlw	0
  5001     0797  1803               	skipnc
  5002     0798  3001               	movlw	1
  5003     0799  07A8               	addwf	___xxtofl@arg+2,f
  5004     079A  3000               	movlw	0
  5005     079B  1803               	skipnc
  5006     079C  3001               	movlw	1
  5007     079D  07A9               	addwf	___xxtofl@arg+3,f
  5008     079E                     l4639:
  5009     079E  3001               	movlw	1
  5010     079F                     u6585:
  5011     079F  1003               	clrc
  5012     07A0  0CA9               	rrf	___xxtofl@arg+3,f
  5013     07A1  0CA8               	rrf	___xxtofl@arg+2,f
  5014     07A2  0CA7               	rrf	___xxtofl@arg+1,f
  5015     07A3  0CA6               	rrf	___xxtofl@arg,f
  5016     07A4  3EFF               	addlw	-1
  5017     07A5  1D03               	skipz
  5018     07A6  2F9F               	goto	u6585
  5019     07A7                     l4641:
  5020     07A7  30FF               	movlw	255
  5021     07A8  0529               	andwf	___xxtofl@arg+3,w
  5022     07A9  1D03               	btfss	3,2
  5023     07AA  2FAC               	goto	u6591
  5024     07AB  2FAD               	goto	u6590
  5025     07AC                     u6591:
  5026     07AC  2F8C               	goto	l4635
  5027     07AD                     u6590:
  5028     07AD  2FB9               	goto	l4645
  5029     07AE                     l4643:
  5030     07AE  3001               	movlw	1
  5031     07AF  02A5               	subwf	___xxtofl@exp,f
  5032     07B0  3001               	movlw	1
  5033     07B1  00A0               	movwf	??___xxtofl
  5034     07B2                     u6605:
  5035     07B2  1003               	clrc
  5036     07B3  0DA6               	rlf	___xxtofl@arg,f
  5037     07B4  0DA7               	rlf	___xxtofl@arg+1,f
  5038     07B5  0DA8               	rlf	___xxtofl@arg+2,f
  5039     07B6  0DA9               	rlf	___xxtofl@arg+3,f
  5040     07B7  0BA0               	decfsz	??___xxtofl,f
  5041     07B8  2FB2               	goto	u6605
  5042     07B9                     l4645:
  5043     07B9  1BA8               	btfsc	___xxtofl@arg+2,7
  5044     07BA  2FBC               	goto	u6611
  5045     07BB  2FBD               	goto	u6610
  5046     07BC                     u6611:
  5047     07BC  2FC3               	goto	l1154
  5048     07BD                     u6610:
  5049     07BD                     l4647:
  5050     07BD  3002               	movlw	2
  5051     07BE  0225               	subwf	___xxtofl@exp,w
  5052     07BF  1803               	skipnc
  5053     07C0  2FC2               	goto	u6621
  5054     07C1  2FC3               	goto	u6620
  5055     07C2                     u6621:
  5056     07C2  2FAE               	goto	l4643
  5057     07C3                     u6620:
  5058     07C3                     l1154:
  5059     07C3  1825               	btfsc	___xxtofl@exp,0
  5060     07C4  2FC6               	goto	u6631
  5061     07C5  2FC7               	goto	u6630
  5062     07C6                     u6631:
  5063     07C6  2FCF               	goto	l1155
  5064     07C7                     u6630:
  5065     07C7                     l4649:
  5066     07C7  30FF               	movlw	255
  5067     07C8  05A6               	andwf	___xxtofl@arg,f
  5068     07C9  30FF               	movlw	255
  5069     07CA  05A7               	andwf	___xxtofl@arg+1,f
  5070     07CB  307F               	movlw	127
  5071     07CC  05A8               	andwf	___xxtofl@arg+2,f
  5072     07CD  30FF               	movlw	255
  5073     07CE  05A9               	andwf	___xxtofl@arg+3,f
  5074     07CF                     l1155:
  5075     07CF  1003               	clrc
  5076     07D0  0CA5               	rrf	___xxtofl@exp,f
  5077     07D1                     l4651:
  5078     07D1  0825               	movf	___xxtofl@exp,w
  5079     07D2  00A0               	movwf	??___xxtofl
  5080     07D3  01A1               	clrf	??___xxtofl+1
  5081     07D4  01A2               	clrf	??___xxtofl+2
  5082     07D5  01A3               	clrf	??___xxtofl+3
  5083     07D6  3018               	movlw	24
  5084     07D7                     u6645:
  5085     07D7  1003               	clrc
  5086     07D8  0DA0               	rlf	??___xxtofl,f
  5087     07D9  0DA1               	rlf	??___xxtofl+1,f
  5088     07DA  0DA2               	rlf	??___xxtofl+2,f
  5089     07DB  0DA3               	rlf	??___xxtofl+3,f
  5090     07DC                     u6640:
  5091     07DC  3EFF               	addlw	-1
  5092     07DD  1D03               	skipz
  5093     07DE  2FD7               	goto	u6645
  5094     07DF  0820               	movf	??___xxtofl,w
  5095     07E0  04A6               	iorwf	___xxtofl@arg,f
  5096     07E1  0821               	movf	??___xxtofl+1,w
  5097     07E2  04A7               	iorwf	___xxtofl@arg+1,f
  5098     07E3  0822               	movf	??___xxtofl+2,w
  5099     07E4  04A8               	iorwf	___xxtofl@arg+2,f
  5100     07E5  0823               	movf	??___xxtofl+3,w
  5101     07E6  04A9               	iorwf	___xxtofl@arg+3,f
  5102     07E7                     l4653:
  5103     07E7  0824               	movf	___xxtofl@sign,w
  5104     07E8  1903               	btfsc	3,2
  5105     07E9  2FEB               	goto	u6651
  5106     07EA  2FEC               	goto	u6650
  5107     07EB                     u6651:
  5108     07EB  2FF1               	goto	l4659
  5109     07EC                     u6650:
  5110     07EC                     l4655:
  5111     07EC  1FF6               	btfss	___xxtofl@val+3,7
  5112     07ED  2FEF               	goto	u6661
  5113     07EE  2FF0               	goto	u6660
  5114     07EF                     u6661:
  5115     07EF  2FF1               	goto	l4659
  5116     07F0                     u6660:
  5117     07F0                     l4657:
  5118     07F0  17A9               	bsf	___xxtofl@arg+3,7
  5119     07F1                     l4659:
  5120     07F1  0829               	movf	___xxtofl@arg+3,w
  5121     07F2  00F6               	movwf	?___xxtofl+3
  5122     07F3  0828               	movf	___xxtofl@arg+2,w
  5123     07F4  00F5               	movwf	?___xxtofl+2
  5124     07F5  0827               	movf	___xxtofl@arg+1,w
  5125     07F6  00F4               	movwf	?___xxtofl+1
  5126     07F7  0826               	movf	___xxtofl@arg,w
  5127     07F8  00F3               	movwf	?___xxtofl
  5128     07F9                     l1143:
  5129     07F9  0008               	return
  5130     07FA                     __end_of___xxtofl:
  5131                           
  5132                           	psect	text22
  5133     0AC4                     __ptext22:	
  5134 ;; *************** function ___lwdiv *****************
  5135 ;; Defined at:
  5136 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  5137 ;; Parameters:    Size  Location     Type
  5138 ;;  divisor         2    3[COMMON] unsigned int 
  5139 ;;  dividend        2    5[COMMON] unsigned int 
  5140 ;; Auto vars:     Size  Location     Type
  5141 ;;  quotient        2    1[BANK0 ] unsigned int 
  5142 ;;  counter         1    0[BANK0 ] unsigned char 
  5143 ;; Return value:  Size  Location     Type
  5144 ;;                  2    3[COMMON] unsigned int 
  5145 ;; Registers used:
  5146 ;;		wreg, status,2, status,0, btemp+1
  5147 ;; Tracked objects:
  5148 ;;		On entry : 0/0
  5149 ;;		On exit  : 0/0
  5150 ;;		Unchanged: 0/0
  5151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5152 ;;      Params:         4       0       0       0       0
  5153 ;;      Locals:         0       3       0       0       0
  5154 ;;      Temps:          0       0       0       0       0
  5155 ;;      Totals:         4       3       0       0       0
  5156 ;;Total ram usage:        7 bytes
  5157 ;; Hardware stack levels used: 1
  5158 ;; Hardware stack levels required when called: 2
  5159 ;; This function calls:
  5160 ;;		Nothing
  5161 ;; This function is called by:
  5162 ;;		_main
  5163 ;; This function uses a non-reentrant model
  5164 ;;
  5165                           
  5166     0AC4                     ___lwdiv:	
  5167                           ;psect for function ___lwdiv
  5168                           
  5169     0AC4                     l4589:	
  5170                           ;incstack = 0
  5171                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  5172                           
  5173     0AC4  1283               	bcf	3,5	;RP0=0, select bank0
  5174     0AC5  1303               	bcf	3,6	;RP1=0, select bank0
  5175     0AC6  01A1               	clrf	___lwdiv@quotient
  5176     0AC7  01A2               	clrf	___lwdiv@quotient+1
  5177     0AC8                     l4591:
  5178     0AC8  0873               	movf	___lwdiv@divisor,w
  5179     0AC9  0474               	iorwf	___lwdiv@divisor+1,w
  5180     0ACA  1903               	btfsc	3,2
  5181     0ACB  2ACD               	goto	u6461
  5182     0ACC  2ACE               	goto	u6460
  5183     0ACD                     u6461:
  5184     0ACD  2B05               	goto	l4611
  5185     0ACE                     u6460:
  5186     0ACE                     l4593:
  5187     0ACE  01A0               	clrf	___lwdiv@counter
  5188     0ACF  0AA0               	incf	___lwdiv@counter,f
  5189     0AD0  2ADC               	goto	l4599
  5190     0AD1                     l4595:
  5191     0AD1  3001               	movlw	1
  5192     0AD2                     u6475:
  5193     0AD2  1003               	clrc
  5194     0AD3  0DF3               	rlf	___lwdiv@divisor,f
  5195     0AD4  0DF4               	rlf	___lwdiv@divisor+1,f
  5196     0AD5  3EFF               	addlw	-1
  5197     0AD6  1D03               	skipz
  5198     0AD7  2AD2               	goto	u6475
  5199     0AD8                     l4597:
  5200     0AD8  3001               	movlw	1
  5201     0AD9  00FF               	movwf	btemp+1
  5202     0ADA  087F               	movf	btemp+1,w
  5203     0ADB  07A0               	addwf	___lwdiv@counter,f
  5204     0ADC                     l4599:
  5205     0ADC  1FF4               	btfss	___lwdiv@divisor+1,7
  5206     0ADD  2ADF               	goto	u6481
  5207     0ADE  2AE0               	goto	u6480
  5208     0ADF                     u6481:
  5209     0ADF  2AD1               	goto	l4595
  5210     0AE0                     u6480:
  5211     0AE0                     l4601:
  5212     0AE0  3001               	movlw	1
  5213     0AE1                     u6495:
  5214     0AE1  1003               	clrc
  5215     0AE2  0DA1               	rlf	___lwdiv@quotient,f
  5216     0AE3  0DA2               	rlf	___lwdiv@quotient+1,f
  5217     0AE4  3EFF               	addlw	-1
  5218     0AE5  1D03               	skipz
  5219     0AE6  2AE1               	goto	u6495
  5220     0AE7  0874               	movf	___lwdiv@divisor+1,w
  5221     0AE8  0276               	subwf	___lwdiv@dividend+1,w
  5222     0AE9  1D03               	skipz
  5223     0AEA  2AED               	goto	u6505
  5224     0AEB  0873               	movf	___lwdiv@divisor,w
  5225     0AEC  0275               	subwf	___lwdiv@dividend,w
  5226     0AED                     u6505:
  5227     0AED  1C03               	skipc
  5228     0AEE  2AF0               	goto	u6501
  5229     0AEF  2AF1               	goto	u6500
  5230     0AF0                     u6501:
  5231     0AF0  2AF8               	goto	l4607
  5232     0AF1                     u6500:
  5233     0AF1                     l4603:
  5234     0AF1  0873               	movf	___lwdiv@divisor,w
  5235     0AF2  02F5               	subwf	___lwdiv@dividend,f
  5236     0AF3  0874               	movf	___lwdiv@divisor+1,w
  5237     0AF4  1C03               	skipc
  5238     0AF5  03F6               	decf	___lwdiv@dividend+1,f
  5239     0AF6  02F6               	subwf	___lwdiv@dividend+1,f
  5240     0AF7                     l4605:
  5241     0AF7  1421               	bsf	___lwdiv@quotient,0
  5242     0AF8                     l4607:
  5243     0AF8  3001               	movlw	1
  5244     0AF9                     u6515:
  5245     0AF9  1003               	clrc
  5246     0AFA  0CF4               	rrf	___lwdiv@divisor+1,f
  5247     0AFB  0CF3               	rrf	___lwdiv@divisor,f
  5248     0AFC  3EFF               	addlw	-1
  5249     0AFD  1D03               	skipz
  5250     0AFE  2AF9               	goto	u6515
  5251     0AFF                     l4609:
  5252     0AFF  3001               	movlw	1
  5253     0B00  02A0               	subwf	___lwdiv@counter,f
  5254     0B01  1D03               	btfss	3,2
  5255     0B02  2B04               	goto	u6521
  5256     0B03  2B05               	goto	u6520
  5257     0B04                     u6521:
  5258     0B04  2AE0               	goto	l4601
  5259     0B05                     u6520:
  5260     0B05                     l4611:
  5261     0B05  0822               	movf	___lwdiv@quotient+1,w
  5262     0B06  00F4               	movwf	?___lwdiv+1
  5263     0B07  0821               	movf	___lwdiv@quotient,w
  5264     0B08  00F3               	movwf	?___lwdiv
  5265     0B09                     l980:
  5266     0B09  0008               	return
  5267     0B0A                     __end_of___lwdiv:
  5268                           
  5269                           	psect	text23
  5270     0D5B                     __ptext23:	
  5271 ;; *************** function ___fltol *****************
  5272 ;; Defined at:
  5273 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  5274 ;; Parameters:    Size  Location     Type
  5275 ;;  f1              4   36[BANK0 ] unsigned int 
  5276 ;; Auto vars:     Size  Location     Type
  5277 ;;  exp1            1   45[BANK0 ] unsigned char 
  5278 ;;  sign1           1   44[BANK0 ] unsigned char 
  5279 ;; Return value:  Size  Location     Type
  5280 ;;                  4   36[BANK0 ] long 
  5281 ;; Registers used:
  5282 ;;		wreg, status,2, status,0, btemp+1
  5283 ;; Tracked objects:
  5284 ;;		On entry : 0/0
  5285 ;;		On exit  : 0/0
  5286 ;;		Unchanged: 0/0
  5287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5288 ;;      Params:         0       4       0       0       0
  5289 ;;      Locals:         0       2       0       0       0
  5290 ;;      Temps:          0       4       0       0       0
  5291 ;;      Totals:         0      10       0       0       0
  5292 ;;Total ram usage:       10 bytes
  5293 ;; Hardware stack levels used: 1
  5294 ;; Hardware stack levels required when called: 2
  5295 ;; This function calls:
  5296 ;;		Nothing
  5297 ;; This function is called by:
  5298 ;;		_main
  5299 ;; This function uses a non-reentrant model
  5300 ;;
  5301                           
  5302     0D5B                     ___fltol:	
  5303                           ;psect for function ___fltol
  5304                           
  5305     0D5B                     l3309:	
  5306                           ;incstack = 0
  5307                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  5308                           
  5309     0D5B  1003               	clrc
  5310     0D5C  1283               	bcf	3,5	;RP0=0, select bank0
  5311     0D5D  1303               	bcf	3,6	;RP1=0, select bank0
  5312     0D5E  0D46               	rlf	___fltol@f1+2,w
  5313     0D5F  0D47               	rlf	___fltol@f1+3,w
  5314     0D60  00CD               	movwf	___fltol@exp1
  5315     0D61  084D               	movf	___fltol@exp1,w
  5316     0D62  1D03               	btfss	3,2
  5317     0D63  2D65               	goto	u3851
  5318     0D64  2D66               	goto	u3850
  5319     0D65                     u3851:
  5320     0D65  2D6F               	goto	l3315
  5321     0D66                     u3850:
  5322     0D66                     l3311:
  5323     0D66  3000               	movlw	0
  5324     0D67  00C7               	movwf	?___fltol+3
  5325     0D68  3000               	movlw	0
  5326     0D69  00C6               	movwf	?___fltol+2
  5327     0D6A  3000               	movlw	0
  5328     0D6B  00C5               	movwf	?___fltol+1
  5329     0D6C  3000               	movlw	0
  5330     0D6D  00C4               	movwf	?___fltol
  5331     0D6E  2DD2               	goto	l894
  5332     0D6F                     l3315:
  5333     0D6F  0844               	movf	___fltol@f1,w
  5334     0D70  00C8               	movwf	??___fltol
  5335     0D71  0845               	movf	___fltol@f1+1,w
  5336     0D72  00C9               	movwf	??___fltol+1
  5337     0D73  0846               	movf	___fltol@f1+2,w
  5338     0D74  00CA               	movwf	??___fltol+2
  5339     0D75  0847               	movf	___fltol@f1+3,w
  5340     0D76  00CB               	movwf	??___fltol+3
  5341     0D77  301F               	movlw	31
  5342     0D78                     u3865:
  5343     0D78  1003               	clrc
  5344     0D79  0CCB               	rrf	??___fltol+3,f
  5345     0D7A  0CCA               	rrf	??___fltol+2,f
  5346     0D7B  0CC9               	rrf	??___fltol+1,f
  5347     0D7C  0CC8               	rrf	??___fltol,f
  5348     0D7D                     u3860:
  5349     0D7D  3EFF               	addlw	-1
  5350     0D7E  1D03               	skipz
  5351     0D7F  2D78               	goto	u3865
  5352     0D80  0848               	movf	??___fltol,w
  5353     0D81  00CC               	movwf	___fltol@sign1
  5354     0D82                     l3317:
  5355     0D82  17C6               	bsf	___fltol@f1+2,7
  5356     0D83                     l3319:
  5357     0D83  30FF               	movlw	255
  5358     0D84  05C4               	andwf	___fltol@f1,f
  5359     0D85  30FF               	movlw	255
  5360     0D86  05C5               	andwf	___fltol@f1+1,f
  5361     0D87  30FF               	movlw	255
  5362     0D88  05C6               	andwf	___fltol@f1+2,f
  5363     0D89  3000               	movlw	0
  5364     0D8A  05C7               	andwf	___fltol@f1+3,f
  5365     0D8B                     l3321:
  5366     0D8B  3096               	movlw	150
  5367     0D8C  02CD               	subwf	___fltol@exp1,f
  5368     0D8D                     l3323:
  5369     0D8D  1FCD               	btfss	___fltol@exp1,7
  5370     0D8E  2D90               	goto	u3871
  5371     0D8F  2D91               	goto	u3870
  5372     0D90                     u3871:
  5373     0D90  2DAB               	goto	l3335
  5374     0D91                     u3870:
  5375     0D91                     l3325:
  5376     0D91  084D               	movf	___fltol@exp1,w
  5377     0D92  3A80               	xorlw	128
  5378     0D93  3E97               	addlw	151
  5379     0D94  1803               	skipnc
  5380     0D95  2D97               	goto	u3881
  5381     0D96  2D98               	goto	u3880
  5382     0D97                     u3881:
  5383     0D97  2D99               	goto	l3331
  5384     0D98                     u3880:
  5385     0D98  2D66               	goto	l3311
  5386     0D99                     l3331:
  5387     0D99  3001               	movlw	1
  5388     0D9A                     u3895:
  5389     0D9A  1003               	clrc
  5390     0D9B  0CC7               	rrf	___fltol@f1+3,f
  5391     0D9C  0CC6               	rrf	___fltol@f1+2,f
  5392     0D9D  0CC5               	rrf	___fltol@f1+1,f
  5393     0D9E  0CC4               	rrf	___fltol@f1,f
  5394     0D9F  3EFF               	addlw	-1
  5395     0DA0  1D03               	skipz
  5396     0DA1  2D9A               	goto	u3895
  5397     0DA2                     l3333:
  5398     0DA2  3001               	movlw	1
  5399     0DA3  00FF               	movwf	btemp+1
  5400     0DA4  087F               	movf	btemp+1,w
  5401     0DA5  07CD               	addwf	___fltol@exp1,f
  5402     0DA6  1D03               	btfss	3,2
  5403     0DA7  2DA9               	goto	u3901
  5404     0DA8  2DAA               	goto	u3900
  5405     0DA9                     u3901:
  5406     0DA9  2D99               	goto	l3331
  5407     0DAA                     u3900:
  5408     0DAA  2DC2               	goto	l3343
  5409     0DAB                     l3335:
  5410     0DAB  3020               	movlw	32
  5411     0DAC  024D               	subwf	___fltol@exp1,w
  5412     0DAD  1C03               	skipc
  5413     0DAE  2DB0               	goto	u3911
  5414     0DAF  2DB1               	goto	u3910
  5415     0DB0                     u3911:
  5416     0DB0  2DBD               	goto	l901
  5417     0DB1                     u3910:
  5418     0DB1  2D66               	goto	l3311
  5419     0DB2                     l3341:
  5420     0DB2  3001               	movlw	1
  5421     0DB3  00C8               	movwf	??___fltol
  5422     0DB4                     u3925:
  5423     0DB4  1003               	clrc
  5424     0DB5  0DC4               	rlf	___fltol@f1,f
  5425     0DB6  0DC5               	rlf	___fltol@f1+1,f
  5426     0DB7  0DC6               	rlf	___fltol@f1+2,f
  5427     0DB8  0DC7               	rlf	___fltol@f1+3,f
  5428     0DB9  0BC8               	decfsz	??___fltol,f
  5429     0DBA  2DB4               	goto	u3925
  5430     0DBB  3001               	movlw	1
  5431     0DBC  02CD               	subwf	___fltol@exp1,f
  5432     0DBD                     l901:
  5433     0DBD  084D               	movf	___fltol@exp1,w
  5434     0DBE  1D03               	btfss	3,2
  5435     0DBF  2DC1               	goto	u3931
  5436     0DC0  2DC2               	goto	u3930
  5437     0DC1                     u3931:
  5438     0DC1  2DB2               	goto	l3341
  5439     0DC2                     u3930:
  5440     0DC2                     l3343:
  5441     0DC2  084C               	movf	___fltol@sign1,w
  5442     0DC3  1903               	btfsc	3,2
  5443     0DC4  2DC6               	goto	u3941
  5444     0DC5  2DC7               	goto	u3940
  5445     0DC6                     u3941:
  5446     0DC6  2DD2               	goto	l904
  5447     0DC7                     u3940:
  5448     0DC7                     l3345:
  5449     0DC7  09C4               	comf	___fltol@f1,f
  5450     0DC8  09C5               	comf	___fltol@f1+1,f
  5451     0DC9  09C6               	comf	___fltol@f1+2,f
  5452     0DCA  09C7               	comf	___fltol@f1+3,f
  5453     0DCB  0AC4               	incf	___fltol@f1,f
  5454     0DCC  1903               	skipnz
  5455     0DCD  0AC5               	incf	___fltol@f1+1,f
  5456     0DCE  1903               	skipnz
  5457     0DCF  0AC6               	incf	___fltol@f1+2,f
  5458     0DD0  1903               	skipnz
  5459     0DD1  0AC7               	incf	___fltol@f1+3,f
  5460     0DD2                     l904:
  5461     0DD2                     l894:
  5462     0DD2  0008               	return
  5463     0DD3                     __end_of___fltol:
  5464                           
  5465                           	psect	text24
  5466     004B                     __ptext24:	
  5467 ;; *************** function ___flmul *****************
  5468 ;; Defined at:
  5469 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
  5470 ;; Parameters:    Size  Location     Type
  5471 ;;  b               4   10[BANK0 ] long 
  5472 ;;  a               4   14[BANK0 ] long 
  5473 ;; Auto vars:     Size  Location     Type
  5474 ;;  prod            4   30[BANK0 ] struct .
  5475 ;;  grs             4   24[BANK0 ] unsigned long 
  5476 ;;  temp            2   34[BANK0 ] struct .
  5477 ;;  bexp            1   29[BANK0 ] unsigned char 
  5478 ;;  aexp            1   28[BANK0 ] unsigned char 
  5479 ;;  sign            1   23[BANK0 ] unsigned char 
  5480 ;; Return value:  Size  Location     Type
  5481 ;;                  4   10[BANK0 ] unsigned char 
  5482 ;; Registers used:
  5483 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5484 ;; Tracked objects:
  5485 ;;		On entry : 0/0
  5486 ;;		On exit  : 0/0
  5487 ;;		Unchanged: 0/0
  5488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5489 ;;      Params:         0       8       0       0       0
  5490 ;;      Locals:         0      13       0       0       0
  5491 ;;      Temps:          0       5       0       0       0
  5492 ;;      Totals:         0      26       0       0       0
  5493 ;;Total ram usage:       26 bytes
  5494 ;; Hardware stack levels used: 1
  5495 ;; Hardware stack levels required when called: 3
  5496 ;; This function calls:
  5497 ;;		__Umul8_16
  5498 ;; This function is called by:
  5499 ;;		_main
  5500 ;; This function uses a non-reentrant model
  5501 ;;
  5502                           
  5503     004B                     ___flmul:	
  5504                           ;psect for function ___flmul
  5505                           
  5506     004B                     l3373:	
  5507                           ;incstack = 0
  5508                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5509                           
  5510     004B  1283               	bcf	3,5	;RP0=0, select bank0
  5511     004C  1303               	bcf	3,6	;RP1=0, select bank0
  5512     004D  082D               	movf	___flmul@b+3,w
  5513     004E  3980               	andlw	128
  5514     004F  00B7               	movwf	___flmul@sign
  5515     0050                     l3375:
  5516     0050  082D               	movf	___flmul@b+3,w
  5517     0051  00B2               	movwf	??___flmul
  5518     0052  0732               	addwf	??___flmul,w
  5519     0053  00BD               	movwf	___flmul@bexp
  5520     0054                     l3377:
  5521     0054  1FAC               	btfss	___flmul@b+2,7
  5522     0055  2857               	goto	u4021
  5523     0056  2858               	goto	u4020
  5524     0057                     u4021:
  5525     0057  2859               	goto	l3381
  5526     0058                     u4020:
  5527     0058                     l3379:
  5528     0058  143D               	bsf	___flmul@bexp,0
  5529     0059                     l3381:
  5530     0059  083D               	movf	___flmul@bexp,w
  5531     005A  1903               	btfsc	3,2
  5532     005B  285D               	goto	u4031
  5533     005C  285E               	goto	u4030
  5534     005D                     u4031:
  5535     005D  286D               	goto	l3389
  5536     005E                     u4030:
  5537     005E                     l3383:
  5538     005E  0A3D               	incf	___flmul@bexp,w
  5539     005F  1D03               	btfss	3,2
  5540     0060  2862               	goto	u4041
  5541     0061  2863               	goto	u4040
  5542     0062                     u4041:
  5543     0062  286B               	goto	l3387
  5544     0063                     u4040:
  5545     0063                     l3385:
  5546     0063  3000               	movlw	0
  5547     0064  00AD               	movwf	___flmul@b+3
  5548     0065  3000               	movlw	0
  5549     0066  00AC               	movwf	___flmul@b+2
  5550     0067  3000               	movlw	0
  5551     0068  00AB               	movwf	___flmul@b+1
  5552     0069  3000               	movlw	0
  5553     006A  00AA               	movwf	___flmul@b
  5554     006B                     l3387:
  5555     006B  17AC               	bsf	___flmul@b+2,7
  5556     006C  2875               	goto	l3391
  5557     006D                     l3389:
  5558     006D  3000               	movlw	0
  5559     006E  00AD               	movwf	___flmul@b+3
  5560     006F  3000               	movlw	0
  5561     0070  00AC               	movwf	___flmul@b+2
  5562     0071  3000               	movlw	0
  5563     0072  00AB               	movwf	___flmul@b+1
  5564     0073  3000               	movlw	0
  5565     0074  00AA               	movwf	___flmul@b
  5566     0075                     l3391:
  5567     0075  0831               	movf	___flmul@a+3,w
  5568     0076  3980               	andlw	128
  5569     0077  00FF               	movwf	btemp+1
  5570     0078  087F               	movf	btemp+1,w
  5571     0079  06B7               	xorwf	___flmul@sign,f
  5572     007A                     l3393:
  5573     007A  0831               	movf	___flmul@a+3,w
  5574     007B  00B2               	movwf	??___flmul
  5575     007C  0732               	addwf	??___flmul,w
  5576     007D  00BC               	movwf	___flmul@aexp
  5577     007E                     l3395:
  5578     007E  1FB0               	btfss	___flmul@a+2,7
  5579     007F  2881               	goto	u4051
  5580     0080  2882               	goto	u4050
  5581     0081                     u4051:
  5582     0081  2883               	goto	l3399
  5583     0082                     u4050:
  5584     0082                     l3397:
  5585     0082  143C               	bsf	___flmul@aexp,0
  5586     0083                     l3399:
  5587     0083  083C               	movf	___flmul@aexp,w
  5588     0084  1903               	btfsc	3,2
  5589     0085  2887               	goto	u4061
  5590     0086  2888               	goto	u4060
  5591     0087                     u4061:
  5592     0087  2897               	goto	l3407
  5593     0088                     u4060:
  5594     0088                     l3401:
  5595     0088  0A3C               	incf	___flmul@aexp,w
  5596     0089  1D03               	btfss	3,2
  5597     008A  288C               	goto	u4071
  5598     008B  288D               	goto	u4070
  5599     008C                     u4071:
  5600     008C  2895               	goto	l3405
  5601     008D                     u4070:
  5602     008D                     l3403:
  5603     008D  3000               	movlw	0
  5604     008E  00B1               	movwf	___flmul@a+3
  5605     008F  3000               	movlw	0
  5606     0090  00B0               	movwf	___flmul@a+2
  5607     0091  3000               	movlw	0
  5608     0092  00AF               	movwf	___flmul@a+1
  5609     0093  3000               	movlw	0
  5610     0094  00AE               	movwf	___flmul@a
  5611     0095                     l3405:
  5612     0095  17B0               	bsf	___flmul@a+2,7
  5613     0096  289F               	goto	l3409
  5614     0097                     l3407:
  5615     0097  3000               	movlw	0
  5616     0098  00B1               	movwf	___flmul@a+3
  5617     0099  3000               	movlw	0
  5618     009A  00B0               	movwf	___flmul@a+2
  5619     009B  3000               	movlw	0
  5620     009C  00AF               	movwf	___flmul@a+1
  5621     009D  3000               	movlw	0
  5622     009E  00AE               	movwf	___flmul@a
  5623     009F                     l3409:
  5624     009F  083C               	movf	___flmul@aexp,w
  5625     00A0  1903               	btfsc	3,2
  5626     00A1  28A3               	goto	u4081
  5627     00A2  28A4               	goto	u4080
  5628     00A3                     u4081:
  5629     00A3  28A9               	goto	l3413
  5630     00A4                     u4080:
  5631     00A4                     l3411:
  5632     00A4  083D               	movf	___flmul@bexp,w
  5633     00A5  1D03               	btfss	3,2
  5634     00A6  28A8               	goto	u4091
  5635     00A7  28A9               	goto	u4090
  5636     00A8                     u4091:
  5637     00A8  28B2               	goto	l3417
  5638     00A9                     u4090:
  5639     00A9                     l3413:
  5640     00A9  3000               	movlw	0
  5641     00AA  00AD               	movwf	?___flmul+3
  5642     00AB  3000               	movlw	0
  5643     00AC  00AC               	movwf	?___flmul+2
  5644     00AD  3000               	movlw	0
  5645     00AE  00AB               	movwf	?___flmul+1
  5646     00AF  3000               	movlw	0
  5647     00B0  00AA               	movwf	?___flmul
  5648     00B1  2B8F               	goto	l1097
  5649     00B2                     l3417:
  5650     00B2  082A               	movf	___flmul@b,w
  5651     00B3  00F3               	movwf	__Umul8_16@multiplicand
  5652     00B4  0830               	movf	___flmul@a+2,w
  5653     00B5  120A  158A  219E  120A  118A  	fcall	__Umul8_16
  5654     00BA  0874               	movf	?__Umul8_16+1,w
  5655     00BB  1283               	bcf	3,5	;RP0=0, select bank0
  5656     00BC  1303               	bcf	3,6	;RP1=0, select bank0
  5657     00BD  00C3               	movwf	___flmul@temp+1
  5658     00BE  0873               	movf	?__Umul8_16,w
  5659     00BF  00C2               	movwf	___flmul@temp
  5660     00C0                     l3419:
  5661     00C0  0842               	movf	___flmul@temp,w
  5662     00C1  00B2               	movwf	??___flmul
  5663     00C2  01B3               	clrf	??___flmul+1
  5664     00C3  01B4               	clrf	??___flmul+2
  5665     00C4  01B5               	clrf	??___flmul+3
  5666     00C5  0835               	movf	??___flmul+3,w
  5667     00C6  00BB               	movwf	___flmul@grs+3
  5668     00C7  0834               	movf	??___flmul+2,w
  5669     00C8  00BA               	movwf	___flmul@grs+2
  5670     00C9  0833               	movf	??___flmul+1,w
  5671     00CA  00B9               	movwf	___flmul@grs+1
  5672     00CB  0832               	movf	??___flmul,w
  5673     00CC  00B8               	movwf	___flmul@grs
  5674     00CD                     l3421:
  5675     00CD  0843               	movf	___flmul@temp+1,w
  5676     00CE  00B2               	movwf	??___flmul
  5677     00CF  01B3               	clrf	??___flmul+1
  5678     00D0  01B4               	clrf	??___flmul+2
  5679     00D1  01B5               	clrf	??___flmul+3
  5680     00D2  0835               	movf	??___flmul+3,w
  5681     00D3  00C1               	movwf	___flmul@prod+3
  5682     00D4  0834               	movf	??___flmul+2,w
  5683     00D5  00C0               	movwf	___flmul@prod+2
  5684     00D6  0833               	movf	??___flmul+1,w
  5685     00D7  00BF               	movwf	___flmul@prod+1
  5686     00D8  0832               	movf	??___flmul,w
  5687     00D9  00BE               	movwf	___flmul@prod
  5688     00DA  082B               	movf	___flmul@b+1,w
  5689     00DB  00F3               	movwf	__Umul8_16@multiplicand
  5690     00DC  082F               	movf	___flmul@a+1,w
  5691     00DD  120A  158A  219E  120A  118A  	fcall	__Umul8_16
  5692     00E2  0874               	movf	?__Umul8_16+1,w
  5693     00E3  1283               	bcf	3,5	;RP0=0, select bank0
  5694     00E4  1303               	bcf	3,6	;RP1=0, select bank0
  5695     00E5  00C3               	movwf	___flmul@temp+1
  5696     00E6  0873               	movf	?__Umul8_16,w
  5697     00E7  00C2               	movwf	___flmul@temp
  5698     00E8                     l3423:
  5699     00E8  0842               	movf	___flmul@temp,w
  5700     00E9  00B2               	movwf	??___flmul
  5701     00EA  01B3               	clrf	??___flmul+1
  5702     00EB  01B4               	clrf	??___flmul+2
  5703     00EC  01B5               	clrf	??___flmul+3
  5704     00ED  0832               	movf	??___flmul,w
  5705     00EE  07B8               	addwf	___flmul@grs,f
  5706     00EF  0833               	movf	??___flmul+1,w
  5707     00F0  1103               	clrz
  5708     00F1  1803               	skipnc
  5709     00F2  3E01               	addlw	1
  5710     00F3  1903               	skipnz
  5711     00F4  28F6               	goto	u4101
  5712     00F5  07B9               	addwf	___flmul@grs+1,f
  5713     00F6                     u4101:
  5714     00F6  0834               	movf	??___flmul+2,w
  5715     00F7  1103               	clrz
  5716     00F8  1803               	skipnc
  5717     00F9  3E01               	addlw	1
  5718     00FA  1903               	skipnz
  5719     00FB  28FD               	goto	u4102
  5720     00FC  07BA               	addwf	___flmul@grs+2,f
  5721     00FD                     u4102:
  5722     00FD  0835               	movf	??___flmul+3,w
  5723     00FE  1103               	clrz
  5724     00FF  1803               	skipnc
  5725     0100  3E01               	addlw	1
  5726     0101  1903               	skipnz
  5727     0102  2904               	goto	u4103
  5728     0103  07BB               	addwf	___flmul@grs+3,f
  5729     0104                     u4103:
  5730     0104                     l3425:
  5731     0104  0843               	movf	___flmul@temp+1,w
  5732     0105  00B2               	movwf	??___flmul
  5733     0106  01B3               	clrf	??___flmul+1
  5734     0107  01B4               	clrf	??___flmul+2
  5735     0108  01B5               	clrf	??___flmul+3
  5736     0109  0832               	movf	??___flmul,w
  5737     010A  07BE               	addwf	___flmul@prod,f
  5738     010B  0833               	movf	??___flmul+1,w
  5739     010C  1103               	clrz
  5740     010D  1803               	skipnc
  5741     010E  3E01               	addlw	1
  5742     010F  1903               	skipnz
  5743     0110  2912               	goto	u4111
  5744     0111  07BF               	addwf	___flmul@prod+1,f
  5745     0112                     u4111:
  5746     0112  0834               	movf	??___flmul+2,w
  5747     0113  1103               	clrz
  5748     0114  1803               	skipnc
  5749     0115  3E01               	addlw	1
  5750     0116  1903               	skipnz
  5751     0117  2919               	goto	u4112
  5752     0118  07C0               	addwf	___flmul@prod+2,f
  5753     0119                     u4112:
  5754     0119  0835               	movf	??___flmul+3,w
  5755     011A  1103               	clrz
  5756     011B  1803               	skipnc
  5757     011C  3E01               	addlw	1
  5758     011D  1903               	skipnz
  5759     011E  2920               	goto	u4113
  5760     011F  07C1               	addwf	___flmul@prod+3,f
  5761     0120                     u4113:
  5762     0120  082C               	movf	___flmul@b+2,w
  5763     0121  00F3               	movwf	__Umul8_16@multiplicand
  5764     0122  082E               	movf	___flmul@a,w
  5765     0123  120A  158A  219E  120A  118A  	fcall	__Umul8_16
  5766     0128  0874               	movf	?__Umul8_16+1,w
  5767     0129  1283               	bcf	3,5	;RP0=0, select bank0
  5768     012A  1303               	bcf	3,6	;RP1=0, select bank0
  5769     012B  00C3               	movwf	___flmul@temp+1
  5770     012C  0873               	movf	?__Umul8_16,w
  5771     012D  00C2               	movwf	___flmul@temp
  5772     012E                     l3427:
  5773     012E  0842               	movf	___flmul@temp,w
  5774     012F  00B2               	movwf	??___flmul
  5775     0130  01B3               	clrf	??___flmul+1
  5776     0131  01B4               	clrf	??___flmul+2
  5777     0132  01B5               	clrf	??___flmul+3
  5778     0133  0832               	movf	??___flmul,w
  5779     0134  07B8               	addwf	___flmul@grs,f
  5780     0135  0833               	movf	??___flmul+1,w
  5781     0136  1103               	clrz
  5782     0137  1803               	skipnc
  5783     0138  3E01               	addlw	1
  5784     0139  1903               	skipnz
  5785     013A  293C               	goto	u4121
  5786     013B  07B9               	addwf	___flmul@grs+1,f
  5787     013C                     u4121:
  5788     013C  0834               	movf	??___flmul+2,w
  5789     013D  1103               	clrz
  5790     013E  1803               	skipnc
  5791     013F  3E01               	addlw	1
  5792     0140  1903               	skipnz
  5793     0141  2943               	goto	u4122
  5794     0142  07BA               	addwf	___flmul@grs+2,f
  5795     0143                     u4122:
  5796     0143  0835               	movf	??___flmul+3,w
  5797     0144  1103               	clrz
  5798     0145  1803               	skipnc
  5799     0146  3E01               	addlw	1
  5800     0147  1903               	skipnz
  5801     0148  294A               	goto	u4123
  5802     0149  07BB               	addwf	___flmul@grs+3,f
  5803     014A                     u4123:
  5804     014A                     l3429:
  5805     014A  0843               	movf	___flmul@temp+1,w
  5806     014B  00B2               	movwf	??___flmul
  5807     014C  01B3               	clrf	??___flmul+1
  5808     014D  01B4               	clrf	??___flmul+2
  5809     014E  01B5               	clrf	??___flmul+3
  5810     014F  0832               	movf	??___flmul,w
  5811     0150  07BE               	addwf	___flmul@prod,f
  5812     0151  0833               	movf	??___flmul+1,w
  5813     0152  1103               	clrz
  5814     0153  1803               	skipnc
  5815     0154  3E01               	addlw	1
  5816     0155  1903               	skipnz
  5817     0156  2958               	goto	u4131
  5818     0157  07BF               	addwf	___flmul@prod+1,f
  5819     0158                     u4131:
  5820     0158  0834               	movf	??___flmul+2,w
  5821     0159  1103               	clrz
  5822     015A  1803               	skipnc
  5823     015B  3E01               	addlw	1
  5824     015C  1903               	skipnz
  5825     015D  295F               	goto	u4132
  5826     015E  07C0               	addwf	___flmul@prod+2,f
  5827     015F                     u4132:
  5828     015F  0835               	movf	??___flmul+3,w
  5829     0160  1103               	clrz
  5830     0161  1803               	skipnc
  5831     0162  3E01               	addlw	1
  5832     0163  1903               	skipnz
  5833     0164  2966               	goto	u4133
  5834     0165  07C1               	addwf	___flmul@prod+3,f
  5835     0166                     u4133:
  5836     0166                     l3431:
  5837     0166  3008               	movlw	8
  5838     0167  00B2               	movwf	??___flmul
  5839     0168                     u4145:
  5840     0168  1003               	clrc
  5841     0169  0DB8               	rlf	___flmul@grs,f
  5842     016A  0DB9               	rlf	___flmul@grs+1,f
  5843     016B  0DBA               	rlf	___flmul@grs+2,f
  5844     016C  0DBB               	rlf	___flmul@grs+3,f
  5845     016D  0BB2               	decfsz	??___flmul,f
  5846     016E  2968               	goto	u4145
  5847     016F                     l3433:
  5848     016F  082B               	movf	___flmul@b+1,w
  5849     0170  00F3               	movwf	__Umul8_16@multiplicand
  5850     0171  082E               	movf	___flmul@a,w
  5851     0172  120A  158A  219E  120A  118A  	fcall	__Umul8_16
  5852     0177  0874               	movf	?__Umul8_16+1,w
  5853     0178  1283               	bcf	3,5	;RP0=0, select bank0
  5854     0179  1303               	bcf	3,6	;RP1=0, select bank0
  5855     017A  00C3               	movwf	___flmul@temp+1
  5856     017B  0873               	movf	?__Umul8_16,w
  5857     017C  00C2               	movwf	___flmul@temp
  5858     017D                     l3435:
  5859     017D  0842               	movf	___flmul@temp,w
  5860     017E  00B2               	movwf	??___flmul
  5861     017F  0843               	movf	___flmul@temp+1,w
  5862     0180  00B3               	movwf	??___flmul+1
  5863     0181  01B4               	clrf	??___flmul+2
  5864     0182  01B5               	clrf	??___flmul+3
  5865     0183  0832               	movf	??___flmul,w
  5866     0184  07B8               	addwf	___flmul@grs,f
  5867     0185  0833               	movf	??___flmul+1,w
  5868     0186  1103               	clrz
  5869     0187  1803               	skipnc
  5870     0188  3E01               	addlw	1
  5871     0189  1903               	skipnz
  5872     018A  298C               	goto	u4151
  5873     018B  07B9               	addwf	___flmul@grs+1,f
  5874     018C                     u4151:
  5875     018C  0834               	movf	??___flmul+2,w
  5876     018D  1103               	clrz
  5877     018E  1803               	skipnc
  5878     018F  3E01               	addlw	1
  5879     0190  1903               	skipnz
  5880     0191  2993               	goto	u4152
  5881     0192  07BA               	addwf	___flmul@grs+2,f
  5882     0193                     u4152:
  5883     0193  0835               	movf	??___flmul+3,w
  5884     0194  1103               	clrz
  5885     0195  1803               	skipnc
  5886     0196  3E01               	addlw	1
  5887     0197  1903               	skipnz
  5888     0198  299A               	goto	u4153
  5889     0199  07BB               	addwf	___flmul@grs+3,f
  5890     019A                     u4153:
  5891     019A                     l3437:
  5892     019A  082A               	movf	___flmul@b,w
  5893     019B  00F3               	movwf	__Umul8_16@multiplicand
  5894     019C  082F               	movf	___flmul@a+1,w
  5895     019D  120A  158A  219E  120A  118A  	fcall	__Umul8_16
  5896     01A2  0874               	movf	?__Umul8_16+1,w
  5897     01A3  1283               	bcf	3,5	;RP0=0, select bank0
  5898     01A4  1303               	bcf	3,6	;RP1=0, select bank0
  5899     01A5  00C3               	movwf	___flmul@temp+1
  5900     01A6  0873               	movf	?__Umul8_16,w
  5901     01A7  00C2               	movwf	___flmul@temp
  5902     01A8                     l3439:
  5903     01A8  0842               	movf	___flmul@temp,w
  5904     01A9  00B2               	movwf	??___flmul
  5905     01AA  0843               	movf	___flmul@temp+1,w
  5906     01AB  00B3               	movwf	??___flmul+1
  5907     01AC  01B4               	clrf	??___flmul+2
  5908     01AD  01B5               	clrf	??___flmul+3
  5909     01AE  0832               	movf	??___flmul,w
  5910     01AF  07B8               	addwf	___flmul@grs,f
  5911     01B0  0833               	movf	??___flmul+1,w
  5912     01B1  1103               	clrz
  5913     01B2  1803               	skipnc
  5914     01B3  3E01               	addlw	1
  5915     01B4  1903               	skipnz
  5916     01B5  29B7               	goto	u4161
  5917     01B6  07B9               	addwf	___flmul@grs+1,f
  5918     01B7                     u4161:
  5919     01B7  0834               	movf	??___flmul+2,w
  5920     01B8  1103               	clrz
  5921     01B9  1803               	skipnc
  5922     01BA  3E01               	addlw	1
  5923     01BB  1903               	skipnz
  5924     01BC  29BE               	goto	u4162
  5925     01BD  07BA               	addwf	___flmul@grs+2,f
  5926     01BE                     u4162:
  5927     01BE  0835               	movf	??___flmul+3,w
  5928     01BF  1103               	clrz
  5929     01C0  1803               	skipnc
  5930     01C1  3E01               	addlw	1
  5931     01C2  1903               	skipnz
  5932     01C3  29C5               	goto	u4163
  5933     01C4  07BB               	addwf	___flmul@grs+3,f
  5934     01C5                     u4163:
  5935     01C5                     l3441:
  5936     01C5  3008               	movlw	8
  5937     01C6  00B2               	movwf	??___flmul
  5938     01C7                     u4175:
  5939     01C7  1003               	clrc
  5940     01C8  0DB8               	rlf	___flmul@grs,f
  5941     01C9  0DB9               	rlf	___flmul@grs+1,f
  5942     01CA  0DBA               	rlf	___flmul@grs+2,f
  5943     01CB  0DBB               	rlf	___flmul@grs+3,f
  5944     01CC  0BB2               	decfsz	??___flmul,f
  5945     01CD  29C7               	goto	u4175
  5946     01CE  082A               	movf	___flmul@b,w
  5947     01CF  00F3               	movwf	__Umul8_16@multiplicand
  5948     01D0  082E               	movf	___flmul@a,w
  5949     01D1  120A  158A  219E  120A  118A  	fcall	__Umul8_16
  5950     01D6  0874               	movf	?__Umul8_16+1,w
  5951     01D7  1283               	bcf	3,5	;RP0=0, select bank0
  5952     01D8  1303               	bcf	3,6	;RP1=0, select bank0
  5953     01D9  00C3               	movwf	___flmul@temp+1
  5954     01DA  0873               	movf	?__Umul8_16,w
  5955     01DB  00C2               	movwf	___flmul@temp
  5956     01DC                     l3443:
  5957     01DC  0842               	movf	___flmul@temp,w
  5958     01DD  00B2               	movwf	??___flmul
  5959     01DE  0843               	movf	___flmul@temp+1,w
  5960     01DF  00B3               	movwf	??___flmul+1
  5961     01E0  01B4               	clrf	??___flmul+2
  5962     01E1  01B5               	clrf	??___flmul+3
  5963     01E2  0832               	movf	??___flmul,w
  5964     01E3  07B8               	addwf	___flmul@grs,f
  5965     01E4  0833               	movf	??___flmul+1,w
  5966     01E5  1103               	clrz
  5967     01E6  1803               	skipnc
  5968     01E7  3E01               	addlw	1
  5969     01E8  1903               	skipnz
  5970     01E9  29EB               	goto	u4181
  5971     01EA  07B9               	addwf	___flmul@grs+1,f
  5972     01EB                     u4181:
  5973     01EB  0834               	movf	??___flmul+2,w
  5974     01EC  1103               	clrz
  5975     01ED  1803               	skipnc
  5976     01EE  3E01               	addlw	1
  5977     01EF  1903               	skipnz
  5978     01F0  29F2               	goto	u4182
  5979     01F1  07BA               	addwf	___flmul@grs+2,f
  5980     01F2                     u4182:
  5981     01F2  0835               	movf	??___flmul+3,w
  5982     01F3  1103               	clrz
  5983     01F4  1803               	skipnc
  5984     01F5  3E01               	addlw	1
  5985     01F6  1903               	skipnz
  5986     01F7  29F9               	goto	u4183
  5987     01F8  07BB               	addwf	___flmul@grs+3,f
  5988     01F9                     u4183:
  5989     01F9                     l3445:
  5990     01F9  082B               	movf	___flmul@b+1,w
  5991     01FA  00F3               	movwf	__Umul8_16@multiplicand
  5992     01FB  0830               	movf	___flmul@a+2,w
  5993     01FC  120A  158A  219E  120A  118A  	fcall	__Umul8_16
  5994     0201  0874               	movf	?__Umul8_16+1,w
  5995     0202  1283               	bcf	3,5	;RP0=0, select bank0
  5996     0203  1303               	bcf	3,6	;RP1=0, select bank0
  5997     0204  00C3               	movwf	___flmul@temp+1
  5998     0205  0873               	movf	?__Umul8_16,w
  5999     0206  00C2               	movwf	___flmul@temp
  6000     0207  0842               	movf	___flmul@temp,w
  6001     0208  00B2               	movwf	??___flmul
  6002     0209  0843               	movf	___flmul@temp+1,w
  6003     020A  00B3               	movwf	??___flmul+1
  6004     020B  01B4               	clrf	??___flmul+2
  6005     020C  01B5               	clrf	??___flmul+3
  6006     020D  0832               	movf	??___flmul,w
  6007     020E  07BE               	addwf	___flmul@prod,f
  6008     020F  0833               	movf	??___flmul+1,w
  6009     0210  1103               	clrz
  6010     0211  1803               	skipnc
  6011     0212  3E01               	addlw	1
  6012     0213  1903               	skipnz
  6013     0214  2A16               	goto	u4191
  6014     0215  07BF               	addwf	___flmul@prod+1,f
  6015     0216                     u4191:
  6016     0216  0834               	movf	??___flmul+2,w
  6017     0217  1103               	clrz
  6018     0218  1803               	skipnc
  6019     0219  3E01               	addlw	1
  6020     021A  1903               	skipnz
  6021     021B  2A1D               	goto	u4192
  6022     021C  07C0               	addwf	___flmul@prod+2,f
  6023     021D                     u4192:
  6024     021D  0835               	movf	??___flmul+3,w
  6025     021E  1103               	clrz
  6026     021F  1803               	skipnc
  6027     0220  3E01               	addlw	1
  6028     0221  1903               	skipnz
  6029     0222  2A24               	goto	u4193
  6030     0223  07C1               	addwf	___flmul@prod+3,f
  6031     0224                     u4193:
  6032     0224                     l3447:
  6033     0224  082C               	movf	___flmul@b+2,w
  6034     0225  00F3               	movwf	__Umul8_16@multiplicand
  6035     0226  082F               	movf	___flmul@a+1,w
  6036     0227  120A  158A  219E  120A  118A  	fcall	__Umul8_16
  6037     022C  0874               	movf	?__Umul8_16+1,w
  6038     022D  1283               	bcf	3,5	;RP0=0, select bank0
  6039     022E  1303               	bcf	3,6	;RP1=0, select bank0
  6040     022F  00C3               	movwf	___flmul@temp+1
  6041     0230  0873               	movf	?__Umul8_16,w
  6042     0231  00C2               	movwf	___flmul@temp
  6043     0232                     l3449:
  6044     0232  0842               	movf	___flmul@temp,w
  6045     0233  00B2               	movwf	??___flmul
  6046     0234  0843               	movf	___flmul@temp+1,w
  6047     0235  00B3               	movwf	??___flmul+1
  6048     0236  01B4               	clrf	??___flmul+2
  6049     0237  01B5               	clrf	??___flmul+3
  6050     0238  0832               	movf	??___flmul,w
  6051     0239  07BE               	addwf	___flmul@prod,f
  6052     023A  0833               	movf	??___flmul+1,w
  6053     023B  1103               	clrz
  6054     023C  1803               	skipnc
  6055     023D  3E01               	addlw	1
  6056     023E  1903               	skipnz
  6057     023F  2A41               	goto	u4201
  6058     0240  07BF               	addwf	___flmul@prod+1,f
  6059     0241                     u4201:
  6060     0241  0834               	movf	??___flmul+2,w
  6061     0242  1103               	clrz
  6062     0243  1803               	skipnc
  6063     0244  3E01               	addlw	1
  6064     0245  1903               	skipnz
  6065     0246  2A48               	goto	u4202
  6066     0247  07C0               	addwf	___flmul@prod+2,f
  6067     0248                     u4202:
  6068     0248  0835               	movf	??___flmul+3,w
  6069     0249  1103               	clrz
  6070     024A  1803               	skipnc
  6071     024B  3E01               	addlw	1
  6072     024C  1903               	skipnz
  6073     024D  2A4F               	goto	u4203
  6074     024E  07C1               	addwf	___flmul@prod+3,f
  6075     024F                     u4203:
  6076     024F  082C               	movf	___flmul@b+2,w
  6077     0250  00F3               	movwf	__Umul8_16@multiplicand
  6078     0251  0830               	movf	___flmul@a+2,w
  6079     0252  120A  158A  219E  120A  118A  	fcall	__Umul8_16
  6080     0257  0874               	movf	?__Umul8_16+1,w
  6081     0258  1283               	bcf	3,5	;RP0=0, select bank0
  6082     0259  1303               	bcf	3,6	;RP1=0, select bank0
  6083     025A  00C3               	movwf	___flmul@temp+1
  6084     025B  0873               	movf	?__Umul8_16,w
  6085     025C  00C2               	movwf	___flmul@temp
  6086     025D                     l3451:
  6087     025D  0842               	movf	___flmul@temp,w
  6088     025E  00B2               	movwf	??___flmul
  6089     025F  0843               	movf	___flmul@temp+1,w
  6090     0260  00B3               	movwf	??___flmul+1
  6091     0261  01B4               	clrf	??___flmul+2
  6092     0262  01B5               	clrf	??___flmul+3
  6093     0263  3008               	movlw	8
  6094     0264                     u4215:
  6095     0264  1003               	clrc
  6096     0265  0DB2               	rlf	??___flmul,f
  6097     0266  0DB3               	rlf	??___flmul+1,f
  6098     0267  0DB4               	rlf	??___flmul+2,f
  6099     0268  0DB5               	rlf	??___flmul+3,f
  6100     0269                     u4210:
  6101     0269  3EFF               	addlw	-1
  6102     026A  1D03               	skipz
  6103     026B  2A64               	goto	u4215
  6104     026C  0832               	movf	??___flmul,w
  6105     026D  07BE               	addwf	___flmul@prod,f
  6106     026E  0833               	movf	??___flmul+1,w
  6107     026F  1103               	clrz
  6108     0270  1803               	skipnc
  6109     0271  3E01               	addlw	1
  6110     0272  1903               	skipnz
  6111     0273  2A75               	goto	u4221
  6112     0274  07BF               	addwf	___flmul@prod+1,f
  6113     0275                     u4221:
  6114     0275  0834               	movf	??___flmul+2,w
  6115     0276  1103               	clrz
  6116     0277  1803               	skipnc
  6117     0278  3E01               	addlw	1
  6118     0279  1903               	skipnz
  6119     027A  2A7C               	goto	u4222
  6120     027B  07C0               	addwf	___flmul@prod+2,f
  6121     027C                     u4222:
  6122     027C  0835               	movf	??___flmul+3,w
  6123     027D  1103               	clrz
  6124     027E  1803               	skipnc
  6125     027F  3E01               	addlw	1
  6126     0280  1903               	skipnz
  6127     0281  2A83               	goto	u4223
  6128     0282  07C1               	addwf	___flmul@prod+3,f
  6129     0283                     u4223:
  6130     0283                     l3453:
  6131     0283  0838               	movf	___flmul@grs,w
  6132     0284  00B2               	movwf	??___flmul
  6133     0285  0839               	movf	___flmul@grs+1,w
  6134     0286  00B3               	movwf	??___flmul+1
  6135     0287  083A               	movf	___flmul@grs+2,w
  6136     0288  00B4               	movwf	??___flmul+2
  6137     0289  083B               	movf	___flmul@grs+3,w
  6138     028A  00B5               	movwf	??___flmul+3
  6139     028B  3018               	movlw	24
  6140     028C                     u4235:
  6141     028C  1003               	clrc
  6142     028D  0CB5               	rrf	??___flmul+3,f
  6143     028E  0CB4               	rrf	??___flmul+2,f
  6144     028F  0CB3               	rrf	??___flmul+1,f
  6145     0290  0CB2               	rrf	??___flmul,f
  6146     0291                     u4230:
  6147     0291  3EFF               	addlw	-1
  6148     0292  1D03               	skipz
  6149     0293  2A8C               	goto	u4235
  6150     0294  0832               	movf	??___flmul,w
  6151     0295  07BE               	addwf	___flmul@prod,f
  6152     0296  0833               	movf	??___flmul+1,w
  6153     0297  1103               	clrz
  6154     0298  1803               	skipnc
  6155     0299  3E01               	addlw	1
  6156     029A  1903               	skipnz
  6157     029B  2A9D               	goto	u4241
  6158     029C  07BF               	addwf	___flmul@prod+1,f
  6159     029D                     u4241:
  6160     029D  0834               	movf	??___flmul+2,w
  6161     029E  1103               	clrz
  6162     029F  1803               	skipnc
  6163     02A0  3E01               	addlw	1
  6164     02A1  1903               	skipnz
  6165     02A2  2AA4               	goto	u4242
  6166     02A3  07C0               	addwf	___flmul@prod+2,f
  6167     02A4                     u4242:
  6168     02A4  0835               	movf	??___flmul+3,w
  6169     02A5  1103               	clrz
  6170     02A6  1803               	skipnc
  6171     02A7  3E01               	addlw	1
  6172     02A8  1903               	skipnz
  6173     02A9  2AAB               	goto	u4243
  6174     02AA  07C1               	addwf	___flmul@prod+3,f
  6175     02AB                     u4243:
  6176     02AB                     l3455:
  6177     02AB  3008               	movlw	8
  6178     02AC  00B2               	movwf	??___flmul
  6179     02AD                     u4255:
  6180     02AD  1003               	clrc
  6181     02AE  0DB8               	rlf	___flmul@grs,f
  6182     02AF  0DB9               	rlf	___flmul@grs+1,f
  6183     02B0  0DBA               	rlf	___flmul@grs+2,f
  6184     02B1  0DBB               	rlf	___flmul@grs+3,f
  6185     02B2  0BB2               	decfsz	??___flmul,f
  6186     02B3  2AAD               	goto	u4255
  6187     02B4                     l3457:
  6188     02B4  083D               	movf	___flmul@bexp,w
  6189     02B5  073C               	addwf	___flmul@aexp,w
  6190     02B6  00B2               	movwf	??___flmul
  6191     02B7  01B3               	clrf	??___flmul+1
  6192     02B8  0DB3               	rlf	??___flmul+1,f
  6193     02B9  0832               	movf	??___flmul,w
  6194     02BA  3E82               	addlw	130
  6195     02BB  00C2               	movwf	___flmul@temp
  6196     02BC  0833               	movf	??___flmul+1,w
  6197     02BD  1803               	skipnc
  6198     02BE  3E01               	addlw	1
  6199     02BF  3EFF               	addlw	255
  6200     02C0  00C3               	movwf	___flmul@temp+1
  6201     02C1  2ADF               	goto	l3469
  6202     02C2                     l3459:
  6203     02C2  3001               	movlw	1
  6204     02C3  00B2               	movwf	??___flmul
  6205     02C4                     u4265:
  6206     02C4  1003               	clrc
  6207     02C5  0DBE               	rlf	___flmul@prod,f
  6208     02C6  0DBF               	rlf	___flmul@prod+1,f
  6209     02C7  0DC0               	rlf	___flmul@prod+2,f
  6210     02C8  0DC1               	rlf	___flmul@prod+3,f
  6211     02C9  0BB2               	decfsz	??___flmul,f
  6212     02CA  2AC4               	goto	u4265
  6213     02CB                     l3461:
  6214     02CB  1FBB               	btfss	___flmul@grs+3,7
  6215     02CC  2ACE               	goto	u4271
  6216     02CD  2ACF               	goto	u4270
  6217     02CE                     u4271:
  6218     02CE  2AD0               	goto	l3465
  6219     02CF                     u4270:
  6220     02CF                     l3463:
  6221     02CF  143E               	bsf	___flmul@prod,0
  6222     02D0                     l3465:
  6223     02D0  3001               	movlw	1
  6224     02D1  00B2               	movwf	??___flmul
  6225     02D2                     u4285:
  6226     02D2  1003               	clrc
  6227     02D3  0DB8               	rlf	___flmul@grs,f
  6228     02D4  0DB9               	rlf	___flmul@grs+1,f
  6229     02D5  0DBA               	rlf	___flmul@grs+2,f
  6230     02D6  0DBB               	rlf	___flmul@grs+3,f
  6231     02D7  0BB2               	decfsz	??___flmul,f
  6232     02D8  2AD2               	goto	u4285
  6233     02D9                     l3467:
  6234     02D9  30FF               	movlw	255
  6235     02DA  07C2               	addwf	___flmul@temp,f
  6236     02DB  1803               	skipnc
  6237     02DC  0AC3               	incf	___flmul@temp+1,f
  6238     02DD  30FF               	movlw	255
  6239     02DE  07C3               	addwf	___flmul@temp+1,f
  6240     02DF                     l3469:
  6241     02DF  1FC0               	btfss	___flmul@prod+2,7
  6242     02E0  2AE2               	goto	u4291
  6243     02E1  2AE3               	goto	u4290
  6244     02E2                     u4291:
  6245     02E2  2AC2               	goto	l3459
  6246     02E3                     u4290:
  6247     02E3                     l3471:
  6248     02E3  01BC               	clrf	___flmul@aexp
  6249     02E4                     l3473:
  6250     02E4  1FBB               	btfss	___flmul@grs+3,7
  6251     02E5  2AE7               	goto	u4301
  6252     02E6  2AE8               	goto	u4300
  6253     02E7                     u4301:
  6254     02E7  2B04               	goto	l3481
  6255     02E8                     u4300:
  6256     02E8                     l3475:
  6257     02E8  30FF               	movlw	255
  6258     02E9  0538               	andwf	___flmul@grs,w
  6259     02EA  00B2               	movwf	??___flmul
  6260     02EB  30FF               	movlw	255
  6261     02EC  0539               	andwf	___flmul@grs+1,w
  6262     02ED  00B3               	movwf	??___flmul+1
  6263     02EE  30FF               	movlw	255
  6264     02EF  053A               	andwf	___flmul@grs+2,w
  6265     02F0  00B4               	movwf	??___flmul+2
  6266     02F1  307F               	movlw	127
  6267     02F2  053B               	andwf	___flmul@grs+3,w
  6268     02F3  00B5               	movwf	??___flmul+3
  6269     02F4  0835               	movf	??___flmul+3,w
  6270     02F5  0434               	iorwf	??___flmul+2,w
  6271     02F6  0433               	iorwf	??___flmul+1,w
  6272     02F7  0432               	iorwf	??___flmul,w
  6273     02F8  1903               	skipnz
  6274     02F9  2AFB               	goto	u4311
  6275     02FA  2AFC               	goto	u4310
  6276     02FB                     u4311:
  6277     02FB  2AFF               	goto	l1103
  6278     02FC                     u4310:
  6279     02FC                     l3477:
  6280     02FC  01BC               	clrf	___flmul@aexp
  6281     02FD  0ABC               	incf	___flmul@aexp,f
  6282     02FE  2B04               	goto	l3481
  6283     02FF                     l1103:
  6284     02FF  1C3E               	btfss	___flmul@prod,0
  6285     0300  2B02               	goto	u4321
  6286     0301  2B03               	goto	u4320
  6287     0302                     u4321:
  6288     0302  2B04               	goto	l3481
  6289     0303                     u4320:
  6290     0303  2AFC               	goto	l3477
  6291     0304                     l3481:
  6292     0304  083C               	movf	___flmul@aexp,w
  6293     0305  1903               	btfsc	3,2
  6294     0306  2B08               	goto	u4331
  6295     0307  2B09               	goto	u4330
  6296     0308                     u4331:
  6297     0308  2B3A               	goto	l3491
  6298     0309                     u4330:
  6299     0309                     l3483:
  6300     0309  3001               	movlw	1
  6301     030A  07BE               	addwf	___flmul@prod,f
  6302     030B  3000               	movlw	0
  6303     030C  1803               	skipnc
  6304     030D  3001               	movlw	1
  6305     030E  07BF               	addwf	___flmul@prod+1,f
  6306     030F  3000               	movlw	0
  6307     0310  1803               	skipnc
  6308     0311  3001               	movlw	1
  6309     0312  07C0               	addwf	___flmul@prod+2,f
  6310     0313  3000               	movlw	0
  6311     0314  1803               	skipnc
  6312     0315  3001               	movlw	1
  6313     0316  07C1               	addwf	___flmul@prod+3,f
  6314     0317                     l3485:
  6315     0317  1C41               	btfss	___flmul@prod+3,0
  6316     0318  2B1A               	goto	u4341
  6317     0319  2B1B               	goto	u4340
  6318     031A                     u4341:
  6319     031A  2B3A               	goto	l3491
  6320     031B                     u4340:
  6321     031B                     l3487:
  6322     031B  083E               	movf	___flmul@prod,w
  6323     031C  00B2               	movwf	??___flmul
  6324     031D  083F               	movf	___flmul@prod+1,w
  6325     031E  00B3               	movwf	??___flmul+1
  6326     031F  0840               	movf	___flmul@prod+2,w
  6327     0320  00B4               	movwf	??___flmul+2
  6328     0321  0841               	movf	___flmul@prod+3,w
  6329     0322  00B5               	movwf	??___flmul+3
  6330     0323  3001               	movlw	1
  6331     0324  00B6               	movwf	??___flmul+4
  6332     0325                     u4355:
  6333     0325  0D35               	rlf	??___flmul+3,w
  6334     0326  0CB5               	rrf	??___flmul+3,f
  6335     0327  0CB4               	rrf	??___flmul+2,f
  6336     0328  0CB3               	rrf	??___flmul+1,f
  6337     0329  0CB2               	rrf	??___flmul,f
  6338     032A                     u4350:
  6339     032A  0BB6               	decfsz	??___flmul+4,f
  6340     032B  2B25               	goto	u4355
  6341     032C  0835               	movf	??___flmul+3,w
  6342     032D  00C1               	movwf	___flmul@prod+3
  6343     032E  0834               	movf	??___flmul+2,w
  6344     032F  00C0               	movwf	___flmul@prod+2
  6345     0330  0833               	movf	??___flmul+1,w
  6346     0331  00BF               	movwf	___flmul@prod+1
  6347     0332  0832               	movf	??___flmul,w
  6348     0333  00BE               	movwf	___flmul@prod
  6349     0334                     l3489:
  6350     0334  3001               	movlw	1
  6351     0335  07C2               	addwf	___flmul@temp,f
  6352     0336  1803               	skipnc
  6353     0337  0AC3               	incf	___flmul@temp+1,f
  6354     0338  3000               	movlw	0
  6355     0339  07C3               	addwf	___flmul@temp+1,f
  6356     033A                     l3491:
  6357     033A  0843               	movf	___flmul@temp+1,w
  6358     033B  3A80               	xorlw	128
  6359     033C  00FF               	movwf	btemp+1
  6360     033D  3080               	movlw	128
  6361     033E  027F               	subwf	btemp+1,w
  6362     033F  1D03               	skipz
  6363     0340  2B43               	goto	u4365
  6364     0341  30FF               	movlw	255
  6365     0342  0242               	subwf	___flmul@temp,w
  6366     0343                     u4365:
  6367     0343  1C03               	skipc
  6368     0344  2B46               	goto	u4361
  6369     0345  2B47               	goto	u4360
  6370     0346                     u4361:
  6371     0346  2B52               	goto	l3495
  6372     0347                     u4360:
  6373     0347                     l3493:
  6374     0347  307F               	movlw	127
  6375     0348  1283               	bcf	3,5	;RP0=0, select bank0
  6376     0349  1303               	bcf	3,6	;RP1=0, select bank0
  6377     034A  00C1               	movwf	___flmul@prod+3
  6378     034B  3080               	movlw	128
  6379     034C  00C0               	movwf	___flmul@prod+2
  6380     034D  3000               	movlw	0
  6381     034E  00BF               	movwf	___flmul@prod+1
  6382     034F  3000               	movlw	0
  6383     0350  00BE               	movwf	___flmul@prod
  6384     0351  2B83               	goto	l3509
  6385     0352                     l3495:
  6386     0352  1283               	bcf	3,5	;RP0=0, select bank0
  6387     0353  1303               	bcf	3,6	;RP1=0, select bank0
  6388     0354  0843               	movf	___flmul@temp+1,w
  6389     0355  3A80               	xorlw	128
  6390     0356  00FF               	movwf	btemp+1
  6391     0357  3080               	movlw	128
  6392     0358  027F               	subwf	btemp+1,w
  6393     0359  1D03               	skipz
  6394     035A  2B5D               	goto	u4375
  6395     035B  3001               	movlw	1
  6396     035C  0242               	subwf	___flmul@temp,w
  6397     035D                     u4375:
  6398     035D  1803               	skipnc
  6399     035E  2B60               	goto	u4371
  6400     035F  2B61               	goto	u4370
  6401     0360                     u4371:
  6402     0360  2B6D               	goto	l3501
  6403     0361                     u4370:
  6404     0361                     l3497:
  6405     0361  3000               	movlw	0
  6406     0362  1283               	bcf	3,5	;RP0=0, select bank0
  6407     0363  1303               	bcf	3,6	;RP1=0, select bank0
  6408     0364  00C1               	movwf	___flmul@prod+3
  6409     0365  3000               	movlw	0
  6410     0366  00C0               	movwf	___flmul@prod+2
  6411     0367  3000               	movlw	0
  6412     0368  00BF               	movwf	___flmul@prod+1
  6413     0369  3000               	movlw	0
  6414     036A  00BE               	movwf	___flmul@prod
  6415     036B                     l3499:
  6416     036B  01B7               	clrf	___flmul@sign
  6417     036C  2B83               	goto	l3509
  6418     036D                     l3501:
  6419     036D  1283               	bcf	3,5	;RP0=0, select bank0
  6420     036E  1303               	bcf	3,6	;RP1=0, select bank0
  6421     036F  0842               	movf	___flmul@temp,w
  6422     0370  00BD               	movwf	___flmul@bexp
  6423     0371  30FF               	movlw	255
  6424     0372  05BE               	andwf	___flmul@prod,f
  6425     0373  30FF               	movlw	255
  6426     0374  05BF               	andwf	___flmul@prod+1,f
  6427     0375  307F               	movlw	127
  6428     0376  05C0               	andwf	___flmul@prod+2,f
  6429     0377  3000               	movlw	0
  6430     0378  05C1               	andwf	___flmul@prod+3,f
  6431     0379                     l3503:
  6432     0379  1C3D               	btfss	___flmul@bexp,0
  6433     037A  2B7C               	goto	u4381
  6434     037B  2B7D               	goto	u4380
  6435     037C                     u4381:
  6436     037C  2B7E               	goto	l3507
  6437     037D                     u4380:
  6438     037D                     l3505:
  6439     037D  17C0               	bsf	___flmul@prod+2,7
  6440     037E                     l3507:
  6441     037E  083D               	movf	___flmul@bexp,w
  6442     037F  00B2               	movwf	??___flmul
  6443     0380  1003               	clrc
  6444     0381  0C32               	rrf	??___flmul,w
  6445     0382  00C1               	movwf	___flmul@prod+3
  6446     0383                     l3509:
  6447     0383  0837               	movf	___flmul@sign,w
  6448     0384  00FF               	movwf	btemp+1
  6449     0385  087F               	movf	btemp+1,w
  6450     0386  04C1               	iorwf	___flmul@prod+3,f
  6451     0387                     l3511:
  6452     0387  0841               	movf	___flmul@prod+3,w
  6453     0388  00AD               	movwf	?___flmul+3
  6454     0389  0840               	movf	___flmul@prod+2,w
  6455     038A  00AC               	movwf	?___flmul+2
  6456     038B  083F               	movf	___flmul@prod+1,w
  6457     038C  00AB               	movwf	?___flmul+1
  6458     038D  083E               	movf	___flmul@prod,w
  6459     038E  00AA               	movwf	?___flmul
  6460     038F                     l1097:
  6461     038F  0008               	return
  6462     0390                     __end_of___flmul:
  6463                           
  6464                           	psect	text25
  6465     099E                     __ptext25:	
  6466 ;; *************** function __Umul8_16 *****************
  6467 ;; Defined at:
  6468 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul8_16.c"
  6469 ;; Parameters:    Size  Location     Type
  6470 ;;  multiplier      1    wreg     unsigned char 
  6471 ;;  multiplicand    1    3[COMMON] unsigned char 
  6472 ;; Auto vars:     Size  Location     Type
  6473 ;;  multiplier      1    4[BANK0 ] unsigned char 
  6474 ;;  word_mpld       2    2[BANK0 ] unsigned short 
  6475 ;;  product         2    0[BANK0 ] unsigned short 
  6476 ;; Return value:  Size  Location     Type
  6477 ;;                  2    3[COMMON] unsigned int 
  6478 ;; Registers used:
  6479 ;;		wreg, status,2, status,0
  6480 ;; Tracked objects:
  6481 ;;		On entry : 0/0
  6482 ;;		On exit  : 0/0
  6483 ;;		Unchanged: 0/0
  6484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6485 ;;      Params:         2       0       0       0       0
  6486 ;;      Locals:         0       5       0       0       0
  6487 ;;      Temps:          2       0       0       0       0
  6488 ;;      Totals:         4       5       0       0       0
  6489 ;;Total ram usage:        9 bytes
  6490 ;; Hardware stack levels used: 1
  6491 ;; Hardware stack levels required when called: 2
  6492 ;; This function calls:
  6493 ;;		Nothing
  6494 ;; This function is called by:
  6495 ;;		___flmul
  6496 ;; This function uses a non-reentrant model
  6497 ;;
  6498                           
  6499     099E                     __Umul8_16:	
  6500                           ;psect for function __Umul8_16
  6501                           
  6502                           
  6503                           ;incstack = 0
  6504                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6505                           ;__Umul8_16@multiplier stored from wreg
  6506     099E  1283               	bcf	3,5	;RP0=0, select bank0
  6507     099F  1303               	bcf	3,6	;RP1=0, select bank0
  6508     09A0  00A4               	movwf	__Umul8_16@multiplier
  6509     09A1                     l3141:
  6510     09A1  01A0               	clrf	__Umul8_16@product
  6511     09A2  01A1               	clrf	__Umul8_16@product+1
  6512     09A3                     l3143:
  6513     09A3  0873               	movf	__Umul8_16@multiplicand,w
  6514     09A4  00F5               	movwf	??__Umul8_16
  6515     09A5  01F6               	clrf	??__Umul8_16+1
  6516     09A6  0875               	movf	??__Umul8_16,w
  6517     09A7  00A2               	movwf	__Umul8_16@word_mpld
  6518     09A8  0876               	movf	??__Umul8_16+1,w
  6519     09A9  00A3               	movwf	__Umul8_16@word_mpld+1
  6520     09AA                     l3145:
  6521     09AA  1C24               	btfss	__Umul8_16@multiplier,0
  6522     09AB  29AD               	goto	u3691
  6523     09AC  29AE               	goto	u3690
  6524     09AD                     u3691:
  6525     09AD  29B4               	goto	l1116
  6526     09AE                     u3690:
  6527     09AE                     l3147:
  6528     09AE  0822               	movf	__Umul8_16@word_mpld,w
  6529     09AF  07A0               	addwf	__Umul8_16@product,f
  6530     09B0  1803               	skipnc
  6531     09B1  0AA1               	incf	__Umul8_16@product+1,f
  6532     09B2  0823               	movf	__Umul8_16@word_mpld+1,w
  6533     09B3  07A1               	addwf	__Umul8_16@product+1,f
  6534     09B4                     l1116:
  6535     09B4  3001               	movlw	1
  6536     09B5                     u3705:
  6537     09B5  1003               	clrc
  6538     09B6  0DA2               	rlf	__Umul8_16@word_mpld,f
  6539     09B7  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  6540     09B8  3EFF               	addlw	-1
  6541     09B9  1D03               	skipz
  6542     09BA  29B5               	goto	u3705
  6543     09BB  1003               	clrc
  6544     09BC  0CA4               	rrf	__Umul8_16@multiplier,f
  6545     09BD                     l3149:
  6546     09BD  0824               	movf	__Umul8_16@multiplier,w
  6547     09BE  1D03               	btfss	3,2
  6548     09BF  29C1               	goto	u3711
  6549     09C0  29C2               	goto	u3710
  6550     09C1                     u3711:
  6551     09C1  29AA               	goto	l3145
  6552     09C2                     u3710:
  6553     09C2                     l3151:
  6554     09C2  0821               	movf	__Umul8_16@product+1,w
  6555     09C3  00F4               	movwf	?__Umul8_16+1
  6556     09C4  0820               	movf	__Umul8_16@product,w
  6557     09C5  00F3               	movwf	?__Umul8_16
  6558     09C6                     l1118:
  6559     09C6  0008               	return
  6560     09C7                     __end_of__Umul8_16:
  6561                           
  6562                           	psect	text26
  6563     090E                     __ptext26:	
  6564 ;; *************** function _WRITE_DATA_EEPROM *****************
  6565 ;; Defined at:
  6566 ;;		line 10 in file "MCAL_LAYER/EEPROM/eeprom.c"
  6567 ;; Parameters:    Size  Location     Type
  6568 ;;  add             2    3[COMMON] unsigned short 
  6569 ;;  data            1    5[COMMON] unsigned char 
  6570 ;; Auto vars:     Size  Location     Type
  6571 ;;  status          1    6[COMMON] unsigned char 
  6572 ;; Return value:  Size  Location     Type
  6573 ;;                  1    wreg      unsigned char 
  6574 ;; Registers used:
  6575 ;;		wreg, status,2, status,0
  6576 ;; Tracked objects:
  6577 ;;		On entry : 0/0
  6578 ;;		On exit  : 0/0
  6579 ;;		Unchanged: 0/0
  6580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6581 ;;      Params:         3       0       0       0       0
  6582 ;;      Locals:         1       0       0       0       0
  6583 ;;      Temps:          0       0       0       0       0
  6584 ;;      Totals:         4       0       0       0       0
  6585 ;;Total ram usage:        4 bytes
  6586 ;; Hardware stack levels used: 1
  6587 ;; Hardware stack levels required when called: 2
  6588 ;; This function calls:
  6589 ;;		Nothing
  6590 ;; This function is called by:
  6591 ;;		_main
  6592 ;; This function uses a non-reentrant model
  6593 ;;
  6594                           
  6595     090E                     _WRITE_DATA_EEPROM:	
  6596                           ;psect for function _WRITE_DATA_EEPROM
  6597                           
  6598     090E                     l3237:	
  6599                           ;incstack = 0
  6600                           ; Regs used in _WRITE_DATA_EEPROM: [wreg+status,2+status,0]
  6601                           
  6602                           
  6603                           ;MCAL_LAYER/EEPROM/eeprom.c: 11:     uint8 status = INTCONbits.GIE;
  6604     090E  3000               	movlw	0
  6605     090F  1B8B               	btfsc	11,7	;volatile
  6606     0910  3001               	movlw	1
  6607     0911  00F6               	movwf	WRITE_DATA_EEPROM@status
  6608     0912                     l3239:
  6609                           
  6610                           ;MCAL_LAYER/EEPROM/eeprom.c: 12:     (EECON1bits.EEPGD = 0);
  6611     0912  1683               	bsf	3,5	;RP0=1, select bank3
  6612     0913  1703               	bsf	3,6	;RP1=1, select bank3
  6613     0914  138C               	bcf	12,7	;volsfr
  6614     0915                     l3241:
  6615                           
  6616                           ;MCAL_LAYER/EEPROM/eeprom.c: 13:     EEADR = (add & 0xFF);
  6617     0915  0873               	movf	WRITE_DATA_EEPROM@add,w
  6618     0916  1283               	bcf	3,5	;RP0=0, select bank2
  6619     0917  1703               	bsf	3,6	;RP1=1, select bank2
  6620     0918  008D               	movwf	13	;volatile
  6621     0919                     l3243:
  6622                           
  6623                           ;MCAL_LAYER/EEPROM/eeprom.c: 14:     EEDATA = data;
  6624     0919  0875               	movf	WRITE_DATA_EEPROM@data,w
  6625     091A  008C               	movwf	12	;volatile
  6626     091B                     l3245:
  6627                           
  6628                           ;MCAL_LAYER/EEPROM/eeprom.c: 15:     (EECON1bits.WREN = 1);
  6629     091B  1683               	bsf	3,5	;RP0=1, select bank3
  6630     091C  1703               	bsf	3,6	;RP1=1, select bank3
  6631     091D  150C               	bsf	12,2	;volsfr
  6632     091E                     l3247:
  6633                           
  6634                           ;MCAL_LAYER/EEPROM/eeprom.c: 16:     (INTCONbits.GIE = 0);
  6635     091E  138B               	bcf	11,7	;volatile
  6636     091F                     l3249:
  6637                           
  6638                           ;MCAL_LAYER/EEPROM/eeprom.c: 18:     EECON2 = 0x55;
  6639     091F  3055               	movlw	85
  6640     0920  008D               	movwf	13	;volsfr
  6641     0921                     l3251:
  6642                           
  6643                           ;MCAL_LAYER/EEPROM/eeprom.c: 19:     EECON2 = 0xAA;
  6644     0921  30AA               	movlw	170
  6645     0922  008D               	movwf	13	;volsfr
  6646     0923                     l3253:
  6647                           
  6648                           ;MCAL_LAYER/EEPROM/eeprom.c: 21:     (EECON1bits.WR = 1);
  6649     0923  148C               	bsf	12,1	;volsfr
  6650     0924                     l227:	
  6651                           ;MCAL_LAYER/EEPROM/eeprom.c: 22:     while(EECON1bits.WR);
  6652                           
  6653     0924  188C               	btfsc	12,1	;volsfr
  6654     0925  2927               	goto	u3801
  6655     0926  2928               	goto	u3800
  6656     0927                     u3801:
  6657     0927  2924               	goto	l227
  6658     0928                     u3800:
  6659     0928                     l229:
  6660                           
  6661                           ;MCAL_LAYER/EEPROM/eeprom.c: 23:     (EECON1bits.WREN = 0);
  6662     0928  110C               	bcf	12,2	;volsfr
  6663     0929                     l3255:
  6664                           
  6665                           ;MCAL_LAYER/EEPROM/eeprom.c: 24:     INTCONbits.GIE = status;
  6666     0929  0C76               	rrf	WRITE_DATA_EEPROM@status,w
  6667     092A  1C03               	skipc
  6668     092B  138B               	bcf	11,7	;volatile
  6669     092C  1803               	skipnc
  6670     092D  178B               	bsf	11,7	;volatile
  6671     092E                     l230:
  6672     092E  0008               	return
  6673     092F                     __end_of_WRITE_DATA_EEPROM:
  6674                           
  6675                           	psect	text27
  6676     0B99                     __ptext27:	
  6677 ;; *************** function _Convert_uint16_to_string *****************
  6678 ;; Defined at:
  6679 ;;		line 116 in file "ECU_LAYER/LCD/ecu_lcd.c"
  6680 ;; Parameters:    Size  Location     Type
  6681 ;;  data            2   38[BANK0 ] unsigned short 
  6682 ;;  str             1   40[BANK0 ] PTR unsigned char 
  6683 ;;		 -> lcd_show(6), 
  6684 ;; Auto vars:     Size  Location     Type
  6685 ;;  temp            6    0[BANK1 ] unsigned char [6]
  6686 ;;  counter         1    6[BANK1 ] unsigned char 
  6687 ;; Return value:  Size  Location     Type
  6688 ;;                  1    wreg      void 
  6689 ;; Registers used:
  6690 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6691 ;; Tracked objects:
  6692 ;;		On entry : 0/0
  6693 ;;		On exit  : 0/0
  6694 ;;		Unchanged: 0/0
  6695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6696 ;;      Params:         0       3       0       0       0
  6697 ;;      Locals:         0       0       7       0       0
  6698 ;;      Temps:          0       1       0       0       0
  6699 ;;      Totals:         0       4       7       0       0
  6700 ;;Total ram usage:       11 bytes
  6701 ;; Hardware stack levels used: 1
  6702 ;; Hardware stack levels required when called: 7
  6703 ;; This function calls:
  6704 ;;		_memset
  6705 ;;		_sprintf
  6706 ;; This function is called by:
  6707 ;;		_main
  6708 ;; This function uses a non-reentrant model
  6709 ;;
  6710                           
  6711     0B99                     _Convert_uint16_to_string:	
  6712                           ;psect for function _Convert_uint16_to_string
  6713                           
  6714     0B99                     l4525:	
  6715                           ;incstack = 0
  6716                           ; Regs used in _Convert_uint16_to_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
  6717                           
  6718                           
  6719                           ;ECU_LAYER/LCD/ecu_lcd.c: 117:     uint8 temp[6] = {0};
  6720     0B99  30D5               	movlw	Convert_uint16_to_string@temp& (0+255)
  6721     0B9A  0084               	movwf	4
  6722     0B9B  3006               	movlw	6
  6723     0B9C  00FF               	movwf	btemp+1
  6724     0B9D                     u6400:
  6725     0B9D  1383               	bcf	3,7	;select IRP bank1
  6726     0B9E  0180               	clrf	0
  6727     0B9F  0A84               	incf	4,f
  6728     0BA0  0BFF               	decfsz	btemp+1,f
  6729     0BA1  2B9D               	goto	u6400
  6730     0BA2                     l4527:
  6731                           
  6732                           ;ECU_LAYER/LCD/ecu_lcd.c: 118:     uint8 counter = 0;
  6733     0BA2  1683               	bsf	3,5	;RP0=1, select bank1
  6734     0BA3  1303               	bcf	3,6	;RP1=0, select bank1
  6735     0BA4  01DB               	clrf	Convert_uint16_to_string@counter^(0+128)
  6736     0BA5                     l4529:
  6737                           
  6738                           ;ECU_LAYER/LCD/ecu_lcd.c: 119:     memset(str,' ',5);
  6739     0BA5  3020               	movlw	32
  6740     0BA6  00F3               	movwf	memset@c
  6741     0BA7  3000               	movlw	0
  6742     0BA8  00F4               	movwf	memset@c+1
  6743     0BA9  3005               	movlw	5
  6744     0BAA  00F5               	movwf	memset@n
  6745     0BAB  3000               	movlw	0
  6746     0BAC  00F6               	movwf	memset@n+1
  6747     0BAD  1283               	bcf	3,5	;RP0=0, select bank0
  6748     0BAE  1303               	bcf	3,6	;RP1=0, select bank0
  6749     0BAF  0848               	movf	Convert_uint16_to_string@str,w
  6750     0BB0  120A  158A  20B0  120A  158A  	fcall	_memset
  6751     0BB5                     l4531:
  6752                           
  6753                           ;ECU_LAYER/LCD/ecu_lcd.c: 120:     str[5] = '\0';
  6754     0BB5  1283               	bcf	3,5	;RP0=0, select bank0
  6755     0BB6  1303               	bcf	3,6	;RP1=0, select bank0
  6756     0BB7  0848               	movf	Convert_uint16_to_string@str,w
  6757     0BB8  3E05               	addlw	5
  6758     0BB9  0084               	movwf	4
  6759     0BBA  1383               	bcf	3,7	;select IRP bank0
  6760     0BBB  0180               	clrf	0
  6761     0BBC                     l4533:
  6762                           
  6763                           ;ECU_LAYER/LCD/ecu_lcd.c: 121:     sprintf((char *)temp,"%i",data);
  6764     0BBC  300C               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  6765     0BBD  00B6               	movwf	sprintf@fmt
  6766     0BBE  0847               	movf	Convert_uint16_to_string@data+1,w
  6767     0BBF  00B8               	movwf	?_sprintf+2
  6768     0BC0  0846               	movf	Convert_uint16_to_string@data,w
  6769     0BC1  00B7               	movwf	?_sprintf+1
  6770     0BC2  30D5               	movlw	(low (Convert_uint16_to_string@temp| 0))& (0+255)
  6771     0BC3  120A  158A  20CE  120A  158A  	fcall	_sprintf
  6772                           
  6773                           ;ECU_LAYER/LCD/ecu_lcd.c: 122:     while(temp[counter] != '\0'){
  6774     0BC8  2BDD               	goto	l4539
  6775     0BC9                     l4535:
  6776                           
  6777                           ;ECU_LAYER/LCD/ecu_lcd.c: 123:         str[counter] = temp[counter];
  6778     0BC9  085B               	movf	Convert_uint16_to_string@counter^(0+128),w
  6779     0BCA  3ED5               	addlw	(low (Convert_uint16_to_string@temp| 0))& (0+255)
  6780     0BCB  0084               	movwf	4
  6781     0BCC  0800               	movf	0,w
  6782     0BCD  00FF               	movwf	btemp+1
  6783     0BCE  085B               	movf	Convert_uint16_to_string@counter^(0+128),w
  6784     0BCF  1283               	bcf	3,5	;RP0=0, select bank0
  6785     0BD0  1303               	bcf	3,6	;RP1=0, select bank0
  6786     0BD1  0748               	addwf	Convert_uint16_to_string@str,w
  6787     0BD2  00C9               	movwf	??_Convert_uint16_to_string
  6788     0BD3  0849               	movf	??_Convert_uint16_to_string,w
  6789     0BD4  0084               	movwf	4
  6790     0BD5  087F               	movf	btemp+1,w
  6791     0BD6  0080               	movwf	0
  6792     0BD7                     l4537:
  6793                           
  6794                           ;ECU_LAYER/LCD/ecu_lcd.c: 124:         counter++;
  6795     0BD7  3001               	movlw	1
  6796     0BD8  00FF               	movwf	btemp+1
  6797     0BD9  087F               	movf	btemp+1,w
  6798     0BDA  1683               	bsf	3,5	;RP0=1, select bank1
  6799     0BDB  1303               	bcf	3,6	;RP1=0, select bank1
  6800     0BDC  07DB               	addwf	Convert_uint16_to_string@counter^(0+128),f
  6801     0BDD                     l4539:
  6802                           
  6803                           ;ECU_LAYER/LCD/ecu_lcd.c: 122:     while(temp[counter] != '\0'){
  6804     0BDD  1683               	bsf	3,5	;RP0=1, select bank1
  6805     0BDE  1303               	bcf	3,6	;RP1=0, select bank1
  6806     0BDF  085B               	movf	Convert_uint16_to_string@counter^(0+128),w
  6807     0BE0  3ED5               	addlw	(low (Convert_uint16_to_string@temp| 0))& (0+255)
  6808     0BE1  0084               	movwf	4
  6809     0BE2  1383               	bcf	3,7	;select IRP bank1
  6810     0BE3  0800               	movf	0,w
  6811     0BE4  1D03               	btfss	3,2
  6812     0BE5  2BE7               	goto	u6411
  6813     0BE6  2BE8               	goto	u6410
  6814     0BE7                     u6411:
  6815     0BE7  2BC9               	goto	l4535
  6816     0BE8                     u6410:
  6817     0BE8                     l69:
  6818     0BE8  0008               	return
  6819     0BE9                     __end_of_Convert_uint16_to_string:
  6820                           
  6821                           	psect	text28
  6822     08CE                     __ptext28:	
  6823 ;; *************** function _sprintf *****************
  6824 ;; Defined at:
  6825 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  6826 ;; Parameters:    Size  Location     Type
  6827 ;;  s               1    wreg     PTR unsigned char 
  6828 ;;		 -> Convert_uint32_to_string@temp(11), Convert_uint16_to_string@temp(6), Convert_uint8_to_string@temp(4), 
  6829 ;;  fmt             1   22[BANK0 ] PTR const unsigned char 
  6830 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  6831 ;; Auto vars:     Size  Location     Type
  6832 ;;  s               1   26[BANK0 ] PTR unsigned char 
  6833 ;;		 -> Convert_uint32_to_string@temp(11), Convert_uint16_to_string@temp(6), Convert_uint8_to_string@temp(4), 
  6834 ;;  f              11   27[BANK0 ] struct _IO_FILE
  6835 ;;  ret             2    0        int 
  6836 ;;  ap              1   25[BANK0 ] PTR void [1]
  6837 ;;		 -> ?_sprintf(2), 
  6838 ;; Return value:  Size  Location     Type
  6839 ;;                  2   22[BANK0 ] int 
  6840 ;; Registers used:
  6841 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6842 ;; Tracked objects:
  6843 ;;		On entry : 0/0
  6844 ;;		On exit  : 0/0
  6845 ;;		Unchanged: 0/0
  6846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6847 ;;      Params:         0       3       0       0       0
  6848 ;;      Locals:         0      13       0       0       0
  6849 ;;      Temps:          1       0       0       0       0
  6850 ;;      Totals:         1      16       0       0       0
  6851 ;;Total ram usage:       17 bytes
  6852 ;; Hardware stack levels used: 1
  6853 ;; Hardware stack levels required when called: 6
  6854 ;; This function calls:
  6855 ;;		_vfprintf
  6856 ;; This function is called by:
  6857 ;;		_Convert_uint16_to_string
  6858 ;;		_Convert_uint8_to_string
  6859 ;;		_Convert_uint32_to_string
  6860 ;; This function uses a non-reentrant model
  6861 ;;
  6862                           
  6863     08CE                     _sprintf:	
  6864                           ;psect for function _sprintf
  6865                           
  6866                           
  6867                           ;incstack = 0
  6868                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6869                           ;sprintf@s stored from wreg
  6870     08CE  1283               	bcf	3,5	;RP0=0, select bank0
  6871     08CF  1303               	bcf	3,6	;RP1=0, select bank0
  6872     08D0  00BA               	movwf	sprintf@s
  6873     08D1                     l4463:
  6874     08D1  3037               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  6875     08D2  00B9               	movwf	sprintf@ap
  6876     08D3  083A               	movf	sprintf@s,w
  6877     08D4  00BB               	movwf	sprintf@f
  6878     08D5                     l4465:
  6879     08D5  01BD               	clrf	sprintf@f+2
  6880     08D6  01BE               	clrf	sprintf@f+3
  6881     08D7                     l4467:
  6882     08D7  01C4               	clrf	sprintf@f+9
  6883     08D8  01C5               	clrf	sprintf@f+10
  6884     08D9                     l4469:
  6885     08D9  0836               	movf	sprintf@fmt,w
  6886     08DA  00B2               	movwf	vfprintf@fmt
  6887     08DB  3039               	movlw	(low (sprintf@ap| 0))& (0+255)
  6888     08DC  00B3               	movwf	vfprintf@ap
  6889     08DD  303B               	movlw	(low (sprintf@f| 0))& (0+255)
  6890     08DE  120A  158A  20ED  120A  158A  	fcall	_vfprintf
  6891     08E3                     l4471:
  6892     08E3  1283               	bcf	3,5	;RP0=0, select bank0
  6893     08E4  1303               	bcf	3,6	;RP1=0, select bank0
  6894     08E5  083D               	movf	sprintf@f+2,w
  6895     08E6  073A               	addwf	sprintf@s,w
  6896     08E7  00F7               	movwf	??_sprintf
  6897     08E8  0877               	movf	??_sprintf,w
  6898     08E9  0084               	movwf	4
  6899     08EA  1383               	bcf	3,7	;select IRP bank0
  6900     08EB  0180               	clrf	0
  6901     08EC                     l1169:
  6902     08EC  0008               	return
  6903     08ED                     __end_of_sprintf:
  6904                           
  6905                           	psect	text29
  6906     08ED                     __ptext29:	
  6907 ;; *************** function _vfprintf *****************
  6908 ;; Defined at:
  6909 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  6910 ;; Parameters:    Size  Location     Type
  6911 ;;  fp              1    wreg     PTR struct _IO_FILE
  6912 ;;		 -> sprintf@f(11), 
  6913 ;;  fmt             1   18[BANK0 ] PTR const unsigned char 
  6914 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  6915 ;;  ap              1   19[BANK0 ] PTR PTR void 
  6916 ;;		 -> sprintf@ap(1), 
  6917 ;; Auto vars:     Size  Location     Type
  6918 ;;  fp              1   20[BANK0 ] PTR struct _IO_FILE
  6919 ;;		 -> sprintf@f(11), 
  6920 ;;  cfmt            1   21[BANK0 ] PTR unsigned char 
  6921 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  6922 ;; Return value:  Size  Location     Type
  6923 ;;                  2   18[BANK0 ] int 
  6924 ;; Registers used:
  6925 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6926 ;; Tracked objects:
  6927 ;;		On entry : 0/0
  6928 ;;		On exit  : 0/0
  6929 ;;		Unchanged: 0/0
  6930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6931 ;;      Params:         0       2       0       0       0
  6932 ;;      Locals:         0       2       0       0       0
  6933 ;;      Temps:          0       0       0       0       0
  6934 ;;      Totals:         0       4       0       0       0
  6935 ;;Total ram usage:        4 bytes
  6936 ;; Hardware stack levels used: 1
  6937 ;; Hardware stack levels required when called: 5
  6938 ;; This function calls:
  6939 ;;		_vfpfcnvrt
  6940 ;; This function is called by:
  6941 ;;		_sprintf
  6942 ;; This function uses a non-reentrant model
  6943 ;;
  6944                           
  6945     08ED                     _vfprintf:	
  6946                           ;psect for function _vfprintf
  6947                           
  6948                           
  6949                           ;incstack = 0
  6950 ;; using string table level
  6951                           ; Regs used in _vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6952                           ;vfprintf@fp stored from wreg
  6953     08ED  1283               	bcf	3,5	;RP0=0, select bank0
  6954     08EE  1303               	bcf	3,6	;RP1=0, select bank0
  6955     08EF  00B4               	movwf	vfprintf@fp
  6956     08F0                     l4411:
  6957                           
  6958                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  6959     08F0  0832               	movf	vfprintf@fmt,w
  6960     08F1  00B5               	movwf	vfprintf@cfmt
  6961                           
  6962                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  6963     08F2  28FD               	goto	l4415
  6964     08F3                     l4413:
  6965                           
  6966                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  6967     08F3  3035               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  6968     08F4  00A6               	movwf	vfpfcnvrt@fmt
  6969     08F5  0833               	movf	vfprintf@ap,w
  6970     08F6  00A7               	movwf	vfpfcnvrt@ap
  6971     08F7  0834               	movf	vfprintf@fp,w
  6972     08F8  120A  118A  247F  120A  158A  	fcall	_vfpfcnvrt
  6973     08FD                     l4415:
  6974                           
  6975                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  6976     08FD  1283               	bcf	3,5	;RP0=0, select bank0
  6977     08FE  1303               	bcf	3,6	;RP1=0, select bank0
  6978     08FF  0835               	movf	vfprintf@cfmt,w
  6979     0900  0084               	movwf	4
  6980     0901  120A  158A  200A  120A  158A  	fcall	stringdir
  6981     0906  3A00               	xorlw	0
  6982     0907  1D03               	skipz
  6983     0908  290A               	goto	u6271
  6984     0909  290B               	goto	u6270
  6985     090A                     u6271:
  6986     090A  28F3               	goto	l4413
  6987     090B                     u6270:
  6988     090B                     l4417:
  6989                           
  6990                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  6991     090B  01B2               	clrf	?_vfprintf
  6992     090C  01B3               	clrf	?_vfprintf+1
  6993     090D                     l1213:
  6994     090D  0008               	return
  6995     090E                     __end_of_vfprintf:
  6996                           
  6997                           	psect	text30
  6998     047F                     __ptext30:	
  6999 ;; *************** function _vfpfcnvrt *****************
  7000 ;; Defined at:
  7001 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  7002 ;; Parameters:    Size  Location     Type
  7003 ;;  fp              1    wreg     PTR struct _IO_FILE
  7004 ;;		 -> sprintf@f(11), 
  7005 ;;  fmt             1    6[BANK0 ] PTR PTR unsigned char 
  7006 ;;		 -> vfprintf@cfmt(1), 
  7007 ;;  ap              1    7[BANK0 ] PTR PTR void 
  7008 ;;		 -> sprintf@ap(1), 
  7009 ;; Auto vars:     Size  Location     Type
  7010 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  7011 ;;		 -> sprintf@f(11), 
  7012 ;;  convarg         4   13[BANK0 ] struct .
  7013 ;;  c               1   17[BANK0 ] unsigned char 
  7014 ;;  cp              1   12[BANK0 ] PTR unsigned char 
  7015 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  7016 ;;  done            1   10[BANK0 ] _Bool 
  7017 ;; Return value:  Size  Location     Type
  7018 ;;                  1    wreg      void 
  7019 ;; Registers used:
  7020 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7021 ;; Tracked objects:
  7022 ;;		On entry : 0/0
  7023 ;;		On exit  : 0/0
  7024 ;;		Unchanged: 0/0
  7025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7026 ;;      Params:         0       2       0       0       0
  7027 ;;      Locals:         0       8       0       0       0
  7028 ;;      Temps:          0       2       0       0       0
  7029 ;;      Totals:         0      12       0       0       0
  7030 ;;Total ram usage:       12 bytes
  7031 ;; Hardware stack levels used: 1
  7032 ;; Hardware stack levels required when called: 4
  7033 ;; This function calls:
  7034 ;;		___awdiv
  7035 ;;		___awmod
  7036 ;;		_abs
  7037 ;;		_fputc
  7038 ;; This function is called by:
  7039 ;;		_vfprintf
  7040 ;; This function uses a non-reentrant model
  7041 ;;
  7042                           
  7043     047F                     _vfpfcnvrt:	
  7044                           ;psect for function _vfpfcnvrt
  7045                           
  7046                           
  7047                           ;incstack = 0
  7048 ;; using string table level
  7049                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7050                           ;vfpfcnvrt@fp stored from wreg
  7051     047F  1283               	bcf	3,5	;RP0=0, select bank0
  7052     0480  1303               	bcf	3,6	;RP1=0, select bank0
  7053     0481  00AB               	movwf	vfpfcnvrt@fp
  7054     0482                     l4273:
  7055                           
  7056                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  7057     0482  0826               	movf	vfpfcnvrt@fmt,w
  7058     0483  0084               	movwf	4
  7059     0484  1383               	bcf	3,7	;select IRP bank0
  7060     0485  0800               	movf	0,w
  7061     0486  0084               	movwf	4
  7062     0487  120A  158A  200A  120A  118A  	fcall	stringdir
  7063     048C  3A25               	xorlw	37
  7064     048D  1D03               	skipz
  7065     048E  2C90               	goto	u6111
  7066     048F  2C91               	goto	u6110
  7067     0490                     u6111:
  7068     0490  2D56               	goto	l4319
  7069     0491                     u6110:
  7070     0491                     l4275:
  7071                           
  7072                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  7073     0491  3001               	movlw	1
  7074     0492  00FF               	movwf	btemp+1
  7075     0493  0826               	movf	vfpfcnvrt@fmt,w
  7076     0494  0084               	movwf	4
  7077     0495  087F               	movf	btemp+1,w
  7078     0496  0780               	addwf	0,f
  7079     0497                     l4277:
  7080                           
  7081                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  7082     0497  01CE               	clrf	_width
  7083     0498  01CF               	clrf	_width+1
  7084     0499  1003               	clrc
  7085     049A  3000               	movlw	0
  7086     049B  1803               	btfsc	3,0
  7087     049C  3001               	movlw	1
  7088     049D  00D4               	movwf	_flags
  7089     049E                     l4279:
  7090                           
  7091                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  7092     049E  30FF               	movlw	255
  7093     049F  00D0               	movwf	_prec
  7094     04A0  30FF               	movlw	255
  7095     04A1  00D1               	movwf	_prec+1
  7096     04A2                     l4281:
  7097                           
  7098                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  7099     04A2  0826               	movf	vfpfcnvrt@fmt,w
  7100     04A3  0084               	movwf	4
  7101     04A4  0800               	movf	0,w
  7102     04A5  00AC               	movwf	vfpfcnvrt@cp
  7103     04A6                     l4283:
  7104                           
  7105                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  7106     04A6  082C               	movf	vfpfcnvrt@cp,w
  7107     04A7  0084               	movwf	4
  7108     04A8  120A  158A  200A  120A  118A  	fcall	stringdir
  7109     04AD  3A64               	xorlw	100
  7110     04AE  1903               	skipnz
  7111     04AF  2CB1               	goto	u6121
  7112     04B0  2CB2               	goto	u6120
  7113     04B1                     u6121:
  7114     04B1  2CBE               	goto	l4287
  7115     04B2                     u6120:
  7116     04B2                     l4285:
  7117     04B2  082C               	movf	vfpfcnvrt@cp,w
  7118     04B3  0084               	movwf	4
  7119     04B4  120A  158A  200A  120A  118A  	fcall	stringdir
  7120     04B9  3A69               	xorlw	105
  7121     04BA  1D03               	skipz
  7122     04BB  2CBD               	goto	u6131
  7123     04BC  2CBE               	goto	u6130
  7124     04BD                     u6131:
  7125     04BD  2D4C               	goto	l4315
  7126     04BE                     u6130:
  7127     04BE                     l4287:
  7128                           
  7129                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  7130     04BE  0827               	movf	vfpfcnvrt@ap,w
  7131     04BF  0084               	movwf	4
  7132     04C0  0800               	movf	0,w
  7133     04C1  00FF               	movwf	btemp+1
  7134     04C2  3002               	movlw	2
  7135     04C3  0780               	addwf	0,f
  7136     04C4  087F               	movf	btemp+1,w
  7137     04C5  0084               	movwf	4
  7138     04C6  0800               	movf	0,w
  7139     04C7  00AD               	movwf	vfpfcnvrt@convarg
  7140     04C8  0A84               	incf	4,f
  7141     04C9  0800               	movf	0,w
  7142     04CA  00AE               	movwf	vfpfcnvrt@convarg+1
  7143     04CB                     l4289:
  7144                           
  7145                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  7146     04CB  0826               	movf	vfpfcnvrt@fmt,w
  7147     04CC  0084               	movwf	4
  7148     04CD  082C               	movf	vfpfcnvrt@cp,w
  7149     04CE  3E01               	addlw	1
  7150     04CF  0080               	movwf	0
  7151     04D0                     l4291:
  7152                           
  7153                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  7154     04D0  3020               	movlw	32
  7155     04D1  00B1               	movwf	vfpfcnvrt@c
  7156     04D2                     l4293:
  7157                           
  7158                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  7159     04D2  1BAE               	btfsc	vfpfcnvrt@convarg+1,7
  7160     04D3  2CD5               	goto	u6141
  7161     04D4  2CD7               	goto	u6140
  7162     04D5                     u6141:
  7163     04D5  3001               	movlw	1
  7164     04D6  2CD8               	goto	u6150
  7165     04D7                     u6140:
  7166     04D7  3000               	movlw	0
  7167     04D8                     u6150:
  7168     04D8  00AA               	movwf	vfpfcnvrt@done
  7169     04D9                     l4295:
  7170                           
  7171                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  7172     04D9  3001               	movlw	1
  7173     04DA  02B1               	subwf	vfpfcnvrt@c,f
  7174     04DB  0831               	movf	vfpfcnvrt@c,w
  7175     04DC  3E90               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7176     04DD  0084               	movwf	4
  7177     04DE  300A               	movlw	10
  7178     04DF  00F3               	movwf	___awmod@divisor
  7179     04E0  3000               	movlw	0
  7180     04E1  00F4               	movwf	___awmod@divisor+1
  7181     04E2  082E               	movf	vfpfcnvrt@convarg+1,w
  7182     04E3  00F6               	movwf	___awmod@dividend+1
  7183     04E4  082D               	movf	vfpfcnvrt@convarg,w
  7184     04E5  00F5               	movwf	___awmod@dividend
  7185     04E6  120A  158A  2497  120A  118A  	fcall	___awmod
  7186     04EB  0874               	movf	?___awmod+1,w
  7187     04EC  1283               	bcf	3,5	;RP0=0, select bank0
  7188     04ED  1303               	bcf	3,6	;RP1=0, select bank0
  7189     04EE  00A3               	movwf	abs@a+1
  7190     04EF  0873               	movf	?___awmod,w
  7191     04F0  00A2               	movwf	abs@a
  7192     04F1  160A  118A  27C7  120A  118A  	fcall	_abs
  7193     04F6  1283               	bcf	3,5	;RP0=0, select bank0
  7194     04F7  1303               	bcf	3,6	;RP1=0, select bank0
  7195     04F8  0822               	movf	?_abs,w
  7196     04F9  3E30               	addlw	48
  7197     04FA  1783               	bsf	3,7	;select IRP bank3
  7198     04FB  0080               	movwf	0
  7199     04FC                     l4297:
  7200                           
  7201                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  7202     04FC  300A               	movlw	10
  7203     04FD  00F3               	movwf	___awdiv@divisor
  7204     04FE  3000               	movlw	0
  7205     04FF  00F4               	movwf	___awdiv@divisor+1
  7206     0500  082E               	movf	vfpfcnvrt@convarg+1,w
  7207     0501  00F6               	movwf	___awdiv@dividend+1
  7208     0502  082D               	movf	vfpfcnvrt@convarg,w
  7209     0503  00F5               	movwf	___awdiv@dividend
  7210     0504  120A  158A  24F2  120A  118A  	fcall	___awdiv
  7211     0509  0874               	movf	?___awdiv+1,w
  7212     050A  1283               	bcf	3,5	;RP0=0, select bank0
  7213     050B  1303               	bcf	3,6	;RP1=0, select bank0
  7214     050C  00AE               	movwf	vfpfcnvrt@convarg+1
  7215     050D  0873               	movf	?___awdiv,w
  7216     050E  00AD               	movwf	vfpfcnvrt@convarg
  7217     050F                     l4299:
  7218                           
  7219                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  7220     050F  082D               	movf	vfpfcnvrt@convarg,w
  7221     0510  042E               	iorwf	vfpfcnvrt@convarg+1,w
  7222     0511  1903               	btfsc	3,2
  7223     0512  2D14               	goto	u6161
  7224     0513  2D15               	goto	u6160
  7225     0514                     u6161:
  7226     0514  2D1A               	goto	l4303
  7227     0515                     u6160:
  7228     0515                     l4301:
  7229     0515  0831               	movf	vfpfcnvrt@c,w
  7230     0516  1D03               	btfss	3,2
  7231     0517  2D19               	goto	u6171
  7232     0518  2D1A               	goto	u6170
  7233     0519                     u6171:
  7234     0519  2CD9               	goto	l4295
  7235     051A                     u6170:
  7236     051A                     l4303:
  7237                           
  7238                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  7239     051A  0831               	movf	vfpfcnvrt@c,w
  7240     051B  1903               	btfsc	3,2
  7241     051C  2D1E               	goto	u6181
  7242     051D  2D1F               	goto	u6180
  7243     051E                     u6181:
  7244     051E  2D45               	goto	l4313
  7245     051F                     u6180:
  7246     051F                     l4305:
  7247     051F  082A               	movf	vfpfcnvrt@done,w
  7248     0520  1903               	btfsc	3,2
  7249     0521  2D23               	goto	u6191
  7250     0522  2D24               	goto	u6190
  7251     0523                     u6191:
  7252     0523  2D45               	goto	l4313
  7253     0524                     u6190:
  7254     0524                     l4307:
  7255                           
  7256                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  7257     0524  3001               	movlw	1
  7258     0525  02B1               	subwf	vfpfcnvrt@c,f
  7259     0526  0831               	movf	vfpfcnvrt@c,w
  7260     0527  3E90               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7261     0528  0084               	movwf	4
  7262     0529  302D               	movlw	45
  7263     052A  1783               	bsf	3,7	;select IRP bank3
  7264     052B  0080               	movwf	0
  7265     052C  2D45               	goto	l4313
  7266     052D                     l4309:
  7267                           
  7268                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  7269     052D  0831               	movf	vfpfcnvrt@c,w
  7270     052E  3E90               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7271     052F  0084               	movwf	4
  7272     0530  1783               	bsf	3,7	;select IRP bank3
  7273     0531  0800               	movf	0,w
  7274     0532  00A8               	movwf	??_vfpfcnvrt
  7275     0533  01A9               	clrf	??_vfpfcnvrt+1
  7276     0534  0828               	movf	??_vfpfcnvrt,w
  7277     0535  00F3               	movwf	fputc@c
  7278     0536  0829               	movf	??_vfpfcnvrt+1,w
  7279     0537  00F4               	movwf	fputc@c+1
  7280     0538  082B               	movf	vfpfcnvrt@fp,w
  7281     0539  00F5               	movwf	fputc@fp
  7282     053A  120A  158A  243D  120A  118A  	fcall	_fputc
  7283     053F                     l4311:
  7284     053F  3001               	movlw	1
  7285     0540  00FF               	movwf	btemp+1
  7286     0541  087F               	movf	btemp+1,w
  7287     0542  1283               	bcf	3,5	;RP0=0, select bank0
  7288     0543  1303               	bcf	3,6	;RP1=0, select bank0
  7289     0544  07B1               	addwf	vfpfcnvrt@c,f
  7290     0545                     l4313:
  7291                           
  7292                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  7293     0545  3020               	movlw	32
  7294     0546  0631               	xorwf	vfpfcnvrt@c,w
  7295     0547  1D03               	btfss	3,2
  7296     0548  2D4A               	goto	u6201
  7297     0549  2D4B               	goto	u6200
  7298     054A                     u6201:
  7299     054A  2D2D               	goto	l4309
  7300     054B                     u6200:
  7301     054B  2D6D               	goto	l1207
  7302     054C                     l4315:
  7303                           
  7304                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  7305     054C  3001               	movlw	1
  7306     054D  00FF               	movwf	btemp+1
  7307     054E  1283               	bcf	3,5	;RP0=0, select bank0
  7308     054F  1303               	bcf	3,6	;RP1=0, select bank0
  7309     0550  0826               	movf	vfpfcnvrt@fmt,w
  7310     0551  0084               	movwf	4
  7311     0552  087F               	movf	btemp+1,w
  7312     0553  1383               	bcf	3,7	;select IRP bank0
  7313     0554  0780               	addwf	0,f
  7314     0555  2D6D               	goto	l1207
  7315     0556                     l4319:
  7316                           
  7317                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  7318     0556  0826               	movf	vfpfcnvrt@fmt,w
  7319     0557  0084               	movwf	4
  7320     0558  0800               	movf	0,w
  7321     0559  0084               	movwf	4
  7322     055A  120A  158A  200A  120A  118A  	fcall	stringdir
  7323     055F  00A8               	movwf	??_vfpfcnvrt
  7324     0560  01A9               	clrf	??_vfpfcnvrt+1
  7325     0561  0828               	movf	??_vfpfcnvrt,w
  7326     0562  00F3               	movwf	fputc@c
  7327     0563  0829               	movf	??_vfpfcnvrt+1,w
  7328     0564  00F4               	movwf	fputc@c+1
  7329     0565  082B               	movf	vfpfcnvrt@fp,w
  7330     0566  00F5               	movwf	fputc@fp
  7331     0567  120A  158A  243D  120A  118A  	fcall	_fputc
  7332     056C  2D4C               	goto	l4315
  7333     056D                     l1207:
  7334     056D  0008               	return
  7335     056E                     __end_of_vfpfcnvrt:
  7336                           
  7337                           	psect	text31
  7338     0C3D                     __ptext31:	
  7339 ;; *************** function _fputc *****************
  7340 ;; Defined at:
  7341 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  7342 ;; Parameters:    Size  Location     Type
  7343 ;;  c               2    3[COMMON] int 
  7344 ;;  fp              1    5[COMMON] PTR struct _IO_FILE
  7345 ;;		 -> sprintf@f(11), 
  7346 ;; Auto vars:     Size  Location     Type
  7347 ;;		None
  7348 ;; Return value:  Size  Location     Type
  7349 ;;                  2    3[COMMON] int 
  7350 ;; Registers used:
  7351 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7352 ;; Tracked objects:
  7353 ;;		On entry : 0/0
  7354 ;;		On exit  : 0/0
  7355 ;;		Unchanged: 0/0
  7356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7357 ;;      Params:         3       0       0       0       0
  7358 ;;      Locals:         0       0       0       0       0
  7359 ;;      Temps:          0       5       0       0       0
  7360 ;;      Totals:         3       5       0       0       0
  7361 ;;Total ram usage:        8 bytes
  7362 ;; Hardware stack levels used: 1
  7363 ;; Hardware stack levels required when called: 3
  7364 ;; This function calls:
  7365 ;;		_putch
  7366 ;; This function is called by:
  7367 ;;		_vfpfcnvrt
  7368 ;; This function uses a non-reentrant model
  7369 ;;
  7370                           
  7371     0C3D                     _fputc:	
  7372                           ;psect for function _fputc
  7373                           
  7374     0C3D                     l4191:	
  7375                           ;incstack = 0
  7376                           ; Regs used in _fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7377                           
  7378     0C3D  0875               	movf	fputc@fp,w
  7379     0C3E  1903               	btfsc	3,2
  7380     0C3F  2C41               	goto	u5921
  7381     0C40  2C42               	goto	u5920
  7382     0C41                     u5921:
  7383     0C41  2C47               	goto	l4195
  7384     0C42                     u5920:
  7385     0C42                     l4193:
  7386     0C42  0875               	movf	fputc@fp,w
  7387     0C43  1D03               	btfss	3,2
  7388     0C44  2C46               	goto	u5931
  7389     0C45  2C47               	goto	u5930
  7390     0C46                     u5931:
  7391     0C46  2C4E               	goto	l4197
  7392     0C47                     u5930:
  7393     0C47                     l4195:
  7394     0C47  0873               	movf	fputc@c,w
  7395     0C48  120A  118A  27FC  120A  158A  	fcall	_putch
  7396     0C4D  2C96               	goto	l1232
  7397     0C4E                     l4197:
  7398     0C4E  0875               	movf	fputc@fp,w
  7399     0C4F  3E09               	addlw	9
  7400     0C50  0084               	movwf	4
  7401     0C51  1383               	bcf	3,7	;select IRP bank0
  7402     0C52  0800               	movf	0,w
  7403     0C53  1283               	bcf	3,5	;RP0=0, select bank0
  7404     0C54  1303               	bcf	3,6	;RP1=0, select bank0
  7405     0C55  00A0               	movwf	??_fputc
  7406     0C56  0A84               	incf	4,f
  7407     0C57  0800               	movf	0,w
  7408     0C58  00A1               	movwf	??_fputc+1
  7409     0C59  0820               	movf	??_fputc,w
  7410     0C5A  0421               	iorwf	??_fputc+1,w
  7411     0C5B  1903               	btfsc	3,2
  7412     0C5C  2C5E               	goto	u5941
  7413     0C5D  2C5F               	goto	u5940
  7414     0C5E                     u5941:
  7415     0C5E  2C7D               	goto	l4201
  7416     0C5F                     u5940:
  7417     0C5F                     l4199:
  7418     0C5F  0875               	movf	fputc@fp,w
  7419     0C60  3E09               	addlw	9
  7420     0C61  0084               	movwf	4
  7421     0C62  0800               	movf	0,w
  7422     0C63  00A0               	movwf	??_fputc
  7423     0C64  0A84               	incf	4,f
  7424     0C65  0800               	movf	0,w
  7425     0C66  00A1               	movwf	??_fputc+1
  7426     0C67  0875               	movf	fputc@fp,w
  7427     0C68  3E02               	addlw	2
  7428     0C69  0084               	movwf	4
  7429     0C6A  0800               	movf	0,w
  7430     0C6B  00A2               	movwf	??_fputc+2
  7431     0C6C  0A84               	incf	4,f
  7432     0C6D  0800               	movf	0,w
  7433     0C6E  00A3               	movwf	??_fputc+3
  7434     0C6F  0823               	movf	??_fputc+3,w
  7435     0C70  3A80               	xorlw	128
  7436     0C71  00A4               	movwf	??_fputc+4
  7437     0C72  0821               	movf	??_fputc+1,w
  7438     0C73  3A80               	xorlw	128
  7439     0C74  0224               	subwf	??_fputc+4,w
  7440     0C75  1D03               	skipz
  7441     0C76  2C79               	goto	u5955
  7442     0C77  0820               	movf	??_fputc,w
  7443     0C78  0222               	subwf	??_fputc+2,w
  7444     0C79                     u5955:
  7445     0C79  1803               	skipnc
  7446     0C7A  2C7C               	goto	u5951
  7447     0C7B  2C7D               	goto	u5950
  7448     0C7C                     u5951:
  7449     0C7C  2C96               	goto	l1232
  7450     0C7D                     u5950:
  7451     0C7D                     l4201:
  7452     0C7D  0875               	movf	fputc@fp,w
  7453     0C7E  3E02               	addlw	2
  7454     0C7F  0084               	movwf	4
  7455     0C80  1383               	bcf	3,7	;select IRP bank0
  7456     0C81  0800               	movf	0,w
  7457     0C82  1283               	bcf	3,5	;RP0=0, select bank0
  7458     0C83  1303               	bcf	3,6	;RP1=0, select bank0
  7459     0C84  00A0               	movwf	??_fputc
  7460     0C85  0875               	movf	fputc@fp,w
  7461     0C86  0084               	movwf	4
  7462     0C87  0800               	movf	0,w
  7463     0C88  0720               	addwf	??_fputc,w
  7464     0C89  00A1               	movwf	??_fputc+1
  7465     0C8A  0821               	movf	??_fputc+1,w
  7466     0C8B  0084               	movwf	4
  7467     0C8C  0873               	movf	fputc@c,w
  7468     0C8D  0080               	movwf	0
  7469     0C8E  0875               	movf	fputc@fp,w
  7470     0C8F  3E02               	addlw	2
  7471     0C90  0084               	movwf	4
  7472     0C91  3001               	movlw	1
  7473     0C92  0780               	addwf	0,f
  7474     0C93  0A84               	incf	4,f
  7475     0C94  1803               	skipnc
  7476     0C95  0A80               	incf	0,f
  7477     0C96                     l1232:
  7478     0C96  0008               	return
  7479     0C97                     __end_of_fputc:
  7480                           
  7481                           	psect	text32
  7482     07FC                     __ptext32:	
  7483 ;; *************** function _putch *****************
  7484 ;; Defined at:
  7485 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  7486 ;; Parameters:    Size  Location     Type
  7487 ;;  c               1    wreg     unsigned char 
  7488 ;; Auto vars:     Size  Location     Type
  7489 ;;  c               1    0[COMMON] unsigned char 
  7490 ;; Return value:  Size  Location     Type
  7491 ;;                  1    wreg      void 
  7492 ;; Registers used:
  7493 ;;		wreg
  7494 ;; Tracked objects:
  7495 ;;		On entry : 0/0
  7496 ;;		On exit  : 0/0
  7497 ;;		Unchanged: 0/0
  7498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7499 ;;      Params:         0       0       0       0       0
  7500 ;;      Locals:         0       0       0       0       0
  7501 ;;      Temps:          0       0       0       0       0
  7502 ;;      Totals:         0       0       0       0       0
  7503 ;;Total ram usage:        0 bytes
  7504 ;; Hardware stack levels used: 1
  7505 ;; Hardware stack levels required when called: 2
  7506 ;; This function calls:
  7507 ;;		Nothing
  7508 ;; This function is called by:
  7509 ;;		_fputc
  7510 ;; This function uses a non-reentrant model
  7511 ;;
  7512                           
  7513     07FC                     _putch:	
  7514                           ;psect for function _putch
  7515                           
  7516     07FC                     l1243:	
  7517                           ;incstack = 0
  7518                           ; Regs used in _putch: [wreg]
  7519                           
  7520     07FC  0008               	return
  7521     07FD                     __end_of_putch:
  7522                           
  7523                           	psect	text33
  7524     17C7                     __ptext33:	
  7525 ;; *************** function _abs *****************
  7526 ;; Defined at:
  7527 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  7528 ;; Parameters:    Size  Location     Type
  7529 ;;  a               2    2[BANK0 ] int 
  7530 ;; Auto vars:     Size  Location     Type
  7531 ;;		None
  7532 ;; Return value:  Size  Location     Type
  7533 ;;                  2    2[BANK0 ] int 
  7534 ;; Registers used:
  7535 ;;		wreg, status,2, status,0
  7536 ;; Tracked objects:
  7537 ;;		On entry : 0/0
  7538 ;;		On exit  : 0/0
  7539 ;;		Unchanged: 0/0
  7540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7541 ;;      Params:         0       2       0       0       0
  7542 ;;      Locals:         0       0       0       0       0
  7543 ;;      Temps:          0       2       0       0       0
  7544 ;;      Totals:         0       4       0       0       0
  7545 ;;Total ram usage:        4 bytes
  7546 ;; Hardware stack levels used: 1
  7547 ;; Hardware stack levels required when called: 2
  7548 ;; This function calls:
  7549 ;;		Nothing
  7550 ;; This function is called by:
  7551 ;;		_vfpfcnvrt
  7552 ;; This function uses a non-reentrant model
  7553 ;;
  7554                           
  7555     17C7                     _abs:	
  7556                           ;psect for function _abs
  7557                           
  7558     17C7                     l4205:	
  7559                           ;incstack = 0
  7560                           ; Regs used in _abs: [wreg+status,2+status,0]
  7561                           
  7562     17C7  1283               	bcf	3,5	;RP0=0, select bank0
  7563     17C8  1303               	bcf	3,6	;RP1=0, select bank0
  7564     17C9  1BA3               	btfsc	abs@a+1,7
  7565     17CA  2FCC               	goto	u5961
  7566     17CB  2FCD               	goto	u5960
  7567     17CC                     u5961:
  7568     17CC  2FCE               	goto	l4209
  7569     17CD                     u5960:
  7570     17CD                     l4207:
  7571     17CD  2FD9               	goto	l1220
  7572     17CE                     l4209:
  7573     17CE  0922               	comf	abs@a,w
  7574     17CF  00A4               	movwf	??_abs
  7575     17D0  0923               	comf	abs@a+1,w
  7576     17D1  00A5               	movwf	??_abs+1
  7577     17D2  0AA4               	incf	??_abs,f
  7578     17D3  1903               	skipnz
  7579     17D4  0AA5               	incf	??_abs+1,f
  7580     17D5  0824               	movf	??_abs,w
  7581     17D6  00A2               	movwf	?_abs
  7582     17D7  0825               	movf	??_abs+1,w
  7583     17D8  00A3               	movwf	?_abs+1
  7584     17D9                     l1220:
  7585     17D9  0008               	return
  7586     17DA                     __end_of_abs:
  7587                           
  7588                           	psect	text34
  7589     0C97                     __ptext34:	
  7590 ;; *************** function ___awmod *****************
  7591 ;; Defined at:
  7592 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  7593 ;; Parameters:    Size  Location     Type
  7594 ;;  divisor         2    3[COMMON] int 
  7595 ;;  dividend        2    5[COMMON] int 
  7596 ;; Auto vars:     Size  Location     Type
  7597 ;;  sign            1    1[BANK0 ] unsigned char 
  7598 ;;  counter         1    0[BANK0 ] unsigned char 
  7599 ;; Return value:  Size  Location     Type
  7600 ;;                  2    3[COMMON] int 
  7601 ;; Registers used:
  7602 ;;		wreg, status,2, status,0, btemp+1
  7603 ;; Tracked objects:
  7604 ;;		On entry : 0/0
  7605 ;;		On exit  : 0/0
  7606 ;;		Unchanged: 0/0
  7607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7608 ;;      Params:         4       0       0       0       0
  7609 ;;      Locals:         0       2       0       0       0
  7610 ;;      Temps:          0       0       0       0       0
  7611 ;;      Totals:         4       2       0       0       0
  7612 ;;Total ram usage:        6 bytes
  7613 ;; Hardware stack levels used: 1
  7614 ;; Hardware stack levels required when called: 2
  7615 ;; This function calls:
  7616 ;;		Nothing
  7617 ;; This function is called by:
  7618 ;;		_vfpfcnvrt
  7619 ;; This function uses a non-reentrant model
  7620 ;;
  7621                           
  7622     0C97                     ___awmod:	
  7623                           ;psect for function ___awmod
  7624                           
  7625     0C97                     l4153:	
  7626                           ;incstack = 0
  7627                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  7628                           
  7629     0C97  1283               	bcf	3,5	;RP0=0, select bank0
  7630     0C98  1303               	bcf	3,6	;RP1=0, select bank0
  7631     0C99  01A1               	clrf	___awmod@sign
  7632     0C9A                     l4155:
  7633     0C9A  1FF6               	btfss	___awmod@dividend+1,7
  7634     0C9B  2C9D               	goto	u5831
  7635     0C9C  2C9E               	goto	u5830
  7636     0C9D                     u5831:
  7637     0C9D  2CA5               	goto	l4161
  7638     0C9E                     u5830:
  7639     0C9E                     l4157:
  7640     0C9E  09F5               	comf	___awmod@dividend,f
  7641     0C9F  09F6               	comf	___awmod@dividend+1,f
  7642     0CA0  0AF5               	incf	___awmod@dividend,f
  7643     0CA1  1903               	skipnz
  7644     0CA2  0AF6               	incf	___awmod@dividend+1,f
  7645     0CA3                     l4159:
  7646     0CA3  01A1               	clrf	___awmod@sign
  7647     0CA4  0AA1               	incf	___awmod@sign,f
  7648     0CA5                     l4161:
  7649     0CA5  1FF4               	btfss	___awmod@divisor+1,7
  7650     0CA6  2CA8               	goto	u5841
  7651     0CA7  2CA9               	goto	u5840
  7652     0CA8                     u5841:
  7653     0CA8  2CAE               	goto	l4165
  7654     0CA9                     u5840:
  7655     0CA9                     l4163:
  7656     0CA9  09F3               	comf	___awmod@divisor,f
  7657     0CAA  09F4               	comf	___awmod@divisor+1,f
  7658     0CAB  0AF3               	incf	___awmod@divisor,f
  7659     0CAC  1903               	skipnz
  7660     0CAD  0AF4               	incf	___awmod@divisor+1,f
  7661     0CAE                     l4165:
  7662     0CAE  0873               	movf	___awmod@divisor,w
  7663     0CAF  0474               	iorwf	___awmod@divisor+1,w
  7664     0CB0  1903               	btfsc	3,2
  7665     0CB1  2CB3               	goto	u5851
  7666     0CB2  2CB4               	goto	u5850
  7667     0CB3                     u5851:
  7668     0CB3  2CE3               	goto	l4183
  7669     0CB4                     u5850:
  7670     0CB4                     l4167:
  7671     0CB4  01A0               	clrf	___awmod@counter
  7672     0CB5  0AA0               	incf	___awmod@counter,f
  7673     0CB6  2CC2               	goto	l4173
  7674     0CB7                     l4169:
  7675     0CB7  3001               	movlw	1
  7676     0CB8                     u5865:
  7677     0CB8  1003               	clrc
  7678     0CB9  0DF3               	rlf	___awmod@divisor,f
  7679     0CBA  0DF4               	rlf	___awmod@divisor+1,f
  7680     0CBB  3EFF               	addlw	-1
  7681     0CBC  1D03               	skipz
  7682     0CBD  2CB8               	goto	u5865
  7683     0CBE                     l4171:
  7684     0CBE  3001               	movlw	1
  7685     0CBF  00FF               	movwf	btemp+1
  7686     0CC0  087F               	movf	btemp+1,w
  7687     0CC1  07A0               	addwf	___awmod@counter,f
  7688     0CC2                     l4173:
  7689     0CC2  1FF4               	btfss	___awmod@divisor+1,7
  7690     0CC3  2CC5               	goto	u5871
  7691     0CC4  2CC6               	goto	u5870
  7692     0CC5                     u5871:
  7693     0CC5  2CB7               	goto	l4169
  7694     0CC6                     u5870:
  7695     0CC6                     l4175:
  7696     0CC6  0874               	movf	___awmod@divisor+1,w
  7697     0CC7  0276               	subwf	___awmod@dividend+1,w
  7698     0CC8  1D03               	skipz
  7699     0CC9  2CCC               	goto	u5885
  7700     0CCA  0873               	movf	___awmod@divisor,w
  7701     0CCB  0275               	subwf	___awmod@dividend,w
  7702     0CCC                     u5885:
  7703     0CCC  1C03               	skipc
  7704     0CCD  2CCF               	goto	u5881
  7705     0CCE  2CD0               	goto	u5880
  7706     0CCF                     u5881:
  7707     0CCF  2CD6               	goto	l4179
  7708     0CD0                     u5880:
  7709     0CD0                     l4177:
  7710     0CD0  0873               	movf	___awmod@divisor,w
  7711     0CD1  02F5               	subwf	___awmod@dividend,f
  7712     0CD2  0874               	movf	___awmod@divisor+1,w
  7713     0CD3  1C03               	skipc
  7714     0CD4  03F6               	decf	___awmod@dividend+1,f
  7715     0CD5  02F6               	subwf	___awmod@dividend+1,f
  7716     0CD6                     l4179:
  7717     0CD6  3001               	movlw	1
  7718     0CD7                     u5895:
  7719     0CD7  1003               	clrc
  7720     0CD8  0CF4               	rrf	___awmod@divisor+1,f
  7721     0CD9  0CF3               	rrf	___awmod@divisor,f
  7722     0CDA  3EFF               	addlw	-1
  7723     0CDB  1D03               	skipz
  7724     0CDC  2CD7               	goto	u5895
  7725     0CDD                     l4181:
  7726     0CDD  3001               	movlw	1
  7727     0CDE  02A0               	subwf	___awmod@counter,f
  7728     0CDF  1D03               	btfss	3,2
  7729     0CE0  2CE2               	goto	u5901
  7730     0CE1  2CE3               	goto	u5900
  7731     0CE2                     u5901:
  7732     0CE2  2CC6               	goto	l4175
  7733     0CE3                     u5900:
  7734     0CE3                     l4183:
  7735     0CE3  0821               	movf	___awmod@sign,w
  7736     0CE4  1903               	btfsc	3,2
  7737     0CE5  2CE7               	goto	u5911
  7738     0CE6  2CE8               	goto	u5910
  7739     0CE7                     u5911:
  7740     0CE7  2CED               	goto	l4187
  7741     0CE8                     u5910:
  7742     0CE8                     l4185:
  7743     0CE8  09F5               	comf	___awmod@dividend,f
  7744     0CE9  09F6               	comf	___awmod@dividend+1,f
  7745     0CEA  0AF5               	incf	___awmod@dividend,f
  7746     0CEB  1903               	skipnz
  7747     0CEC  0AF6               	incf	___awmod@dividend+1,f
  7748     0CED                     l4187:
  7749     0CED  0876               	movf	___awmod@dividend+1,w
  7750     0CEE  00F4               	movwf	?___awmod+1
  7751     0CEF  0875               	movf	___awmod@dividend,w
  7752     0CF0  00F3               	movwf	?___awmod
  7753     0CF1                     l866:
  7754     0CF1  0008               	return
  7755     0CF2                     __end_of___awmod:
  7756                           
  7757                           	psect	text35
  7758     0CF2                     __ptext35:	
  7759 ;; *************** function ___awdiv *****************
  7760 ;; Defined at:
  7761 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  7762 ;; Parameters:    Size  Location     Type
  7763 ;;  divisor         2    3[COMMON] int 
  7764 ;;  dividend        2    5[COMMON] int 
  7765 ;; Auto vars:     Size  Location     Type
  7766 ;;  quotient        2    2[BANK0 ] int 
  7767 ;;  sign            1    1[BANK0 ] unsigned char 
  7768 ;;  counter         1    0[BANK0 ] unsigned char 
  7769 ;; Return value:  Size  Location     Type
  7770 ;;                  2    3[COMMON] int 
  7771 ;; Registers used:
  7772 ;;		wreg, status,2, status,0, btemp+1
  7773 ;; Tracked objects:
  7774 ;;		On entry : 0/0
  7775 ;;		On exit  : 0/0
  7776 ;;		Unchanged: 0/0
  7777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7778 ;;      Params:         4       0       0       0       0
  7779 ;;      Locals:         0       4       0       0       0
  7780 ;;      Temps:          0       0       0       0       0
  7781 ;;      Totals:         4       4       0       0       0
  7782 ;;Total ram usage:        8 bytes
  7783 ;; Hardware stack levels used: 1
  7784 ;; Hardware stack levels required when called: 2
  7785 ;; This function calls:
  7786 ;;		Nothing
  7787 ;; This function is called by:
  7788 ;;		_vfpfcnvrt
  7789 ;; This function uses a non-reentrant model
  7790 ;;
  7791                           
  7792     0CF2                     ___awdiv:	
  7793                           ;psect for function ___awdiv
  7794                           
  7795     0CF2                     l4109:	
  7796                           ;incstack = 0
  7797                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  7798                           
  7799     0CF2  1283               	bcf	3,5	;RP0=0, select bank0
  7800     0CF3  1303               	bcf	3,6	;RP1=0, select bank0
  7801     0CF4  01A1               	clrf	___awdiv@sign
  7802     0CF5                     l4111:
  7803     0CF5  1FF4               	btfss	___awdiv@divisor+1,7
  7804     0CF6  2CF8               	goto	u5731
  7805     0CF7  2CF9               	goto	u5730
  7806     0CF8                     u5731:
  7807     0CF8  2D00               	goto	l4117
  7808     0CF9                     u5730:
  7809     0CF9                     l4113:
  7810     0CF9  09F3               	comf	___awdiv@divisor,f
  7811     0CFA  09F4               	comf	___awdiv@divisor+1,f
  7812     0CFB  0AF3               	incf	___awdiv@divisor,f
  7813     0CFC  1903               	skipnz
  7814     0CFD  0AF4               	incf	___awdiv@divisor+1,f
  7815     0CFE                     l4115:
  7816     0CFE  01A1               	clrf	___awdiv@sign
  7817     0CFF  0AA1               	incf	___awdiv@sign,f
  7818     0D00                     l4117:
  7819     0D00  1FF6               	btfss	___awdiv@dividend+1,7
  7820     0D01  2D03               	goto	u5741
  7821     0D02  2D04               	goto	u5740
  7822     0D03                     u5741:
  7823     0D03  2D0D               	goto	l4123
  7824     0D04                     u5740:
  7825     0D04                     l4119:
  7826     0D04  09F5               	comf	___awdiv@dividend,f
  7827     0D05  09F6               	comf	___awdiv@dividend+1,f
  7828     0D06  0AF5               	incf	___awdiv@dividend,f
  7829     0D07  1903               	skipnz
  7830     0D08  0AF6               	incf	___awdiv@dividend+1,f
  7831     0D09                     l4121:
  7832     0D09  3001               	movlw	1
  7833     0D0A  00FF               	movwf	btemp+1
  7834     0D0B  087F               	movf	btemp+1,w
  7835     0D0C  06A1               	xorwf	___awdiv@sign,f
  7836     0D0D                     l4123:
  7837     0D0D  01A2               	clrf	___awdiv@quotient
  7838     0D0E  01A3               	clrf	___awdiv@quotient+1
  7839     0D0F                     l4125:
  7840     0D0F  0873               	movf	___awdiv@divisor,w
  7841     0D10  0474               	iorwf	___awdiv@divisor+1,w
  7842     0D11  1903               	btfsc	3,2
  7843     0D12  2D14               	goto	u5751
  7844     0D13  2D15               	goto	u5750
  7845     0D14                     u5751:
  7846     0D14  2D4C               	goto	l4145
  7847     0D15                     u5750:
  7848     0D15                     l4127:
  7849     0D15  01A0               	clrf	___awdiv@counter
  7850     0D16  0AA0               	incf	___awdiv@counter,f
  7851     0D17  2D23               	goto	l4133
  7852     0D18                     l4129:
  7853     0D18  3001               	movlw	1
  7854     0D19                     u5765:
  7855     0D19  1003               	clrc
  7856     0D1A  0DF3               	rlf	___awdiv@divisor,f
  7857     0D1B  0DF4               	rlf	___awdiv@divisor+1,f
  7858     0D1C  3EFF               	addlw	-1
  7859     0D1D  1D03               	skipz
  7860     0D1E  2D19               	goto	u5765
  7861     0D1F                     l4131:
  7862     0D1F  3001               	movlw	1
  7863     0D20  00FF               	movwf	btemp+1
  7864     0D21  087F               	movf	btemp+1,w
  7865     0D22  07A0               	addwf	___awdiv@counter,f
  7866     0D23                     l4133:
  7867     0D23  1FF4               	btfss	___awdiv@divisor+1,7
  7868     0D24  2D26               	goto	u5771
  7869     0D25  2D27               	goto	u5770
  7870     0D26                     u5771:
  7871     0D26  2D18               	goto	l4129
  7872     0D27                     u5770:
  7873     0D27                     l4135:
  7874     0D27  3001               	movlw	1
  7875     0D28                     u5785:
  7876     0D28  1003               	clrc
  7877     0D29  0DA2               	rlf	___awdiv@quotient,f
  7878     0D2A  0DA3               	rlf	___awdiv@quotient+1,f
  7879     0D2B  3EFF               	addlw	-1
  7880     0D2C  1D03               	skipz
  7881     0D2D  2D28               	goto	u5785
  7882     0D2E  0874               	movf	___awdiv@divisor+1,w
  7883     0D2F  0276               	subwf	___awdiv@dividend+1,w
  7884     0D30  1D03               	skipz
  7885     0D31  2D34               	goto	u5795
  7886     0D32  0873               	movf	___awdiv@divisor,w
  7887     0D33  0275               	subwf	___awdiv@dividend,w
  7888     0D34                     u5795:
  7889     0D34  1C03               	skipc
  7890     0D35  2D37               	goto	u5791
  7891     0D36  2D38               	goto	u5790
  7892     0D37                     u5791:
  7893     0D37  2D3F               	goto	l4141
  7894     0D38                     u5790:
  7895     0D38                     l4137:
  7896     0D38  0873               	movf	___awdiv@divisor,w
  7897     0D39  02F5               	subwf	___awdiv@dividend,f
  7898     0D3A  0874               	movf	___awdiv@divisor+1,w
  7899     0D3B  1C03               	skipc
  7900     0D3C  03F6               	decf	___awdiv@dividend+1,f
  7901     0D3D  02F6               	subwf	___awdiv@dividend+1,f
  7902     0D3E                     l4139:
  7903     0D3E  1422               	bsf	___awdiv@quotient,0
  7904     0D3F                     l4141:
  7905     0D3F  3001               	movlw	1
  7906     0D40                     u5805:
  7907     0D40  1003               	clrc
  7908     0D41  0CF4               	rrf	___awdiv@divisor+1,f
  7909     0D42  0CF3               	rrf	___awdiv@divisor,f
  7910     0D43  3EFF               	addlw	-1
  7911     0D44  1D03               	skipz
  7912     0D45  2D40               	goto	u5805
  7913     0D46                     l4143:
  7914     0D46  3001               	movlw	1
  7915     0D47  02A0               	subwf	___awdiv@counter,f
  7916     0D48  1D03               	btfss	3,2
  7917     0D49  2D4B               	goto	u5811
  7918     0D4A  2D4C               	goto	u5810
  7919     0D4B                     u5811:
  7920     0D4B  2D27               	goto	l4135
  7921     0D4C                     u5810:
  7922     0D4C                     l4145:
  7923     0D4C  0821               	movf	___awdiv@sign,w
  7924     0D4D  1903               	btfsc	3,2
  7925     0D4E  2D50               	goto	u5821
  7926     0D4F  2D51               	goto	u5820
  7927     0D50                     u5821:
  7928     0D50  2D56               	goto	l4149
  7929     0D51                     u5820:
  7930     0D51                     l4147:
  7931     0D51  09A2               	comf	___awdiv@quotient,f
  7932     0D52  09A3               	comf	___awdiv@quotient+1,f
  7933     0D53  0AA2               	incf	___awdiv@quotient,f
  7934     0D54  1903               	skipnz
  7935     0D55  0AA3               	incf	___awdiv@quotient+1,f
  7936     0D56                     l4149:
  7937     0D56  0823               	movf	___awdiv@quotient+1,w
  7938     0D57  00F4               	movwf	?___awdiv+1
  7939     0D58  0822               	movf	___awdiv@quotient,w
  7940     0D59  00F3               	movwf	?___awdiv
  7941     0D5A                     l853:
  7942     0D5A  0008               	return
  7943     0D5B                     __end_of___awdiv:
  7944                           
  7945                           	psect	text36
  7946     08B0                     __ptext36:	
  7947 ;; *************** function _memset *****************
  7948 ;; Defined at:
  7949 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memset.c"
  7950 ;; Parameters:    Size  Location     Type
  7951 ;;  dest            1    wreg     PTR void 
  7952 ;;		 -> lcd_show(6), 
  7953 ;;  c               2    3[COMMON] int 
  7954 ;;  n               2    5[COMMON] unsigned int 
  7955 ;; Auto vars:     Size  Location     Type
  7956 ;;  dest            1    1[BANK0 ] PTR void 
  7957 ;;		 -> lcd_show(6), 
  7958 ;;  p               1    0[BANK0 ] PTR unsigned char 
  7959 ;;		 -> lcd_show(6), 
  7960 ;; Return value:  Size  Location     Type
  7961 ;;                  1    wreg      PTR void 
  7962 ;; Registers used:
  7963 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  7964 ;; Tracked objects:
  7965 ;;		On entry : 0/0
  7966 ;;		On exit  : 0/0
  7967 ;;		Unchanged: 0/0
  7968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7969 ;;      Params:         4       0       0       0       0
  7970 ;;      Locals:         0       2       0       0       0
  7971 ;;      Temps:          0       0       0       0       0
  7972 ;;      Totals:         4       2       0       0       0
  7973 ;;Total ram usage:        6 bytes
  7974 ;; Hardware stack levels used: 1
  7975 ;; Hardware stack levels required when called: 2
  7976 ;; This function calls:
  7977 ;;		Nothing
  7978 ;; This function is called by:
  7979 ;;		_Convert_uint16_to_string
  7980 ;;		_Convert_uint8_to_string
  7981 ;;		_Convert_uint32_to_string
  7982 ;; This function uses a non-reentrant model
  7983 ;;
  7984                           
  7985     08B0                     _memset:	
  7986                           ;psect for function _memset
  7987                           
  7988                           
  7989                           ;incstack = 0
  7990                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0+btemp+1]
  7991                           ;memset@dest stored from wreg
  7992     08B0  1283               	bcf	3,5	;RP0=0, select bank0
  7993     08B1  1303               	bcf	3,6	;RP1=0, select bank0
  7994     08B2  00A1               	movwf	memset@dest
  7995     08B3                     l4455:
  7996     08B3  0821               	movf	memset@dest,w
  7997     08B4  00A0               	movwf	memset@p
  7998     08B5  28BF               	goto	l4461
  7999     08B6                     l4457:
  8000     08B6  0820               	movf	memset@p,w
  8001     08B7  0084               	movwf	4
  8002     08B8  0873               	movf	memset@c,w
  8003     08B9  1383               	bcf	3,7	;select IRP bank0
  8004     08BA  0080               	movwf	0
  8005     08BB                     l4459:
  8006     08BB  3001               	movlw	1
  8007     08BC  00FF               	movwf	btemp+1
  8008     08BD  087F               	movf	btemp+1,w
  8009     08BE  07A0               	addwf	memset@p,f
  8010     08BF                     l4461:
  8011     08BF  3001               	movlw	1
  8012     08C0  02F5               	subwf	memset@n,f
  8013     08C1  3000               	movlw	0
  8014     08C2  1C03               	skipc
  8015     08C3  03F6               	decf	memset@n+1,f
  8016     08C4  02F6               	subwf	memset@n+1,f
  8017     08C5  0A75               	incf	memset@n,w
  8018     08C6  1D03               	skipz
  8019     08C7  28CC               	goto	u6311
  8020     08C8  0A76               	incf	memset@n+1,w
  8021     08C9  1D03               	btfss	3,2
  8022     08CA  28CC               	goto	u6311
  8023     08CB  28CD               	goto	u6310
  8024     08CC                     u6311:
  8025     08CC  28B6               	goto	l4457
  8026     08CD                     u6310:
  8027     08CD                     l1162:
  8028     08CD  0008               	return
  8029     08CE                     __end_of_memset:
  8030                           
  8031                           	psect	text37
  8032     09C7                     __ptext37:	
  8033 ;; *************** function _ADC_Start_Conversion_Blocking *****************
  8034 ;; Defined at:
  8035 ;;		line 78 in file "MCAL_LAYER/ADC/hal_adc.c"
  8036 ;; Parameters:    Size  Location     Type
  8037 ;;  adc             1    wreg     PTR const struct .
  8038 ;;		 -> adc(3), 
  8039 ;;  channel         1    0[BANK0 ] enum E1595
  8040 ;;  result          2    1[BANK0 ] unsigned short 
  8041 ;; Auto vars:     Size  Location     Type
  8042 ;;  adc             1    4[BANK0 ] PTR const struct .
  8043 ;;		 -> adc(3), 
  8044 ;;  ret             1    0        unsigned char 
  8045 ;; Return value:  Size  Location     Type
  8046 ;;                  1    wreg      unsigned char 
  8047 ;; Registers used:
  8048 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8049 ;; Tracked objects:
  8050 ;;		On entry : 0/0
  8051 ;;		On exit  : 0/0
  8052 ;;		Unchanged: 0/0
  8053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8054 ;;      Params:         0       3       0       0       0
  8055 ;;      Locals:         0       1       0       0       0
  8056 ;;      Temps:          0       1       0       0       0
  8057 ;;      Totals:         0       5       0       0       0
  8058 ;;Total ram usage:        5 bytes
  8059 ;; Hardware stack levels used: 1
  8060 ;; Hardware stack levels required when called: 3
  8061 ;; This function calls:
  8062 ;;		_ADC_Get_Conversion_Result
  8063 ;;		_ADC_Start_Conversion
  8064 ;; This function is called by:
  8065 ;;		_main
  8066 ;; This function uses a non-reentrant model
  8067 ;;
  8068                           
  8069     09C7                     _ADC_Start_Conversion_Blocking:	
  8070                           ;psect for function _ADC_Start_Conversion_Blocking
  8071                           
  8072                           
  8073                           ;incstack = 0
  8074                           ; Regs used in _ADC_Start_Conversion_Blocking: [wreg-fsr0h+status,2+status,0+btemp+1+pcl
      +                          ath+cstack]
  8075                           ;ADC_Start_Conversion_Blocking@adc stored from wreg
  8076     09C7  1283               	bcf	3,5	;RP0=0, select bank0
  8077     09C8  1303               	bcf	3,6	;RP1=0, select bank0
  8078     09C9  00A4               	movwf	ADC_Start_Conversion_Blocking@adc
  8079     09CA                     l4571:
  8080     09CA                     l4573:
  8081                           
  8082                           ;MCAL_LAYER/ADC/hal_adc.c: 80:     if(adc == ((void*)0)){
  8083     09CA  0824               	movf	ADC_Start_Conversion_Blocking@adc,w
  8084     09CB  1D03               	btfss	3,2
  8085     09CC  29CE               	goto	u6451
  8086     09CD  29CF               	goto	u6450
  8087     09CE                     u6451:
  8088     09CE  29D0               	goto	l201
  8089     09CF                     u6450:
  8090     09CF                     l4575:
  8091                           
  8092                           ;MCAL_LAYER/ADC/hal_adc.c: 82:     }
  8093     09CF  29F0               	goto	l203
  8094     09D0                     l201:	
  8095                           ;MCAL_LAYER/ADC/hal_adc.c: 83:     else{
  8096                           
  8097                           
  8098                           ;MCAL_LAYER/ADC/hal_adc.c: 84:         (ADCON0bits.GO_nDONE = 0);
  8099     09D0  111F               	bcf	31,2	;volatile
  8100     09D1                     l4577:
  8101                           
  8102                           ;MCAL_LAYER/ADC/hal_adc.c: 85:         (ADCON0bits.CHS = adc->channel);
  8103     09D1  0824               	movf	ADC_Start_Conversion_Blocking@adc,w
  8104     09D2  0084               	movwf	4
  8105     09D3  1383               	bcf	3,7	;select IRP bank0
  8106     09D4  0800               	movf	0,w
  8107     09D5  00A3               	movwf	??_ADC_Start_Conversion_Blocking
  8108     09D6  0DA3               	rlf	??_ADC_Start_Conversion_Blocking,f
  8109     09D7  0DA3               	rlf	??_ADC_Start_Conversion_Blocking,f
  8110     09D8  0DA3               	rlf	??_ADC_Start_Conversion_Blocking,f
  8111     09D9  081F               	movf	31,w	;volatile
  8112     09DA  0623               	xorwf	??_ADC_Start_Conversion_Blocking,w
  8113     09DB  39C7               	andlw	-57
  8114     09DC  0623               	xorwf	??_ADC_Start_Conversion_Blocking,w
  8115     09DD  009F               	movwf	31	;volatile
  8116     09DE                     l4579:
  8117                           
  8118                           ;MCAL_LAYER/ADC/hal_adc.c: 86:         ADC_Start_Conversion(adc);
  8119     09DE  0824               	movf	ADC_Start_Conversion_Blocking@adc,w
  8120     09DF  160A  118A  27A8  120A  158A  	fcall	_ADC_Start_Conversion
  8121     09E4                     l4581:
  8122                           
  8123                           ;MCAL_LAYER/ADC/hal_adc.c: 87:         ADC_Get_Conversion_Result(adc,result);
  8124     09E4  1283               	bcf	3,5	;RP0=0, select bank0
  8125     09E5  1303               	bcf	3,6	;RP1=0, select bank0
  8126     09E6  0821               	movf	ADC_Start_Conversion_Blocking@result,w
  8127     09E7  00F3               	movwf	ADC_Get_Conversion_Result@result
  8128     09E8  0822               	movf	ADC_Start_Conversion_Blocking@result+1,w
  8129     09E9  00F4               	movwf	ADC_Get_Conversion_Result@result+1
  8130     09EA  0824               	movf	ADC_Start_Conversion_Blocking@adc,w
  8131     09EB  120A  158A  2282  120A  158A  	fcall	_ADC_Get_Conversion_Result
  8132     09F0                     l203:
  8133     09F0  0008               	return
  8134     09F1                     __end_of_ADC_Start_Conversion_Blocking:
  8135                           
  8136                           	psect	text38
  8137     17A8                     __ptext38:	
  8138 ;; *************** function _ADC_Start_Conversion *****************
  8139 ;; Defined at:
  8140 ;;		line 37 in file "MCAL_LAYER/ADC/hal_adc.c"
  8141 ;; Parameters:    Size  Location     Type
  8142 ;;  adc             1    wreg     PTR const struct .
  8143 ;;		 -> adc(3), 
  8144 ;; Auto vars:     Size  Location     Type
  8145 ;;  adc             1    3[COMMON] PTR const struct .
  8146 ;;		 -> adc(3), 
  8147 ;;  ret             1    0        unsigned char 
  8148 ;; Return value:  Size  Location     Type
  8149 ;;                  1    wreg      unsigned char 
  8150 ;; Registers used:
  8151 ;;		wreg, status,2, status,0
  8152 ;; Tracked objects:
  8153 ;;		On entry : 0/0
  8154 ;;		On exit  : 0/0
  8155 ;;		Unchanged: 0/0
  8156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8157 ;;      Params:         0       0       0       0       0
  8158 ;;      Locals:         1       0       0       0       0
  8159 ;;      Temps:          0       0       0       0       0
  8160 ;;      Totals:         1       0       0       0       0
  8161 ;;Total ram usage:        1 bytes
  8162 ;; Hardware stack levels used: 1
  8163 ;; Hardware stack levels required when called: 2
  8164 ;; This function calls:
  8165 ;;		Nothing
  8166 ;; This function is called by:
  8167 ;;		_ADC_Start_Conversion_Blocking
  8168 ;; This function uses a non-reentrant model
  8169 ;;
  8170                           
  8171     17A8                     _ADC_Start_Conversion:	
  8172                           ;psect for function _ADC_Start_Conversion
  8173                           
  8174                           
  8175                           ;incstack = 0
  8176                           ; Regs used in _ADC_Start_Conversion: [wreg+status,2+status,0]
  8177                           ;ADC_Start_Conversion@adc stored from wreg
  8178     17A8  00F3               	movwf	ADC_Start_Conversion@adc
  8179     17A9                     l4477:
  8180     17A9                     l4479:
  8181                           
  8182                           ;MCAL_LAYER/ADC/hal_adc.c: 39:     if(adc == ((void*)0)){
  8183     17A9  0873               	movf	ADC_Start_Conversion@adc,w
  8184     17AA  1D03               	btfss	3,2
  8185     17AB  2FAD               	goto	u6321
  8186     17AC  2FAE               	goto	u6320
  8187     17AD                     u6321:
  8188     17AD  2FAF               	goto	l180
  8189     17AE                     u6320:
  8190     17AE                     l4481:
  8191                           
  8192                           ;MCAL_LAYER/ADC/hal_adc.c: 41:     }
  8193     17AE  2FB6               	goto	l185
  8194     17AF                     l180:	
  8195                           ;MCAL_LAYER/ADC/hal_adc.c: 42:     else{
  8196                           
  8197                           
  8198                           ;MCAL_LAYER/ADC/hal_adc.c: 43:         ADCON0bits.GO_nDONE = 1;
  8199     17AF  1283               	bcf	3,5	;RP0=0, select bank0
  8200     17B0  1303               	bcf	3,6	;RP1=0, select bank0
  8201     17B1  151F               	bsf	31,2	;volatile
  8202     17B2                     l182:	
  8203                           ;MCAL_LAYER/ADC/hal_adc.c: 44:         while(ADCON0bits.GO_nDONE);
  8204                           
  8205     17B2  191F               	btfsc	31,2	;volatile
  8206     17B3  2FB5               	goto	u6331
  8207     17B4  2FB6               	goto	u6330
  8208     17B5                     u6331:
  8209     17B5  2FB2               	goto	l182
  8210     17B6                     u6330:
  8211     17B6                     l185:
  8212     17B6  0008               	return
  8213     17B7                     __end_of_ADC_Start_Conversion:
  8214                           
  8215                           	psect	text39
  8216     0A82                     __ptext39:	
  8217 ;; *************** function _ADC_Get_Conversion_Result *****************
  8218 ;; Defined at:
  8219 ;;		line 60 in file "MCAL_LAYER/ADC/hal_adc.c"
  8220 ;; Parameters:    Size  Location     Type
  8221 ;;  adc             1    wreg     PTR const struct .
  8222 ;;		 -> adc(3), 
  8223 ;;  result          2    3[COMMON] PTR unsigned short 
  8224 ;;		 -> RAM(512), 
  8225 ;; Auto vars:     Size  Location     Type
  8226 ;;  adc             1    7[COMMON] PTR const struct .
  8227 ;;		 -> adc(3), 
  8228 ;;  ret             1    0        unsigned char 
  8229 ;; Return value:  Size  Location     Type
  8230 ;;                  1    wreg      unsigned char 
  8231 ;; Registers used:
  8232 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  8233 ;; Tracked objects:
  8234 ;;		On entry : 0/0
  8235 ;;		On exit  : 0/0
  8236 ;;		Unchanged: 0/0
  8237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8238 ;;      Params:         2       0       0       0       0
  8239 ;;      Locals:         1       0       0       0       0
  8240 ;;      Temps:          2       0       0       0       0
  8241 ;;      Totals:         5       0       0       0       0
  8242 ;;Total ram usage:        5 bytes
  8243 ;; Hardware stack levels used: 1
  8244 ;; Hardware stack levels required when called: 2
  8245 ;; This function calls:
  8246 ;;		Nothing
  8247 ;; This function is called by:
  8248 ;;		_ADC_Start_Conversion_Blocking
  8249 ;; This function uses a non-reentrant model
  8250 ;;
  8251                           
  8252     0A82                     _ADC_Get_Conversion_Result:	
  8253                           ;psect for function _ADC_Get_Conversion_Result
  8254                           
  8255                           
  8256                           ;incstack = 0
  8257                           ; Regs used in _ADC_Get_Conversion_Result: [wreg-fsr0h+status,2+status,0+btemp+1]
  8258                           ;ADC_Get_Conversion_Result@adc stored from wreg
  8259     0A82  00F7               	movwf	ADC_Get_Conversion_Result@adc
  8260     0A83                     l4483:
  8261     0A83                     l4485:
  8262                           
  8263                           ;MCAL_LAYER/ADC/hal_adc.c: 62:     if(adc == ((void*)0)){
  8264     0A83  0877               	movf	ADC_Get_Conversion_Result@adc,w
  8265     0A84  1D03               	btfss	3,2
  8266     0A85  2A87               	goto	u6341
  8267     0A86  2A88               	goto	u6340
  8268     0A87                     u6341:
  8269     0A87  2A89               	goto	l4489
  8270     0A88                     u6340:
  8271     0A88                     l4487:
  8272                           
  8273                           ;MCAL_LAYER/ADC/hal_adc.c: 64:     }
  8274     0A88  2AC3               	goto	l198
  8275     0A89                     l4489:
  8276                           
  8277                           ;MCAL_LAYER/ADC/hal_adc.c: 66:         if(adc->format == RIGHT_JUSTIFIED){
  8278     0A89  0877               	movf	ADC_Get_Conversion_Result@adc,w
  8279     0A8A  3E02               	addlw	2
  8280     0A8B  0084               	movwf	4
  8281     0A8C  1383               	bcf	3,7	;select IRP bank0
  8282     0A8D  0800               	movf	0,w
  8283     0A8E  1D03               	btfss	3,2
  8284     0A8F  2A91               	goto	u6351
  8285     0A90  2A92               	goto	u6350
  8286     0A91                     u6351:
  8287     0A91  2AA1               	goto	l4493
  8288     0A92                     u6350:
  8289     0A92                     l4491:
  8290                           
  8291                           ;MCAL_LAYER/ADC/hal_adc.c: 67:             *result = (uint16)(ADRESL + (ADRESH << 8));
  8292     0A92  0873               	movf	ADC_Get_Conversion_Result@result,w
  8293     0A93  0084               	movwf	4
  8294     0A94  1783               	bsf	3,7
  8295     0A95  1C74               	btfss	ADC_Get_Conversion_Result@result+1,0
  8296     0A96  1383               	bcf	3,7
  8297     0A97  1683               	bsf	3,5	;RP0=1, select bank1
  8298     0A98  1303               	bcf	3,6	;RP1=0, select bank1
  8299     0A99  081E               	movf	30,w	;volatile
  8300     0A9A  0080               	movwf	0
  8301     0A9B  0A84               	incf	4,f
  8302     0A9C  1283               	bcf	3,5	;RP0=0, select bank0
  8303     0A9D  1303               	bcf	3,6	;RP1=0, select bank0
  8304     0A9E  081E               	movf	30,w	;volatile
  8305     0A9F  0080               	movwf	0
  8306                           
  8307                           ;MCAL_LAYER/ADC/hal_adc.c: 68:         }
  8308     0AA0  2AC3               	goto	l198
  8309     0AA1                     l4493:
  8310     0AA1  0877               	movf	ADC_Get_Conversion_Result@adc,w
  8311     0AA2  3E02               	addlw	2
  8312     0AA3  0084               	movwf	4
  8313     0AA4  0300               	decf	0,w
  8314     0AA5  1D03               	btfss	3,2
  8315     0AA6  2AA8               	goto	u6361
  8316     0AA7  2AA9               	goto	u6360
  8317     0AA8                     u6361:
  8318     0AA8  2AC3               	goto	l194
  8319     0AA9                     u6360:
  8320     0AA9                     l4495:
  8321                           
  8322                           ;MCAL_LAYER/ADC/hal_adc.c: 70:             *result = (uint16)((ADRESL + (ADRESH << 8)) >
      +                          > 6);
  8323     0AA9  1283               	bcf	3,5	;RP0=0, select bank0
  8324     0AAA  1303               	bcf	3,6	;RP1=0, select bank0
  8325     0AAB  081E               	movf	30,w	;volatile
  8326     0AAC  00F6               	movwf	??_ADC_Get_Conversion_Result+1
  8327     0AAD  1683               	bsf	3,5	;RP0=1, select bank1
  8328     0AAE  1303               	bcf	3,6	;RP1=0, select bank1
  8329     0AAF  081E               	movf	30,w	;volatile
  8330     0AB0  00F5               	movwf	??_ADC_Get_Conversion_Result
  8331     0AB1  3006               	movlw	6
  8332     0AB2  00FF               	movwf	btemp+1
  8333     0AB3                     u6375:
  8334     0AB3  0D76               	rlf	??_ADC_Get_Conversion_Result+1,w
  8335     0AB4  0CF6               	rrf	??_ADC_Get_Conversion_Result+1,f
  8336     0AB5  0CF5               	rrf	??_ADC_Get_Conversion_Result,f
  8337     0AB6  0BFF               	decfsz	btemp+1,f
  8338     0AB7  2AB3               	goto	u6375
  8339     0AB8  0873               	movf	ADC_Get_Conversion_Result@result,w
  8340     0AB9  0084               	movwf	4
  8341     0ABA  1783               	bsf	3,7
  8342     0ABB  1C74               	btfss	ADC_Get_Conversion_Result@result+1,0
  8343     0ABC  1383               	bcf	3,7
  8344     0ABD  0875               	movf	??_ADC_Get_Conversion_Result,w
  8345     0ABE  0080               	movwf	0
  8346     0ABF  0A84               	incf	4,f
  8347     0AC0  0876               	movf	??_ADC_Get_Conversion_Result+1,w
  8348     0AC1  0080               	movwf	0
  8349     0AC2  2AC3               	goto	l198
  8350     0AC3                     l194:	
  8351                           ;MCAL_LAYER/ADC/hal_adc.c: 73:     }
  8352                           
  8353     0AC3                     l198:
  8354     0AC3  0008               	return
  8355     0AC4                     __end_of_ADC_Get_Conversion_Result:
  8356                           
  8357                           	psect	text40
  8358     0658                     __ptext40:	
  8359 ;; *************** function _InterruptManager *****************
  8360 ;; Defined at:
  8361 ;;		line 11 in file "MCAL_LAYER/INTERRUPT/interrupt_manager.c"
  8362 ;; Parameters:    Size  Location     Type
  8363 ;;		None
  8364 ;; Auto vars:     Size  Location     Type
  8365 ;;		None
  8366 ;; Return value:  Size  Location     Type
  8367 ;;                  1    wreg      void 
  8368 ;; Registers used:
  8369 ;;		wreg, status,2, status,0, pclath, cstack
  8370 ;; Tracked objects:
  8371 ;;		On entry : 0/0
  8372 ;;		On exit  : 0/0
  8373 ;;		Unchanged: 0/0
  8374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8375 ;;      Params:         0       0       0       0       0
  8376 ;;      Locals:         0       0       0       0       0
  8377 ;;      Temps:          2       0       0       0       0
  8378 ;;      Totals:         2       0       0       0       0
  8379 ;;Total ram usage:        2 bytes
  8380 ;; Hardware stack levels used: 1
  8381 ;; Hardware stack levels required when called: 1
  8382 ;; This function calls:
  8383 ;;		_ISR_INTX
  8384 ;;		_ISR_RB4
  8385 ;;		_ISR_RB5
  8386 ;;		_ISR_RB6
  8387 ;;		_ISR_RB7
  8388 ;; This function is called by:
  8389 ;;		Interrupt level 1
  8390 ;; This function uses a non-reentrant model
  8391 ;;
  8392                           
  8393     0658                     _InterruptManager:	
  8394                           ;psect for function _InterruptManager
  8395                           
  8396     0658                     i1l3833:
  8397                           
  8398                           ;MCAL_LAYER/INTERRUPT/interrupt_manager.c: 12:     if((INTCONbits.INTE == 1) && (INTCONb
      +                          its.INTF == 1) ){
  8399     0658  1E0B               	btfss	11,4	;volatile
  8400     0659  2E5B               	goto	u505_21
  8401     065A  2E5C               	goto	u505_20
  8402     065B                     u505_21:
  8403     065B  2E65               	goto	i1l538
  8404     065C                     u505_20:
  8405     065C                     i1l3835:
  8406     065C  1C8B               	btfss	11,1	;volatile
  8407     065D  2E5F               	goto	u506_21
  8408     065E  2E60               	goto	u506_20
  8409     065F                     u506_21:
  8410     065F  2E65               	goto	i1l538
  8411     0660                     u506_20:
  8412     0660                     i1l3837:
  8413                           
  8414                           ;MCAL_LAYER/INTERRUPT/interrupt_manager.c: 13:         ISR_INTX();
  8415     0660  120A  118A  27FA  120A  118A  	fcall	_ISR_INTX
  8416     0665                     i1l538:	
  8417                           ;MCAL_LAYER/INTERRUPT/interrupt_manager.c: 14:     }
  8418                           
  8419                           
  8420                           ;MCAL_LAYER/INTERRUPT/interrupt_manager.c: 18:     if((INTCONbits.RBIE == 1) && (INTCONb
      +                          its.RBIF == 1) && (PORTBbits.RB4 == 1) && (counter == 0)){
  8421     0665  1D8B               	btfss	11,3	;volatile
  8422     0666  2E68               	goto	u507_21
  8423     0667  2E69               	goto	u507_20
  8424     0668                     u507_21:
  8425     0668  2E80               	goto	i1l540
  8426     0669                     u507_20:
  8427     0669                     i1l3839:
  8428     0669  1C0B               	btfss	11,0	;volatile
  8429     066A  2E6C               	goto	u508_21
  8430     066B  2E6D               	goto	u508_20
  8431     066C                     u508_21:
  8432     066C  2E80               	goto	i1l540
  8433     066D                     u508_20:
  8434     066D                     i1l3841:
  8435     066D  1283               	bcf	3,5	;RP0=0, select bank0
  8436     066E  1303               	bcf	3,6	;RP1=0, select bank0
  8437     066F  1E06               	btfss	6,4	;volatile
  8438     0670  2E72               	goto	u509_21
  8439     0671  2E73               	goto	u509_20
  8440     0672                     u509_21:
  8441     0672  2E80               	goto	i1l540
  8442     0673                     u509_20:
  8443     0673                     i1l3843:
  8444     0673  0879               	movf	_counter,w
  8445     0674  1D03               	btfss	3,2
  8446     0675  2E77               	goto	u510_21
  8447     0676  2E78               	goto	u510_20
  8448     0677                     u510_21:
  8449     0677  2E80               	goto	i1l540
  8450     0678                     u510_20:
  8451     0678                     i1l3845:
  8452                           
  8453                           ;MCAL_LAYER/INTERRUPT/interrupt_manager.c: 19:         counter = 1;
  8454     0678  01F9               	clrf	_counter
  8455     0679  0AF9               	incf	_counter,f
  8456     067A                     i1l3847:
  8457                           
  8458                           ;MCAL_LAYER/INTERRUPT/interrupt_manager.c: 20:         ISR_RB4(0);
  8459     067A  3000               	movlw	0
  8460     067B  160A  118A  2784  120A  118A  	fcall	_ISR_RB4
  8461     0680                     i1l540:	
  8462                           ;MCAL_LAYER/INTERRUPT/interrupt_manager.c: 21:     }
  8463                           
  8464                           
  8465                           ;MCAL_LAYER/INTERRUPT/interrupt_manager.c: 24:     if((INTCONbits.RBIE == 1) && (INTCONb
      +                          its.RBIF == 1) && (PORTBbits.RB4 == 0) && (counter == 1)){
  8466     0680  1D8B               	btfss	11,3	;volatile
  8467     0681  2E83               	goto	u511_21
  8468     0682  2E84               	goto	u511_20
  8469     0683                     u511_21:
  8470     0683  2E9A               	goto	i1l542
  8471     0684                     u511_20:
  8472     0684                     i1l3849:
  8473     0684  1C0B               	btfss	11,0	;volatile
  8474     0685  2E87               	goto	u512_21
  8475     0686  2E88               	goto	u512_20
  8476     0687                     u512_21:
  8477     0687  2E9A               	goto	i1l542
  8478     0688                     u512_20:
  8479     0688                     i1l3851:
  8480     0688  1283               	bcf	3,5	;RP0=0, select bank0
  8481     0689  1303               	bcf	3,6	;RP1=0, select bank0
  8482     068A  1A06               	btfsc	6,4	;volatile
  8483     068B  2E8D               	goto	u513_21
  8484     068C  2E8E               	goto	u513_20
  8485     068D                     u513_21:
  8486     068D  2E9A               	goto	i1l542
  8487     068E                     u513_20:
  8488     068E                     i1l3853:
  8489     068E  0379               	decf	_counter,w
  8490     068F  1D03               	btfss	3,2
  8491     0690  2E92               	goto	u514_21
  8492     0691  2E93               	goto	u514_20
  8493     0692                     u514_21:
  8494     0692  2E9A               	goto	i1l542
  8495     0693                     u514_20:
  8496     0693                     i1l3855:
  8497                           
  8498                           ;MCAL_LAYER/INTERRUPT/interrupt_manager.c: 25:         counter = 0;
  8499     0693  01F9               	clrf	_counter
  8500     0694                     i1l3857:
  8501                           
  8502                           ;MCAL_LAYER/INTERRUPT/interrupt_manager.c: 26:         ISR_RB4(1);
  8503     0694  3001               	movlw	1
  8504     0695  160A  118A  2784  120A  118A  	fcall	_ISR_RB4
  8505     069A                     i1l542:	
  8506                           ;MCAL_LAYER/INTERRUPT/interrupt_manager.c: 27:     }
  8507                           
  8508                           
  8509                           ;MCAL_LAYER/INTERRUPT/interrupt_manager.c: 30:     if((INTCONbits.RBIE == 1) && (INTCONb
      +                          its.RBIF == 1) && (PORTBbits.RB5 == 1) && (counter == 0)){
  8510     069A  1D8B               	btfss	11,3	;volatile
  8511     069B  2E9D               	goto	u515_21
  8512     069C  2E9E               	goto	u515_20
  8513     069D                     u515_21:
  8514     069D  2EB5               	goto	i1l544
  8515     069E                     u515_20:
  8516     069E                     i1l3859:
  8517     069E  1C0B               	btfss	11,0	;volatile
  8518     069F  2EA1               	goto	u516_21
  8519     06A0  2EA2               	goto	u516_20
  8520     06A1                     u516_21:
  8521     06A1  2EB5               	goto	i1l544
  8522     06A2                     u516_20:
  8523     06A2                     i1l3861:
  8524     06A2  1283               	bcf	3,5	;RP0=0, select bank0
  8525     06A3  1303               	bcf	3,6	;RP1=0, select bank0
  8526     06A4  1E86               	btfss	6,5	;volatile
  8527     06A5  2EA7               	goto	u517_21
  8528     06A6  2EA8               	goto	u517_20
  8529     06A7                     u517_21:
  8530     06A7  2EB5               	goto	i1l544
  8531     06A8                     u517_20:
  8532     06A8                     i1l3863:
  8533     06A8  0879               	movf	_counter,w
  8534     06A9  1D03               	btfss	3,2
  8535     06AA  2EAC               	goto	u518_21
  8536     06AB  2EAD               	goto	u518_20
  8537     06AC                     u518_21:
  8538     06AC  2EB5               	goto	i1l544
  8539     06AD                     u518_20:
  8540     06AD                     i1l3865:
  8541                           
  8542                           ;MCAL_LAYER/INTERRUPT/interrupt_manager.c: 31:         counter = 1;
  8543     06AD  01F9               	clrf	_counter
  8544     06AE  0AF9               	incf	_counter,f
  8545     06AF                     i1l3867:
  8546                           
  8547                           ;MCAL_LAYER/INTERRUPT/interrupt_manager.c: 32:         ISR_RB5(0);
  8548     06AF  3000               	movlw	0
  8549     06B0  160A  118A  278D  120A  118A  	fcall	_ISR_RB5
  8550     06B5                     i1l544:	
  8551                           ;MCAL_LAYER/INTERRUPT/interrupt_manager.c: 33:     }
  8552                           
  8553                           
  8554                           ;MCAL_LAYER/INTERRUPT/interrupt_manager.c: 36:     if((INTCONbits.RBIE == 1) && (INTCONb
      +                          its.RBIF == 1) && (PORTBbits.RB5 == 0) && (counter == 1)){
  8555     06B5  1D8B               	btfss	11,3	;volatile
  8556     06B6  2EB8               	goto	u519_21
  8557     06B7  2EB9               	goto	u519_20
  8558     06B8                     u519_21:
  8559     06B8  2ECF               	goto	i1l546
  8560     06B9                     u519_20:
  8561     06B9                     i1l3869:
  8562     06B9  1C0B               	btfss	11,0	;volatile
  8563     06BA  2EBC               	goto	u520_21
  8564     06BB  2EBD               	goto	u520_20
  8565     06BC                     u520_21:
  8566     06BC  2ECF               	goto	i1l546
  8567     06BD                     u520_20:
  8568     06BD                     i1l3871:
  8569     06BD  1283               	bcf	3,5	;RP0=0, select bank0
  8570     06BE  1303               	bcf	3,6	;RP1=0, select bank0
  8571     06BF  1A86               	btfsc	6,5	;volatile
  8572     06C0  2EC2               	goto	u521_21
  8573     06C1  2EC3               	goto	u521_20
  8574     06C2                     u521_21:
  8575     06C2  2ECF               	goto	i1l546
  8576     06C3                     u521_20:
  8577     06C3                     i1l3873:
  8578     06C3  0379               	decf	_counter,w
  8579     06C4  1D03               	btfss	3,2
  8580     06C5  2EC7               	goto	u522_21
  8581     06C6  2EC8               	goto	u522_20
  8582     06C7                     u522_21:
  8583     06C7  2ECF               	goto	i1l546
  8584     06C8                     u522_20:
  8585     06C8                     i1l3875:
  8586                           
  8587                           ;MCAL_LAYER/INTERRUPT/interrupt_manager.c: 37:         counter = 0;
  8588     06C8  01F9               	clrf	_counter
  8589     06C9                     i1l3877:
  8590                           
  8591                           ;MCAL_LAYER/INTERRUPT/interrupt_manager.c: 38:         ISR_RB5(1);
  8592     06C9  3001               	movlw	1
  8593     06CA  160A  118A  278D  120A  118A  	fcall	_ISR_RB5
  8594     06CF                     i1l546:	
  8595                           ;MCAL_LAYER/INTERRUPT/interrupt_manager.c: 39:     }
  8596                           
  8597                           
  8598                           ;MCAL_LAYER/INTERRUPT/interrupt_manager.c: 42:     if((INTCONbits.RBIE == 1) && (INTCONb
      +                          its.RBIF == 1) && (PORTBbits.RB6 == 1) && (counter == 0)){
  8599     06CF  1D8B               	btfss	11,3	;volatile
  8600     06D0  2ED2               	goto	u523_21
  8601     06D1  2ED3               	goto	u523_20
  8602     06D2                     u523_21:
  8603     06D2  2EEA               	goto	i1l548
  8604     06D3                     u523_20:
  8605     06D3                     i1l3879:
  8606     06D3  1C0B               	btfss	11,0	;volatile
  8607     06D4  2ED6               	goto	u524_21
  8608     06D5  2ED7               	goto	u524_20
  8609     06D6                     u524_21:
  8610     06D6  2EEA               	goto	i1l548
  8611     06D7                     u524_20:
  8612     06D7                     i1l3881:
  8613     06D7  1283               	bcf	3,5	;RP0=0, select bank0
  8614     06D8  1303               	bcf	3,6	;RP1=0, select bank0
  8615     06D9  1F06               	btfss	6,6	;volatile
  8616     06DA  2EDC               	goto	u525_21
  8617     06DB  2EDD               	goto	u525_20
  8618     06DC                     u525_21:
  8619     06DC  2EEA               	goto	i1l548
  8620     06DD                     u525_20:
  8621     06DD                     i1l3883:
  8622     06DD  0879               	movf	_counter,w
  8623     06DE  1D03               	btfss	3,2
  8624     06DF  2EE1               	goto	u526_21
  8625     06E0  2EE2               	goto	u526_20
  8626     06E1                     u526_21:
  8627     06E1  2EEA               	goto	i1l548
  8628     06E2                     u526_20:
  8629     06E2                     i1l3885:
  8630                           
  8631                           ;MCAL_LAYER/INTERRUPT/interrupt_manager.c: 43:         counter = 1;
  8632     06E2  01F9               	clrf	_counter
  8633     06E3  0AF9               	incf	_counter,f
  8634     06E4                     i1l3887:
  8635                           
  8636                           ;MCAL_LAYER/INTERRUPT/interrupt_manager.c: 44:         ISR_RB6(0);
  8637     06E4  3000               	movlw	0
  8638     06E5  160A  118A  2796  120A  118A  	fcall	_ISR_RB6
  8639     06EA                     i1l548:	
  8640                           ;MCAL_LAYER/INTERRUPT/interrupt_manager.c: 45:     }
  8641                           
  8642                           
  8643                           ;MCAL_LAYER/INTERRUPT/interrupt_manager.c: 48:     if((INTCONbits.RBIE == 1) && (INTCONb
      +                          its.RBIF == 1) && (PORTBbits.RB6 == 0) && (counter == 1)){
  8644     06EA  1D8B               	btfss	11,3	;volatile
  8645     06EB  2EED               	goto	u527_21
  8646     06EC  2EEE               	goto	u527_20
  8647     06ED                     u527_21:
  8648     06ED  2F04               	goto	i1l550
  8649     06EE                     u527_20:
  8650     06EE                     i1l3889:
  8651     06EE  1C0B               	btfss	11,0	;volatile
  8652     06EF  2EF1               	goto	u528_21
  8653     06F0  2EF2               	goto	u528_20
  8654     06F1                     u528_21:
  8655     06F1  2F04               	goto	i1l550
  8656     06F2                     u528_20:
  8657     06F2                     i1l3891:
  8658     06F2  1283               	bcf	3,5	;RP0=0, select bank0
  8659     06F3  1303               	bcf	3,6	;RP1=0, select bank0
  8660     06F4  1B06               	btfsc	6,6	;volatile
  8661     06F5  2EF7               	goto	u529_21
  8662     06F6  2EF8               	goto	u529_20
  8663     06F7                     u529_21:
  8664     06F7  2F04               	goto	i1l550
  8665     06F8                     u529_20:
  8666     06F8                     i1l3893:
  8667     06F8  0379               	decf	_counter,w
  8668     06F9  1D03               	btfss	3,2
  8669     06FA  2EFC               	goto	u530_21
  8670     06FB  2EFD               	goto	u530_20
  8671     06FC                     u530_21:
  8672     06FC  2F04               	goto	i1l550
  8673     06FD                     u530_20:
  8674     06FD                     i1l3895:
  8675                           
  8676                           ;MCAL_LAYER/INTERRUPT/interrupt_manager.c: 49:         counter = 0;
  8677     06FD  01F9               	clrf	_counter
  8678     06FE                     i1l3897:
  8679                           
  8680                           ;MCAL_LAYER/INTERRUPT/interrupt_manager.c: 50:         ISR_RB6(1);
  8681     06FE  3001               	movlw	1
  8682     06FF  160A  118A  2796  120A  118A  	fcall	_ISR_RB6
  8683     0704                     i1l550:	
  8684                           ;MCAL_LAYER/INTERRUPT/interrupt_manager.c: 51:     }
  8685                           
  8686                           
  8687                           ;MCAL_LAYER/INTERRUPT/interrupt_manager.c: 54:     if((INTCONbits.RBIE == 1) && (INTCONb
      +                          its.RBIF == 1) && (PORTBbits.RB7 == 1) && (counter == 0)){
  8688     0704  1D8B               	btfss	11,3	;volatile
  8689     0705  2F07               	goto	u531_21
  8690     0706  2F08               	goto	u531_20
  8691     0707                     u531_21:
  8692     0707  2F1F               	goto	i1l552
  8693     0708                     u531_20:
  8694     0708                     i1l3899:
  8695     0708  1C0B               	btfss	11,0	;volatile
  8696     0709  2F0B               	goto	u532_21
  8697     070A  2F0C               	goto	u532_20
  8698     070B                     u532_21:
  8699     070B  2F1F               	goto	i1l552
  8700     070C                     u532_20:
  8701     070C                     i1l3901:
  8702     070C  1283               	bcf	3,5	;RP0=0, select bank0
  8703     070D  1303               	bcf	3,6	;RP1=0, select bank0
  8704     070E  1F86               	btfss	6,7	;volatile
  8705     070F  2F11               	goto	u533_21
  8706     0710  2F12               	goto	u533_20
  8707     0711                     u533_21:
  8708     0711  2F1F               	goto	i1l552
  8709     0712                     u533_20:
  8710     0712                     i1l3903:
  8711     0712  0879               	movf	_counter,w
  8712     0713  1D03               	btfss	3,2
  8713     0714  2F16               	goto	u534_21
  8714     0715  2F17               	goto	u534_20
  8715     0716                     u534_21:
  8716     0716  2F1F               	goto	i1l552
  8717     0717                     u534_20:
  8718     0717                     i1l3905:
  8719                           
  8720                           ;MCAL_LAYER/INTERRUPT/interrupt_manager.c: 55:         counter = 1;
  8721     0717  01F9               	clrf	_counter
  8722     0718  0AF9               	incf	_counter,f
  8723     0719                     i1l3907:
  8724                           
  8725                           ;MCAL_LAYER/INTERRUPT/interrupt_manager.c: 56:         ISR_RB7(0);
  8726     0719  3000               	movlw	0
  8727     071A  160A  118A  279F  120A  118A  	fcall	_ISR_RB7
  8728     071F                     i1l552:	
  8729                           ;MCAL_LAYER/INTERRUPT/interrupt_manager.c: 57:     }
  8730                           
  8731                           
  8732                           ;MCAL_LAYER/INTERRUPT/interrupt_manager.c: 60:     if((INTCONbits.RBIE == 1) && (INTCONb
      +                          its.RBIF == 1) && (PORTBbits.RB7 == 0) && (counter == 1)){
  8733     071F  1D8B               	btfss	11,3	;volatile
  8734     0720  2F22               	goto	u535_21
  8735     0721  2F23               	goto	u535_20
  8736     0722                     u535_21:
  8737     0722  2F39               	goto	i1l555
  8738     0723                     u535_20:
  8739     0723                     i1l3909:
  8740     0723  1C0B               	btfss	11,0	;volatile
  8741     0724  2F26               	goto	u536_21
  8742     0725  2F27               	goto	u536_20
  8743     0726                     u536_21:
  8744     0726  2F39               	goto	i1l555
  8745     0727                     u536_20:
  8746     0727                     i1l3911:
  8747     0727  1283               	bcf	3,5	;RP0=0, select bank0
  8748     0728  1303               	bcf	3,6	;RP1=0, select bank0
  8749     0729  1B86               	btfsc	6,7	;volatile
  8750     072A  2F2C               	goto	u537_21
  8751     072B  2F2D               	goto	u537_20
  8752     072C                     u537_21:
  8753     072C  2F39               	goto	i1l555
  8754     072D                     u537_20:
  8755     072D                     i1l3913:
  8756     072D  0379               	decf	_counter,w
  8757     072E  1D03               	btfss	3,2
  8758     072F  2F31               	goto	u538_21
  8759     0730  2F32               	goto	u538_20
  8760     0731                     u538_21:
  8761     0731  2F39               	goto	i1l555
  8762     0732                     u538_20:
  8763     0732                     i1l3915:
  8764                           
  8765                           ;MCAL_LAYER/INTERRUPT/interrupt_manager.c: 61:         counter = 0;
  8766     0732  01F9               	clrf	_counter
  8767     0733                     i1l3917:
  8768                           
  8769                           ;MCAL_LAYER/INTERRUPT/interrupt_manager.c: 62:         ISR_RB7(1);
  8770     0733  3001               	movlw	1
  8771     0734  160A  118A  279F  120A  118A  	fcall	_ISR_RB7
  8772     0739                     i1l555:	
  8773                           ;MCAL_LAYER/INTERRUPT/interrupt_manager.c: 63:     }
  8774                           
  8775     0739  0872               	movf	??_InterruptManager+1,w
  8776     073A  008A               	movwf	10
  8777     073B  0E71               	swapf	??_InterruptManager,w
  8778     073C  0083               	movwf	3
  8779     073D  0EFE               	swapf	btemp,f
  8780     073E  0E7E               	swapf	btemp,w
  8781     073F  0009               	retfie
  8782     0740                     __end_of_InterruptManager:
  8783                           
  8784                           	psect	intentry
  8785     0004                     __pintentry:	
  8786                           ;incstack = 0
  8787                           ; Regs used in _InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  8788                           
  8789     0004                     interrupt_function:
  8790     007E                     saved_w	set	btemp
  8791     0004  00FE               	movwf	btemp
  8792     0005  0E03               	swapf	3,w
  8793     0006  00F1               	movwf	??_InterruptManager
  8794     0007  080A               	movf	10,w
  8795     0008  00F2               	movwf	??_InterruptManager+1
  8796     0009  120A  118A  2E58   	ljmp	_InterruptManager
  8797                           
  8798                           	psect	text41
  8799     179F                     __ptext41:	
  8800 ;; *************** function _ISR_RB7 *****************
  8801 ;; Defined at:
  8802 ;;		line 84 in file "MCAL_LAYER/INTERRUPT/external_interrupt.c"
  8803 ;; Parameters:    Size  Location     Type
  8804 ;;  n               1    wreg     unsigned char 
  8805 ;; Auto vars:     Size  Location     Type
  8806 ;;  n               1    0[COMMON] unsigned char 
  8807 ;; Return value:  Size  Location     Type
  8808 ;;                  1    wreg      void 
  8809 ;; Registers used:
  8810 ;;		wreg, status,2, status,0
  8811 ;; Tracked objects:
  8812 ;;		On entry : 0/0
  8813 ;;		On exit  : 0/0
  8814 ;;		Unchanged: 0/0
  8815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8816 ;;      Params:         0       0       0       0       0
  8817 ;;      Locals:         1       0       0       0       0
  8818 ;;      Temps:          0       0       0       0       0
  8819 ;;      Totals:         1       0       0       0       0
  8820 ;;Total ram usage:        1 bytes
  8821 ;; Hardware stack levels used: 1
  8822 ;; This function calls:
  8823 ;;		Nothing
  8824 ;; This function is called by:
  8825 ;;		_InterruptManager
  8826 ;; This function uses a non-reentrant model
  8827 ;;
  8828                           
  8829     179F                     _ISR_RB7:	
  8830                           ;psect for function _ISR_RB7
  8831                           
  8832                           
  8833                           ;incstack = 0
  8834                           ; Regs used in _ISR_RB7: [wreg+status,2+status,0]
  8835                           ;ISR_RB7@n stored from wreg
  8836     179F  00F0               	movwf	ISR_RB7@n
  8837     17A0                     i1l3293:
  8838                           
  8839                           ;MCAL_LAYER/INTERRUPT/external_interrupt.c: 85:     (INTCONbits.INTF = 0);
  8840     17A0  108B               	bcf	11,1	;volatile
  8841     17A1                     i1l3295:
  8842                           
  8843                           ;MCAL_LAYER/INTERRUPT/external_interrupt.c: 86:     if(!n){
  8844     17A1  0870               	movf	ISR_RB7@n,w
  8845     17A2  1D03               	btfss	3,2
  8846     17A3  2FA5               	goto	u384_21
  8847     17A4  2FA6               	goto	u384_20
  8848     17A5                     u384_21:
  8849     17A5  2FA7               	goto	i1l3297
  8850     17A6                     u384_20:
  8851     17A6  2FA7               	goto	i1l475
  8852     17A7                     i1l3297:
  8853     17A7                     i1l475:
  8854     17A7  0008               	return
  8855     17A8                     __end_of_ISR_RB7:
  8856                           
  8857                           	psect	text42
  8858     1796                     __ptext42:	
  8859 ;; *************** function _ISR_RB6 *****************
  8860 ;; Defined at:
  8861 ;;		line 68 in file "MCAL_LAYER/INTERRUPT/external_interrupt.c"
  8862 ;; Parameters:    Size  Location     Type
  8863 ;;  n               1    wreg     unsigned char 
  8864 ;; Auto vars:     Size  Location     Type
  8865 ;;  n               1    0[COMMON] unsigned char 
  8866 ;; Return value:  Size  Location     Type
  8867 ;;                  1    wreg      void 
  8868 ;; Registers used:
  8869 ;;		wreg, status,2, status,0
  8870 ;; Tracked objects:
  8871 ;;		On entry : 0/0
  8872 ;;		On exit  : 0/0
  8873 ;;		Unchanged: 0/0
  8874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8875 ;;      Params:         0       0       0       0       0
  8876 ;;      Locals:         1       0       0       0       0
  8877 ;;      Temps:          0       0       0       0       0
  8878 ;;      Totals:         1       0       0       0       0
  8879 ;;Total ram usage:        1 bytes
  8880 ;; Hardware stack levels used: 1
  8881 ;; This function calls:
  8882 ;;		Nothing
  8883 ;; This function is called by:
  8884 ;;		_InterruptManager
  8885 ;; This function uses a non-reentrant model
  8886 ;;
  8887                           
  8888     1796                     _ISR_RB6:	
  8889                           ;psect for function _ISR_RB6
  8890                           
  8891                           
  8892                           ;incstack = 0
  8893                           ; Regs used in _ISR_RB6: [wreg+status,2+status,0]
  8894                           ;ISR_RB6@n stored from wreg
  8895     1796  00F0               	movwf	ISR_RB6@n
  8896     1797                     i1l3281:
  8897                           
  8898                           ;MCAL_LAYER/INTERRUPT/external_interrupt.c: 69:     (INTCONbits.INTF = 0);
  8899     1797  108B               	bcf	11,1	;volatile
  8900     1798                     i1l3283:
  8901                           
  8902                           ;MCAL_LAYER/INTERRUPT/external_interrupt.c: 70:     if(!n){
  8903     1798  0870               	movf	ISR_RB6@n,w
  8904     1799  1D03               	btfss	3,2
  8905     179A  2F9C               	goto	u383_21
  8906     179B  2F9D               	goto	u383_20
  8907     179C                     u383_21:
  8908     179C  2F9E               	goto	i1l3285
  8909     179D                     u383_20:
  8910     179D  2F9E               	goto	i1l466
  8911     179E                     i1l3285:
  8912     179E                     i1l466:
  8913     179E  0008               	return
  8914     179F                     __end_of_ISR_RB6:
  8915                           
  8916                           	psect	text43
  8917     178D                     __ptext43:	
  8918 ;; *************** function _ISR_RB5 *****************
  8919 ;; Defined at:
  8920 ;;		line 52 in file "MCAL_LAYER/INTERRUPT/external_interrupt.c"
  8921 ;; Parameters:    Size  Location     Type
  8922 ;;  n               1    wreg     unsigned char 
  8923 ;; Auto vars:     Size  Location     Type
  8924 ;;  n               1    0[COMMON] unsigned char 
  8925 ;; Return value:  Size  Location     Type
  8926 ;;                  1    wreg      void 
  8927 ;; Registers used:
  8928 ;;		wreg, status,2, status,0
  8929 ;; Tracked objects:
  8930 ;;		On entry : 0/0
  8931 ;;		On exit  : 0/0
  8932 ;;		Unchanged: 0/0
  8933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8934 ;;      Params:         0       0       0       0       0
  8935 ;;      Locals:         1       0       0       0       0
  8936 ;;      Temps:          0       0       0       0       0
  8937 ;;      Totals:         1       0       0       0       0
  8938 ;;Total ram usage:        1 bytes
  8939 ;; Hardware stack levels used: 1
  8940 ;; This function calls:
  8941 ;;		Nothing
  8942 ;; This function is called by:
  8943 ;;		_InterruptManager
  8944 ;; This function uses a non-reentrant model
  8945 ;;
  8946                           
  8947     178D                     _ISR_RB5:	
  8948                           ;psect for function _ISR_RB5
  8949                           
  8950                           
  8951                           ;incstack = 0
  8952                           ; Regs used in _ISR_RB5: [wreg+status,2+status,0]
  8953                           ;ISR_RB5@n stored from wreg
  8954     178D  00F0               	movwf	ISR_RB5@n
  8955     178E                     i1l3269:
  8956                           
  8957                           ;MCAL_LAYER/INTERRUPT/external_interrupt.c: 53:     (INTCONbits.INTF = 0);
  8958     178E  108B               	bcf	11,1	;volatile
  8959     178F                     i1l3271:
  8960                           
  8961                           ;MCAL_LAYER/INTERRUPT/external_interrupt.c: 54:     if(!n){
  8962     178F  0870               	movf	ISR_RB5@n,w
  8963     1790  1D03               	btfss	3,2
  8964     1791  2F93               	goto	u382_21
  8965     1792  2F94               	goto	u382_20
  8966     1793                     u382_21:
  8967     1793  2F95               	goto	i1l3273
  8968     1794                     u382_20:
  8969     1794  2F95               	goto	i1l457
  8970     1795                     i1l3273:
  8971     1795                     i1l457:
  8972     1795  0008               	return
  8973     1796                     __end_of_ISR_RB5:
  8974                           
  8975                           	psect	text44
  8976     1784                     __ptext44:	
  8977 ;; *************** function _ISR_RB4 *****************
  8978 ;; Defined at:
  8979 ;;		line 37 in file "MCAL_LAYER/INTERRUPT/external_interrupt.c"
  8980 ;; Parameters:    Size  Location     Type
  8981 ;;  n               1    wreg     unsigned char 
  8982 ;; Auto vars:     Size  Location     Type
  8983 ;;  n               1    0[COMMON] unsigned char 
  8984 ;; Return value:  Size  Location     Type
  8985 ;;                  1    wreg      void 
  8986 ;; Registers used:
  8987 ;;		wreg, status,2, status,0
  8988 ;; Tracked objects:
  8989 ;;		On entry : 0/0
  8990 ;;		On exit  : 0/0
  8991 ;;		Unchanged: 0/0
  8992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8993 ;;      Params:         0       0       0       0       0
  8994 ;;      Locals:         1       0       0       0       0
  8995 ;;      Temps:          0       0       0       0       0
  8996 ;;      Totals:         1       0       0       0       0
  8997 ;;Total ram usage:        1 bytes
  8998 ;; Hardware stack levels used: 1
  8999 ;; This function calls:
  9000 ;;		Nothing
  9001 ;; This function is called by:
  9002 ;;		_InterruptManager
  9003 ;; This function uses a non-reentrant model
  9004 ;;
  9005                           
  9006     1784                     _ISR_RB4:	
  9007                           ;psect for function _ISR_RB4
  9008                           
  9009                           
  9010                           ;incstack = 0
  9011                           ; Regs used in _ISR_RB4: [wreg+status,2+status,0]
  9012                           ;ISR_RB4@n stored from wreg
  9013     1784  00F0               	movwf	ISR_RB4@n
  9014     1785                     i1l3257:
  9015                           
  9016                           ;MCAL_LAYER/INTERRUPT/external_interrupt.c: 38:     (INTCONbits.INTF = 0);
  9017     1785  108B               	bcf	11,1	;volatile
  9018     1786                     i1l3259:
  9019                           
  9020                           ;MCAL_LAYER/INTERRUPT/external_interrupt.c: 39:     if(!n){
  9021     1786  0870               	movf	ISR_RB4@n,w
  9022     1787  1D03               	btfss	3,2
  9023     1788  2F8A               	goto	u381_21
  9024     1789  2F8B               	goto	u381_20
  9025     178A                     u381_21:
  9026     178A  2F8C               	goto	i1l3261
  9027     178B                     u381_20:
  9028     178B  2F8C               	goto	i1l448
  9029     178C                     i1l3261:
  9030     178C                     i1l448:
  9031     178C  0008               	return
  9032     178D                     __end_of_ISR_RB4:
  9033                           
  9034                           	psect	text45
  9035     07FA                     __ptext45:	
  9036 ;; *************** function _ISR_INTX *****************
  9037 ;; Defined at:
  9038 ;;		line 29 in file "MCAL_LAYER/INTERRUPT/external_interrupt.c"
  9039 ;; Parameters:    Size  Location     Type
  9040 ;;		None
  9041 ;; Auto vars:     Size  Location     Type
  9042 ;;		None
  9043 ;; Return value:  Size  Location     Type
  9044 ;;                  1    wreg      void 
  9045 ;; Registers used:
  9046 ;;		None
  9047 ;; Tracked objects:
  9048 ;;		On entry : 0/0
  9049 ;;		On exit  : 0/0
  9050 ;;		Unchanged: 0/0
  9051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9052 ;;      Params:         0       0       0       0       0
  9053 ;;      Locals:         0       0       0       0       0
  9054 ;;      Temps:          0       0       0       0       0
  9055 ;;      Totals:         0       0       0       0       0
  9056 ;;Total ram usage:        0 bytes
  9057 ;; Hardware stack levels used: 1
  9058 ;; This function calls:
  9059 ;;		Nothing
  9060 ;; This function is called by:
  9061 ;;		_InterruptManager
  9062 ;; This function uses a non-reentrant model
  9063 ;;
  9064                           
  9065     07FA                     _ISR_INTX:	
  9066                           ;psect for function _ISR_INTX
  9067                           
  9068     07FA                     i1l1859:	
  9069                           ;incstack = 0
  9070                           ; Regs used in _ISR_INTX: []
  9071                           
  9072                           
  9073                           ;MCAL_LAYER/INTERRUPT/external_interrupt.c: 30:     (INTCONbits.INTF = 0);
  9074     07FA  108B               	bcf	11,1	;volatile
  9075     07FB                     i1l439:
  9076     07FB  0008               	return
  9077     07FC                     __end_of_ISR_INTX:
  9078     007E                     btemp	set	126	;btemp
  9079     007E                     wtemp0	set	126
  9080                           
  9081                           	psect	config
  9082                           
  9083                           ;Config register CONFIG @ 0x2007
  9084                           ;	Oscillator Selection bits
  9085                           ;	FOSC = EXTRC, RC oscillator
  9086                           ;	Watchdog Timer Enable bit
  9087                           ;	WDTE = OFF, WDT disabled
  9088                           ;	Power-up Timer Enable bit
  9089                           ;	PWRTE = OFF, PWRT disabled
  9090                           ;	Brown-out Reset Enable bit
  9091                           ;	BOREN = OFF, BOR disabled
  9092                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  9093                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  9094                           ;	Data EEPROM Memory Code Protection bit
  9095                           ;	CPD = OFF, Data EEPROM code protection off
  9096                           ;	Flash Program Memory Write Enable bits
  9097                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  9098                           ;	In-Circuit Debugger Mode bit
  9099                           ;	DEBUG = 0x1, unprogrammed default
  9100                           ;	Flash Program Memory Code Protection bit
  9101                           ;	CP = OFF, Code protection off
  9102     2007                     	org	8199
  9103     2007  3F3B               	dw	16187

Data Sizes:
    Strings     14
    Constant    0
    Data        42
    BSS         80
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     46      80
    BANK1            80      7      60
    BANK3            96      0      32
    BANK2            96      0       0

Pointer List with Targets:

    ADC_Get_Conversion_Result@adc	PTR const struct . size(1) Largest target is 3
		 -> adc(BANK0[3]), 

    ADC_Get_Conversion_Result@result	PTR unsigned short  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    ADC_INIT@adc	PTR const struct . size(1) Largest target is 3
		 -> adc(BANK0[3]), 

    ADC_Start_Conversion@adc	PTR const struct . size(1) Largest target is 3
		 -> adc(BANK0[3]), 

    ADC_Start_Conversion_Blocking@adc	PTR const struct . size(1) Largest target is 3
		 -> adc(BANK0[3]), 

    Convert_uint16_to_string@str	PTR unsigned char  size(1) Largest target is 6
		 -> lcd_show(BANK1[6]), 

    Disable_INTX@intx$EXT_HANDLER	PTR FTN()void  size(1) Largest target is 0

    Disable_RBX@rbx$EXT_HIGH_INTERRUPT	PTR FTN()void  size(1) Largest target is 0

    Disable_RBX@rbx$EXT_LOW_INTERRUPT	PTR FTN()void  size(1) Largest target is 0

    Enable_INTX@intx$EXT_HANDLER	PTR FTN()void  size(1) Largest target is 0

    Enable_RBX@rbx$EXT_HIGH_INTERRUPT	PTR FTN()void  size(1) Largest target is 0

    Enable_RBX@rbx$EXT_LOW_INTERRUPT	PTR FTN()void  size(1) Largest target is 0

    EXT_INTX_HANDLER	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    EXT_RB4_HIGH_HANDLER	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    EXT_RB4_LOW_HANDLER	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    EXT_RB5_HIGH_HANDLER	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    EXT_RB5_LOW_HANDLER	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    EXT_RB6_HIGH_HANDLER	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    EXT_RB6_LOW_HANDLER	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    EXT_RB7_HIGH_HANDLER	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    EXT_RB7_LOW_HANDLER	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    EXT_Rbx_Fun@rbx$EXT_HIGH_INTERRUPT	PTR FTN()void  size(1) Largest target is 0

    EXT_Rbx_Fun@rbx$EXT_LOW_INTERRUPT	PTR FTN()void  size(1) Largest target is 0

    f$.$buffer	PTR unsigned char  size(1) Largest target is 0

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    gpio_pin_direction_initialize@pin	PTR const struct . size(1) Largest target is 6
		 -> Enable_INTX@pin_obj(COMMON[1]), lcd(BANK1[6]), lcd$pins(BANK1[4]), motor1(BANK0[2]), 
		 -> motor1$pins(BANK0[2]), motor2(BANK0[2]), motor2$pins(BANK0[2]), 

    gpio_pin_initialize@pin	PTR const struct . size(1) Largest target is 6
		 -> lcd(BANK1[6]), lcd$pins(BANK1[4]), motor1(BANK0[2]), motor1$pins(BANK0[2]), 
		 -> motor2(BANK0[2]), motor2$pins(BANK0[2]), 

    gpio_pin_write_logic@pin	PTR const struct . size(1) Largest target is 6
		 -> lcd(BANK1[6]), lcd$pins(BANK1[4]), motor1(BANK0[2]), motor1$pins(BANK0[2]), 
		 -> motor2(BANK0[2]), motor2$pins(BANK0[2]), 

    lcd_4bits_initialize@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd(BANK1[6]), 

    lcd_4bits_send_char@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd(BANK1[6]), 

    lcd_4bits_send_command@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd(BANK1[6]), 

    lcd_4bits_send_string@data	PTR unsigned char  size(2) Largest target is 11
		 -> lcd_show(BANK1[6]), STR_4(CODE[11]), 

    lcd_4bits_send_string@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd(BANK1[6]), 

    lcd_4bits_send_string_pos@data	PTR unsigned char  size(2) Largest target is 11
		 -> lcd_show(BANK1[6]), STR_4(CODE[11]), 

    lcd_4bits_send_string_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd(BANK1[6]), 

    memset@dest	PTR void  size(1) Largest target is 6
		 -> lcd_show(BANK1[6]), 

    memset@p	PTR unsigned char  size(1) Largest target is 6
		 -> lcd_show(BANK1[6]), 

    motor_initialize@motor	PTR const struct . size(1) Largest target is 2
		 -> motor1(BANK0[2]), motor2(BANK0[2]), 

    motor_turn_left@motor	PTR const struct . size(1) Largest target is 2
		 -> motor2(BANK0[2]), 

    motor_turn_off@motor	PTR const struct . size(1) Largest target is 2
		 -> motor1(BANK0[2]), motor2(BANK0[2]), 

    motor_turn_right@motor	PTR const struct . size(1) Largest target is 2
		 -> motor1(BANK0[2]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTB(SFR0[1]), PORTC(SFR0[1]), PORTD(SFR0[1]), 
		 -> PORTE(SFR0[1]), 

    Result_Format@adc	PTR const struct . size(1) Largest target is 3
		 -> adc(BANK0[3]), 

    S1429$buffer	PTR unsigned char  size(1) Largest target is 0

    S1429$source	PTR const unsigned char  size(1) Largest target is 0

    S697$EXT_HANDLER	PTR FTN()void  size(1) Largest target is 0

    S760$EXT_HIGH_INTERRUPT	PTR FTN()void  size(1) Largest target is 0

    S760$EXT_LOW_INTERRUPT	PTR FTN()void  size(1) Largest target is 0

    send_4bits@lcd	PTR struct . size(1) Largest target is 6
		 -> lcd(BANK1[6]), 

    send_enable_signal@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd(BANK1[6]), 

    set_cursor@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd(BANK1[6]), 

    set_src_intx@intx$EXT_HANDLER	PTR FTN()void  size(1) Largest target is 0

    sp__memset	PTR void  size(1) Largest target is 6
		 -> lcd_show(BANK1[6]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 11
		 -> Convert_uint16_to_string@temp(BANK1[6]), Convert_uint32_to_string@temp(COMMON[11]), Convert_uint8_to_string@temp(COMMON[4]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(SFR1[1]), TRISB(SFR1[1]), TRISC(SFR1[1]), TRISD(SFR1[1]), 
		 -> TRISE(SFR1[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    _main->_motor_turn_left
    _main->_motor_turn_off
    _main->_motor_turn_right
    _motor_turn_right->_gpio_pin_write_logic
    _motor_turn_off->_gpio_pin_write_logic
    _motor_turn_left->_gpio_pin_write_logic
    _set_cursor->_lcd_4bits_send_command
    _lcd_4bits_send_string->_lcd_4bits_send_char
    _lcd_4bits_send_char->_send_4bits
    _lcd_4bits_send_char->_send_enable_signal
    _mcal_initialize->_ADC_INIT
    _ADC_INIT->_Result_Format
    _lcd_4bits_initialize->_lcd_4bits_send_command
    _lcd_4bits_send_command->_send_4bits
    _lcd_4bits_send_command->_send_enable_signal
    _send_enable_signal->_gpio_pin_write_logic
    _send_4bits->_gpio_pin_write_logic
    _gpio_pin_initialize->_gpio_pin_direction_initialize
    ___fltol->___xxtofl
    ___flmul->__Umul8_16
    ___flmul->___xxtofl
    _Convert_uint16_to_string->_sprintf
    _vfpfcnvrt->___awdiv
    _vfpfcnvrt->___awmod
    _abs->___awmod
    _ADC_Start_Conversion_Blocking->_ADC_Get_Conversion_Result

Critical Paths under _InterruptManager in COMMON

    _InterruptManager->_ISR_RB4
    _InterruptManager->_ISR_RB5
    _InterruptManager->_ISR_RB6
    _InterruptManager->_ISR_RB7

Critical Paths under _main in BANK0

    _main->___fltol
    _motor_turn_right->_gpio_pin_write_logic
    _motor_turn_off->_gpio_pin_write_logic
    _motor_turn_left->_gpio_pin_write_logic
    _lcd_4bits_send_string_pos->_lcd_4bits_send_string
    _lcd_4bits_send_string_pos->_set_cursor
    _set_cursor->_lcd_4bits_send_command
    _lcd_4bits_send_string->_lcd_4bits_send_char
    _lcd_4bits_send_char->_send_4bits
    _mcal_initialize->_ADC_INIT
    _ecu_initialzie->_lcd_4bits_initialize
    _motor_initialize->_gpio_pin_initialize
    _lcd_4bits_initialize->_lcd_4bits_send_command
    _lcd_4bits_send_command->_send_4bits
    _send_enable_signal->_gpio_pin_write_logic
    _send_4bits->_gpio_pin_write_logic
    _gpio_pin_initialize->_gpio_pin_write_logic
    ___fltol->___flmul
    ___flmul->___xxtofl
    _Convert_uint16_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Convert_uint16_to_string

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   58665
      _ADC_Start_Conversion_Blocking
           _Convert_uint16_to_string
                  _WRITE_DATA_EEPROM
                            ___flmul
                            ___fltol
                            ___lwdiv
                           ___xxtofl
             _apllication_initilaize
          _lcd_4bits_send_string_pos
                    _motor_turn_left
                     _motor_turn_off
                   _motor_turn_right
 ---------------------------------------------------------------------------------
 (1) _motor_turn_right                                     2     2      0    2610
                                              6 COMMON     2     2      0
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _motor_turn_off                                       2     2      0    2610
                                              6 COMMON     2     2      0
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _motor_turn_left                                      2     2      0    2574
                                              6 COMMON     2     2      0
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _lcd_4bits_send_string_pos                            6     2      4   21167
                                             15 BANK0      6     2      4
              _lcd_4bits_send_string
                         _set_cursor
 ---------------------------------------------------------------------------------
 (2) _set_cursor                                           4     2      2   10989
                                             11 BANK0      4     2      2
             _lcd_4bits_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bits_send_string                                4     2      2    9361
                                             11 BANK0      4     2      2
                _lcd_4bits_send_char
 ---------------------------------------------------------------------------------
 (3) _lcd_4bits_send_char                                  4     3      1    9068
                                              7 COMMON     1     1      0
                                              8 BANK0      3     2      1
               _gpio_pin_write_logic
                         _send_4bits
                 _send_enable_signal
 ---------------------------------------------------------------------------------
 (1) _apllication_initilaize                               0     0      0   18967
                     _ecu_initialzie
                    _mcal_initialize
 ---------------------------------------------------------------------------------
 (2) _mcal_initialize                                      1     1      0     383
                           _ADC_INIT
 ---------------------------------------------------------------------------------
 (3) _ADC_INIT                                             3     3      0     377
                                              6 COMMON     1     1      0
                                              0 BANK0      2     2      0
                      _Result_Format
 ---------------------------------------------------------------------------------
 (4) _Result_Format                                        4     4      0     161
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _ecu_initialzie                                       0     0      0   18584
               _lcd_4bits_initialize
                   _motor_initialize
 ---------------------------------------------------------------------------------
 (3) _motor_initialize                                     2     2      0    3908
                                              9 BANK0      2     2      0
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (3) _lcd_4bits_initialize                                 6     6      0   14676
                                             11 BANK0      6     6      0
                _gpio_pin_initialize
             _lcd_4bits_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bits_send_command                               4     3      1   10328
                                              7 COMMON     1     1      0
                                              8 BANK0      3     2      1
               _gpio_pin_write_logic
                         _send_4bits
                 _send_enable_signal
 ---------------------------------------------------------------------------------
 (4) _send_enable_signal                                   3     3      0    2706
                                              6 COMMON     1     1      0
                                              5 BANK0      2     2      0
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _send_4bits                                           4     3      1    3258
                                              6 COMMON     1     1      0
                                              5 BANK0      3     2      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_initialize                                  4     4      0    3724
                                              5 BANK0      4     4      0
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                 8     7      1    2426
                                              3 COMMON     3     2      1
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_initialize                        7     7      0     644
                                              3 COMMON     5     5      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     566
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     421
                                              3 COMMON     4     0      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                             36 BANK0     10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2417
                                             10 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _WRITE_DATA_EEPROM                                    4     1      3     371
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _Convert_uint16_to_string                            11     8      3    5749
                                             38 BANK0      4     1      3
                                              0 BANK1      7     7      0
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             19    16      3    4447
                                              7 COMMON     1     1      0
                                             22 BANK0     16    13      3
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     2      2    3763
                                             18 BANK0      4     2      2
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           12    10      2    3356
                                              6 BANK0     12    10      2
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     957
                                              3 COMMON     3     0      3
                                              0 BANK0      5     5      0
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                              2 BANK0      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                              3 COMMON     4     0      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _memset                                               6     2      4     785
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Start_Conversion_Blocking                        6     3      3     908
                                              0 BANK0      5     2      3
          _ADC_Get_Conversion_Result
               _ADC_Start_Conversion
 ---------------------------------------------------------------------------------
 (2) _ADC_Start_Conversion                                 2     2      0     130
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Get_Conversion_Result                            6     4      2     344
                                              3 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _InterruptManager                                     2     2      0      88
                                              1 COMMON     2     2      0
                           _ISR_INTX
                            _ISR_RB4
                            _ISR_RB5
                            _ISR_RB6
                            _ISR_RB7
 ---------------------------------------------------------------------------------
 (8) _ISR_RB7                                              1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _ISR_RB6                                              1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _ISR_RB5                                              1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _ISR_RB4                                              1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _ISR_INTX                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Start_Conversion_Blocking
     _ADC_Get_Conversion_Result
     _ADC_Start_Conversion
   _Convert_uint16_to_string
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _WRITE_DATA_EEPROM
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
     ___xxtofl (ARG)
   ___lwdiv
   ___xxtofl
   _apllication_initilaize
     _ecu_initialzie
       _lcd_4bits_initialize
         _gpio_pin_initialize
           _gpio_pin_direction_initialize
           _gpio_pin_write_logic
         _lcd_4bits_send_command
           _gpio_pin_write_logic
           _send_4bits
             _gpio_pin_write_logic
           _send_enable_signal
             _gpio_pin_write_logic
       _motor_initialize
         _gpio_pin_initialize
     _mcal_initialize
       _ADC_INIT
         _Result_Format
   _lcd_4bits_send_string_pos
     _lcd_4bits_send_string
       _lcd_4bits_send_char
         _gpio_pin_write_logic
         _send_4bits
         _send_enable_signal
     _set_cursor
       _lcd_4bits_send_command
   _motor_turn_left
     _gpio_pin_write_logic
   _motor_turn_off
     _gpio_pin_write_logic
   _motor_turn_right
     _gpio_pin_write_logic

 _InterruptManager (ROOT)
   _ISR_INTX
   _ISR_RB4
   _ISR_RB5
   _ISR_RB6
   _ISR_RB7

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      20       9       33.3%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      7      3C       7       75.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2E      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      B7      12        0.0%
ABS                  0      0      B7       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Aug 15 06:43:28 2024

                   ??_InterruptManager 0071           ADC_Get_Conversion_Result@adc 0077  
                                    pc 0002                                     l30 0B50  
                                   l25 0F21                                     l35 0B98  
                                   l53 0976                                     l48 0A81  
                                   l69 0BE8                                     l93 099C  
                                   l94 099D                                     l89 0C3C  
                         ___awdiv@sign 0021                                     fsr 0004  
                  __Umul8_16@word_mpld 0022                                    l104 0A4C  
                                  l201 09D0                                    l113 08AF  
                                  l203 09F0                                    l211 093A  
                                  l123 085E                                    l212 0952  
                                  l230 092E                                    l118 0878  
                                  l128 0844                                    l209 0936  
            _lcd_4bits_send_string_pos 0953                                    l170 09FD  
                                  l227 0924                                    l180 17AF  
                                  l172 0A1C                                    l229 0928  
                                  l157 17EC                                    l182 17B2  
                                  l262 0FFC                                    l318 0657  
                                  l185 17B6                                    l194 0AC3  
                                  l371 0E6B                                    l198 0AC3  
                                  l278 0FFF                                    l614 177B  
                                  l607 082B                                    l901 0DBD  
                                  l904 0DD2                                    l853 0D5A  
                                  l866 0CF1                                    l980 0B09  
                                  l894 0DD2                                    _adc 0069  
                                  _abs 17C7                                    _lcd 00CF  
                                  fsr0 0004                                    indf 0000  
                         ___awmod@sign 0021                        _mcal_initialize 1775  
                    ?_motor_initialize 0070                           ___flmul@aexp 003C  
                         ___flmul@bexp 003D                           ___flmul@sign 0037  
                         ___flmul@temp 0042                           ___flmul@prod 003E  
                   ??_motor_initialize 0078                           ___fltol@exp1 004D  
                                 l1103 02FF                                   ?_abs 0022  
                                 l1220 17D9                                   l1116 09B4  
                                 l1213 090D                                   l1141 0764  
                                 l1118 09C6                                   l1207 056D  
                                 l1143 07F9                                   l1232 0C96  
                                 l1162 08CD                                   l1154 07C3  
                                 l1243 07FC                                   l1155 07CF  
                                 l1169 08EC                                   l1097 038F  
                                 l4011 0582                                   l4003 056F  
                                 l3141 09A1                                   l4021 05C4  
                                 l4013 0592                                   l4005 0570  
                                 l4111 0CF5                                   l3151 09C2  
                                 l3143 09A3                                   l3311 0D66  
                                 l4103 0FF0                                   l4031 061E  
                                 l4023 05CD                                   l4015 059B  
                                 l4007 0575                                   l4121 0D09  
                                 l4113 0CF9                                   l4201 0C7D  
                                 l3241 0915                                   l3145 09AA  
                                 l3401 0088                                   l3321 0D8B  
                                 l4105 0FFE                                   l4025 05DD  
                                 l4017 05AB                                   l4009 0578  
                                 l4131 0D1F                                   l4123 0D0D  
                                 l4115 0CFE                                   l3251 0921  
                                 l3243 0919                                   l3147 09AE  
                                 l3411 00A4                                   l3403 008D  
                                 l3331 0D99                                   l3323 0D8D  
                                 l3315 0D6F                                   l4027 05E6  
                                 l4019 05B4                                   l4035 0646  
                                 l4051 0BF4                                   l4141 0D3F  
                                 l4133 0D23                                   l4125 0D0F  
                                 l4117 0D00                                   l4109 0CF2  
                                 l4205 17C7                                   l4301 0515  
                                 l3253 0923                                   l3245 091B  
                                 l3237 090E                                   l3149 09BD  
                                 l3501 036D                                   l3421 00CD  
                                 l3413 00A9                                   l3405 0095  
                                 l3341 0DB2                                   l3333 0DA2  
                                 l3325 0D91                                   l3317 0D82  
                                 l3309 0D5B                                   l4029 05F7  
                                 l4037 0656                                   l4221 0DE9  
                                 l4213 0DD6                                   l4053 0C3B  
                                 l4045 0BEC                                   l4061 097F  
                                 l4143 0D46                                   l4135 0D27  
                                 l4127 0D15                                   l4119 0D04  
                                 l4207 17CD                                   l4311 053F  
                                 l4303 051A                                   l3255 0929  
                                 l3247 091E                                   l3239 0912  
                                 l3511 0387                                   l3503 0379  
                                 l3431 0166                                   l3423 00E8  
                                 l3407 0097                                   l3343 0DC2  
                                 l3335 0DAB                                   l3319 0D83  
                                 l4071 0F25                                   l4231 0E25  
                                 l4223 0DF7                                   l4215 0DD7  
                                 l4047 0BEC                                   l4063 0982  
                     ??_motor_turn_off 0076                                   l4137 0D38  
                                 l4129 0D18                                   l4145 0D4C  
                                 l4161 0CA5                                   l4153 0C97  
                                 l4209 17CE                                   l4305 051F  
                                 l4313 0545                                   l3249 091F  
                                 l3505 037D                                   l3441 01C5  
                                 l3433 016F                                   l3425 0104  
                                 l3417 00B2                                   l3409 009F  
                                 l3345 0DC7                                   l4081 0F44  
                                 l4073 0F26                                   l4233 0E2E  
                                 l4225 0E00                                   l4241 0E68  
                                 l4217 0DDC                                   l4049 0BF1  
                                 l4065 098B                                   l4057 097A  
                                 l4401 0A0C                                   l4147 0D51  
                                 l4139 0D3E                                   l4171 0CBE  
                                 l4163 0CA9                                   l4155 0C9A  
                                 l4307 0524                                   l4315 054C  
                                 l4411 08F0                                   l3507 037E  
                                 l3451 025D                                   l3443 01DC  
                                 l3435 017D                                   l3427 012E  
                                 l3419 00C0                                   l4091 0F7B  
                                 l4083 0F4D                                   l4075 0F2B  
                                 l4235 0E3C                                   l4227 0E0E  
                                 l4219 0DDF                                   l4067 098F  
                                 l4059 097A                                   l4251 0B15  
                                 l4331 0E76                                   l4403 0A12  
                                 l4149 0D56                                   l4181 0CDD  
                                 l4173 0CC2                                   l4165 0CAE  
                                 l4157 0C9E                                   l4309 052D  
                                 l4413 08F3                                   l3509 0383  
                                 l3461 02CB                                   l3453 0283  
                                 l3445 01F9                                   l3437 019A  
                                 l3429 014A                                   l3381 0059  
                                 l3373 004B                                   l4093 0F89  
                                 l4085 0F5B                                   l4077 0F2C  
                                 l4237 0E45                                   l4229 0E17  
                                 l4253 0B4F                                   l4245 0B0D  
                                 l4341 0E92                                   l4333 0E89  
                                 l4325 0E6F                                   l4261 0935  
                                 l4405 0A18                                   l4501 1775  
                                 l4421 0A20                                   l4175 0CC6  
                                 l4167 0CB4                                   l4183 0CE3  
                                 l4159 0CA3                                   l4191 0C3D  
                                 l4319 0556                                   l4415 08FD  
                                 l3471 02E3                                   l3463 02CF  
                                 l3455 02AB                                   l3447 0224  
                                 l3439 01A8                                   l3391 0075  
                                 l3383 005E                                   l3375 0050  
                                 l4095 0F92                                   l4087 0F64  
                                 l4079 0F36                                   l4239 0E53  
                                 l4247 0B0D                                   l4351 0ECB  
                                 l4343 0E98                                   l4327 0E70  
                                 l4407 0A1B                                   l4423 0A21  
                                 l4185 0CE8                                   l4177 0CD0  
                                 l4169 0CB7                                   l4193 0C42  
                                 l4281 04A2                                   l4273 0482  
                                 l4417 090B                                   l3481 0304  
                                 l3473 02E4                                   l3465 02D0  
                                 l3457 02B4                                   l3449 0232  
                                 l3393 007A                                   l3385 0063  
                                 l3377 0054                                   l4601 0AE0  
                                 l4097 0FA1                                   l4089 0F72  
                                 l4249 0B12                                   l4361 0EF9  
                                 l4353 0ED1                                   l4345 0E9E  
                                 l4329 0E75                                   l4265 093E  
                                 l4257 0930                                   l4441 0A51  
                                 l4425 0A26                                   l4433 0A43  
                                 l4521 095C                                   l4187 0CED  
                                 l4179 0CD6                                   l4195 0C47  
                                 l4291 04D0                                   l4283 04A6  
                                 l4275 0491                                   l4531 0BB5  
                                 l3483 0309                                   l3491 033A  
                                 l3475 02E8                                   l3467 02D9  
                                 l3459 02C2                                   l3395 007E  
                                 l3387 006B                                   l3379 0058  
                                 l4603 0AF1                                   l4611 0B05  
                                 l4099 0FC9                                   l4363 0F03  
                                 l4355 0EDB                                   l4347 0EAD  
                                 l4339 0E8A                                   l4259 0930  
                                 l4371 0B54                                   l4451 0A80  
                                 l4443 0A56                                   l4427 0A29  
                                 l4435 0A4B                                   l4515 0956  
                                 l4461 08BF                                   l4197 0C4E  
                                 l4293 04D2                                   l4285 04B2  
                                 l4277 0497                                   l4533 0BBC  
                                 l4525 0B99                                   l3493 0347  
                                 l3485 0317                                   l3477 02FC  
                                 l3469 02DF                                   l3397 0082  
                                 l3389 006D                                   l4605 0AF7  
                                 l4621 075C                                   l4365 0F0D  
                                 l4357 0EE5                                   l4349 0EB7  
                                 l4373 0B54                                   l4445 0A59  
                                 l4429 0A36                                   l4517 0956  
                                 l4541 0860                                   l4455 08B3  
                                 l4199 0C5F                                   l4295 04D9  
                                 l4287 04BE                                   l4279 049E  
                                 l4471 08E3                                   l4463 08D1  
                                 l4535 0BC9                                   l4527 0BA2  
                                 l3495 0352                                   l3487 031B  
                                 l3399 0083                                   l4607 0AF8  
                                 l4631 077C                                   l4623 076C  
                                 l4615 0743                                   l4367 0F17  
                                 l4359 0EEF                                   l4383 0896  
                                 l4375 0B59                                   l4447 0A6C  
                                 l4439 0A50                                   l4519 095B  
                                 l4551 0846                                   l4543 0860  
                                 l4481 17AE                                   l4457 08B6  
                                 l4297 04FC                                   l4289 04CB  
                                 l4465 08D5                                   l4537 0BD7  
                                 l4529 0BA5                                   l3497 0361  
                                 l3489 0334                                   l4609 0AFF  
                                 l4641 07A7                                   l4633 0785  
                                 l4617 0748                                   l4385 0896  
                                 l4393 09F4                                   l4377 0B5C  
                                 l4449 0A72                                   l4553 0846  
                                 l4561 082D                                   l4545 0865  
                                 l4491 0A92                                   l4483 0A83  
                                 l4571 09CA                                   l4459 08BB  
                                 l4299 050F                                   l4467 08D7  
                                 l4539 0BDD                                   l3499 036B  
                                 l4651 07D1                                   l4643 07AE  
                                 l4635 078C                                   l4627 0775  
                                 l4619 074C                                   l4387 089B  
                                 l4475 17DA                                   l4395 09F5  
                                 l4379 0B97                                   l4555 084B  
                                 l4563 082D                                   l4547 0866  
                                 l4493 0AA1                                   l4485 0A83  
                                 l4477 17A9                                   l4581 09E4  
                                 l4573 09CA                                   l4469 08D9  
                                 l4653 07E7                                   l4645 07B9  
                                 l4637 0790                                   l4629 0778  
                                 l4389 089C                                   l4397 09FA  
                                 l4557 084C                                   l4565 0832  
                                 l4495 0AA9                                   l4487 0A88  
                                 l4479 17A9                                   l4575 09CF  
                                 l4591 0AC8                                   l4655 07EC  
                                 l4647 07BD                                   l4639 079E  
                                 l4399 09FF                                   l4567 0833  
                                 l4751 0390                                   l4489 0A89  
                                 l4577 09D1                                   l4593 0ACE  
                                 l4657 07F0                                   l4649 07C7  
                                 l4585 0821                                   l4761 03F9  
                                 l4753 0395                                   l4579 09DE  
                                 l4595 0AD1                                   l4659 07F1  
                                 l4835 094A                                   l4499 1775  
                                 l4587 0826                                   l4771 0432  
                                 l4763 0403                                   l4755 039F  
                                 l4597 0AD8                                   l4589 0AC4  
                                 l4837 064E                                   l4781 0463  
                                 l4773 043D                                   l4765 0407  
                                 l4757 03AC                                   l4599 0ADC  
                                 l4783 046F                                   l4775 0446  
                                 l4767 0412                                   l4759 03E6  
                                 l4777 044D                                   l4769 0422  
                                 l4779 0456                                   STR_1 081B  
                                 STR_2 081B                                   STR_4 0810  
                                 u4020 0058                                   u4101 00F6  
                                 u4021 0057                                   u4102 00FD  
                                 u4030 005E                                   u4111 0112  
                                 u4103 0104                                   u4031 005D  
                                 u4112 0119                                   u4040 0063  
                                 u4201 0241                                   u4121 013C  
                                 u4113 0120                                   u4041 0062  
                                 u4210 0269                                   u4202 0248  
                                 u4122 0143                                   u4050 0082  
                                 u4203 024F                                   u4131 0158  
                                 u4123 014A                                   u4051 0081  
                                 u4300 02E8                                   u4132 015F  
                                 u4060 0088                                   u4301 02E7  
                                 u4221 0275                                   u4133 0166  
                                 u4061 0087                                   u4310 02FC  
                                 u4230 0291                                   u4222 027C  
                                 u4070 008D                                   u4311 02FB  
                                 u4223 0283                                   u4215 0264  
                                 u4151 018C                                   u4071 008C  
                                 u4320 0303                                   u4152 0193  
                                 u4080 00A4                                   u6000 0E00  
                                 u4321 0302                                   u4241 029D  
                                 u4161 01B7                                   u4153 019A  
                                 u4145 0168                                   u4081 00A3  
                                 u6001 0DFF                                   u4330 0309  
                                 u4242 02A4                                   u4162 01BE  
                                 u4090 00A9                                   u6010 0E0E  
                                 u4331 0308                                   u4243 02AB  
                                 u4235 028C                                   u4163 01C5  
                                 u4091 00A8                                   u6011 0E0D  
                                 u4340 031B                                   u6020 0E17  
                                 u6100 0935                                   u4341 031A  
                                 u4181 01EB                                   u6021 0E16  
                                 u6101 0934                                   u6110 0491  
                                 u3710 09C2                                   u4350 032A  
                                 u4270 02CF                                   u4182 01F2  
                                 u6030 0E25                                   u6111 0490  
                                 u3711 09C1                                   u4271 02CE  
                                 u4255 02AD                                   u4191 0216  
                                 u4183 01F9                                   u4175 01C7  
                                 u6031 0E24                                   u6200 054B  
                                 u6120 04B2                                   u3800 0928  
                                 u4360 0347                                   u4192 021D  
                                 u6040 0E2E                                   u6201 054A  
                                 u6121 04B1                                   u3801 0927  
                                 u3705 09B5                                   u4361 0346  
                                 u4265 02C4                                   u4193 0224  
                                 u6041 0E2D                                   u6130 04BE  
                                 u4370 0361                                   u4290 02E3  
                                 u6050 0E3C                                   u6210 0E75  
                                 u6131 04BD                                   u4371 0360  
                                 u4355 0325                                   u4291 02E2  
                                 u6051 0E3B                                   u6211 0E74  
                                 u6140 04D7                                   u4380 037D  
                                 u3900 0DAA                                   u5500 05CD  
                                 u6060 0E45                                   u6220 0E9E  
                                 u6300 0A80                                   u6141 04D5  
                                 u4381 037C                                   u4365 0343  
                                 u4285 02D2                                   u3901 0DA9  
                                 u5501 05CC                                   u6061 0E44  
                                 u6221 0E9D                                   u6301 0A7F  
                                 u6310 08CD                                   u6150 04D8  
                                 u3910 0DB1                                   u5510 05DD  
                                 u5430 0575                                   u6070 0E53  
                                 u6230 0B59                                   u6311 08CC  
                                 u4375 035D                                   u3911 0DB0  
                                 u5511 05DC                                   u5431 0574  
                                 u6071 0E52                                   u6231 0B58  
                                 u6320 17AE                                   u6160 0515  
                                 u6400 0B9D                                   u5600 0F2B  
                                 u5520 05E6                                   u5440 0582  
                                 u6080 0B12                                   u6321 17AD  
                                 u6161 0514                                   u5601 0F2A  
                                 u5521 05E5                                   u5441 0581  
                                 u6081 0B11                                   u6330 17B6  
                                 u6170 051A                                   u6410 0BE8  
                                 u3690 09AE                                   u3930 0DC2  
                                 u3850 0D66                                   u5610 0F36  
                                 u5530 05F6                                   u5450 0592  
                                 u6250 089B                                   u6331 17B5  
                                 u6171 0519                                   u6411 0BE7  
                                 u3691 09AD                                   u3931 0DC1  
                                 u3851 0D65                                   u5611 0F35  
                                 u5531 05F5                                   u5451 0591  
                                 u6251 089A                                   u6340 0A88  
                                 u6180 051F                                   u3940 0DC7  
                                 u3860 0D7D                                   u6500 0AF1  
                                 u5700 0FA0                                   u5620 0F44  
                                 u5460 059B                                   u6260 09FA  
                                 u6420 0865                                   u6341 0A87  
                                 u6181 051E                                   u3941 0DC6  
                                 u3925 0DB4                                   u6501 0AF0  
                                 u5701 0F9F                                   u5621 0F43  
                                 u5461 059A                                   u6261 09F9  
                                 u6245 0B6A                                   u6421 0864  
                                 u6350 0A92                                   u6190 0524  
                                 u6270 090B                                   u3870 0D91  
                                 u5630 0F4D                                   u5470 05AB  
                                 u6430 084B                                   u6351 0A91  
                                 u6191 0523                                   u6271 090A  
                                 u3871 0D90                                   u5631 0F4C  
                                 u5471 05AA                                   u6095 0B22  
                                 u6431 084A                                   u6360 0AA9  
                                 u3880 0D98                                   u6520 0B05  
                                 u5640 0F5B                                   u5544 0604  
                                 u5480 05B4                                   u5560 0BF1  
                                 u6280 0A26                                   u6440 0832  
                                 u6361 0AA8                                   u3881 0D97  
                                 u3865 0D78                                   u6521 0B04  
                                 u6505 0AED                                   u5641 0F5A  
                                 u5545 0602                                   u5481 05B3  
                                 u5561 0BF0                                   u6281 0A25  
                                 u6441 0831                                   u6450 09CF  
                                 u5810 0D4C                                   u5730 0CF9  
                                 u6610 07BD                                   u6530 0748  
                                 u5714 0FAE                                   u5650 0F64  
                                 u5554 062B                                   u5490 05C4  
                                 u6290 0A56                                   u6451 09CE  
                                 u5811 0D4B                                   u5731 0CF8  
                                 u6515 0AF9                                   u6611 07BC  
                                 u6531 0747                                   u5715 0FAC  
                                 u5651 0F63                                   u5555 0629  
                                 u5491 05C3                                   u6291 0A55  
                                 u5820 0D51                                   u5740 0D04  
                                 u5900 0CE3                                   u6460 0ACE  
                                 u6620 07C3                                   u6540 074C  
                                 u5724 0FD6                                   u5660 0F72  
                                 u5821 0D50                                   u5805 0D40  
                                 u5741 0D03                                   u5901 0CE2  
                                 u6461 0ACD                                   u6621 07C2  
                                 u6605 07B2                                   u6541 074B  
                                 u5725 0FD4                                   u5661 0F71  
                                 u5750 0D15                                   u5910 0CE8  
                                 u5830 0C9E                                   u6630 07C7  
                                 u6550 076C                                   u5670 0F7B  
                                 u5590 097F                                   u6390 095B  
                                 u6375 0AB3                                   u5751 0D14  
                                 u5911 0CE7                                   u5831 0C9D  
                                 u3895 0D9A                                   u6631 07C6  
                                 u6551 076B                                   u5671 0F7A  
                                 u5575 0C14                                   u5591 097E  
                                 u6391 095A                                   u5840 0CA9  
                                 u5920 0C42                                   u6480 0AE0  
                                 u6640 07DC                                   u5680 0F89  
                                 u5841 0CA8                                   u5921 0C41  
                                 u6481 0ADF                                   u5681 0F88  
                                 u5585 0C29                                   u5770 0D27  
                                 u5850 0CB4                                   u5930 0C47  
                                 u6650 07EC                                   u6570 078B  
                                 u5690 0F92                                   u5771 0D26  
                                 u5851 0CB3                                   u5931 0C46  
                                 u6475 0AD2                                   u6651 07EB  
                                 u6571 078A                                   u5691 0F91  
                                 u5940 0C5F                                   u6660 07F0  
                                 u5765 0D19                                   u5941 0C5E  
                                 u6661 07EF                                   u6645 07D7  
                                 u6565 077D                                   u5790 0D38  
                                 u5870 0CC6                                   u5950 0C7D  
                                 u6590 07AD                                   u6750 0403  
                                 u5791 0D37                                   u5871 0CC5  
                                 u5951 0C7C                                   u6495 0AE1  
                                 u6591 07AC                                   u6807 0EBD  
                                 u6751 0402                                   u5880 0CD0  
                                 u5960 17CD                                   u6760 043D  
                                 u5785 0D28                                   u5881 0CCF  
                                 u5865 0CB8                                   u5961 17CC  
                                 u6585 079F                                   u6817 0ECF  
                                 u6761 043C                                   u5970 0DDC  
                                 u6770 0446                                   u5795 0D34  
                                 u5955 0C79                                   u5971 0DDB  
                                 u6827 098D                                   u6771 0445  
                                 u6755 03FF                                   u5980 0DE9  
                                 u6780 0456                                   u5885 0CCC  
                                 u5981 0DE8                                   u6781 0455  
                                 u5990 0DF7                                   u5895 0CD7  
                                 u5991 0DF6                                   u6797 0EA6  
                      __end_of_ISR_RB4 178D                        __end_of_ISR_RB5 1796  
                      __end_of_ISR_RB6 179F                        __end_of_ISR_RB7 17A8  
                                 _Temp 0052                                   abs@a 0022  
                                 _dbuf 0190                       __end_of_ADC_INIT 0A1D  
                                 _main 0390                                   _pin1 0068  
                                 _pin2 0067                                   _pin3 0066  
                                 _pin4 0065                                   _pin5 0064  
                                 _pin6 0063                                   _pin7 0062  
                                 _pin8 0061                                   _prec 0050  
                                 btemp 007E                                   start 000C  
                  _EXT_RB4_LOW_HANDLER 005B                      set_cursor@coloumn 002C  
                                ??_abs 0024                   _gpio_pin_write_logic 056E  
     ADC_Start_Conversion_Blocking@adc 0024                 lcd_4bits_send_char@lcd 002A  
               lcd_4bits_send_char@ret 0029                          ___fltol@sign1 004C  
                    ??_motor_turn_left 0076                                  ?_main 0070  
                      __end_of___awdiv 0D5B                                  _EEADR 010D  
                      __end_of___awmod 0CF2                        __end_of___flmul 0390  
                      __end_of___fltol 0DD3                        ___awdiv@divisor 0073  
                      __end_of___lwdiv 0B0A                                  i1l540 0680  
                                i1l550 0704                                  i1l542 069A  
                                i1l439 07FB                                  i1l448 178C  
                                i1l552 071F                                  i1l544 06B5  
                                i1l457 1795                                  i1l466 179E  
                                i1l546 06CF                                  i1l538 0665  
                                i1l475 17A7                                  i1l555 0739  
                                i1l548 06EA                        ___awdiv@counter 0020  
                         vfpfcnvrt@fmt 0026                 ?_lcd_4bits_send_string 002B  
                                _PORTA 0005                                  _PORTB 0006  
                                _PORTC 0007                                  _PORTD 0008  
                                _PORTE 0009                                  _TRISA 0085  
                                _TRISB 0086                                  _TRISC 0087  
                                _TRISD 0088                                  _TRISE 0089  
                     __end_of_ISR_INTX 07FC                                  _flags 0054  
                 _ADC_Start_Conversion 17A8                   _EXT_RB7_HIGH_HANDLER 0056  
                                _fputc 0C3D                                  _width 004E  
                                _putch 07FC                                  pclath 000A  
        lcd_4bits_send_command@command 0028                                  status 0003  
                                wtemp0 007E                        __end_of_sprintf 08ED  
                  _EXT_RB5_LOW_HANDLER 0059         ?_gpio_pin_direction_initialize 0070  
                      __initialization 000F                           __end_of_main 047F  
                ?_gpio_pin_write_logic 0073   ADC_Start_Conversion_Blocking@channel 0020  
              __end_of_mcal_initialize 177C            __end_of_lcd_4bits_send_char 0B99  
                               ??_main 0078                lcd_4bits_send_char@data 0028  
              ?_lcd_4bits_send_command 0028                       _EXT_INTX_HANDLER 007B  
                    ?_motor_turn_right 0070                              ??_ISR_RB4 0070  
                            ??_ISR_RB5 0070                              ??_ISR_RB6 0070  
                            ??_ISR_RB7 0070                  ?_ADC_Start_Conversion 0073  
                   ??_motor_turn_right 0076                                 ?_fputc 0073  
                               _ADRESH 001E                                 _ADRESL 009E  
                               _EEDATA 010C                                 _EECON2 018D  
                     ___awdiv@dividend 0075                                 ?_putch 0070  
                               i1l3261 178C                                 i1l3271 178F  
                               i1l3257 1785                                 i1l3273 1795  
                               i1l3281 1797                                 i1l3259 1786  
                               i1l3283 1798                                 i1l3269 178E  
                               i1l3285 179E                                 i1l3293 17A0  
                               i1l3295 17A1                                 i1l3297 17A7  
                               i1l1859 07FA                                 i1l3901 070C  
                               i1l3911 0727                                 i1l3903 0712  
                               i1l3913 072D                                 i1l3905 0717  
                               i1l3841 066D                                 i1l3833 0658  
                               i1l3915 0732                                 i1l3907 0719  
                               i1l3851 0688                                 i1l3843 0673  
                               i1l3835 065C                                 i1l3917 0733  
                               i1l3909 0723                                 i1l3861 06A2  
                               i1l3853 068E                                 i1l3845 0678  
                               i1l3837 0660                                 i1l3871 06BD  
                               i1l3863 06A8                                 i1l3855 0693  
                               i1l3847 067A                                 i1l3839 0669  
                               i1l3881 06D7                                 i1l3873 06C3  
                               i1l3865 06AD                                 i1l3857 0694  
                               i1l3849 0684                                 i1l3891 06F2  
                               i1l3883 06DD                                 i1l3875 06C8  
                               i1l3867 06AF                                 i1l3859 069E  
                               i1l3893 06F8                                 i1l3885 06E2  
                               i1l3877 06C9                                 i1l3869 06B9  
                               i1l3895 06FD                                 i1l3887 06E4  
                               i1l3879 06D3                                 i1l3897 06FE  
                               i1l3889 06EE                                 i1l3899 0708  
                               u510_20 0678                                 u510_21 0677  
                               u511_20 0684                                 u511_21 0683  
                               u520_20 06BD                                 u512_20 0688  
                               u520_21 06BC                                 u512_21 0687  
                               u521_20 06C3                                 u513_20 068E  
                               u505_20 065C                                 u521_21 06C2  
                               u513_21 068D                                 u505_21 065B  
                               u530_20 06FD                                 u522_20 06C8  
                               u514_20 0693                                 u506_20 0660  
                               u530_21 06FC                                 u522_21 06C7  
                               u514_21 0692                                 u506_21 065F  
                               u531_20 0708                                 u523_20 06D3  
                               u515_20 069E                                 u507_20 0669  
                               u531_21 0707                                 u523_21 06D2  
                               u515_21 069D                                 u507_21 0668  
                               u532_20 070C                                 u524_20 06D7  
                               u516_20 06A2                                 u508_20 066D  
                               u532_21 070B                                 u524_21 06D6  
                               u516_21 06A1                                 u508_21 066C  
                               u381_20 178B                                 u533_20 0712  
                               u525_20 06DD                                 u517_20 06A8  
                               u509_20 0673                                 u381_21 178A  
                               u533_21 0711                                 u525_21 06DC  
                               u517_21 06A7                                 u509_21 0672  
                               u382_20 1794                                 u534_20 0717  
                               u526_20 06E2                                 u518_20 06AD  
                               u382_21 1793                                 u534_21 0716  
                               u526_21 06E1                                 u518_21 06AC  
                               u383_20 179D                                 u535_20 0723  
                               u527_20 06EE                                 u519_20 06B9  
                               u383_21 179C                                 u535_21 0722  
                               u527_21 06ED                                 u519_21 06B8  
                               u384_20 17A6                                 u536_20 0727  
                               u528_20 06F2                                 u384_21 17A5  
                               u536_21 0726                                 u528_21 06F1  
                               u537_20 072D                                 u529_20 06F8  
                               u537_21 072C                                 u529_21 06F7  
                               u538_20 0732                                 u538_21 0731  
                        vfpfcnvrt@done 002A                       __end_of___xxtofl 07FA  
                  _EXT_RB6_LOW_HANDLER 0057                  __end_of_Result_Format 0953  
                         vfprintf@cfmt 0035                              ??___awdiv 0077  
                            ??___awmod 0077                              ??___flmul 0032  
                            ??___fltol 0048             ??_Convert_uint16_to_string 0049  
                            ??___lwdiv 0077                                 _memset 08B0  
                     ___awdiv@quotient 0022                        ___awmod@divisor 0073  
                               _motor1 006E                                 _motor2 006C  
                      ___awmod@counter 0020                   WRITE_DATA_EEPROM@add 0073  
       __end_of_lcd_4bits_send_command 0B51                                 fputc@c 0073  
                            ?_ADC_INIT 0079                                 saved_w 007E  
                               putch@c 0070                       __end_of_vfprintf 090E  
              ADC_Start_Conversion@adc 0073                              ??_sprintf 0077  
                         ___xxtofl@arg 0026                           ___xxtofl@exp 0025  
                         ___xxtofl@val 0073                __end_of__initialization 0047  
                           ___fltol@f1 0044                    _EXT_RB7_LOW_HANDLER 0055  
                            ?_ISR_INTX 0070                 ??_gpio_pin_write_logic 0020  
                       __pcstackCOMMON 0070           __end_of_lcd_4bits_initialize 0F22  
                         __pidataBANK0 17B7                           __pidataBANK1 0879  
                        __end_of_fputc 0C97                          __end_of_putch 07FD  
         Convert_uint16_to_string@data 0046                       ?_mcal_initialize 0070  
         Convert_uint16_to_string@temp 00D5                          send_4bits@lcd 0027  
                        send_4bits@ret 0026                             ??_ADC_INIT 0076  
                       _OPTION_REGbits 0081                 ??_ADC_Start_Conversion 0073  
           ?_ADC_Get_Conversion_Result 0073                                ??_fputc 0020  
                              ??_putch 0073                             __pbssBANK0 004E  
                           __pbssBANK1 00A0                             __pbssBANK3 0190  
    __end_of_lcd_4bits_send_string_pos 0977                        _motor_turn_left 0845  
                    __end_of__Umul8_16 09C7                             ??_ISR_INTX 0070  
                           __pmaintext 0390                             __pintentry 0004  
          Convert_uint16_to_string@str 0048                                ?_memset 0073  
              ??_lcd_4bits_send_string 0078                              ?___xxtofl 0073  
            lcd_4bits_send_command@lcd 002A              lcd_4bits_send_command@ret 0029  
                              _ISR_RB4 1784                                _ISR_RB5 178D  
                              _ISR_RB6 1796                                _ISR_RB7 179F  
    __end_of_ADC_Get_Conversion_Result 0AC4                             __stringtab 0800  
                       _tris_registers 00C5        ??_ADC_Start_Conversion_Blocking 0023  
                  _gpio_pin_initialize 0DD3                                ___awdiv 0CF2  
                              ___awmod 0C97                                ___flmul 004B  
                              ___fltol 0D5B                                _adc_res 005E  
                              ___lwdiv 0AC4                              ?_vfprintf 0032  
                              __ptext1 085F                                __ptext2 082C  
                              __ptext3 0845                                __ptext4 0953  
                              __ptext5 0A1D                                __ptext6 0A4D  
                              __ptext7 0B51                                __ptext8 0821  
                              __ptext9 1775               ??_apllication_initilaize 0078  
      ??_gpio_pin_direction_initialize 0073                                _counter 0079  
                           ??___xxtofl 0020                       ___awmod@dividend 0075  
           __end_of_send_enable_signal 099E                   ?_gpio_pin_initialize 0070  
                           _send_4bits 0BE9                                _sprintf 08CE  
                              clrloop0 177D                   _lcd_4bits_initialize 0E6C  
                 end_of_initialization 0047                __end_of_motor_turn_left 085F  
                WRITE_DATA_EEPROM@data 0075            lcd_4bits_initialize@counter 002E  
                              fputc@fp 0075                                memset@c 0073  
                              memset@n 0075                                memset@p 0020  
                motor_turn_right@motor 0077                             _set_cursor 0A1D  
                    __end_of_vfpfcnvrt 056E                       vfpfcnvrt@convarg 002D  
                           ??_vfprintf 0077                              _PORTBbits 0006  
                       _ecu_initialzie 17DA                       _InterruptManager 0658  
                        ___xxtofl@sign 0024                  ??_gpio_pin_initialize 0025  
                ?_lcd_4bits_initialize 0070                       Enable_INTX@F1629 0060  
                          ___flmul@grs 0038                       _motor_initialize 0893  
        Convert_uint32_to_string@F1655 00A0          Convert_uint16_to_string@F1649 00AB  
                          vfpfcnvrt@ap 0027                            vfpfcnvrt@cp 002C  
                          vfpfcnvrt@fp 002B                 __end_of_ecu_initialzie 17ED  
__end_of_ADC_Start_Conversion_Blocking 09F1          _ADC_Start_Conversion_Blocking 09C7  
             lcd_4bits_send_string@lcd 002E               lcd_4bits_send_string@ret 002D  
                       __end_of_memset 08CE                    start_initialization 000F  
                    send_4bits@command 0025                            __end_of_abs 17DA  
                          ?_send_4bits 0025  __end_of_gpio_pin_direction_initialize 1000  
        _gpio_pin_direction_initialize 0F22            ??_ADC_Get_Conversion_Result 0075  
        lcd_4bits_send_string_pos@data 0031              ?_Convert_uint16_to_string 0046  
  ADC_Start_Conversion_Blocking@result 0021                       ?_motor_turn_left 0070  
                          ?_set_cursor 002B                            vfprintf@fmt 0032  
                           init_fetch0 17ED                              __Umul8_16 099E  
                          __pdataBANK0 0060                            __pdataBANK1 00BB  
         Convert_uint8_to_string@F1643 00B1                               ??_memset 0077  
                      ?_ecu_initialzie 0070                             memset@dest 0021  
              lcd_4bits_initialize@lcd 0030                lcd_4bits_initialize@ret 002F  
        __end_of_lcd_4bits_send_string 0A82                              ___flmul@a 002E  
                            ___flmul@b 002A                            __pbssCOMMON 0079  
                            ___latbits 0002                          __pcstackBANK0 0020  
                        __pcstackBANK1 00D5                 ??_lcd_4bits_initialize 002B  
                             ?_ISR_RB4 0070                               ?_ISR_RB5 0070  
                             ?_ISR_RB6 0070                               ?_ISR_RB7 0070  
                          ADC_INIT@adc 0021                            ADC_INIT@ret 0020  
               _apllication_initilaize 0821                   motor_turn_left@motor 0077  
           ?_lcd_4bits_send_string_pos 002F                               ISR_RB4@n 0070  
                             ISR_RB5@n 0070                               ISR_RB6@n 0070  
                             ISR_RB7@n 0070                       _motor_turn_right 085F  
                     ___lwdiv@dividend 0075                         _motor_turn_off 082C  
            _ADC_Get_Conversion_Result 0A82                          _Result_Format 092F  
                             ?___awdiv 0073                               ?___awmod 0073  
                             ?___flmul 002A               ??_lcd_4bits_send_command 0077  
                             ?___fltol 0044                             ?__Umul8_16 0073  
                             ?___lwdiv 0073              gpio_pin_write_logic@logic 0073  
                            __pstrings 0800                               _ADC_INIT 09F1  
            lcd_4bits_send_string@data 002B         ?_ADC_Start_Conversion_Blocking 0020  
                 _EXT_RB4_HIGH_HANDLER 007A                       ___lwdiv@quotient 0021  
                             ?_sprintf 0036                      interrupt_function 0004  
                  motor_initialize@ret 0029                 __end_of_motor_turn_off 0845  
             __end_of_InterruptManager 0740                              clear_ram0 177C  
                   _send_enable_signal 0977                               _ISR_INTX 07FA  
                       ?_Result_Format 0073                    _lcd_4bits_send_char 0B51  
     gpio_pin_direction_initialize@pin 0021       gpio_pin_direction_initialize@ret 0020  
                  ?_send_enable_signal 0070                              _vfpfcnvrt 047F  
                           _ADCON0bits 001F                            __stringbase 080F  
                           _ADCON1bits 009F                          set_cursor@Row 002B  
                        set_cursor@lcd 002E                          set_cursor@ret 002D  
             __end_of_motor_initialize 08B0                 gpio_pin_initialize@pin 0028  
               gpio_pin_initialize@ret 0027                   ?_lcd_4bits_send_char 0028  
                           vfpfcnvrt@c 0031                gpio_pin_write_logic@pin 0075  
              gpio_pin_write_logic@ret 0074                   ??_send_enable_signal 0076  
                             _Max_Temp 005C                      ??_mcal_initialize 0077  
                send_enable_signal@lcd 0026                  send_enable_signal@ret 0025  
                      ?_motor_turn_off 0070                             _EECON1bits 018C  
              WRITE_DATA_EEPROM@status 0076                             vfprintf@ap 0033  
                           vfprintf@fp 0034                            ??__Umul8_16 0075  
                           ?_vfpfcnvrt 0026       __end_of_Convert_uint16_to_string 0BE9  
                   __end_of__stringtab 0810            __end_of_gpio_pin_initialize 0E6C  
                           sprintf@fmt 0036                    motor_turn_off@motor 0077  
                             ___xxtofl 0740                  ??_lcd_4bits_send_char 0077  
                      ___lwdiv@divisor 0073                   _EXT_RB5_HIGH_HANDLER 005A  
                      ___lwdiv@counter 0020                               __ptext10 09F1  
                             __ptext11 092F                               __ptext20 0F22  
                             __ptext12 17DA                               __ptext21 0740  
                             __ptext13 0893                               __ptext30 047F  
                             __ptext22 0AC4                               __ptext14 0E6C  
                             __ptext31 0C3D                               __ptext23 0D5B  
                             __ptext15 0B0A                               __ptext40 0658  
                             __ptext32 07FC                               __ptext24 004B  
                             __ptext16 0977                               __ptext41 179F  
                             __ptext33 17C7                               __ptext25 099E  
                             __ptext17 0BE9                               __ptext42 1796  
                             __ptext34 0C97                               __ptext26 090E  
                             __ptext18 0DD3                           ??_send_4bits 0076  
                             __ptext43 178D                               __ptext35 0CF2  
                             __ptext27 0B99                               __ptext19 056E  
                             __ptext44 1784                               __ptext36 08B0  
                             __ptext28 08CE                               __ptext45 07FA  
                             __ptext37 09C7                               __ptext29 08ED  
                             __ptext38 17A8                               __ptext39 0A82  
                             _lcd_show 00B5        Convert_uint16_to_string@counter 00DB  
                      ??_Result_Format 0073                    motor_turn_right@ret 0076  
                         ??_set_cursor 0078                       ??_ecu_initialzie 0078  
                             _vfprintf 08ED                     __end_of_send_4bits 0C3D  
                motor_initialize@motor 002A                             _INTCONbits 000B  
             __end_of_motor_turn_right 0879                               init_ram0 17F1  
         __end_of_gpio_pin_write_logic 0658                       Result_Format@adc 0075  
               _lcd_4bits_send_command 0B0A                ?_apllication_initilaize 0070  
                   __end_of_set_cursor 0A4D                               intlevel1 0000  
                            sprintf@ap 0039                     motor_turn_left@ret 0076  
                    _WRITE_DATA_EEPROM 090E                     ?_WRITE_DATA_EEPROM 0073  
          ??_lcd_4bits_send_string_pos 0078                              stringcode 080A  
         __end_of_ADC_Start_Conversion 17B7                    ??_WRITE_DATA_EEPROM 0076  
                          ??_vfpfcnvrt 0028                 __Umul8_16@multiplicand 0073  
                             sprintf@f 003B                      motor_turn_off@ret 0076  
                             sprintf@s 003A       lcd_4bits_send_string_pos@coloumn 0030  
                       _port_registers 00BB               _Convert_uint16_to_string 0B99  
                _lcd_4bits_send_string 0A4D                               stringdir 080A  
                             stringtab 0800         __end_of_apllication_initilaize 082C  
                 _EXT_RB6_HIGH_HANDLER 0058              __end_of_WRITE_DATA_EEPROM 092F  
      ADC_Get_Conversion_Result@result 0073                   __Umul8_16@multiplier 0024  
         lcd_4bits_send_string_pos@Row 002F           lcd_4bits_send_string_pos@lcd 0034  
         lcd_4bits_send_string_pos@ret 0033                      ?_InterruptManager 0070  
                    __Umul8_16@product 0020  
