

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Aug 16 15:14:35 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2,group=3
    49                           	psect	text34,local,class=CODE,merge=1,delta=2,group=1
    50                           	psect	text35,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text36,local,class=CODE,merge=1,delta=2,group=3
    52                           	psect	text37,local,class=CODE,merge=1,delta=2,group=3
    53                           	psect	text38,local,class=CODE,merge=1,delta=2,group=3
    54                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    55                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    56                           	psect	text41,local,class=CODE,merge=1,delta=2,group=3
    57                           	psect	text42,local,class=CODE,merge=1,delta=2
    58                           	psect	text43,local,class=CODE,merge=1,delta=2
    59                           	psect	text44,local,class=CODE,merge=1,delta=2
    60                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    61                           	dabs	1,0x7E,2
    62     0000                     
    63                           ; Generated 12/10/2023 GMT
    64                           ; 
    65                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    66                           ; All rights reserved.
    67                           ; 
    68                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    69                           ; 
    70                           ; Redistribution and use in source and binary forms, with or without modification, are
    71                           ; permitted provided that the following conditions are met:
    72                           ; 
    73                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    74                           ;        conditions and the following disclaimer.
    75                           ; 
    76                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    77                           ;        of conditions and the following disclaimer in the documentation and/or other
    78                           ;        materials provided with the distribution. Publication is not required when
    79                           ;        this file is used in an embedded application.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC16F877A Definitions
    95                           ; 
    96                           ; SFR Addresses
    97     0000                     	;# 
    98     0001                     	;# 
    99     0002                     	;# 
   100     0003                     	;# 
   101     0004                     	;# 
   102     0005                     	;# 
   103     0006                     	;# 
   104     0007                     	;# 
   105     0008                     	;# 
   106     0009                     	;# 
   107     000A                     	;# 
   108     000B                     	;# 
   109     000C                     	;# 
   110     000D                     	;# 
   111     000E                     	;# 
   112     000E                     	;# 
   113     000F                     	;# 
   114     0010                     	;# 
   115     0011                     	;# 
   116     0012                     	;# 
   117     0013                     	;# 
   118     0014                     	;# 
   119     0015                     	;# 
   120     0015                     	;# 
   121     0016                     	;# 
   122     0017                     	;# 
   123     0018                     	;# 
   124     0019                     	;# 
   125     001A                     	;# 
   126     001B                     	;# 
   127     001B                     	;# 
   128     001C                     	;# 
   129     001D                     	;# 
   130     001E                     	;# 
   131     001F                     	;# 
   132     0081                     	;# 
   133     0085                     	;# 
   134     0086                     	;# 
   135     0087                     	;# 
   136     0088                     	;# 
   137     0089                     	;# 
   138     008C                     	;# 
   139     008D                     	;# 
   140     008E                     	;# 
   141     0091                     	;# 
   142     0092                     	;# 
   143     0093                     	;# 
   144     0094                     	;# 
   145     0098                     	;# 
   146     0099                     	;# 
   147     009C                     	;# 
   148     009D                     	;# 
   149     009E                     	;# 
   150     009F                     	;# 
   151     010C                     	;# 
   152     010D                     	;# 
   153     010E                     	;# 
   154     010F                     	;# 
   155     018C                     	;# 
   156     018D                     	;# 
   157     0000                     	;# 
   158     0001                     	;# 
   159     0002                     	;# 
   160     0003                     	;# 
   161     0004                     	;# 
   162     0005                     	;# 
   163     0006                     	;# 
   164     0007                     	;# 
   165     0008                     	;# 
   166     0009                     	;# 
   167     000A                     	;# 
   168     000B                     	;# 
   169     000C                     	;# 
   170     000D                     	;# 
   171     000E                     	;# 
   172     000E                     	;# 
   173     000F                     	;# 
   174     0010                     	;# 
   175     0011                     	;# 
   176     0012                     	;# 
   177     0013                     	;# 
   178     0014                     	;# 
   179     0015                     	;# 
   180     0015                     	;# 
   181     0016                     	;# 
   182     0017                     	;# 
   183     0018                     	;# 
   184     0019                     	;# 
   185     001A                     	;# 
   186     001B                     	;# 
   187     001B                     	;# 
   188     001C                     	;# 
   189     001D                     	;# 
   190     001E                     	;# 
   191     001F                     	;# 
   192     0081                     	;# 
   193     0085                     	;# 
   194     0086                     	;# 
   195     0087                     	;# 
   196     0088                     	;# 
   197     0089                     	;# 
   198     008C                     	;# 
   199     008D                     	;# 
   200     008E                     	;# 
   201     0091                     	;# 
   202     0092                     	;# 
   203     0093                     	;# 
   204     0094                     	;# 
   205     0098                     	;# 
   206     0099                     	;# 
   207     009C                     	;# 
   208     009D                     	;# 
   209     009E                     	;# 
   210     009F                     	;# 
   211     010C                     	;# 
   212     010D                     	;# 
   213     010E                     	;# 
   214     010F                     	;# 
   215     018C                     	;# 
   216     018D                     	;# 
   217     0000                     	;# 
   218     0001                     	;# 
   219     0002                     	;# 
   220     0003                     	;# 
   221     0004                     	;# 
   222     0005                     	;# 
   223     0006                     	;# 
   224     0007                     	;# 
   225     0008                     	;# 
   226     0009                     	;# 
   227     000A                     	;# 
   228     000B                     	;# 
   229     000C                     	;# 
   230     000D                     	;# 
   231     000E                     	;# 
   232     000E                     	;# 
   233     000F                     	;# 
   234     0010                     	;# 
   235     0011                     	;# 
   236     0012                     	;# 
   237     0013                     	;# 
   238     0014                     	;# 
   239     0015                     	;# 
   240     0015                     	;# 
   241     0016                     	;# 
   242     0017                     	;# 
   243     0018                     	;# 
   244     0019                     	;# 
   245     001A                     	;# 
   246     001B                     	;# 
   247     001B                     	;# 
   248     001C                     	;# 
   249     001D                     	;# 
   250     001E                     	;# 
   251     001F                     	;# 
   252     0081                     	;# 
   253     0085                     	;# 
   254     0086                     	;# 
   255     0087                     	;# 
   256     0088                     	;# 
   257     0089                     	;# 
   258     008C                     	;# 
   259     008D                     	;# 
   260     008E                     	;# 
   261     0091                     	;# 
   262     0092                     	;# 
   263     0093                     	;# 
   264     0094                     	;# 
   265     0098                     	;# 
   266     0099                     	;# 
   267     009C                     	;# 
   268     009D                     	;# 
   269     009E                     	;# 
   270     009F                     	;# 
   271     010C                     	;# 
   272     010D                     	;# 
   273     010E                     	;# 
   274     010F                     	;# 
   275     018C                     	;# 
   276     018D                     	;# 
   277     0000                     	;# 
   278     0001                     	;# 
   279     0002                     	;# 
   280     0003                     	;# 
   281     0004                     	;# 
   282     0005                     	;# 
   283     0006                     	;# 
   284     0007                     	;# 
   285     0008                     	;# 
   286     0009                     	;# 
   287     000A                     	;# 
   288     000B                     	;# 
   289     000C                     	;# 
   290     000D                     	;# 
   291     000E                     	;# 
   292     000E                     	;# 
   293     000F                     	;# 
   294     0010                     	;# 
   295     0011                     	;# 
   296     0012                     	;# 
   297     0013                     	;# 
   298     0014                     	;# 
   299     0015                     	;# 
   300     0015                     	;# 
   301     0016                     	;# 
   302     0017                     	;# 
   303     0018                     	;# 
   304     0019                     	;# 
   305     001A                     	;# 
   306     001B                     	;# 
   307     001B                     	;# 
   308     001C                     	;# 
   309     001D                     	;# 
   310     001E                     	;# 
   311     001F                     	;# 
   312     0081                     	;# 
   313     0085                     	;# 
   314     0086                     	;# 
   315     0087                     	;# 
   316     0088                     	;# 
   317     0089                     	;# 
   318     008C                     	;# 
   319     008D                     	;# 
   320     008E                     	;# 
   321     0091                     	;# 
   322     0092                     	;# 
   323     0093                     	;# 
   324     0094                     	;# 
   325     0098                     	;# 
   326     0099                     	;# 
   327     009C                     	;# 
   328     009D                     	;# 
   329     009E                     	;# 
   330     009F                     	;# 
   331     010C                     	;# 
   332     010D                     	;# 
   333     010E                     	;# 
   334     010F                     	;# 
   335     018C                     	;# 
   336     018D                     	;# 
   337     0000                     	;# 
   338     0001                     	;# 
   339     0002                     	;# 
   340     0003                     	;# 
   341     0004                     	;# 
   342     0005                     	;# 
   343     0006                     	;# 
   344     0007                     	;# 
   345     0008                     	;# 
   346     0009                     	;# 
   347     000A                     	;# 
   348     000B                     	;# 
   349     000C                     	;# 
   350     000D                     	;# 
   351     000E                     	;# 
   352     000E                     	;# 
   353     000F                     	;# 
   354     0010                     	;# 
   355     0011                     	;# 
   356     0012                     	;# 
   357     0013                     	;# 
   358     0014                     	;# 
   359     0015                     	;# 
   360     0015                     	;# 
   361     0016                     	;# 
   362     0017                     	;# 
   363     0018                     	;# 
   364     0019                     	;# 
   365     001A                     	;# 
   366     001B                     	;# 
   367     001B                     	;# 
   368     001C                     	;# 
   369     001D                     	;# 
   370     001E                     	;# 
   371     001F                     	;# 
   372     0081                     	;# 
   373     0085                     	;# 
   374     0086                     	;# 
   375     0087                     	;# 
   376     0088                     	;# 
   377     0089                     	;# 
   378     008C                     	;# 
   379     008D                     	;# 
   380     008E                     	;# 
   381     0091                     	;# 
   382     0092                     	;# 
   383     0093                     	;# 
   384     0094                     	;# 
   385     0098                     	;# 
   386     0099                     	;# 
   387     009C                     	;# 
   388     009D                     	;# 
   389     009E                     	;# 
   390     009F                     	;# 
   391     010C                     	;# 
   392     010D                     	;# 
   393     010E                     	;# 
   394     010F                     	;# 
   395     018C                     	;# 
   396     018D                     	;# 
   397     0000                     	;# 
   398     0001                     	;# 
   399     0002                     	;# 
   400     0003                     	;# 
   401     0004                     	;# 
   402     0005                     	;# 
   403     0006                     	;# 
   404     0007                     	;# 
   405     0008                     	;# 
   406     0009                     	;# 
   407     000A                     	;# 
   408     000B                     	;# 
   409     000C                     	;# 
   410     000D                     	;# 
   411     000E                     	;# 
   412     000E                     	;# 
   413     000F                     	;# 
   414     0010                     	;# 
   415     0011                     	;# 
   416     0012                     	;# 
   417     0013                     	;# 
   418     0014                     	;# 
   419     0015                     	;# 
   420     0015                     	;# 
   421     0016                     	;# 
   422     0017                     	;# 
   423     0018                     	;# 
   424     0019                     	;# 
   425     001A                     	;# 
   426     001B                     	;# 
   427     001B                     	;# 
   428     001C                     	;# 
   429     001D                     	;# 
   430     001E                     	;# 
   431     001F                     	;# 
   432     0081                     	;# 
   433     0085                     	;# 
   434     0086                     	;# 
   435     0087                     	;# 
   436     0088                     	;# 
   437     0089                     	;# 
   438     008C                     	;# 
   439     008D                     	;# 
   440     008E                     	;# 
   441     0091                     	;# 
   442     0092                     	;# 
   443     0093                     	;# 
   444     0094                     	;# 
   445     0098                     	;# 
   446     0099                     	;# 
   447     009C                     	;# 
   448     009D                     	;# 
   449     009E                     	;# 
   450     009F                     	;# 
   451     010C                     	;# 
   452     010D                     	;# 
   453     010E                     	;# 
   454     010F                     	;# 
   455     018C                     	;# 
   456     018D                     	;# 
   457     0000                     	;# 
   458     0001                     	;# 
   459     0002                     	;# 
   460     0003                     	;# 
   461     0004                     	;# 
   462     0005                     	;# 
   463     0006                     	;# 
   464     0007                     	;# 
   465     0008                     	;# 
   466     0009                     	;# 
   467     000A                     	;# 
   468     000B                     	;# 
   469     000C                     	;# 
   470     000D                     	;# 
   471     000E                     	;# 
   472     000E                     	;# 
   473     000F                     	;# 
   474     0010                     	;# 
   475     0011                     	;# 
   476     0012                     	;# 
   477     0013                     	;# 
   478     0014                     	;# 
   479     0015                     	;# 
   480     0015                     	;# 
   481     0016                     	;# 
   482     0017                     	;# 
   483     0018                     	;# 
   484     0019                     	;# 
   485     001A                     	;# 
   486     001B                     	;# 
   487     001B                     	;# 
   488     001C                     	;# 
   489     001D                     	;# 
   490     001E                     	;# 
   491     001F                     	;# 
   492     0081                     	;# 
   493     0085                     	;# 
   494     0086                     	;# 
   495     0087                     	;# 
   496     0088                     	;# 
   497     0089                     	;# 
   498     008C                     	;# 
   499     008D                     	;# 
   500     008E                     	;# 
   501     0091                     	;# 
   502     0092                     	;# 
   503     0093                     	;# 
   504     0094                     	;# 
   505     0098                     	;# 
   506     0099                     	;# 
   507     009C                     	;# 
   508     009D                     	;# 
   509     009E                     	;# 
   510     009F                     	;# 
   511     010C                     	;# 
   512     010D                     	;# 
   513     010E                     	;# 
   514     010F                     	;# 
   515     018C                     	;# 
   516     018D                     	;# 
   517     0000                     	;# 
   518     0001                     	;# 
   519     0002                     	;# 
   520     0003                     	;# 
   521     0004                     	;# 
   522     0005                     	;# 
   523     0006                     	;# 
   524     0007                     	;# 
   525     0008                     	;# 
   526     0009                     	;# 
   527     000A                     	;# 
   528     000B                     	;# 
   529     000C                     	;# 
   530     000D                     	;# 
   531     000E                     	;# 
   532     000E                     	;# 
   533     000F                     	;# 
   534     0010                     	;# 
   535     0011                     	;# 
   536     0012                     	;# 
   537     0013                     	;# 
   538     0014                     	;# 
   539     0015                     	;# 
   540     0015                     	;# 
   541     0016                     	;# 
   542     0017                     	;# 
   543     0018                     	;# 
   544     0019                     	;# 
   545     001A                     	;# 
   546     001B                     	;# 
   547     001B                     	;# 
   548     001C                     	;# 
   549     001D                     	;# 
   550     001E                     	;# 
   551     001F                     	;# 
   552     0081                     	;# 
   553     0085                     	;# 
   554     0086                     	;# 
   555     0087                     	;# 
   556     0088                     	;# 
   557     0089                     	;# 
   558     008C                     	;# 
   559     008D                     	;# 
   560     008E                     	;# 
   561     0091                     	;# 
   562     0092                     	;# 
   563     0093                     	;# 
   564     0094                     	;# 
   565     0098                     	;# 
   566     0099                     	;# 
   567     009C                     	;# 
   568     009D                     	;# 
   569     009E                     	;# 
   570     009F                     	;# 
   571     010C                     	;# 
   572     010D                     	;# 
   573     010E                     	;# 
   574     010F                     	;# 
   575     018C                     	;# 
   576     018D                     	;# 
   577     0000                     	;# 
   578     0001                     	;# 
   579     0002                     	;# 
   580     0003                     	;# 
   581     0004                     	;# 
   582     0005                     	;# 
   583     0006                     	;# 
   584     0007                     	;# 
   585     0008                     	;# 
   586     0009                     	;# 
   587     000A                     	;# 
   588     000B                     	;# 
   589     000C                     	;# 
   590     000D                     	;# 
   591     000E                     	;# 
   592     000E                     	;# 
   593     000F                     	;# 
   594     0010                     	;# 
   595     0011                     	;# 
   596     0012                     	;# 
   597     0013                     	;# 
   598     0014                     	;# 
   599     0015                     	;# 
   600     0015                     	;# 
   601     0016                     	;# 
   602     0017                     	;# 
   603     0018                     	;# 
   604     0019                     	;# 
   605     001A                     	;# 
   606     001B                     	;# 
   607     001B                     	;# 
   608     001C                     	;# 
   609     001D                     	;# 
   610     001E                     	;# 
   611     001F                     	;# 
   612     0081                     	;# 
   613     0085                     	;# 
   614     0086                     	;# 
   615     0087                     	;# 
   616     0088                     	;# 
   617     0089                     	;# 
   618     008C                     	;# 
   619     008D                     	;# 
   620     008E                     	;# 
   621     0091                     	;# 
   622     0092                     	;# 
   623     0093                     	;# 
   624     0094                     	;# 
   625     0098                     	;# 
   626     0099                     	;# 
   627     009C                     	;# 
   628     009D                     	;# 
   629     009E                     	;# 
   630     009F                     	;# 
   631     010C                     	;# 
   632     010D                     	;# 
   633     010E                     	;# 
   634     010F                     	;# 
   635     018C                     	;# 
   636     018D                     	;# 
   637     0000                     	;# 
   638     0001                     	;# 
   639     0002                     	;# 
   640     0003                     	;# 
   641     0004                     	;# 
   642     0005                     	;# 
   643     0006                     	;# 
   644     0007                     	;# 
   645     0008                     	;# 
   646     0009                     	;# 
   647     000A                     	;# 
   648     000B                     	;# 
   649     000C                     	;# 
   650     000D                     	;# 
   651     000E                     	;# 
   652     000E                     	;# 
   653     000F                     	;# 
   654     0010                     	;# 
   655     0011                     	;# 
   656     0012                     	;# 
   657     0013                     	;# 
   658     0014                     	;# 
   659     0015                     	;# 
   660     0015                     	;# 
   661     0016                     	;# 
   662     0017                     	;# 
   663     0018                     	;# 
   664     0019                     	;# 
   665     001A                     	;# 
   666     001B                     	;# 
   667     001B                     	;# 
   668     001C                     	;# 
   669     001D                     	;# 
   670     001E                     	;# 
   671     001F                     	;# 
   672     0081                     	;# 
   673     0085                     	;# 
   674     0086                     	;# 
   675     0087                     	;# 
   676     0088                     	;# 
   677     0089                     	;# 
   678     008C                     	;# 
   679     008D                     	;# 
   680     008E                     	;# 
   681     0091                     	;# 
   682     0092                     	;# 
   683     0093                     	;# 
   684     0094                     	;# 
   685     0098                     	;# 
   686     0099                     	;# 
   687     009C                     	;# 
   688     009D                     	;# 
   689     009E                     	;# 
   690     009F                     	;# 
   691     010C                     	;# 
   692     010D                     	;# 
   693     010E                     	;# 
   694     010F                     	;# 
   695     018C                     	;# 
   696     018D                     	;# 
   697     0000                     	;# 
   698     0001                     	;# 
   699     0002                     	;# 
   700     0003                     	;# 
   701     0004                     	;# 
   702     0005                     	;# 
   703     0006                     	;# 
   704     0007                     	;# 
   705     0008                     	;# 
   706     0009                     	;# 
   707     000A                     	;# 
   708     000B                     	;# 
   709     000C                     	;# 
   710     000D                     	;# 
   711     000E                     	;# 
   712     000E                     	;# 
   713     000F                     	;# 
   714     0010                     	;# 
   715     0011                     	;# 
   716     0012                     	;# 
   717     0013                     	;# 
   718     0014                     	;# 
   719     0015                     	;# 
   720     0015                     	;# 
   721     0016                     	;# 
   722     0017                     	;# 
   723     0018                     	;# 
   724     0019                     	;# 
   725     001A                     	;# 
   726     001B                     	;# 
   727     001B                     	;# 
   728     001C                     	;# 
   729     001D                     	;# 
   730     001E                     	;# 
   731     001F                     	;# 
   732     0081                     	;# 
   733     0085                     	;# 
   734     0086                     	;# 
   735     0087                     	;# 
   736     0088                     	;# 
   737     0089                     	;# 
   738     008C                     	;# 
   739     008D                     	;# 
   740     008E                     	;# 
   741     0091                     	;# 
   742     0092                     	;# 
   743     0093                     	;# 
   744     0094                     	;# 
   745     0098                     	;# 
   746     0099                     	;# 
   747     009C                     	;# 
   748     009D                     	;# 
   749     009E                     	;# 
   750     009F                     	;# 
   751     010C                     	;# 
   752     010D                     	;# 
   753     010E                     	;# 
   754     010F                     	;# 
   755     018C                     	;# 
   756     018D                     	;# 
   757     0000                     	;# 
   758     0001                     	;# 
   759     0002                     	;# 
   760     0003                     	;# 
   761     0004                     	;# 
   762     0005                     	;# 
   763     0006                     	;# 
   764     0007                     	;# 
   765     0008                     	;# 
   766     0009                     	;# 
   767     000A                     	;# 
   768     000B                     	;# 
   769     000C                     	;# 
   770     000D                     	;# 
   771     000E                     	;# 
   772     000E                     	;# 
   773     000F                     	;# 
   774     0010                     	;# 
   775     0011                     	;# 
   776     0012                     	;# 
   777     0013                     	;# 
   778     0014                     	;# 
   779     0015                     	;# 
   780     0015                     	;# 
   781     0016                     	;# 
   782     0017                     	;# 
   783     0018                     	;# 
   784     0019                     	;# 
   785     001A                     	;# 
   786     001B                     	;# 
   787     001B                     	;# 
   788     001C                     	;# 
   789     001D                     	;# 
   790     001E                     	;# 
   791     001F                     	;# 
   792     0081                     	;# 
   793     0085                     	;# 
   794     0086                     	;# 
   795     0087                     	;# 
   796     0088                     	;# 
   797     0089                     	;# 
   798     008C                     	;# 
   799     008D                     	;# 
   800     008E                     	;# 
   801     0091                     	;# 
   802     0092                     	;# 
   803     0093                     	;# 
   804     0094                     	;# 
   805     0098                     	;# 
   806     0099                     	;# 
   807     009C                     	;# 
   808     009D                     	;# 
   809     009E                     	;# 
   810     009F                     	;# 
   811     010C                     	;# 
   812     010D                     	;# 
   813     010E                     	;# 
   814     010F                     	;# 
   815     018C                     	;# 
   816     018D                     	;# 
   817     0000                     	;# 
   818     0001                     	;# 
   819     0002                     	;# 
   820     0003                     	;# 
   821     0004                     	;# 
   822     0005                     	;# 
   823     0006                     	;# 
   824     0007                     	;# 
   825     0008                     	;# 
   826     0009                     	;# 
   827     000A                     	;# 
   828     000B                     	;# 
   829     000C                     	;# 
   830     000D                     	;# 
   831     000E                     	;# 
   832     000E                     	;# 
   833     000F                     	;# 
   834     0010                     	;# 
   835     0011                     	;# 
   836     0012                     	;# 
   837     0013                     	;# 
   838     0014                     	;# 
   839     0015                     	;# 
   840     0015                     	;# 
   841     0016                     	;# 
   842     0017                     	;# 
   843     0018                     	;# 
   844     0019                     	;# 
   845     001A                     	;# 
   846     001B                     	;# 
   847     001B                     	;# 
   848     001C                     	;# 
   849     001D                     	;# 
   850     001E                     	;# 
   851     001F                     	;# 
   852     0081                     	;# 
   853     0085                     	;# 
   854     0086                     	;# 
   855     0087                     	;# 
   856     0088                     	;# 
   857     0089                     	;# 
   858     008C                     	;# 
   859     008D                     	;# 
   860     008E                     	;# 
   861     0091                     	;# 
   862     0092                     	;# 
   863     0093                     	;# 
   864     0094                     	;# 
   865     0098                     	;# 
   866     0099                     	;# 
   867     009C                     	;# 
   868     009D                     	;# 
   869     009E                     	;# 
   870     009F                     	;# 
   871     010C                     	;# 
   872     010D                     	;# 
   873     010E                     	;# 
   874     010F                     	;# 
   875     018C                     	;# 
   876     018D                     	;# 
   877                           
   878                           	psect	idataBANK1
   879     16DC                     __pidataBANK1:
   880                           
   881                           ;initializer for _port_registers
   882     16DC  3405               	retlw	5
   883     16DD  3400               	retlw	0
   884     16DE  3406               	retlw	6
   885     16DF  3400               	retlw	0
   886     16E0  3407               	retlw	7
   887     16E1  3400               	retlw	0
   888     16E2  3408               	retlw	8
   889     16E3  3400               	retlw	0
   890     16E4  3409               	retlw	9
   891     16E5  3400               	retlw	0
   892                           
   893                           ;initializer for _tris_registers
   894     16E6  3485               	retlw	133
   895     16E7  3400               	retlw	0
   896     16E8  3486               	retlw	134
   897     16E9  3400               	retlw	0
   898     16EA  3487               	retlw	135
   899     16EB  3400               	retlw	0
   900     16EC  3488               	retlw	136
   901     16ED  3400               	retlw	0
   902     16EE  3489               	retlw	137
   903     16EF  3400               	retlw	0
   904                           
   905                           ;initializer for _pass
   906     16F0  3435               	retlw	53
   907     16F1  3434               	retlw	52
   908     16F2  3438               	retlw	56
   909     16F3  3439               	retlw	57
   910                           
   911                           ;initializer for _keypad
   912     16F4  3401               	retlw	1
   913     16F5  3409               	retlw	9
   914     16F6  3411               	retlw	17
   915     16F7  3419               	retlw	25
   916     16F8  34A1               	retlw	161
   917     16F9  34A9               	retlw	169
   918     16FA  34B1               	retlw	177
   919                           
   920                           ;initializer for _lcd
   921     16FB  3402               	retlw	2
   922     16FC  340A               	retlw	10
   923     16FD  3412               	retlw	18
   924     16FE  341A               	retlw	26
   925     16FF  3422               	retlw	34
   926     1700  342A               	retlw	42
   927                           
   928                           ;initializer for _temp
   929     1701  342E               	retlw	46
   930     1702  342E               	retlw	46
   931     1703  342E               	retlw	46
   932     1704  342E               	retlw	46
   933                           
   934                           ;initializer for _adc
   935     1705  3400               	retlw	0
   936     1706  3404               	retlw	4
   937     1707  3400               	retlw	0
   938                           
   939                           ;initializer for _motor2
   940     1708  3413               	retlw	19
   941     1709  341B               	retlw	27
   942                           
   943                           ;initializer for _motor1
   944     170A  3403               	retlw	3
   945     170B  340B               	retlw	11
   946                           
   947                           	psect	strings
   948     0800                     __pstrings:
   949     0800                     stringtab:
   950     0800                     __stringtab:
   951                           
   952                           ;	String table - string pointers are 1 byte each
   953     0800  1BFF               	btfsc	btemp+1,7
   954     0801  280A               	ljmp	stringcode
   955     0802  1383               	bcf	3,7
   956     0803  187F               	btfsc	btemp+1,0
   957     0804  1783               	bsf	3,7
   958     0805  0800               	movf	0,w
   959     0806  0A84               	incf	4,f
   960     0807  1903               	skipnz
   961     0808  0AFF               	incf	btemp+1,f
   962     0809  0008               	return
   963     080A                     stringcode:
   964     080A                     stringdir:
   965     080A  3008               	movlw	high stringdir
   966     080B  008A               	movwf	10
   967     080C  0804               	movf	4,w
   968     080D  0A84               	incf	4,f
   969     080E  0782               	addwf	2,f
   970     080F                     __stringbase:
   971     080F  3400               	retlw	0
   972     0810                     __end_of__stringtab:
   973     0810                     _btn_values:
   974     0810  3431               	retlw	49
   975     0811  3432               	retlw	50
   976     0812  3433               	retlw	51
   977     0813  3434               	retlw	52
   978     0814  3435               	retlw	53
   979     0815  3436               	retlw	54
   980     0816  3437               	retlw	55
   981     0817  3438               	retlw	56
   982     0818  3439               	retlw	57
   983     0819  342A               	retlw	42
   984     081A  3430               	retlw	48
   985     081B  3423               	retlw	35
   986     081C                     __end_of_btn_values:
   987     000B                     _INTCONbits	set	11
   988     001E                     _ADRESH	set	30
   989     001F                     _ADCON0bits	set	31
   990     0009                     _PORTE	set	9
   991     0008                     _PORTD	set	8
   992     0007                     _PORTC	set	7
   993     0006                     _PORTB	set	6
   994     0005                     _PORTA	set	5
   995     009E                     _ADRESL	set	158
   996     009F                     _ADCON1bits	set	159
   997     0089                     _TRISE	set	137
   998     0088                     _TRISD	set	136
   999     0087                     _TRISC	set	135
  1000     0086                     _TRISB	set	134
  1001     0085                     _TRISA	set	133
  1002     010C                     _EEDATA	set	268
  1003     010D                     _EEADR	set	269
  1004     018D                     _EECON2	set	397
  1005     018C                     _EECON1bits	set	396
  1006     081C                     STR_5:
  1007     081C  3443               	retlw	67	;'C'
  1008     081D  346F               	retlw	111	;'o'
  1009     081E  3472               	retlw	114	;'r'
  1010     081F  3472               	retlw	114	;'r'
  1011     0820  3465               	retlw	101	;'e'
  1012     0821  3463               	retlw	99	;'c'
  1013     0822  3474               	retlw	116	;'t'
  1014     0823  3420               	retlw	32	;' '
  1015     0824  3450               	retlw	80	;'P'
  1016     0825  3461               	retlw	97	;'a'
  1017     0826  3473               	retlw	115	;'s'
  1018     0827  3473               	retlw	115	;'s'
  1019     0828  3477               	retlw	119	;'w'
  1020     0829  346F               	retlw	111	;'o'
  1021     082A  3472               	retlw	114	;'r'
  1022     082B  3464               	retlw	100	;'d'
  1023     082C  3400               	retlw	0
  1024     082D                     STR_7:
  1025     082D  344D               	retlw	77	;'M'
  1026     082E  3461               	retlw	97	;'a'
  1027     082F  3478               	retlw	120	;'x'
  1028     0830  3420               	retlw	32	;' '
  1029     0831  3454               	retlw	84	;'T'
  1030     0832  3465               	retlw	101	;'e'
  1031     0833  346D               	retlw	109	;'m'
  1032     0834  3470               	retlw	112	;'p'
  1033     0835  3420               	retlw	32	;' '
  1034     0836  3469               	retlw	105	;'i'
  1035     0837  3473               	retlw	115	;'s'
  1036     0838  3420               	retlw	32	;' '
  1037     0839  343A               	retlw	58	;':'
  1038     083A  3420               	retlw	32	;' '
  1039     083B  3400               	retlw	0
  1040     083C                     STR_4:
  1041     083C  3457               	retlw	87	;'W'
  1042     083D  3472               	retlw	114	;'r'
  1043     083E  346F               	retlw	111	;'o'
  1044     083F  346E               	retlw	110	;'n'
  1045     0840  3467               	retlw	103	;'g'
  1046     0841  3420               	retlw	32	;' '
  1047     0842  3450               	retlw	80	;'P'
  1048     0843  3461               	retlw	97	;'a'
  1049     0844  3473               	retlw	115	;'s'
  1050     0845  3473               	retlw	115	;'s'
  1051     0846  3477               	retlw	119	;'w'
  1052     0847  346F               	retlw	111	;'o'
  1053     0848  3472               	retlw	114	;'r'
  1054     0849  3464               	retlw	100	;'d'
  1055     084A  3400               	retlw	0
  1056     084B                     STR_8:
  1057     084B  3445               	retlw	69	;'E'
  1058     084C  346E               	retlw	110	;'n'
  1059     084D  3474               	retlw	116	;'t'
  1060     084E  3465               	retlw	101	;'e'
  1061     084F  3472               	retlw	114	;'r'
  1062     0850  3420               	retlw	32	;' '
  1063     0851  3470               	retlw	112	;'p'
  1064     0852  3461               	retlw	97	;'a'
  1065     0853  3473               	retlw	115	;'s'
  1066     0854  3473               	retlw	115	;'s'
  1067     0855  3477               	retlw	119	;'w'
  1068     0856  346F               	retlw	111	;'o'
  1069     0857  3472               	retlw	114	;'r'
  1070     0858  3464               	retlw	100	;'d'
  1071     0859  3400               	retlw	0
  1072     085A                     STR_1:
  1073     085A  3425               	retlw	37	;'%'
  1074     085B  3469               	retlw	105	;'i'
  1075     085C  3400               	retlw	0
  1076     0831                     
  1077                           	psect	cinit
  1078     07D4                     start_initialization:	
  1079                           ; #config settings
  1080                           
  1081     07D4                     __initialization:
  1082                           
  1083                           ; Initialize objects allocated to BANK1
  1084     07D4  1383               	bcf	3,7	;select IRP bank0
  1085     07D5  30D0               	movlw	low (__pdataBANK1+48)
  1086     07D6  00FD               	movwf	btemp+-1
  1087     07D7  3016               	movlw	high __pidataBANK1
  1088     07D8  00FE               	movwf	btemp
  1089     07D9  30DC               	movlw	low __pidataBANK1
  1090     07DA  00FF               	movwf	btemp+1
  1091     07DB  30A0               	movlw	low __pdataBANK1
  1092     07DC  0084               	movwf	4
  1093     07DD  160A  118A  24AA  120A  118A  	fcall	init_ram0
  1094                           
  1095                           ; Clear objects allocated to BANK3
  1096     07E2  1783               	bsf	3,7	;select IRP bank2
  1097     07E3  3090               	movlw	low __pbssBANK3
  1098     07E4  0084               	movwf	4
  1099     07E5  30BB               	movlw	low (__pbssBANK3+43)
  1100     07E6  160A  118A  246C  120A  118A  	fcall	clear_ram0
  1101                           
  1102                           ; Clear objects allocated to BANK1
  1103     07EB  1383               	bcf	3,7	;select IRP bank0
  1104     07EC  30D0               	movlw	low __pbssBANK1
  1105     07ED  0084               	movwf	4
  1106     07EE  30F0               	movlw	low (__pbssBANK1+32)
  1107     07EF  160A  118A  246C  120A  118A  	fcall	clear_ram0
  1108                           
  1109                           ; Clear objects allocated to BANK0
  1110     07F4  3063               	movlw	low __pbssBANK0
  1111     07F5  0084               	movwf	4
  1112     07F6  3070               	movlw	low (__pbssBANK0+13)
  1113     07F7  160A  118A  246C  120A  118A  	fcall	clear_ram0
  1114     07FC                     end_of_initialization:	
  1115                           ;End of C runtime variable initialization code
  1116                           
  1117     07FC                     __end_of__initialization:
  1118     07FC  0183               	clrf	3
  1119     07FD  120A  118A  2A71   	ljmp	_main	;jump to C main() function
  1120                           
  1121                           	psect	bssBANK0
  1122     0063                     __pbssBANK0:
  1123     0063                     _Temp:
  1124     0063                     	ds	2
  1125     0065                     _flag:
  1126     0065                     	ds	1
  1127     0066                     _EXT_RB6_LOW_HANDLER:
  1128     0066                     	ds	1
  1129     0067                     _EXT_RB6_HIGH_HANDLER:
  1130     0067                     	ds	1
  1131     0068                     _EXT_RB5_LOW_HANDLER:
  1132     0068                     	ds	1
  1133     0069                     _EXT_RB5_HIGH_HANDLER:
  1134     0069                     	ds	1
  1135     006A                     _EXT_RB4_LOW_HANDLER:
  1136     006A                     	ds	1
  1137     006B                     _EXT_RB4_HIGH_HANDLER:
  1138     006B                     	ds	1
  1139     006C                     _EXT_INTX_HANDLER:
  1140     006C                     	ds	1
  1141     006D                     _Max_Temp:
  1142     006D                     	ds	2
  1143     006F                     _val:
  1144     006F                     	ds	1
  1145                           
  1146                           	psect	bssBANK1
  1147     00D0                     __pbssBANK1:
  1148     00D0                     Convert_uint16_to_string@F1649:
  1149     00D0                     	ds	6
  1150     00D6                     Convert_uint8_to_string@F1643:
  1151     00D6                     	ds	4
  1152     00DA                     _width:
  1153     00DA                     	ds	2
  1154     00DC                     _prec:
  1155     00DC                     	ds	2
  1156     00DE                     _flags:
  1157     00DE                     	ds	1
  1158     00DF                     _counter:
  1159     00DF                     	ds	1
  1160     00E0                     _EXT_RB7_LOW_HANDLER:
  1161     00E0                     	ds	1
  1162     00E1                     _EXT_RB7_HIGH_HANDLER:
  1163     00E1                     	ds	1
  1164     00E2                     _lcd_show_max:
  1165     00E2                     	ds	6
  1166     00E8                     _lcd_show:
  1167     00E8                     	ds	6
  1168     00EE                     _adc_res:
  1169     00EE                     	ds	2
  1170                           
  1171                           	psect	dataBANK1
  1172     00A0                     __pdataBANK1:
  1173     00A0                     _port_registers:
  1174     00A0                     	ds	10
  1175     00AA                     _tris_registers:
  1176     00AA                     	ds	10
  1177     00B4                     _pass:
  1178     00B4                     	ds	4
  1179     00B8                     _keypad:
  1180     00B8                     	ds	7
  1181     00BF                     _lcd:
  1182     00BF                     	ds	6
  1183     00C5                     _temp:
  1184     00C5                     	ds	4
  1185     00C9                     _adc:
  1186     00C9                     	ds	3
  1187     00CC                     _motor2:
  1188     00CC                     	ds	2
  1189     00CE                     _motor1:
  1190     00CE                     	ds	2
  1191                           
  1192                           	psect	bssBANK3
  1193     0190                     __pbssBANK3:
  1194     0190                     _dbuf:
  1195     0190                     	ds	32
  1196     01B0                     Convert_uint32_to_string@F1655:
  1197     01B0                     	ds	11
  1198                           
  1199                           	psect	inittext
  1200     14A6                     init_fetch0:	
  1201                           ;	Called with low address in FSR and high address in W
  1202                           
  1203     14A6  087E               	movf	btemp,w
  1204     14A7  008A               	movwf	10
  1205     14A8  087F               	movf	btemp+1,w
  1206     14A9  0082               	movwf	2
  1207     14AA                     init_ram0:	
  1208                           ;Called with:
  1209                           ;	high address of idata address in btemp 
  1210                           ;	low address of idata address in btemp+1 
  1211                           ;	low address of data in FSR
  1212                           ;	high address + 1 of data in btemp-1
  1213                           
  1214     14AA  160A  118A  24A6  160A  118A  	fcall	init_fetch0
  1215     14AF  0080               	movwf	0
  1216     14B0  0A84               	incf	4,f
  1217     14B1  0804               	movf	4,w
  1218     14B2  067D               	xorwf	btemp+-1,w
  1219     14B3  1903               	btfsc	3,2
  1220     14B4  3400               	retlw	0
  1221     14B5  0AFF               	incf	btemp+1,f
  1222     14B6  1903               	btfsc	3,2
  1223     14B7  0AFE               	incf	btemp,f
  1224     14B8  2CAA               	goto	init_ram0
  1225                           
  1226                           	psect	clrtext
  1227     146C                     clear_ram0:	
  1228                           ;	Called with FSR containing the base address, and
  1229                           ;	W with the last address+1
  1230                           
  1231     146C  0064               	clrwdt	;clear the watchdog before getting into this loop
  1232     146D                     clrloop0:
  1233     146D  0180               	clrf	0	;clear RAM location pointed to by FSR
  1234     146E  0A84               	incf	4,f	;increment pointer
  1235     146F  0604               	xorwf	4,w	;XOR with final address
  1236     1470  1903               	btfsc	3,2	;have we reached the end yet?
  1237     1471  3400               	retlw	0	;all done for this memory range, return
  1238     1472  0604               	xorwf	4,w	;XOR again to restore value
  1239     1473  2C6D               	goto	clrloop0	;do the next byte
  1240                           
  1241                           	psect	cstackCOMMON
  1242     0070                     __pcstackCOMMON:
  1243     0070                     ?_gpio_pin_initialize:
  1244     0070                     ?_gpio_pin_write_logic:	
  1245                           ; 1 bytes @ 0x0
  1246                           
  1247     0070                     ?_gpio_pin_read_logic:	
  1248                           ; 1 bytes @ 0x0
  1249                           
  1250     0070                     ?_send_enable_signal:	
  1251                           ; 1 bytes @ 0x0
  1252                           
  1253     0070                     ?_memset:	
  1254                           ; 1 bytes @ 0x0
  1255                           
  1256     0070                     ?_Result_Format:	
  1257                           ; 1 bytes @ 0x0
  1258                           
  1259     0070                     ??_Result_Format:	
  1260                           ; 1 bytes @ 0x0
  1261                           
  1262     0070                     ?_apllication_initilaize:	
  1263                           ; 1 bytes @ 0x0
  1264                           
  1265     0070                     ?_putch:	
  1266                           ; 1 bytes @ 0x0
  1267                           
  1268     0070                     ??_putch:	
  1269                           ; 1 bytes @ 0x0
  1270                           
  1271     0070                     ?_keypad_initialize:	
  1272                           ; 1 bytes @ 0x0
  1273                           
  1274     0070                     ?_lcd_4bits_initialize:	
  1275                           ; 1 bytes @ 0x0
  1276                           
  1277     0070                     ?_motor_initialize:	
  1278                           ; 1 bytes @ 0x0
  1279                           
  1280     0070                     ?_motor_turn_right:	
  1281                           ; 1 bytes @ 0x0
  1282                           
  1283     0070                     ?_motor_turn_left:	
  1284                           ; 1 bytes @ 0x0
  1285                           
  1286     0070                     ?_motor_turn_off:	
  1287                           ; 1 bytes @ 0x0
  1288                           
  1289     0070                     ?_ecu_initialzie:	
  1290                           ; 1 bytes @ 0x0
  1291                           
  1292     0070                     ?_ADC_INIT:	
  1293                           ; 1 bytes @ 0x0
  1294                           
  1295     0070                     ?_ADC_Start_Conversion:	
  1296                           ; 1 bytes @ 0x0
  1297                           
  1298     0070                     ??_ADC_Start_Conversion:	
  1299                           ; 1 bytes @ 0x0
  1300                           
  1301     0070                     ?_ADC_Get_Conversion_Result:	
  1302                           ; 1 bytes @ 0x0
  1303                           
  1304     0070                     ?_WRITE_DATA_EEPROM:	
  1305                           ; 1 bytes @ 0x0
  1306                           
  1307     0070                     ?_READ_DATA_EEPROM:	
  1308                           ; 1 bytes @ 0x0
  1309                           
  1310     0070                     ?_gpio_pin_direction_initialize:	
  1311                           ; 1 bytes @ 0x0
  1312                           
  1313     0070                     ??_gpio_pin_direction_initialize:	
  1314                           ; 1 bytes @ 0x0
  1315                           
  1316     0070                     ?_mcal_initialize:	
  1317                           ; 1 bytes @ 0x0
  1318                           
  1319     0070                     ?___bmul:	
  1320                           ; 1 bytes @ 0x0
  1321                           
  1322     0070                     ?__Umul8_16:	
  1323                           ; 1 bytes @ 0x0
  1324                           
  1325     0070                     ?_fputc:	
  1326                           ; 2 bytes @ 0x0
  1327                           
  1328     0070                     ?_main:	
  1329                           ; 2 bytes @ 0x0
  1330                           
  1331     0070                     ?___awdiv:	
  1332                           ; 2 bytes @ 0x0
  1333                           
  1334     0070                     ?___awmod:	
  1335                           ; 2 bytes @ 0x0
  1336                           
  1337     0070                     ?___xxtofl:	
  1338                           ; 2 bytes @ 0x0
  1339                           
  1340     0070                     ADC_Start_Conversion@adc:	
  1341                           ; 4 bytes @ 0x0
  1342                           
  1343     0070                     gpio_pin_write_logic@logic:	
  1344                           ; 1 bytes @ 0x0
  1345                           
  1346     0070                     gpio_pin_read_logic@logic:	
  1347                           ; 1 bytes @ 0x0
  1348                           
  1349     0070                     ___bmul@multiplicand:	
  1350                           ; 1 bytes @ 0x0
  1351                           
  1352     0070                     __Umul8_16@multiplicand:	
  1353                           ; 1 bytes @ 0x0
  1354                           
  1355     0070                     putch@c:	
  1356                           ; 1 bytes @ 0x0
  1357                           
  1358     0070                     ADC_Get_Conversion_Result@result:	
  1359                           ; 1 bytes @ 0x0
  1360                           
  1361     0070                     WRITE_DATA_EEPROM@add:	
  1362                           ; 2 bytes @ 0x0
  1363                           
  1364     0070                     READ_DATA_EEPROM@add:	
  1365                           ; 2 bytes @ 0x0
  1366                           
  1367     0070                     ___awdiv@divisor:	
  1368                           ; 2 bytes @ 0x0
  1369                           
  1370     0070                     ___awmod@divisor:	
  1371                           ; 2 bytes @ 0x0
  1372                           
  1373     0070                     memset@c:	
  1374                           ; 2 bytes @ 0x0
  1375                           
  1376     0070                     fputc@c:	
  1377                           ; 2 bytes @ 0x0
  1378                           
  1379     0070                     ___xxtofl@val:	
  1380                           ; 2 bytes @ 0x0
  1381                           
  1382                           
  1383                           ; 4 bytes @ 0x0
  1384     0070                     	ds	1
  1385     0071                     ??_gpio_pin_write_logic:
  1386     0071                     ??_gpio_pin_read_logic:	
  1387                           ; 1 bytes @ 0x1
  1388                           
  1389     0071                     ??___bmul:	
  1390                           ; 1 bytes @ 0x1
  1391                           
  1392     0071                     ___bmul@product:	
  1393                           ; 1 bytes @ 0x1
  1394                           
  1395                           
  1396                           ; 1 bytes @ 0x1
  1397     0071                     	ds	1
  1398     0072                     ??__Umul8_16:
  1399     0072                     ??_ADC_Get_Conversion_Result:	
  1400                           ; 1 bytes @ 0x2
  1401                           
  1402     0072                     Result_Format@adc:	
  1403                           ; 1 bytes @ 0x2
  1404                           
  1405     0072                     WRITE_DATA_EEPROM@data:	
  1406                           ; 1 bytes @ 0x2
  1407                           
  1408     0072                     READ_DATA_EEPROM@data:	
  1409                           ; 1 bytes @ 0x2
  1410                           
  1411     0072                     ___bmul@multiplier:	
  1412                           ; 1 bytes @ 0x2
  1413                           
  1414     0072                     fputc@fp:	
  1415                           ; 1 bytes @ 0x2
  1416                           
  1417     0072                     ___awdiv@dividend:	
  1418                           ; 1 bytes @ 0x2
  1419                           
  1420     0072                     ___awmod@dividend:	
  1421                           ; 2 bytes @ 0x2
  1422                           
  1423     0072                     memset@n:	
  1424                           ; 2 bytes @ 0x2
  1425                           
  1426                           
  1427                           ; 2 bytes @ 0x2
  1428     0072                     	ds	1
  1429     0073                     ??_fputc:
  1430     0073                     ??_ADC_INIT:	
  1431                           ; 1 bytes @ 0x3
  1432                           
  1433     0073                     ??_WRITE_DATA_EEPROM:	
  1434                           ; 1 bytes @ 0x3
  1435                           
  1436     0073                     ??_READ_DATA_EEPROM:	
  1437                           ; 1 bytes @ 0x3
  1438                           
  1439     0073                     WRITE_DATA_EEPROM@status:	
  1440                           ; 1 bytes @ 0x3
  1441                           
  1442                           
  1443                           ; 1 bytes @ 0x3
  1444     0073                     	ds	1
  1445     0074                     ??_memset:
  1446     0074                     ??___awdiv:	
  1447                           ; 1 bytes @ 0x4
  1448                           
  1449     0074                     ??___awmod:	
  1450                           ; 1 bytes @ 0x4
  1451                           
  1452     0074                     ??___xxtofl:	
  1453                           ; 1 bytes @ 0x4
  1454                           
  1455     0074                     ADC_INIT@ret:	
  1456                           ; 1 bytes @ 0x4
  1457                           
  1458     0074                     ADC_Get_Conversion_Result@adc:	
  1459                           ; 1 bytes @ 0x4
  1460                           
  1461     0074                     ___awdiv@counter:	
  1462                           ; 1 bytes @ 0x4
  1463                           
  1464     0074                     ___awmod@counter:	
  1465                           ; 1 bytes @ 0x4
  1466                           
  1467     0074                     memset@p:	
  1468                           ; 1 bytes @ 0x4
  1469                           
  1470     0074                     __Umul8_16@product:	
  1471                           ; 1 bytes @ 0x4
  1472                           
  1473                           
  1474                           ; 2 bytes @ 0x4
  1475     0074                     	ds	1
  1476     0075                     ?_ADC_Start_Conversion_Blocking:
  1477     0075                     ADC_INIT@adc:	
  1478                           ; 1 bytes @ 0x5
  1479                           
  1480     0075                     ADC_Start_Conversion_Blocking@channel:	
  1481                           ; 1 bytes @ 0x5
  1482                           
  1483     0075                     gpio_pin_direction_initialize@pin:	
  1484                           ; 1 bytes @ 0x5
  1485                           
  1486     0075                     ___awdiv@sign:	
  1487                           ; 1 bytes @ 0x5
  1488                           
  1489     0075                     ___awmod@sign:	
  1490                           ; 1 bytes @ 0x5
  1491                           
  1492     0075                     memset@dest:	
  1493                           ; 1 bytes @ 0x5
  1494                           
  1495                           
  1496                           ; 1 bytes @ 0x5
  1497     0075                     	ds	1
  1498     0076                     ??_mcal_initialize:
  1499     0076                     ?_abs:	
  1500                           ; 1 bytes @ 0x6
  1501                           
  1502     0076                     gpio_pin_write_logic@ret:	
  1503                           ; 2 bytes @ 0x6
  1504                           
  1505     0076                     gpio_pin_read_logic@ret:	
  1506                           ; 1 bytes @ 0x6
  1507                           
  1508     0076                     ADC_Start_Conversion_Blocking@result:	
  1509                           ; 1 bytes @ 0x6
  1510                           
  1511     0076                     ___awdiv@quotient:	
  1512                           ; 2 bytes @ 0x6
  1513                           
  1514     0076                     __Umul8_16@word_mpld:	
  1515                           ; 2 bytes @ 0x6
  1516                           
  1517     0076                     abs@a:	
  1518                           ; 2 bytes @ 0x6
  1519                           
  1520                           
  1521                           ; 2 bytes @ 0x6
  1522     0076                     	ds	1
  1523     0077                     gpio_pin_write_logic@pin:
  1524     0077                     gpio_pin_read_logic@pin:	
  1525                           ; 1 bytes @ 0x7
  1526                           
  1527                           
  1528                           ; 1 bytes @ 0x7
  1529     0077                     	ds	1
  1530     0078                     ??_gpio_pin_initialize:
  1531     0078                     ?_send_4bits:	
  1532                           ; 1 bytes @ 0x8
  1533                           
  1534     0078                     ??_send_enable_signal:	
  1535                           ; 1 bytes @ 0x8
  1536                           
  1537     0078                     ??_abs:	
  1538                           ; 1 bytes @ 0x8
  1539                           
  1540     0078                     ?_keypad_read_value:	
  1541                           ; 1 bytes @ 0x8
  1542                           
  1543     0078                     ??_motor_turn_right:	
  1544                           ; 1 bytes @ 0x8
  1545                           
  1546     0078                     ??_motor_turn_left:	
  1547                           ; 1 bytes @ 0x8
  1548                           
  1549     0078                     ??_motor_turn_off:	
  1550                           ; 1 bytes @ 0x8
  1551                           
  1552     0078                     ??_ADC_Start_Conversion_Blocking:	
  1553                           ; 1 bytes @ 0x8
  1554                           
  1555     0078                     keypad_read_value@value:	
  1556                           ; 1 bytes @ 0x8
  1557                           
  1558     0078                     send_4bits@command:	
  1559                           ; 1 bytes @ 0x8
  1560                           
  1561     0078                     motor_turn_right@ret:	
  1562                           ; 1 bytes @ 0x8
  1563                           
  1564     0078                     motor_turn_left@ret:	
  1565                           ; 1 bytes @ 0x8
  1566                           
  1567     0078                     motor_turn_off@ret:	
  1568                           ; 1 bytes @ 0x8
  1569                           
  1570     0078                     __Umul8_16@multiplier:	
  1571                           ; 1 bytes @ 0x8
  1572                           
  1573     0078                     ___xxtofl@sign:	
  1574                           ; 1 bytes @ 0x8
  1575                           
  1576                           
  1577                           ; 1 bytes @ 0x8
  1578     0078                     	ds	1
  1579     0079                     ??_send_4bits:
  1580     0079                     ??_keypad_read_value:	
  1581                           ; 1 bytes @ 0x9
  1582                           
  1583     0079                     send_enable_signal@ret:	
  1584                           ; 1 bytes @ 0x9
  1585                           
  1586     0079                     motor_turn_right@motor:	
  1587                           ; 1 bytes @ 0x9
  1588                           
  1589     0079                     motor_turn_left@motor:	
  1590                           ; 1 bytes @ 0x9
  1591                           
  1592     0079                     motor_turn_off@motor:	
  1593                           ; 1 bytes @ 0x9
  1594                           
  1595     0079                     ADC_Start_Conversion_Blocking@adc:	
  1596                           ; 1 bytes @ 0x9
  1597                           
  1598     0079                     ___xxtofl@exp:	
  1599                           ; 1 bytes @ 0x9
  1600                           
  1601                           
  1602                           ; 1 bytes @ 0x9
  1603     0079                     	ds	1
  1604     007A                     ?_vfpfcnvrt:
  1605     007A                     send_4bits@ret:	
  1606                           ; 1 bytes @ 0xA
  1607                           
  1608     007A                     send_enable_signal@lcd:	
  1609                           ; 1 bytes @ 0xA
  1610                           
  1611     007A                     gpio_pin_initialize@ret:	
  1612                           ; 1 bytes @ 0xA
  1613                           
  1614     007A                     vfpfcnvrt@fmt:	
  1615                           ; 1 bytes @ 0xA
  1616                           
  1617     007A                     ___xxtofl@arg:	
  1618                           ; 1 bytes @ 0xA
  1619                           
  1620                           
  1621                           ; 4 bytes @ 0xA
  1622     007A                     	ds	1
  1623     007B                     send_4bits@lcd:
  1624     007B                     gpio_pin_initialize@pin:	
  1625                           ; 1 bytes @ 0xB
  1626                           
  1627     007B                     vfpfcnvrt@ap:	
  1628                           ; 1 bytes @ 0xB
  1629                           
  1630                           
  1631                           ; 1 bytes @ 0xB
  1632     007B                     	ds	1
  1633     007C                     ?_lcd_4bits_send_command:
  1634     007C                     ??_keypad_initialize:	
  1635                           ; 1 bytes @ 0xC
  1636                           
  1637     007C                     ?_lcd_4bits_send_char:	
  1638                           ; 1 bytes @ 0xC
  1639                           
  1640     007C                     ??_motor_initialize:	
  1641                           ; 1 bytes @ 0xC
  1642                           
  1643     007C                     ??_vfpfcnvrt:	
  1644                           ; 1 bytes @ 0xC
  1645                           
  1646     007C                     lcd_4bits_send_command@command:	
  1647                           ; 1 bytes @ 0xC
  1648                           
  1649     007C                     lcd_4bits_send_char@data:	
  1650                           ; 1 bytes @ 0xC
  1651                           
  1652     007C                     motor_initialize@ret:	
  1653                           ; 1 bytes @ 0xC
  1654                           
  1655                           
  1656                           ; 1 bytes @ 0xC
  1657     007C                     	ds	1
  1658     007D                     ??_lcd_4bits_send_command:
  1659     007D                     ??_lcd_4bits_send_char:	
  1660                           ; 1 bytes @ 0xD
  1661                           
  1662     007D                     motor_initialize@motor:	
  1663                           ; 1 bytes @ 0xD
  1664                           
  1665                           
  1666                           ; 1 bytes @ 0xD
  1667     007D                     	ds	1
  1668     007E                     ??_set_cursor:
  1669     007E                     ??_apllication_initilaize:	
  1670                           ; 1 bytes @ 0xE
  1671                           
  1672     007E                     ??_vfprintf:	
  1673                           ; 1 bytes @ 0xE
  1674                           
  1675     007E                     ??_lcd_4bits_send_string:	
  1676                           ; 1 bytes @ 0xE
  1677                           
  1678     007E                     ??_lcd_4bits_send_string_pos:	
  1679                           ; 1 bytes @ 0xE
  1680                           
  1681     007E                     ??_ecu_initialzie:	
  1682                           ; 1 bytes @ 0xE
  1683                           
  1684                           
  1685                           	psect	cstackBANK0
  1686     0020                     __pcstackBANK0:	
  1687                           ; 1 bytes @ 0xE
  1688                           
  1689     0020                     ?___flmul:
  1690     0020                     keypad_initialize@keypad:	
  1691                           ; 4 bytes @ 0x0
  1692                           
  1693     0020                     keypad_read_value@val:	
  1694                           ; 1 bytes @ 0x0
  1695                           
  1696     0020                     lcd_4bits_send_command@ret:	
  1697                           ; 1 bytes @ 0x0
  1698                           
  1699     0020                     lcd_4bits_send_char@ret:	
  1700                           ; 1 bytes @ 0x0
  1701                           
  1702     0020                     vfpfcnvrt@done:	
  1703                           ; 1 bytes @ 0x0
  1704                           
  1705     0020                     ___flmul@b:	
  1706                           ; 1 bytes @ 0x0
  1707                           
  1708                           
  1709                           ; 4 bytes @ 0x0
  1710     0020                     	ds	1
  1711     0021                     keypad_initialize@l_rows:
  1712     0021                     keypad_read_value@counter:	
  1713                           ; 1 bytes @ 0x1
  1714                           
  1715     0021                     lcd_4bits_send_command@lcd:	
  1716                           ; 1 bytes @ 0x1
  1717                           
  1718     0021                     lcd_4bits_send_char@lcd:	
  1719                           ; 1 bytes @ 0x1
  1720                           
  1721     0021                     vfpfcnvrt@fp:	
  1722                           ; 1 bytes @ 0x1
  1723                           
  1724                           
  1725                           ; 1 bytes @ 0x1
  1726     0021                     	ds	1
  1727     0022                     ?_set_cursor:
  1728     0022                     ??_lcd_4bits_initialize:	
  1729                           ; 1 bytes @ 0x2
  1730                           
  1731     0022                     ?_lcd_4bits_send_string:	
  1732                           ; 1 bytes @ 0x2
  1733                           
  1734     0022                     keypad_initialize@l_coloumns:	
  1735                           ; 1 bytes @ 0x2
  1736                           
  1737     0022                     keypad_read_value@keypad:	
  1738                           ; 1 bytes @ 0x2
  1739                           
  1740     0022                     set_cursor@Row:	
  1741                           ; 1 bytes @ 0x2
  1742                           
  1743     0022                     vfpfcnvrt@cp:	
  1744                           ; 1 bytes @ 0x2
  1745                           
  1746     0022                     lcd_4bits_send_string@data:	
  1747                           ; 1 bytes @ 0x2
  1748                           
  1749                           
  1750                           ; 2 bytes @ 0x2
  1751     0022                     	ds	1
  1752     0023                     keypad_read_value@l_rows:
  1753     0023                     set_cursor@coloumn:	
  1754                           ; 1 bytes @ 0x3
  1755                           
  1756     0023                     vfpfcnvrt@convarg:	
  1757                           ; 1 bytes @ 0x3
  1758                           
  1759                           
  1760                           ; 4 bytes @ 0x3
  1761     0023                     	ds	1
  1762     0024                     keypad_read_value@l_coloumns:
  1763     0024                     lcd_4bits_send_string@ret:	
  1764                           ; 1 bytes @ 0x4
  1765                           
  1766     0024                     set_cursor@ret:	
  1767                           ; 1 bytes @ 0x4
  1768                           
  1769     0024                     ___flmul@a:	
  1770                           ; 1 bytes @ 0x4
  1771                           
  1772                           
  1773                           ; 4 bytes @ 0x4
  1774     0024                     	ds	1
  1775     0025                     lcd_4bits_initialize@counter:
  1776     0025                     lcd_4bits_send_string@lcd:	
  1777                           ; 1 bytes @ 0x5
  1778                           
  1779     0025                     set_cursor@lcd:	
  1780                           ; 1 bytes @ 0x5
  1781                           
  1782                           
  1783                           ; 1 bytes @ 0x5
  1784     0025                     	ds	1
  1785     0026                     ?_lcd_4bits_send_string_pos:
  1786     0026                     lcd_4bits_initialize@ret:	
  1787                           ; 1 bytes @ 0x6
  1788                           
  1789     0026                     lcd_4bits_send_string_pos@Row:	
  1790                           ; 1 bytes @ 0x6
  1791                           
  1792                           
  1793                           ; 1 bytes @ 0x6
  1794     0026                     	ds	1
  1795     0027                     lcd_4bits_initialize@lcd:
  1796     0027                     lcd_4bits_send_string_pos@coloumn:	
  1797                           ; 1 bytes @ 0x7
  1798                           
  1799     0027                     vfpfcnvrt@c:	
  1800                           ; 1 bytes @ 0x7
  1801                           
  1802                           
  1803                           ; 1 bytes @ 0x7
  1804     0027                     	ds	1
  1805     0028                     ??___flmul:
  1806     0028                     ?_vfprintf:	
  1807                           ; 1 bytes @ 0x8
  1808                           
  1809     0028                     vfprintf@fmt:	
  1810                           ; 2 bytes @ 0x8
  1811                           
  1812     0028                     lcd_4bits_send_string_pos@data:	
  1813                           ; 1 bytes @ 0x8
  1814                           
  1815                           
  1816                           ; 2 bytes @ 0x8
  1817     0028                     	ds	1
  1818     0029                     vfprintf@ap:
  1819                           
  1820                           ; 1 bytes @ 0x9
  1821     0029                     	ds	1
  1822     002A                     lcd_4bits_send_string_pos@ret:
  1823     002A                     vfprintf@fp:	
  1824                           ; 1 bytes @ 0xA
  1825                           
  1826                           
  1827                           ; 1 bytes @ 0xA
  1828     002A                     	ds	1
  1829     002B                     lcd_4bits_send_string_pos@lcd:
  1830     002B                     vfprintf@cfmt:	
  1831                           ; 1 bytes @ 0xB
  1832                           
  1833                           
  1834                           ; 1 bytes @ 0xB
  1835     002B                     	ds	1
  1836     002C                     ?_sprintf:
  1837     002C                     sprintf@fmt:	
  1838                           ; 2 bytes @ 0xC
  1839                           
  1840                           
  1841                           ; 1 bytes @ 0xC
  1842     002C                     	ds	1
  1843     002D                     ___flmul@sign:
  1844                           
  1845                           ; 1 bytes @ 0xD
  1846     002D                     	ds	1
  1847     002E                     ___flmul@grs:
  1848                           
  1849                           ; 4 bytes @ 0xE
  1850     002E                     	ds	1
  1851     002F                     ??_sprintf:
  1852                           
  1853                           ; 1 bytes @ 0xF
  1854     002F                     	ds	1
  1855     0030                     sprintf@ap:
  1856                           
  1857                           ; 1 bytes @ 0x10
  1858     0030                     	ds	1
  1859     0031                     sprintf@s:
  1860                           
  1861                           ; 1 bytes @ 0x11
  1862     0031                     	ds	1
  1863     0032                     ___flmul@aexp:
  1864     0032                     sprintf@f:	
  1865                           ; 1 bytes @ 0x12
  1866                           
  1867                           
  1868                           ; 11 bytes @ 0x12
  1869     0032                     	ds	1
  1870     0033                     ___flmul@bexp:
  1871                           
  1872                           ; 1 bytes @ 0x13
  1873     0033                     	ds	1
  1874     0034                     ___flmul@prod:
  1875                           
  1876                           ; 4 bytes @ 0x14
  1877     0034                     	ds	4
  1878     0038                     ___flmul@temp:
  1879                           
  1880                           ; 2 bytes @ 0x18
  1881     0038                     	ds	2
  1882     003A                     ?___fldiv:
  1883     003A                     ___fldiv@a:	
  1884                           ; 4 bytes @ 0x1A
  1885                           
  1886                           
  1887                           ; 4 bytes @ 0x1A
  1888     003A                     	ds	3
  1889     003D                     ?_Convert_uint16_to_string:
  1890     003D                     Convert_uint16_to_string@data:	
  1891                           ; 1 bytes @ 0x1D
  1892                           
  1893                           
  1894                           ; 2 bytes @ 0x1D
  1895     003D                     	ds	1
  1896     003E                     ___fldiv@b:
  1897                           
  1898                           ; 4 bytes @ 0x1E
  1899     003E                     	ds	1
  1900     003F                     Convert_uint16_to_string@str:
  1901                           
  1902                           ; 1 bytes @ 0x1F
  1903     003F                     	ds	1
  1904     0040                     ??_Convert_uint16_to_string:
  1905                           
  1906                           ; 1 bytes @ 0x20
  1907     0040                     	ds	1
  1908     0041                     Convert_uint16_to_string@temp:
  1909                           
  1910                           ; 6 bytes @ 0x21
  1911     0041                     	ds	1
  1912     0042                     ??___fldiv:
  1913                           
  1914                           ; 1 bytes @ 0x22
  1915     0042                     	ds	5
  1916     0047                     Convert_uint16_to_string@counter:
  1917     0047                     ___fldiv@rem:	
  1918                           ; 1 bytes @ 0x27
  1919                           
  1920                           
  1921                           ; 4 bytes @ 0x27
  1922     0047                     	ds	4
  1923     004B                     ___fldiv@sign:
  1924                           
  1925                           ; 1 bytes @ 0x2B
  1926     004B                     	ds	1
  1927     004C                     ___fldiv@new_exp:
  1928                           
  1929                           ; 2 bytes @ 0x2C
  1930     004C                     	ds	2
  1931     004E                     ___fldiv@grs:
  1932                           
  1933                           ; 4 bytes @ 0x2E
  1934     004E                     	ds	4
  1935     0052                     ___fldiv@bexp:
  1936                           
  1937                           ; 1 bytes @ 0x32
  1938     0052                     	ds	1
  1939     0053                     ___fldiv@aexp:
  1940                           
  1941                           ; 1 bytes @ 0x33
  1942     0053                     	ds	1
  1943     0054                     ?___fltol:
  1944     0054                     ___fltol@f1:	
  1945                           ; 4 bytes @ 0x34
  1946                           
  1947                           
  1948                           ; 4 bytes @ 0x34
  1949     0054                     	ds	4
  1950     0058                     ??___fltol:
  1951                           
  1952                           ; 1 bytes @ 0x38
  1953     0058                     	ds	4
  1954     005C                     ___fltol@sign1:
  1955                           
  1956                           ; 1 bytes @ 0x3C
  1957     005C                     	ds	1
  1958     005D                     ___fltol@exp1:
  1959                           
  1960                           ; 1 bytes @ 0x3D
  1961     005D                     	ds	1
  1962     005E                     ??_main:
  1963                           
  1964                           ; 1 bytes @ 0x3E
  1965     005E                     	ds	3
  1966     0061                     main@counter:
  1967                           
  1968                           ; 1 bytes @ 0x41
  1969     0061                     	ds	1
  1970     0062                     main@i:
  1971                           
  1972                           ; 1 bytes @ 0x42
  1973     0062                     	ds	1
  1974                           
  1975                           	psect	maintext
  1976     0271                     __pmaintext:	
  1977 ;;
  1978 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1979 ;;
  1980 ;; *************** function _main *****************
  1981 ;; Defined at:
  1982 ;;		line 21 in file "Temperature_Controlled_Fan_System.c"
  1983 ;; Parameters:    Size  Location     Type
  1984 ;;		None
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;  i               1   66[BANK0 ] unsigned char 
  1987 ;;  counter         1   65[BANK0 ] unsigned char 
  1988 ;; Return value:  Size  Location     Type
  1989 ;;                  2  515[None  ] int 
  1990 ;; Registers used:
  1991 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1992 ;; Tracked objects:
  1993 ;;		On entry : B00/0
  1994 ;;		On exit  : 0/0
  1995 ;;		Unchanged: 0/0
  1996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1997 ;;      Params:         0       0       0       0       0
  1998 ;;      Locals:         0       2       0       0       0
  1999 ;;      Temps:          0       3       0       0       0
  2000 ;;      Totals:         0       5       0       0       0
  2001 ;;Total ram usage:        5 bytes
  2002 ;; Hardware stack levels required when called: 6
  2003 ;; This function calls:
  2004 ;;		_ADC_Start_Conversion_Blocking
  2005 ;;		_Convert_uint16_to_string
  2006 ;;		_READ_DATA_EEPROM
  2007 ;;		_WRITE_DATA_EEPROM
  2008 ;;		___fldiv
  2009 ;;		___flmul
  2010 ;;		___fltol
  2011 ;;		___xxtofl
  2012 ;;		_apllication_initilaize
  2013 ;;		_keypad_read_value
  2014 ;;		_lcd_4bits_send_command
  2015 ;;		_lcd_4bits_send_string
  2016 ;;		_lcd_4bits_send_string_pos
  2017 ;;		_motor_turn_left
  2018 ;;		_motor_turn_off
  2019 ;;		_motor_turn_right
  2020 ;; This function is called by:
  2021 ;;		Startup code after reset
  2022 ;; This function uses a non-reentrant model
  2023 ;;
  2024                           
  2025     0271                     _main:	
  2026                           ;psect for function _main
  2027                           
  2028     0271                     l3935:	
  2029                           ;incstack = 0
  2030                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2031                           
  2032                           
  2033                           ;Temperature_Controlled_Fan_System.c: 22:     apllication_initilaize();
  2034     0271  120A  118A  2004  120A  118A  	fcall	_apllication_initilaize
  2035     0276                     l3937:
  2036                           
  2037                           ;Temperature_Controlled_Fan_System.c: 23:     READ_DATA_EEPROM(0xFF,&Max_Temp);
  2038     0276  30FF               	movlw	255
  2039     0277  00F0               	movwf	READ_DATA_EEPROM@add
  2040     0278  3000               	movlw	0
  2041     0279  00F1               	movwf	READ_DATA_EEPROM@add+1
  2042     027A  306D               	movlw	(low (_Max_Temp| 0))& (0+255)
  2043     027B  00F2               	movwf	READ_DATA_EEPROM@data
  2044     027C  160A  118A  2494  120A  118A  	fcall	_READ_DATA_EEPROM
  2045     0281                     l3939:
  2046                           
  2047                           ;Temperature_Controlled_Fan_System.c: 27:     ADC_Start_Conversion_Blocking(&adc,CHANNEL
      +                          0,&adc_res);
  2048     0281  01F5               	clrf	ADC_Start_Conversion_Blocking@channel
  2049     0282  30EE               	movlw	low (_adc_res| 0)
  2050     0283  00F6               	movwf	ADC_Start_Conversion_Blocking@result
  2051     0284  3000               	movlw	high (_adc_res| 0)
  2052     0285  00F7               	movwf	ADC_Start_Conversion_Blocking@result+1
  2053     0286  30C9               	movlw	(low (_adc| 0))& (0+255)
  2054     0287  160A  118A  2658  120A  118A  	fcall	_ADC_Start_Conversion_Blocking
  2055     028C                     l3941:
  2056                           
  2057                           ;Temperature_Controlled_Fan_System.c: 30:     Temp = adc_res * 4.8828125f / 10;
  2058     028C  1683               	bsf	3,5	;RP0=1, select bank1
  2059     028D  1303               	bcf	3,6	;RP1=0, select bank1
  2060     028E  086E               	movf	_adc_res^(0+128),w
  2061     028F  00F0               	movwf	___xxtofl@val
  2062     0290  086F               	movf	(_adc_res+1)^(0+128),w
  2063     0291  00F1               	movwf	___xxtofl@val+1
  2064     0292  01F2               	clrf	___xxtofl@val+2
  2065     0293  01F3               	clrf	___xxtofl@val+3
  2066     0294  3000               	movlw	0
  2067     0295  120A  158A  24A1  120A  118A  	fcall	___xxtofl
  2068     029A  0873               	movf	?___xxtofl+3,w
  2069     029B  1283               	bcf	3,5	;RP0=0, select bank0
  2070     029C  1303               	bcf	3,6	;RP1=0, select bank0
  2071     029D  00A7               	movwf	___flmul@a+3
  2072     029E  0872               	movf	?___xxtofl+2,w
  2073     029F  00A6               	movwf	___flmul@a+2
  2074     02A0  0871               	movf	?___xxtofl+1,w
  2075     02A1  00A5               	movwf	___flmul@a+1
  2076     02A2  0870               	movf	?___xxtofl,w
  2077     02A3  00A4               	movwf	___flmul@a
  2078     02A4  3040               	movlw	64
  2079     02A5  00A3               	movwf	___flmul@b+3
  2080     02A6  309C               	movlw	156
  2081     02A7  00A2               	movwf	___flmul@b+2
  2082     02A8  3040               	movlw	64
  2083     02A9  00A1               	movwf	___flmul@b+1
  2084     02AA  3000               	movlw	0
  2085     02AB  00A0               	movwf	___flmul@b
  2086     02AC  120A  118A  248F  120A  118A  	fcall	___flmul
  2087     02B1  1283               	bcf	3,5	;RP0=0, select bank0
  2088     02B2  1303               	bcf	3,6	;RP1=0, select bank0
  2089     02B3  0823               	movf	?___flmul+3,w
  2090     02B4  00C1               	movwf	___fldiv@b+3
  2091     02B5  0822               	movf	?___flmul+2,w
  2092     02B6  00C0               	movwf	___fldiv@b+2
  2093     02B7  0821               	movf	?___flmul+1,w
  2094     02B8  00BF               	movwf	___fldiv@b+1
  2095     02B9  0820               	movf	?___flmul,w
  2096     02BA  00BE               	movwf	___fldiv@b
  2097     02BB  3041               	movlw	65
  2098     02BC  00BD               	movwf	___fldiv@a+3
  2099     02BD  3020               	movlw	32
  2100     02BE  00BC               	movwf	___fldiv@a+2
  2101     02BF  3000               	movlw	0
  2102     02C0  00BB               	movwf	___fldiv@a+1
  2103     02C1  3000               	movlw	0
  2104     02C2  00BA               	movwf	___fldiv@a
  2105     02C3  120A  118A  20A2  120A  118A  	fcall	___fldiv
  2106     02C8  1283               	bcf	3,5	;RP0=0, select bank0
  2107     02C9  1303               	bcf	3,6	;RP1=0, select bank0
  2108     02CA  083D               	movf	?___fldiv+3,w
  2109     02CB  00D7               	movwf	___fltol@f1+3
  2110     02CC  083C               	movf	?___fldiv+2,w
  2111     02CD  00D6               	movwf	___fltol@f1+2
  2112     02CE  083B               	movf	?___fldiv+1,w
  2113     02CF  00D5               	movwf	___fltol@f1+1
  2114     02D0  083A               	movf	?___fldiv,w
  2115     02D1  00D4               	movwf	___fltol@f1
  2116     02D2  120A  158A  22C4  120A  118A  	fcall	___fltol
  2117     02D7  1283               	bcf	3,5	;RP0=0, select bank0
  2118     02D8  1303               	bcf	3,6	;RP1=0, select bank0
  2119     02D9  0855               	movf	?___fltol+1,w
  2120     02DA  00E4               	movwf	_Temp+1
  2121     02DB  0854               	movf	?___fltol,w
  2122     02DC  00E3               	movwf	_Temp
  2123     02DD                     l3943:
  2124                           
  2125                           ;Temperature_Controlled_Fan_System.c: 32:     Convert_uint16_to_string(Temp,lcd_show);
  2126     02DD  0864               	movf	_Temp+1,w
  2127     02DE  00BE               	movwf	Convert_uint16_to_string@data+1
  2128     02DF  0863               	movf	_Temp,w
  2129     02E0  00BD               	movwf	Convert_uint16_to_string@data
  2130     02E1  30E8               	movlw	(low (_lcd_show| 0))& (0+255)
  2131     02E2  00BF               	movwf	Convert_uint16_to_string@str
  2132     02E3  120A  158A  20A4  120A  118A  	fcall	_Convert_uint16_to_string
  2133     02E8                     l3945:
  2134                           
  2135                           ;Temperature_Controlled_Fan_System.c: 33:     keypad_read_value(&keypad,&val);
  2136     02E8  306F               	movlw	(low (_val| 0))& (0+255)
  2137     02E9  00F8               	movwf	keypad_read_value@value
  2138     02EA  30B8               	movlw	(low (_keypad| 0))& (0+255)
  2139     02EB  120A  158A  224E  120A  118A  	fcall	_keypad_read_value
  2140     02F0                     l3947:
  2141                           
  2142                           ;Temperature_Controlled_Fan_System.c: 34:     if(val == '*' && flag == 0){
  2143     02F0  302A               	movlw	42
  2144     02F1  1283               	bcf	3,5	;RP0=0, select bank0
  2145     02F2  1303               	bcf	3,6	;RP1=0, select bank0
  2146     02F3  066F               	xorwf	_val,w
  2147     02F4  1D03               	btfss	3,2
  2148     02F5  2AF7               	goto	u5271
  2149     02F6  2AF8               	goto	u5270
  2150     02F7                     u5271:
  2151     02F7  2BCC               	goto	l4001
  2152     02F8                     u5270:
  2153     02F8                     l3949:
  2154     02F8  0865               	movf	_flag,w
  2155     02F9  1D03               	btfss	3,2
  2156     02FA  2AFC               	goto	u5281
  2157     02FB  2AFD               	goto	u5280
  2158     02FC                     u5281:
  2159     02FC  2BCC               	goto	l4001
  2160     02FD                     u5280:
  2161     02FD                     l3951:
  2162                           
  2163                           ;Temperature_Controlled_Fan_System.c: 35:         _delay((unsigned long)((400)*(8000000U
      +                          L/4000.0)));
  2164     02FD  3005               	movlw	5
  2165     02FE  1283               	bcf	3,5	;RP0=0, select bank0
  2166     02FF  1303               	bcf	3,6	;RP1=0, select bank0
  2167     0300  00E0               	movwf	??_main+2
  2168     0301  300F               	movlw	15
  2169     0302  00DF               	movwf	??_main+1
  2170     0303  30F0               	movlw	240
  2171     0304  00DE               	movwf	??_main
  2172     0305                     u5397:
  2173     0305  0BDE               	decfsz	??_main,f
  2174     0306  2B05               	goto	u5397
  2175     0307  0BDF               	decfsz	??_main+1,f
  2176     0308  2B05               	goto	u5397
  2177     0309  0BE0               	decfsz	??_main+2,f
  2178     030A  2B05               	goto	u5397
  2179     030B  0000               	nop
  2180                           
  2181                           ;Temperature_Controlled_Fan_System.c: 36:         temp[0] = '.';
  2182     030C  302E               	movlw	46
  2183     030D  1683               	bsf	3,5	;RP0=1, select bank1
  2184     030E  1303               	bcf	3,6	;RP1=0, select bank1
  2185     030F  00C5               	movwf	_temp^(0+128)
  2186                           
  2187                           ;Temperature_Controlled_Fan_System.c: 37:         temp[1] = '.';
  2188     0310  302E               	movlw	46
  2189     0311  00C6               	movwf	(_temp^(0+128)+1)
  2190                           
  2191                           ;Temperature_Controlled_Fan_System.c: 38:         temp[2] = '.';
  2192     0312  302E               	movlw	46
  2193     0313  00C7               	movwf	(_temp^(0+128)+2)
  2194                           
  2195                           ;Temperature_Controlled_Fan_System.c: 39:         temp[3] = '.';
  2196     0314  302E               	movlw	46
  2197     0315  00C8               	movwf	(_temp^(0+128)+3)
  2198     0316                     l3953:
  2199                           
  2200                           ;Temperature_Controlled_Fan_System.c: 40:         for(uint8 counter = 0;counter < 4;coun
      +                          ter++){
  2201     0316  1283               	bcf	3,5	;RP0=0, select bank0
  2202     0317  1303               	bcf	3,6	;RP1=0, select bank0
  2203     0318  01E1               	clrf	main@counter
  2204     0319  2B23               	goto	l3961
  2205     031A                     l3959:
  2206                           
  2207                           ;Temperature_Controlled_Fan_System.c: 42:         keypad_read_value(&keypad,&(temp[count
      +                          er]));
  2208     031A  0861               	movf	main@counter,w
  2209     031B  3EC5               	addlw	(low (_temp| 0))& (0+255)
  2210     031C  00F8               	movwf	keypad_read_value@value
  2211     031D  30B8               	movlw	(low (_keypad| 0))& (0+255)
  2212     031E  120A  158A  224E  120A  118A  	fcall	_keypad_read_value
  2213     0323                     l3961:
  2214                           
  2215                           ;Temperature_Controlled_Fan_System.c: 41:         while(temp[counter] == '.'){
  2216     0323  1283               	bcf	3,5	;RP0=0, select bank0
  2217     0324  1303               	bcf	3,6	;RP1=0, select bank0
  2218     0325  0861               	movf	main@counter,w
  2219     0326  3EC5               	addlw	(low (_temp| 0))& (0+255)
  2220     0327  0084               	movwf	4
  2221     0328  302E               	movlw	46
  2222     0329  1383               	bcf	3,7	;select IRP bank1
  2223     032A  0600               	xorwf	0,w
  2224     032B  1903               	btfsc	3,2
  2225     032C  2B2E               	goto	u5291
  2226     032D  2B2F               	goto	u5290
  2227     032E                     u5291:
  2228     032E  2B1A               	goto	l3959
  2229     032F                     u5290:
  2230     032F                     l3963:
  2231                           
  2232                           ;Temperature_Controlled_Fan_System.c: 45:         _delay((unsigned long)((400)*(8000000U
      +                          L/4000.0)));
  2233     032F  3005               	movlw	5
  2234     0330  1283               	bcf	3,5	;RP0=0, select bank0
  2235     0331  1303               	bcf	3,6	;RP1=0, select bank0
  2236     0332  00E0               	movwf	??_main+2
  2237     0333  300F               	movlw	15
  2238     0334  00DF               	movwf	??_main+1
  2239     0335  30F0               	movlw	240
  2240     0336  00DE               	movwf	??_main
  2241     0337                     u5407:
  2242     0337  0BDE               	decfsz	??_main,f
  2243     0338  2B37               	goto	u5407
  2244     0339  0BDF               	decfsz	??_main+1,f
  2245     033A  2B37               	goto	u5407
  2246     033B  0BE0               	decfsz	??_main+2,f
  2247     033C  2B37               	goto	u5407
  2248     033D  0000               	nop
  2249     033E                     l3965:
  2250                           
  2251                           ;Temperature_Controlled_Fan_System.c: 46:     }
  2252     033E  3001               	movlw	1
  2253     033F  00FF               	movwf	btemp+1
  2254     0340  087F               	movf	btemp+1,w
  2255     0341  1283               	bcf	3,5	;RP0=0, select bank0
  2256     0342  1303               	bcf	3,6	;RP1=0, select bank0
  2257     0343  07E1               	addwf	main@counter,f
  2258     0344                     l3967:
  2259     0344  3004               	movlw	4
  2260     0345  0261               	subwf	main@counter,w
  2261     0346  1C03               	skipc
  2262     0347  2B49               	goto	u5301
  2263     0348  2B4A               	goto	u5300
  2264     0349                     u5301:
  2265     0349  2B23               	goto	l3961
  2266     034A                     u5300:
  2267     034A                     l519:
  2268                           
  2269                           ;Temperature_Controlled_Fan_System.c: 47:         flag = 1;
  2270     034A  01E5               	clrf	_flag
  2271     034B  0AE5               	incf	_flag,f
  2272     034C                     l3969:
  2273                           
  2274                           ;Temperature_Controlled_Fan_System.c: 48:         for(uint8 i = 0;i < 4;i++){
  2275     034C  01E2               	clrf	main@i
  2276     034D                     l3975:
  2277                           
  2278                           ;Temperature_Controlled_Fan_System.c: 49:             if(temp[i] != pass[i]){
  2279     034D  0862               	movf	main@i,w
  2280     034E  3EB4               	addlw	(low (_pass| 0))& (0+255)
  2281     034F  0084               	movwf	4
  2282     0350  1383               	bcf	3,7	;select IRP bank1
  2283     0351  0800               	movf	0,w
  2284     0352  00DE               	movwf	??_main
  2285     0353  0862               	movf	main@i,w
  2286     0354  3EC5               	addlw	(low (_temp| 0))& (0+255)
  2287     0355  0084               	movwf	4
  2288     0356  0800               	movf	0,w
  2289     0357  065E               	xorwf	??_main,w
  2290     0358  1903               	skipnz
  2291     0359  2B5B               	goto	u5311
  2292     035A  2B5C               	goto	u5310
  2293     035B                     u5311:
  2294     035B  2B8C               	goto	l3989
  2295     035C                     u5310:
  2296     035C                     l3977:
  2297                           
  2298                           ;Temperature_Controlled_Fan_System.c: 50:                 flag = 0;
  2299     035C  01E5               	clrf	_flag
  2300     035D                     l3979:
  2301                           
  2302                           ;Temperature_Controlled_Fan_System.c: 51:                 lcd_4bits_send_command(&lcd,0x
      +                          01);
  2303     035D  01FC               	clrf	lcd_4bits_send_command@command
  2304     035E  0AFC               	incf	lcd_4bits_send_command@command,f
  2305     035F  30BF               	movlw	(low (_lcd| 0))& (0+255)
  2306     0360  120A  158A  205D  120A  118A  	fcall	_lcd_4bits_send_command
  2307     0365                     l3981:
  2308                           
  2309                           ;Temperature_Controlled_Fan_System.c: 52:                 lcd_4bits_send_string_pos(&lcd
      +                          ,1,1,"Wrong Password");
  2310     0365  1283               	bcf	3,5	;RP0=0, select bank0
  2311     0366  1303               	bcf	3,6	;RP1=0, select bank0
  2312     0367  01A6               	clrf	lcd_4bits_send_string_pos@Row
  2313     0368  0AA6               	incf	lcd_4bits_send_string_pos@Row,f
  2314     0369  01A7               	clrf	lcd_4bits_send_string_pos@coloumn
  2315     036A  0AA7               	incf	lcd_4bits_send_string_pos@coloumn,f
  2316     036B  302D               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2317     036C  00A8               	movwf	lcd_4bits_send_string_pos@data
  2318     036D  3080               	movlw	128
  2319     036E  00A9               	movwf	lcd_4bits_send_string_pos@data+1
  2320     036F  30BF               	movlw	(low (_lcd| 0))& (0+255)
  2321     0370  160A  118A  260D  120A  118A  	fcall	_lcd_4bits_send_string_pos
  2322     0375                     l3983:
  2323                           
  2324                           ;Temperature_Controlled_Fan_System.c: 53:                 _delay((unsigned long)((1000)*
      +                          (8000000UL/4000.0)));
  2325     0375  300B               	movlw	11
  2326     0376  1283               	bcf	3,5	;RP0=0, select bank0
  2327     0377  1303               	bcf	3,6	;RP1=0, select bank0
  2328     0378  00E0               	movwf	??_main+2
  2329     0379  3026               	movlw	38
  2330     037A  00DF               	movwf	??_main+1
  2331     037B  305D               	movlw	93
  2332     037C  00DE               	movwf	??_main
  2333     037D                     u5417:
  2334     037D  0BDE               	decfsz	??_main,f
  2335     037E  2B7D               	goto	u5417
  2336     037F  0BDF               	decfsz	??_main+1,f
  2337     0380  2B7D               	goto	u5417
  2338     0381  0BE0               	decfsz	??_main+2,f
  2339     0382  2B7D               	goto	u5417
  2340     0383                     l3985:
  2341                           
  2342                           ;Temperature_Controlled_Fan_System.c: 54:                 lcd_4bits_send_command(&lcd,0x
      +                          01);
  2343     0383  01FC               	clrf	lcd_4bits_send_command@command
  2344     0384  0AFC               	incf	lcd_4bits_send_command@command,f
  2345     0385  30BF               	movlw	(low (_lcd| 0))& (0+255)
  2346     0386  120A  158A  205D  120A  118A  	fcall	_lcd_4bits_send_command
  2347                           
  2348                           ;Temperature_Controlled_Fan_System.c: 55:                 break;
  2349     038B  2BCC               	goto	l4001
  2350     038C                     l3989:
  2351                           
  2352                           ;Temperature_Controlled_Fan_System.c: 59:                 lcd_4bits_send_command(&lcd,0x
      +                          01);
  2353     038C  01FC               	clrf	lcd_4bits_send_command@command
  2354     038D  0AFC               	incf	lcd_4bits_send_command@command,f
  2355     038E  30BF               	movlw	(low (_lcd| 0))& (0+255)
  2356     038F  120A  158A  205D  120A  118A  	fcall	_lcd_4bits_send_command
  2357     0394                     l3991:
  2358                           
  2359                           ;Temperature_Controlled_Fan_System.c: 60:                 _delay((unsigned long)((50)*(8
      +                          000000UL/4000.0)));
  2360     0394  3082               	movlw	130
  2361     0395  1283               	bcf	3,5	;RP0=0, select bank0
  2362     0396  1303               	bcf	3,6	;RP1=0, select bank0
  2363     0397  00DF               	movwf	??_main+1
  2364     0398  30DD               	movlw	221
  2365     0399  00DE               	movwf	??_main
  2366     039A                     u5427:
  2367     039A  0BDE               	decfsz	??_main,f
  2368     039B  2B9A               	goto	u5427
  2369     039C  0BDF               	decfsz	??_main+1,f
  2370     039D  2B9A               	goto	u5427
  2371     039E                     l3993:
  2372                           
  2373                           ;Temperature_Controlled_Fan_System.c: 61:                 lcd_4bits_send_string(&lcd,"Co
      +                          rrect Password");
  2374     039E  300D               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2375     039F  1283               	bcf	3,5	;RP0=0, select bank0
  2376     03A0  1303               	bcf	3,6	;RP1=0, select bank0
  2377     03A1  00A2               	movwf	lcd_4bits_send_string@data
  2378     03A2  3080               	movlw	128
  2379     03A3  00A3               	movwf	lcd_4bits_send_string@data+1
  2380     03A4  30BF               	movlw	(low (_lcd| 0))& (0+255)
  2381     03A5  160A  118A  2741  120A  118A  	fcall	_lcd_4bits_send_string
  2382                           
  2383                           ;Temperature_Controlled_Fan_System.c: 62:                 _delay((unsigned long)((500)*(
      +                          8000000UL/4000.0)));
  2384     03AA  3006               	movlw	6
  2385     03AB  1283               	bcf	3,5	;RP0=0, select bank0
  2386     03AC  1303               	bcf	3,6	;RP1=0, select bank0
  2387     03AD  00E0               	movwf	??_main+2
  2388     03AE  3013               	movlw	19
  2389     03AF  00DF               	movwf	??_main+1
  2390     03B0  30AD               	movlw	173
  2391     03B1  00DE               	movwf	??_main
  2392     03B2                     u5437:
  2393     03B2  0BDE               	decfsz	??_main,f
  2394     03B3  2BB2               	goto	u5437
  2395     03B4  0BDF               	decfsz	??_main+1,f
  2396     03B5  2BB2               	goto	u5437
  2397     03B6  0BE0               	decfsz	??_main+2,f
  2398     03B7  2BB2               	goto	u5437
  2399     03B8                     l3995:
  2400                           
  2401                           ;Temperature_Controlled_Fan_System.c: 63:             lcd_4bits_send_command(&lcd,0x01);
  2402     03B8  01FC               	clrf	lcd_4bits_send_command@command
  2403     03B9  0AFC               	incf	lcd_4bits_send_command@command,f
  2404     03BA  30BF               	movlw	(low (_lcd| 0))& (0+255)
  2405     03BB  120A  158A  205D  120A  118A  	fcall	_lcd_4bits_send_command
  2406     03C0                     l3997:
  2407                           
  2408                           ;Temperature_Controlled_Fan_System.c: 65:         }
  2409     03C0  3001               	movlw	1
  2410     03C1  00FF               	movwf	btemp+1
  2411     03C2  087F               	movf	btemp+1,w
  2412     03C3  1283               	bcf	3,5	;RP0=0, select bank0
  2413     03C4  1303               	bcf	3,6	;RP1=0, select bank0
  2414     03C5  07E2               	addwf	main@i,f
  2415     03C6                     l3999:
  2416     03C6  3004               	movlw	4
  2417     03C7  0262               	subwf	main@i,w
  2418     03C8  1C03               	skipc
  2419     03C9  2BCB               	goto	u5321
  2420     03CA  2BCC               	goto	u5320
  2421     03CB                     u5321:
  2422     03CB  2B4D               	goto	l3975
  2423     03CC                     u5320:
  2424     03CC                     l4001:
  2425                           
  2426                           ;Temperature_Controlled_Fan_System.c: 71:     val = '\0';
  2427     03CC  1283               	bcf	3,5	;RP0=0, select bank0
  2428     03CD  1303               	bcf	3,6	;RP1=0, select bank0
  2429     03CE  01EF               	clrf	_val
  2430     03CF                     l4003:
  2431                           
  2432                           ;Temperature_Controlled_Fan_System.c: 72:     Convert_uint16_to_string(Max_Temp,lcd_show
      +                          _max);
  2433     03CF  086E               	movf	_Max_Temp+1,w
  2434     03D0  00BE               	movwf	Convert_uint16_to_string@data+1
  2435     03D1  086D               	movf	_Max_Temp,w
  2436     03D2  00BD               	movwf	Convert_uint16_to_string@data
  2437     03D3  30E2               	movlw	(low (_lcd_show_max| 0))& (0+255)
  2438     03D4  00BF               	movwf	Convert_uint16_to_string@str
  2439     03D5  120A  158A  20A4  120A  118A  	fcall	_Convert_uint16_to_string
  2440     03DA                     l4005:
  2441                           
  2442                           ;Temperature_Controlled_Fan_System.c: 73:     if(flag == 1){
  2443     03DA  1283               	bcf	3,5	;RP0=0, select bank0
  2444     03DB  1303               	bcf	3,6	;RP1=0, select bank0
  2445     03DC  0365               	decf	_flag,w
  2446     03DD  1D03               	btfss	3,2
  2447     03DE  2BE0               	goto	u5331
  2448     03DF  2BE1               	goto	u5330
  2449     03E0                     u5331:
  2450     03E0  2C20               	goto	l4009
  2451     03E1                     u5330:
  2452     03E1                     l4007:
  2453                           
  2454                           ;Temperature_Controlled_Fan_System.c: 74:     lcd_4bits_send_string_pos(&lcd,1,1,"Temp i
      +                          s : ");
  2455     03E1  01A6               	clrf	lcd_4bits_send_string_pos@Row
  2456     03E2  0AA6               	incf	lcd_4bits_send_string_pos@Row,f
  2457     03E3  01A7               	clrf	lcd_4bits_send_string_pos@coloumn
  2458     03E4  0AA7               	incf	lcd_4bits_send_string_pos@coloumn,f
  2459     03E5  3022               	movlw	(low (((STR_7+4)-__stringbase)| (0+32768)))& (0+255)
  2460     03E6  00A8               	movwf	lcd_4bits_send_string_pos@data
  2461     03E7  3080               	movlw	128
  2462     03E8  00A9               	movwf	lcd_4bits_send_string_pos@data+1
  2463     03E9  30BF               	movlw	(low (_lcd| 0))& (0+255)
  2464     03EA  160A  118A  260D  120A  118A  	fcall	_lcd_4bits_send_string_pos
  2465                           
  2466                           ;Temperature_Controlled_Fan_System.c: 75:     lcd_4bits_send_string_pos(&lcd,1,10,lcd_sh
      +                          ow);
  2467     03EF  1283               	bcf	3,5	;RP0=0, select bank0
  2468     03F0  1303               	bcf	3,6	;RP1=0, select bank0
  2469     03F1  01A6               	clrf	lcd_4bits_send_string_pos@Row
  2470     03F2  0AA6               	incf	lcd_4bits_send_string_pos@Row,f
  2471     03F3  300A               	movlw	10
  2472     03F4  00A7               	movwf	lcd_4bits_send_string_pos@coloumn
  2473     03F5  30E8               	movlw	(low (_lcd_show| 0))& (0+255)
  2474     03F6  00A8               	movwf	lcd_4bits_send_string_pos@data
  2475     03F7  3000               	movlw	0
  2476     03F8  00A9               	movwf	lcd_4bits_send_string_pos@data+1
  2477     03F9  30BF               	movlw	(low (_lcd| 0))& (0+255)
  2478     03FA  160A  118A  260D  120A  118A  	fcall	_lcd_4bits_send_string_pos
  2479                           
  2480                           ;Temperature_Controlled_Fan_System.c: 76:     lcd_4bits_send_string_pos(&lcd,2,1,"Max Te
      +                          mp is : ");
  2481     03FF  3002               	movlw	2
  2482     0400  1283               	bcf	3,5	;RP0=0, select bank0
  2483     0401  1303               	bcf	3,6	;RP1=0, select bank0
  2484     0402  00A6               	movwf	lcd_4bits_send_string_pos@Row
  2485     0403  01A7               	clrf	lcd_4bits_send_string_pos@coloumn
  2486     0404  0AA7               	incf	lcd_4bits_send_string_pos@coloumn,f
  2487     0405  301E               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2488     0406  00A8               	movwf	lcd_4bits_send_string_pos@data
  2489     0407  3080               	movlw	128
  2490     0408  00A9               	movwf	lcd_4bits_send_string_pos@data+1
  2491     0409  30BF               	movlw	(low (_lcd| 0))& (0+255)
  2492     040A  160A  118A  260D  120A  118A  	fcall	_lcd_4bits_send_string_pos
  2493                           
  2494                           ;Temperature_Controlled_Fan_System.c: 77:     lcd_4bits_send_string_pos(&lcd,2,14,lcd_sh
      +                          ow_max);
  2495     040F  3002               	movlw	2
  2496     0410  1283               	bcf	3,5	;RP0=0, select bank0
  2497     0411  1303               	bcf	3,6	;RP1=0, select bank0
  2498     0412  00A6               	movwf	lcd_4bits_send_string_pos@Row
  2499     0413  300E               	movlw	14
  2500     0414  00A7               	movwf	lcd_4bits_send_string_pos@coloumn
  2501     0415  30E2               	movlw	(low (_lcd_show_max| 0))& (0+255)
  2502     0416  00A8               	movwf	lcd_4bits_send_string_pos@data
  2503     0417  3000               	movlw	0
  2504     0418  00A9               	movwf	lcd_4bits_send_string_pos@data+1
  2505     0419  30BF               	movlw	(low (_lcd| 0))& (0+255)
  2506     041A  160A  118A  260D  120A  118A  	fcall	_lcd_4bits_send_string_pos
  2507                           
  2508                           ;Temperature_Controlled_Fan_System.c: 78:     }
  2509     041F  2C33               	goto	l4013
  2510     0420                     l4009:
  2511     0420  0865               	movf	_flag,w
  2512     0421  1D03               	btfss	3,2
  2513     0422  2C24               	goto	u5341
  2514     0423  2C25               	goto	u5340
  2515     0424                     u5341:
  2516     0424  2C33               	goto	l4013
  2517     0425                     u5340:
  2518     0425                     l4011:
  2519                           
  2520                           ;Temperature_Controlled_Fan_System.c: 80:         lcd_4bits_send_string_pos(&lcd,1,1,"En
      +                          ter password");
  2521     0425  01A6               	clrf	lcd_4bits_send_string_pos@Row
  2522     0426  0AA6               	incf	lcd_4bits_send_string_pos@Row,f
  2523     0427  01A7               	clrf	lcd_4bits_send_string_pos@coloumn
  2524     0428  0AA7               	incf	lcd_4bits_send_string_pos@coloumn,f
  2525     0429  303C               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2526     042A  00A8               	movwf	lcd_4bits_send_string_pos@data
  2527     042B  3080               	movlw	128
  2528     042C  00A9               	movwf	lcd_4bits_send_string_pos@data+1
  2529     042D  30BF               	movlw	(low (_lcd| 0))& (0+255)
  2530     042E  160A  118A  260D  120A  118A  	fcall	_lcd_4bits_send_string_pos
  2531     0433                     l4013:	
  2532                           ;Temperature_Controlled_Fan_System.c: 81:     }
  2533                           
  2534                           
  2535                           ;Temperature_Controlled_Fan_System.c: 84:     if((Temp >= 50) && (Temp < 60)){
  2536     0433  3000               	movlw	0
  2537     0434  1283               	bcf	3,5	;RP0=0, select bank0
  2538     0435  1303               	bcf	3,6	;RP1=0, select bank0
  2539     0436  0264               	subwf	_Temp+1,w
  2540     0437  3032               	movlw	50
  2541     0438  1903               	skipnz
  2542     0439  0263               	subwf	_Temp,w
  2543     043A  1C03               	skipc
  2544     043B  2C3D               	goto	u5351
  2545     043C  2C3E               	goto	u5350
  2546     043D                     u5351:
  2547     043D  2C4E               	goto	l4019
  2548     043E                     u5350:
  2549     043E                     l4015:
  2550     043E  3000               	movlw	0
  2551     043F  0264               	subwf	_Temp+1,w
  2552     0440  303C               	movlw	60
  2553     0441  1903               	skipnz
  2554     0442  0263               	subwf	_Temp,w
  2555     0443  1803               	skipnc
  2556     0444  2C46               	goto	u5361
  2557     0445  2C47               	goto	u5360
  2558     0446                     u5361:
  2559     0446  2C4E               	goto	l4019
  2560     0447                     u5360:
  2561     0447                     l4017:
  2562                           
  2563                           ;Temperature_Controlled_Fan_System.c: 85:         motor_turn_right(&motor1);
  2564     0447  30CE               	movlw	(low (_motor1| 0))& (0+255)
  2565     0448  160A  118A  2531  120A  118A  	fcall	_motor_turn_right
  2566                           
  2567                           ;Temperature_Controlled_Fan_System.c: 86:     }
  2568     044D  2C70               	goto	l4025
  2569     044E                     l4019:
  2570     044E  3000               	movlw	0
  2571     044F  0264               	subwf	_Temp+1,w
  2572     0450  303C               	movlw	60
  2573     0451  1903               	skipnz
  2574     0452  0263               	subwf	_Temp,w
  2575     0453  1C03               	skipc
  2576     0454  2C56               	goto	u5371
  2577     0455  2C57               	goto	u5370
  2578     0456                     u5371:
  2579     0456  2C64               	goto	l4023
  2580     0457                     u5370:
  2581     0457                     l4021:
  2582                           
  2583                           ;Temperature_Controlled_Fan_System.c: 88:         motor_turn_right(&motor1);
  2584     0457  30CE               	movlw	(low (_motor1| 0))& (0+255)
  2585     0458  160A  118A  2531  120A  118A  	fcall	_motor_turn_right
  2586                           
  2587                           ;Temperature_Controlled_Fan_System.c: 89:         motor_turn_left(&motor2);
  2588     045D  30CC               	movlw	(low (_motor2| 0))& (0+255)
  2589     045E  160A  118A  2517  120A  118A  	fcall	_motor_turn_left
  2590                           
  2591                           ;Temperature_Controlled_Fan_System.c: 90:     }
  2592     0463  2C70               	goto	l4025
  2593     0464                     l4023:
  2594                           
  2595                           ;Temperature_Controlled_Fan_System.c: 92:         motor_turn_off(&motor1);
  2596     0464  30CE               	movlw	(low (_motor1| 0))& (0+255)
  2597     0465  160A  118A  24FE  120A  118A  	fcall	_motor_turn_off
  2598                           
  2599                           ;Temperature_Controlled_Fan_System.c: 93:         motor_turn_off(&motor2);
  2600     046A  30CC               	movlw	(low (_motor2| 0))& (0+255)
  2601     046B  160A  118A  24FE  120A  118A  	fcall	_motor_turn_off
  2602     0470                     l4025:
  2603                           
  2604                           ;Temperature_Controlled_Fan_System.c: 95:     if(Temp > Max_Temp){
  2605     0470  1283               	bcf	3,5	;RP0=0, select bank0
  2606     0471  1303               	bcf	3,6	;RP1=0, select bank0
  2607     0472  0864               	movf	_Temp+1,w
  2608     0473  026E               	subwf	_Max_Temp+1,w
  2609     0474  1D03               	skipz
  2610     0475  2C78               	goto	u5385
  2611     0476  0863               	movf	_Temp,w
  2612     0477  026D               	subwf	_Max_Temp,w
  2613     0478                     u5385:
  2614     0478  1803               	skipnc
  2615     0479  2C7B               	goto	u5381
  2616     047A  2C7C               	goto	u5380
  2617     047B                     u5381:
  2618     047B  2A81               	goto	l3939
  2619     047C                     u5380:
  2620     047C                     l4027:
  2621                           
  2622                           ;Temperature_Controlled_Fan_System.c: 96:         Max_Temp = Temp;
  2623     047C  0864               	movf	_Temp+1,w
  2624     047D  00EE               	movwf	_Max_Temp+1
  2625     047E  0863               	movf	_Temp,w
  2626     047F  00ED               	movwf	_Max_Temp
  2627     0480                     l4029:
  2628                           
  2629                           ;Temperature_Controlled_Fan_System.c: 97:         WRITE_DATA_EEPROM(0xFF,Max_Temp);
  2630     0480  30FF               	movlw	255
  2631     0481  00F0               	movwf	WRITE_DATA_EEPROM@add
  2632     0482  3000               	movlw	0
  2633     0483  00F1               	movwf	WRITE_DATA_EEPROM@add+1
  2634     0484  086D               	movf	_Max_Temp,w
  2635     0485  00F2               	movwf	WRITE_DATA_EEPROM@data
  2636     0486  160A  118A  25A7  120A  118A  	fcall	_WRITE_DATA_EEPROM
  2637     048B  2A81               	goto	l3939
  2638     048C  120A  118A  2800   	ljmp	start
  2639     048F                     __end_of_main:
  2640                           
  2641                           	psect	text1
  2642     1531                     __ptext1:	
  2643 ;; *************** function _motor_turn_right *****************
  2644 ;; Defined at:
  2645 ;;		line 19 in file "ECU_LAYER/Motor/ecu_motor_driver.c"
  2646 ;; Parameters:    Size  Location     Type
  2647 ;;  motor           1    wreg     PTR const struct .
  2648 ;;		 -> motor1(2), 
  2649 ;; Auto vars:     Size  Location     Type
  2650 ;;  motor           1    9[COMMON] PTR const struct .
  2651 ;;		 -> motor1(2), 
  2652 ;;  ret             1    8[COMMON] unsigned char 
  2653 ;; Return value:  Size  Location     Type
  2654 ;;                  1    wreg      unsigned char 
  2655 ;; Registers used:
  2656 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2657 ;; Tracked objects:
  2658 ;;		On entry : 0/0
  2659 ;;		On exit  : 0/0
  2660 ;;		Unchanged: 0/0
  2661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2662 ;;      Params:         0       0       0       0       0
  2663 ;;      Locals:         2       0       0       0       0
  2664 ;;      Temps:          0       0       0       0       0
  2665 ;;      Totals:         2       0       0       0       0
  2666 ;;Total ram usage:        2 bytes
  2667 ;; Hardware stack levels used: 1
  2668 ;; Hardware stack levels required when called: 1
  2669 ;; This function calls:
  2670 ;;		_gpio_pin_write_logic
  2671 ;; This function is called by:
  2672 ;;		_main
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675                           
  2676     1531                     _motor_turn_right:	
  2677                           ;psect for function _motor_turn_right
  2678                           
  2679                           
  2680                           ;incstack = 0
  2681                           ; Regs used in _motor_turn_right: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2682                           ;motor_turn_right@motor stored from wreg
  2683     1531  00F9               	movwf	motor_turn_right@motor
  2684     1532                     l3303:
  2685     1532                     l3305:
  2686                           
  2687                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 21:     if(motor == ((void*)0)){
  2688     1532  0879               	movf	motor_turn_right@motor,w
  2689     1533  1D03               	btfss	3,2
  2690     1534  2D36               	goto	u3961
  2691     1535  2D37               	goto	u3960
  2692     1536                     u3961:
  2693     1536  2D38               	goto	l3309
  2694     1537                     u3960:
  2695     1537                     l3307:
  2696                           
  2697                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 23:     }
  2698     1537  2D4A               	goto	l150
  2699     1538                     l3309:
  2700                           
  2701                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 25:         ret = gpio_pin_write_logic(&(motor->pin
      +                          s[0]),GPIO_HIGH);
  2702     1538  01F0               	clrf	gpio_pin_write_logic@logic
  2703     1539  0AF0               	incf	gpio_pin_write_logic@logic,f
  2704     153A  0879               	movf	motor_turn_right@motor,w
  2705     153B  120A  158A  2631  160A  118A  	fcall	_gpio_pin_write_logic
  2706     1540  00F8               	movwf	motor_turn_right@ret
  2707                           
  2708                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 26:         ret = gpio_pin_write_logic(&(motor->pin
      +                          s[1]),GPIO_LOW);
  2709     1541  01F0               	clrf	gpio_pin_write_logic@logic
  2710     1542  0879               	movf	motor_turn_right@motor,w
  2711     1543  3E01               	addlw	1
  2712     1544  120A  158A  2631  160A  118A  	fcall	_gpio_pin_write_logic
  2713     1549  00F8               	movwf	motor_turn_right@ret
  2714     154A                     l150:
  2715     154A  0008               	return
  2716     154B                     __end_of_motor_turn_right:
  2717                           
  2718                           	psect	text2
  2719     14FE                     __ptext2:	
  2720 ;; *************** function _motor_turn_off *****************
  2721 ;; Defined at:
  2722 ;;		line 41 in file "ECU_LAYER/Motor/ecu_motor_driver.c"
  2723 ;; Parameters:    Size  Location     Type
  2724 ;;  motor           1    wreg     PTR const struct .
  2725 ;;		 -> motor2(2), motor1(2), 
  2726 ;; Auto vars:     Size  Location     Type
  2727 ;;  motor           1    9[COMMON] PTR const struct .
  2728 ;;		 -> motor2(2), motor1(2), 
  2729 ;;  ret             1    8[COMMON] unsigned char 
  2730 ;; Return value:  Size  Location     Type
  2731 ;;                  1    wreg      unsigned char 
  2732 ;; Registers used:
  2733 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2734 ;; Tracked objects:
  2735 ;;		On entry : 0/0
  2736 ;;		On exit  : 0/0
  2737 ;;		Unchanged: 0/0
  2738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2739 ;;      Params:         0       0       0       0       0
  2740 ;;      Locals:         2       0       0       0       0
  2741 ;;      Temps:          0       0       0       0       0
  2742 ;;      Totals:         2       0       0       0       0
  2743 ;;Total ram usage:        2 bytes
  2744 ;; Hardware stack levels used: 1
  2745 ;; Hardware stack levels required when called: 1
  2746 ;; This function calls:
  2747 ;;		_gpio_pin_write_logic
  2748 ;; This function is called by:
  2749 ;;		_main
  2750 ;; This function uses a non-reentrant model
  2751 ;;
  2752                           
  2753     14FE                     _motor_turn_off:	
  2754                           ;psect for function _motor_turn_off
  2755                           
  2756                           
  2757                           ;incstack = 0
  2758                           ; Regs used in _motor_turn_off: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2759                           ;motor_turn_off@motor stored from wreg
  2760     14FE  00F9               	movwf	motor_turn_off@motor
  2761     14FF                     l3323:
  2762     14FF                     l3325:
  2763                           
  2764                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 43:     if(motor == ((void*)0)){
  2765     14FF  0879               	movf	motor_turn_off@motor,w
  2766     1500  1D03               	btfss	3,2
  2767     1501  2D03               	goto	u3981
  2768     1502  2D04               	goto	u3980
  2769     1503                     u3981:
  2770     1503  2D05               	goto	l3329
  2771     1504                     u3980:
  2772     1504                     l3327:
  2773                           
  2774                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 45:     }
  2775     1504  2D16               	goto	l160
  2776     1505                     l3329:
  2777                           
  2778                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 47:         ret = gpio_pin_write_logic(&(motor->pin
      +                          s[0]),GPIO_LOW);
  2779     1505  01F0               	clrf	gpio_pin_write_logic@logic
  2780     1506  0879               	movf	motor_turn_off@motor,w
  2781     1507  120A  158A  2631  160A  118A  	fcall	_gpio_pin_write_logic
  2782     150C  00F8               	movwf	motor_turn_off@ret
  2783                           
  2784                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 48:         ret = gpio_pin_write_logic(&(motor->pin
      +                          s[1]),GPIO_LOW);
  2785     150D  01F0               	clrf	gpio_pin_write_logic@logic
  2786     150E  0879               	movf	motor_turn_off@motor,w
  2787     150F  3E01               	addlw	1
  2788     1510  120A  158A  2631  160A  118A  	fcall	_gpio_pin_write_logic
  2789     1515  00F8               	movwf	motor_turn_off@ret
  2790     1516                     l160:
  2791     1516  0008               	return
  2792     1517                     __end_of_motor_turn_off:
  2793                           
  2794                           	psect	text3
  2795     1517                     __ptext3:	
  2796 ;; *************** function _motor_turn_left *****************
  2797 ;; Defined at:
  2798 ;;		line 30 in file "ECU_LAYER/Motor/ecu_motor_driver.c"
  2799 ;; Parameters:    Size  Location     Type
  2800 ;;  motor           1    wreg     PTR const struct .
  2801 ;;		 -> motor2(2), 
  2802 ;; Auto vars:     Size  Location     Type
  2803 ;;  motor           1    9[COMMON] PTR const struct .
  2804 ;;		 -> motor2(2), 
  2805 ;;  ret             1    8[COMMON] unsigned char 
  2806 ;; Return value:  Size  Location     Type
  2807 ;;                  1    wreg      unsigned char 
  2808 ;; Registers used:
  2809 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2810 ;; Tracked objects:
  2811 ;;		On entry : 0/0
  2812 ;;		On exit  : 0/0
  2813 ;;		Unchanged: 0/0
  2814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2815 ;;      Params:         0       0       0       0       0
  2816 ;;      Locals:         2       0       0       0       0
  2817 ;;      Temps:          0       0       0       0       0
  2818 ;;      Totals:         2       0       0       0       0
  2819 ;;Total ram usage:        2 bytes
  2820 ;; Hardware stack levels used: 1
  2821 ;; Hardware stack levels required when called: 1
  2822 ;; This function calls:
  2823 ;;		_gpio_pin_write_logic
  2824 ;; This function is called by:
  2825 ;;		_main
  2826 ;; This function uses a non-reentrant model
  2827 ;;
  2828                           
  2829     1517                     _motor_turn_left:	
  2830                           ;psect for function _motor_turn_left
  2831                           
  2832                           
  2833                           ;incstack = 0
  2834                           ; Regs used in _motor_turn_left: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2835                           ;motor_turn_left@motor stored from wreg
  2836     1517  00F9               	movwf	motor_turn_left@motor
  2837     1518                     l3313:
  2838     1518                     l3315:
  2839                           
  2840                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 32:     if(motor == ((void*)0)){
  2841     1518  0879               	movf	motor_turn_left@motor,w
  2842     1519  1D03               	btfss	3,2
  2843     151A  2D1C               	goto	u3971
  2844     151B  2D1D               	goto	u3970
  2845     151C                     u3971:
  2846     151C  2D1E               	goto	l3319
  2847     151D                     u3970:
  2848     151D                     l3317:
  2849                           
  2850                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 34:     }
  2851     151D  2D30               	goto	l155
  2852     151E                     l3319:
  2853                           
  2854                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 36:         ret = gpio_pin_write_logic(&(motor->pin
      +                          s[0]),GPIO_LOW);
  2855     151E  01F0               	clrf	gpio_pin_write_logic@logic
  2856     151F  0879               	movf	motor_turn_left@motor,w
  2857     1520  120A  158A  2631  160A  118A  	fcall	_gpio_pin_write_logic
  2858     1525  00F8               	movwf	motor_turn_left@ret
  2859                           
  2860                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 37:         ret = gpio_pin_write_logic(&(motor->pin
      +                          s[1]),GPIO_HIGH);
  2861     1526  01F0               	clrf	gpio_pin_write_logic@logic
  2862     1527  0AF0               	incf	gpio_pin_write_logic@logic,f
  2863     1528  0879               	movf	motor_turn_left@motor,w
  2864     1529  3E01               	addlw	1
  2865     152A  120A  158A  2631  160A  118A  	fcall	_gpio_pin_write_logic
  2866     152F  00F8               	movwf	motor_turn_left@ret
  2867     1530                     l155:
  2868     1530  0008               	return
  2869     1531                     __end_of_motor_turn_left:
  2870                           
  2871                           	psect	text4
  2872     160D                     __ptext4:	
  2873 ;; *************** function _lcd_4bits_send_string_pos *****************
  2874 ;; Defined at:
  2875 ;;		line 94 in file "ECU_LAYER/LCD/ecu_lcd.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;  lcd             1    wreg     PTR const struct .
  2878 ;;		 -> lcd(6), 
  2879 ;;  Row             1    6[BANK0 ] unsigned char 
  2880 ;;  coloumn         1    7[BANK0 ] unsigned char 
  2881 ;;  data            2    8[BANK0 ] PTR unsigned char 
  2882 ;;		 -> STR_8(15), STR_7(15), STR_6(11), lcd_show_max(6), 
  2883 ;;		 -> STR_4(15), lcd_show(6), 
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;  lcd             1   11[BANK0 ] PTR const struct .
  2886 ;;		 -> lcd(6), 
  2887 ;;  ret             1   10[BANK0 ] unsigned char 
  2888 ;; Return value:  Size  Location     Type
  2889 ;;                  1    wreg      unsigned char 
  2890 ;; Registers used:
  2891 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2892 ;; Tracked objects:
  2893 ;;		On entry : 0/0
  2894 ;;		On exit  : 0/0
  2895 ;;		Unchanged: 0/0
  2896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2897 ;;      Params:         0       4       0       0       0
  2898 ;;      Locals:         0       2       0       0       0
  2899 ;;      Temps:          0       0       0       0       0
  2900 ;;      Totals:         0       6       0       0       0
  2901 ;;Total ram usage:        6 bytes
  2902 ;; Hardware stack levels used: 1
  2903 ;; Hardware stack levels required when called: 4
  2904 ;; This function calls:
  2905 ;;		_lcd_4bits_send_string
  2906 ;;		_set_cursor
  2907 ;; This function is called by:
  2908 ;;		_main
  2909 ;; This function uses a non-reentrant model
  2910 ;;
  2911                           
  2912     160D                     _lcd_4bits_send_string_pos:	
  2913                           ;psect for function _lcd_4bits_send_string_pos
  2914                           
  2915                           
  2916                           ;incstack = 0
  2917                           ; Regs used in _lcd_4bits_send_string_pos: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+
      +                          cstack]
  2918                           ;lcd_4bits_send_string_pos@lcd stored from wreg
  2919     160D  1283               	bcf	3,5	;RP0=0, select bank0
  2920     160E  1303               	bcf	3,6	;RP1=0, select bank0
  2921     160F  00AB               	movwf	lcd_4bits_send_string_pos@lcd
  2922     1610                     l3277:
  2923     1610                     l3279:
  2924                           
  2925                           ;ECU_LAYER/LCD/ecu_lcd.c: 96:     if(lcd == ((void*)0)){
  2926     1610  082B               	movf	lcd_4bits_send_string_pos@lcd,w
  2927     1611  1D03               	btfss	3,2
  2928     1612  2E14               	goto	u3931
  2929     1613  2E15               	goto	u3930
  2930     1614                     u3931:
  2931     1614  2E16               	goto	l3283
  2932     1615                     u3930:
  2933     1615                     l3281:
  2934                           
  2935                           ;ECU_LAYER/LCD/ecu_lcd.c: 98:     }
  2936     1615  2E30               	goto	l85
  2937     1616                     l3283:
  2938                           
  2939                           ;ECU_LAYER/LCD/ecu_lcd.c: 100:         ret = set_cursor(lcd,Row,coloumn);
  2940     1616  0826               	movf	lcd_4bits_send_string_pos@Row,w
  2941     1617  00A2               	movwf	set_cursor@Row
  2942     1618  0827               	movf	lcd_4bits_send_string_pos@coloumn,w
  2943     1619  00A3               	movwf	set_cursor@coloumn
  2944     161A  082B               	movf	lcd_4bits_send_string_pos@lcd,w
  2945     161B  160A  118A  26AC  160A  118A  	fcall	_set_cursor
  2946     1620  1283               	bcf	3,5	;RP0=0, select bank0
  2947     1621  1303               	bcf	3,6	;RP1=0, select bank0
  2948     1622  00AA               	movwf	lcd_4bits_send_string_pos@ret
  2949                           
  2950                           ;ECU_LAYER/LCD/ecu_lcd.c: 101:         ret = lcd_4bits_send_string(lcd,data);
  2951     1623  0828               	movf	lcd_4bits_send_string_pos@data,w
  2952     1624  00A2               	movwf	lcd_4bits_send_string@data
  2953     1625  0829               	movf	lcd_4bits_send_string_pos@data+1,w
  2954     1626  00A3               	movwf	lcd_4bits_send_string@data+1
  2955     1627  082B               	movf	lcd_4bits_send_string_pos@lcd,w
  2956     1628  160A  118A  2741  160A  118A  	fcall	_lcd_4bits_send_string
  2957     162D  1283               	bcf	3,5	;RP0=0, select bank0
  2958     162E  1303               	bcf	3,6	;RP1=0, select bank0
  2959     162F  00AA               	movwf	lcd_4bits_send_string_pos@ret
  2960     1630                     l85:
  2961     1630  0008               	return
  2962     1631                     __end_of_lcd_4bits_send_string_pos:
  2963                           
  2964                           	psect	text5
  2965     16AC                     __ptext5:	
  2966 ;; *************** function _set_cursor *****************
  2967 ;; Defined at:
  2968 ;;		line 183 in file "ECU_LAYER/LCD/ecu_lcd.c"
  2969 ;; Parameters:    Size  Location     Type
  2970 ;;  lcd             1    wreg     PTR const struct .
  2971 ;;		 -> lcd(6), 
  2972 ;;  Row             1    2[BANK0 ] unsigned char 
  2973 ;;  coloumn         1    3[BANK0 ] unsigned char 
  2974 ;; Auto vars:     Size  Location     Type
  2975 ;;  lcd             1    5[BANK0 ] PTR const struct .
  2976 ;;		 -> lcd(6), 
  2977 ;;  ret             1    4[BANK0 ] unsigned char 
  2978 ;; Return value:  Size  Location     Type
  2979 ;;                  1    wreg      unsigned char 
  2980 ;; Registers used:
  2981 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2982 ;; Tracked objects:
  2983 ;;		On entry : 0/0
  2984 ;;		On exit  : 0/0
  2985 ;;		Unchanged: 0/0
  2986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2987 ;;      Params:         0       2       0       0       0
  2988 ;;      Locals:         0       2       0       0       0
  2989 ;;      Temps:          0       0       0       0       0
  2990 ;;      Totals:         0       4       0       0       0
  2991 ;;Total ram usage:        4 bytes
  2992 ;; Hardware stack levels used: 1
  2993 ;; Hardware stack levels required when called: 3
  2994 ;; This function calls:
  2995 ;;		_lcd_4bits_send_command
  2996 ;; This function is called by:
  2997 ;;		_lcd_4bits_send_string_pos
  2998 ;;		_lcd_4bits_send_char_pos
  2999 ;; This function uses a non-reentrant model
  3000 ;;
  3001                           
  3002     16AC                     _set_cursor:	
  3003                           ;psect for function _set_cursor
  3004                           
  3005                           
  3006                           ;incstack = 0
  3007                           ; Regs used in _set_cursor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3008                           ;set_cursor@lcd stored from wreg
  3009     16AC  1283               	bcf	3,5	;RP0=0, select bank0
  3010     16AD  1303               	bcf	3,6	;RP1=0, select bank0
  3011     16AE  00A5               	movwf	set_cursor@lcd
  3012     16AF                     l3105:
  3013                           
  3014                           ;ECU_LAYER/LCD/ecu_lcd.c: 184:     uint8 ret = 0x00;
  3015     16AF  01A4               	clrf	set_cursor@ret
  3016     16B0                     l3107:
  3017                           
  3018                           ;ECU_LAYER/LCD/ecu_lcd.c: 185:     if(lcd == ((void*)0)){
  3019     16B0  0825               	movf	set_cursor@lcd,w
  3020     16B1  1D03               	btfss	3,2
  3021     16B2  2EB4               	goto	u3721
  3022     16B3  2EB5               	goto	u3720
  3023     16B4                     u3721:
  3024     16B4  2ED2               	goto	l3117
  3025     16B5                     u3720:
  3026     16B5                     l3109:
  3027                           
  3028                           ;ECU_LAYER/LCD/ecu_lcd.c: 186:         ret = 0x01;
  3029     16B5  01A4               	clrf	set_cursor@ret
  3030     16B6  0AA4               	incf	set_cursor@ret,f
  3031                           
  3032                           ;ECU_LAYER/LCD/ecu_lcd.c: 187:     }
  3033     16B7  2EDA               	goto	l3119
  3034     16B8                     l3111:
  3035                           
  3036                           ;ECU_LAYER/LCD/ecu_lcd.c: 191:                 ret = lcd_4bits_send_command(lcd,(0x80 + 
      +                          coloumn));
  3037     16B8  0823               	movf	set_cursor@coloumn,w
  3038     16B9  3E80               	addlw	128
  3039     16BA  00FC               	movwf	lcd_4bits_send_command@command
  3040     16BB  0825               	movf	set_cursor@lcd,w
  3041     16BC  120A  158A  205D  160A  118A  	fcall	_lcd_4bits_send_command
  3042     16C1  1283               	bcf	3,5	;RP0=0, select bank0
  3043     16C2  1303               	bcf	3,6	;RP1=0, select bank0
  3044     16C3  00A4               	movwf	set_cursor@ret
  3045                           
  3046                           ;ECU_LAYER/LCD/ecu_lcd.c: 192:                 break;
  3047     16C4  2EDA               	goto	l3119
  3048     16C5                     l3113:
  3049                           
  3050                           ;ECU_LAYER/LCD/ecu_lcd.c: 194:                 ret = lcd_4bits_send_command(lcd,(0xC0 + 
      +                          coloumn));
  3051     16C5  0823               	movf	set_cursor@coloumn,w
  3052     16C6  3EC0               	addlw	192
  3053     16C7  00FC               	movwf	lcd_4bits_send_command@command
  3054     16C8  0825               	movf	set_cursor@lcd,w
  3055     16C9  120A  158A  205D  160A  118A  	fcall	_lcd_4bits_send_command
  3056     16CE  1283               	bcf	3,5	;RP0=0, select bank0
  3057     16CF  1303               	bcf	3,6	;RP1=0, select bank0
  3058     16D0  00A4               	movwf	set_cursor@ret
  3059                           
  3060                           ;ECU_LAYER/LCD/ecu_lcd.c: 195:                 break;
  3061     16D1  2EDA               	goto	l3119
  3062     16D2                     l3117:
  3063     16D2  0822               	movf	set_cursor@Row,w
  3064                           
  3065                           ; Switch size 1, requested type "simple"
  3066                           ; Number of cases is 2, Range of values is 1 to 2
  3067                           ; switch strategies available:
  3068                           ; Name         Instructions Cycles
  3069                           ; simple_byte            7     4 (average)
  3070                           ; direct_byte           17    11 (fixed)
  3071                           ; jumptable            263     9 (fixed)
  3072                           ;	Chosen strategy is simple_byte
  3073     16D3  3A01               	xorlw	1	; case 1
  3074     16D4  1903               	skipnz
  3075     16D5  2EB8               	goto	l3111
  3076     16D6  3A03               	xorlw	3	; case 2
  3077     16D7  1903               	skipnz
  3078     16D8  2EC5               	goto	l3113
  3079     16D9  2EDA               	goto	l3119
  3080     16DA                     l3119:
  3081                           
  3082                           ;ECU_LAYER/LCD/ecu_lcd.c: 200:     return ret;
  3083     16DA  0824               	movf	set_cursor@ret,w
  3084     16DB                     l136:
  3085     16DB  0008               	return
  3086     16DC                     __end_of_set_cursor:
  3087                           
  3088                           	psect	text6
  3089     1741                     __ptext6:	
  3090 ;; *************** function _lcd_4bits_send_string *****************
  3091 ;; Defined at:
  3092 ;;		line 82 in file "ECU_LAYER/LCD/ecu_lcd.c"
  3093 ;; Parameters:    Size  Location     Type
  3094 ;;  lcd             1    wreg     PTR const struct .
  3095 ;;		 -> lcd(6), 
  3096 ;;  data            2    2[BANK0 ] PTR unsigned char 
  3097 ;;		 -> STR_8(15), STR_7(15), STR_6(11), lcd_show_max(6), 
  3098 ;;		 -> STR_5(17), STR_4(15), lcd_show(6), 
  3099 ;; Auto vars:     Size  Location     Type
  3100 ;;  lcd             1    5[BANK0 ] PTR const struct .
  3101 ;;		 -> lcd(6), 
  3102 ;;  ret             1    4[BANK0 ] unsigned char 
  3103 ;; Return value:  Size  Location     Type
  3104 ;;                  1    wreg      unsigned char 
  3105 ;; Registers used:
  3106 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3107 ;; Tracked objects:
  3108 ;;		On entry : 0/0
  3109 ;;		On exit  : 0/0
  3110 ;;		Unchanged: 0/0
  3111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3112 ;;      Params:         0       2       0       0       0
  3113 ;;      Locals:         0       2       0       0       0
  3114 ;;      Temps:          0       0       0       0       0
  3115 ;;      Totals:         0       4       0       0       0
  3116 ;;Total ram usage:        4 bytes
  3117 ;; Hardware stack levels used: 1
  3118 ;; Hardware stack levels required when called: 3
  3119 ;; This function calls:
  3120 ;;		_lcd_4bits_send_char
  3121 ;; This function is called by:
  3122 ;;		_lcd_4bits_send_string_pos
  3123 ;;		_main
  3124 ;; This function uses a non-reentrant model
  3125 ;;
  3126                           
  3127     1741                     _lcd_4bits_send_string:	
  3128                           ;psect for function _lcd_4bits_send_string
  3129                           
  3130                           
  3131                           ;incstack = 0
  3132                           ; Regs used in _lcd_4bits_send_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  3133                           ;lcd_4bits_send_string@lcd stored from wreg
  3134     1741  1283               	bcf	3,5	;RP0=0, select bank0
  3135     1742  1303               	bcf	3,6	;RP1=0, select bank0
  3136     1743  00A5               	movwf	lcd_4bits_send_string@lcd
  3137     1744                     l3123:
  3138                           
  3139                           ;ECU_LAYER/LCD/ecu_lcd.c: 83:     uint8 ret = 0x00;
  3140     1744  01A4               	clrf	lcd_4bits_send_string@ret
  3141     1745                     l3125:
  3142                           
  3143                           ;ECU_LAYER/LCD/ecu_lcd.c: 84:     if(lcd == ((void*)0)){
  3144     1745  0825               	movf	lcd_4bits_send_string@lcd,w
  3145     1746  1D03               	btfss	3,2
  3146     1747  2F49               	goto	u3731
  3147     1748  2F4A               	goto	u3730
  3148     1749                     u3731:
  3149     1749  2F66               	goto	l3133
  3150     174A                     u3730:
  3151     174A                     l3127:
  3152                           
  3153                           ;ECU_LAYER/LCD/ecu_lcd.c: 85:         ret = 0x01;
  3154     174A  01A4               	clrf	lcd_4bits_send_string@ret
  3155     174B  0AA4               	incf	lcd_4bits_send_string@ret,f
  3156                           
  3157                           ;ECU_LAYER/LCD/ecu_lcd.c: 86:     }
  3158     174C  2F74               	goto	l3135
  3159     174D                     l3129:
  3160                           
  3161                           ;ECU_LAYER/LCD/ecu_lcd.c: 89:             ret = lcd_4bits_send_char(lcd,*data++);
  3162     174D  0823               	movf	lcd_4bits_send_string@data+1,w
  3163     174E  00FF               	movwf	btemp+1
  3164     174F  0822               	movf	lcd_4bits_send_string@data,w
  3165     1750  0084               	movwf	4
  3166     1751  120A  158A  2000  160A  118A  	fcall	stringtab
  3167     1756  00FC               	movwf	lcd_4bits_send_char@data
  3168     1757  0825               	movf	lcd_4bits_send_string@lcd,w
  3169     1758  160A  118A  27B8  160A  118A  	fcall	_lcd_4bits_send_char
  3170     175D  1283               	bcf	3,5	;RP0=0, select bank0
  3171     175E  1303               	bcf	3,6	;RP1=0, select bank0
  3172     175F  00A4               	movwf	lcd_4bits_send_string@ret
  3173     1760                     l3131:
  3174     1760  3001               	movlw	1
  3175     1761  07A2               	addwf	lcd_4bits_send_string@data,f
  3176     1762  1803               	skipnc
  3177     1763  0AA3               	incf	lcd_4bits_send_string@data+1,f
  3178     1764  3000               	movlw	0
  3179     1765  07A3               	addwf	lcd_4bits_send_string@data+1,f
  3180     1766                     l3133:
  3181                           
  3182                           ;ECU_LAYER/LCD/ecu_lcd.c: 88:         while(*data){
  3183     1766  0823               	movf	lcd_4bits_send_string@data+1,w
  3184     1767  00FF               	movwf	btemp+1
  3185     1768  0822               	movf	lcd_4bits_send_string@data,w
  3186     1769  0084               	movwf	4
  3187     176A  120A  158A  2000  160A  118A  	fcall	stringtab
  3188     176F  3A00               	xorlw	0
  3189     1770  1D03               	skipz
  3190     1771  2F73               	goto	u3741
  3191     1772  2F74               	goto	u3740
  3192     1773                     u3741:
  3193     1773  2F4D               	goto	l3129
  3194     1774                     u3740:
  3195     1774                     l3135:
  3196                           
  3197                           ;ECU_LAYER/LCD/ecu_lcd.c: 92:     return ret;
  3198     1774  0824               	movf	lcd_4bits_send_string@ret,w
  3199     1775                     l80:
  3200     1775  0008               	return
  3201     1776                     __end_of_lcd_4bits_send_string:
  3202                           
  3203                           	psect	text7
  3204     17B8                     __ptext7:	
  3205 ;; *************** function _lcd_4bits_send_char *****************
  3206 ;; Defined at:
  3207 ;;		line 57 in file "ECU_LAYER/LCD/ecu_lcd.c"
  3208 ;; Parameters:    Size  Location     Type
  3209 ;;  lcd             1    wreg     PTR const struct .
  3210 ;;		 -> lcd(6), 
  3211 ;;  data            1   12[COMMON] unsigned char 
  3212 ;; Auto vars:     Size  Location     Type
  3213 ;;  lcd             1    1[BANK0 ] PTR const struct .
  3214 ;;		 -> lcd(6), 
  3215 ;;  ret             1    0[BANK0 ] unsigned char 
  3216 ;; Return value:  Size  Location     Type
  3217 ;;                  1    wreg      unsigned char 
  3218 ;; Registers used:
  3219 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3220 ;; Tracked objects:
  3221 ;;		On entry : 0/0
  3222 ;;		On exit  : 0/0
  3223 ;;		Unchanged: 0/0
  3224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3225 ;;      Params:         1       0       0       0       0
  3226 ;;      Locals:         0       2       0       0       0
  3227 ;;      Temps:          1       0       0       0       0
  3228 ;;      Totals:         2       2       0       0       0
  3229 ;;Total ram usage:        4 bytes
  3230 ;; Hardware stack levels used: 1
  3231 ;; Hardware stack levels required when called: 2
  3232 ;; This function calls:
  3233 ;;		_gpio_pin_write_logic
  3234 ;;		_send_4bits
  3235 ;;		_send_enable_signal
  3236 ;; This function is called by:
  3237 ;;		_lcd_4bits_send_string
  3238 ;;		_lcd_4bits_send_char_pos
  3239 ;;		_lcd_4bit_custom_character
  3240 ;; This function uses a non-reentrant model
  3241 ;;
  3242                           
  3243     17B8                     _lcd_4bits_send_char:	
  3244                           ;psect for function _lcd_4bits_send_char
  3245                           
  3246                           
  3247                           ;incstack = 0
  3248                           ; Regs used in _lcd_4bits_send_char: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  3249                           ;lcd_4bits_send_char@lcd stored from wreg
  3250     17B8  1283               	bcf	3,5	;RP0=0, select bank0
  3251     17B9  1303               	bcf	3,6	;RP1=0, select bank0
  3252     17BA  00A1               	movwf	lcd_4bits_send_char@lcd
  3253     17BB                     l3023:
  3254     17BB                     l3025:
  3255                           
  3256                           ;ECU_LAYER/LCD/ecu_lcd.c: 59:     if(lcd == ((void*)0)){
  3257     17BB  0821               	movf	lcd_4bits_send_char@lcd,w
  3258     17BC  1D03               	btfss	3,2
  3259     17BD  2FBF               	goto	u3541
  3260     17BE  2FC0               	goto	u3540
  3261     17BF                     u3541:
  3262     17BF  2FC3               	goto	l3029
  3263     17C0                     u3540:
  3264     17C0                     l3027:
  3265                           
  3266                           ;ECU_LAYER/LCD/ecu_lcd.c: 60:         ret = 0x01;
  3267     17C0  01A0               	clrf	lcd_4bits_send_char@ret
  3268     17C1  0AA0               	incf	lcd_4bits_send_char@ret,f
  3269                           
  3270                           ;ECU_LAYER/LCD/ecu_lcd.c: 61:     }
  3271     17C2  2FFE               	goto	l3031
  3272     17C3                     l3029:
  3273                           
  3274                           ;ECU_LAYER/LCD/ecu_lcd.c: 63:         ret = gpio_pin_write_logic(&(lcd->rs),GPIO_HIGH);
  3275     17C3  01F0               	clrf	gpio_pin_write_logic@logic
  3276     17C4  0AF0               	incf	gpio_pin_write_logic@logic,f
  3277     17C5  0821               	movf	lcd_4bits_send_char@lcd,w
  3278     17C6  120A  158A  2631  160A  118A  	fcall	_gpio_pin_write_logic
  3279     17CB  1283               	bcf	3,5	;RP0=0, select bank0
  3280     17CC  1303               	bcf	3,6	;RP1=0, select bank0
  3281     17CD  00A0               	movwf	lcd_4bits_send_char@ret
  3282                           
  3283                           ;ECU_LAYER/LCD/ecu_lcd.c: 64:         ret = send_4bits(lcd,(data >> 4));
  3284     17CE  087C               	movf	lcd_4bits_send_char@data,w
  3285     17CF  00FD               	movwf	??_lcd_4bits_send_char
  3286     17D0  3004               	movlw	4
  3287     17D1                     u3555:
  3288     17D1  1003               	clrc
  3289     17D2  0CFD               	rrf	??_lcd_4bits_send_char,f
  3290     17D3  3EFF               	addlw	-1
  3291     17D4  1D03               	skipz
  3292     17D5  2FD1               	goto	u3555
  3293     17D6  087D               	movf	??_lcd_4bits_send_char,w
  3294     17D7  00F8               	movwf	send_4bits@command
  3295     17D8  0821               	movf	lcd_4bits_send_char@lcd,w
  3296     17D9  120A  158A  20EE  160A  118A  	fcall	_send_4bits
  3297     17DE  1283               	bcf	3,5	;RP0=0, select bank0
  3298     17DF  1303               	bcf	3,6	;RP1=0, select bank0
  3299     17E0  00A0               	movwf	lcd_4bits_send_char@ret
  3300                           
  3301                           ;ECU_LAYER/LCD/ecu_lcd.c: 65:          ret = send_enable_signal(lcd);
  3302     17E1  0821               	movf	lcd_4bits_send_char@lcd,w
  3303     17E2  160A  118A  25C8  160A  118A  	fcall	_send_enable_signal
  3304     17E7  1283               	bcf	3,5	;RP0=0, select bank0
  3305     17E8  1303               	bcf	3,6	;RP1=0, select bank0
  3306     17E9  00A0               	movwf	lcd_4bits_send_char@ret
  3307                           
  3308                           ;ECU_LAYER/LCD/ecu_lcd.c: 66:         ret = send_4bits(lcd,data);
  3309     17EA  087C               	movf	lcd_4bits_send_char@data,w
  3310     17EB  00F8               	movwf	send_4bits@command
  3311     17EC  0821               	movf	lcd_4bits_send_char@lcd,w
  3312     17ED  120A  158A  20EE  160A  118A  	fcall	_send_4bits
  3313     17F2  1283               	bcf	3,5	;RP0=0, select bank0
  3314     17F3  1303               	bcf	3,6	;RP1=0, select bank0
  3315     17F4  00A0               	movwf	lcd_4bits_send_char@ret
  3316                           
  3317                           ;ECU_LAYER/LCD/ecu_lcd.c: 67:         ret = send_enable_signal(lcd);
  3318     17F5  0821               	movf	lcd_4bits_send_char@lcd,w
  3319     17F6  160A  118A  25C8  160A  118A  	fcall	_send_enable_signal
  3320     17FB  1283               	bcf	3,5	;RP0=0, select bank0
  3321     17FC  1303               	bcf	3,6	;RP1=0, select bank0
  3322     17FD  00A0               	movwf	lcd_4bits_send_char@ret
  3323     17FE                     l3031:
  3324                           
  3325                           ;ECU_LAYER/LCD/ecu_lcd.c: 69:     return ret;
  3326     17FE  0820               	movf	lcd_4bits_send_char@ret,w
  3327     17FF                     l67:
  3328     17FF  0008               	return
  3329     1800                     __end_of_lcd_4bits_send_char:
  3330                           
  3331                           	psect	text8
  3332     0A4E                     __ptext8:	
  3333 ;; *************** function _keypad_read_value *****************
  3334 ;; Defined at:
  3335 ;;		line 35 in file "ECU_LAYER/KEYPAD/ecu_keypad.c"
  3336 ;; Parameters:    Size  Location     Type
  3337 ;;  keypad          1    wreg     PTR const struct .
  3338 ;;		 -> keypad(7), 
  3339 ;;  value           1    8[COMMON] PTR unsigned char 
  3340 ;;		 -> temp(4), val(1), 
  3341 ;; Auto vars:     Size  Location     Type
  3342 ;;  keypad          1    2[BANK0 ] PTR const struct .
  3343 ;;		 -> keypad(7), 
  3344 ;;  l_coloumns      1    4[BANK0 ] unsigned char 
  3345 ;;  l_rows          1    3[BANK0 ] unsigned char 
  3346 ;;  counter         1    1[BANK0 ] unsigned char 
  3347 ;;  val             1    0[BANK0 ] unsigned char 
  3348 ;;  ret             1    0        unsigned char 
  3349 ;; Return value:  Size  Location     Type
  3350 ;;                  1    wreg      unsigned char 
  3351 ;; Registers used:
  3352 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3353 ;; Tracked objects:
  3354 ;;		On entry : 0/0
  3355 ;;		On exit  : 0/0
  3356 ;;		Unchanged: 0/0
  3357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3358 ;;      Params:         1       0       0       0       0
  3359 ;;      Locals:         0       5       0       0       0
  3360 ;;      Temps:          2       0       0       0       0
  3361 ;;      Totals:         3       5       0       0       0
  3362 ;;Total ram usage:        8 bytes
  3363 ;; Hardware stack levels used: 1
  3364 ;; Hardware stack levels required when called: 1
  3365 ;; This function calls:
  3366 ;;		___bmul
  3367 ;;		_gpio_pin_read_logic
  3368 ;;		_gpio_pin_write_logic
  3369 ;; This function is called by:
  3370 ;;		_main
  3371 ;; This function uses a non-reentrant model
  3372 ;;
  3373                           
  3374     0A4E                     _keypad_read_value:	
  3375                           ;psect for function _keypad_read_value
  3376                           
  3377                           
  3378                           ;incstack = 0
  3379                           ; Regs used in _keypad_read_value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3380                           ;keypad_read_value@keypad stored from wreg
  3381     0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  3382     0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  3383     0A50  00A2               	movwf	keypad_read_value@keypad
  3384     0A51                     l3217:
  3385                           
  3386                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 37:     uint8 l_rows = 0x00;
  3387     0A51  01A3               	clrf	keypad_read_value@l_rows
  3388                           
  3389                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 38:     uint8 l_coloumns = 0x00;
  3390     0A52  01A4               	clrf	keypad_read_value@l_coloumns
  3391                           
  3392                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 39:     uint8 counter = 0x00;
  3393     0A53  01A1               	clrf	keypad_read_value@counter
  3394                           
  3395                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 40:     uint8 val = 0x00;
  3396     0A54  01A0               	clrf	keypad_read_value@val
  3397     0A55                     l3219:
  3398                           
  3399                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 41:     if(keypad == ((void*)0)){
  3400     0A55  0822               	movf	keypad_read_value@keypad,w
  3401     0A56  1D03               	btfss	3,2
  3402     0A57  2A59               	goto	u3871
  3403     0A58  2A5A               	goto	u3870
  3404     0A59                     u3871:
  3405     0A59  2A5B               	goto	l3223
  3406     0A5A                     u3870:
  3407     0A5A                     l3221:
  3408                           
  3409                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 43:     }
  3410     0A5A  2AC3               	goto	l32
  3411     0A5B                     l3223:
  3412                           
  3413                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 45:         for(l_rows = 0x00;l_rows < 4;l_rows++){
  3414     0A5B  01A3               	clrf	keypad_read_value@l_rows
  3415     0A5C                     l3229:
  3416                           
  3417                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 46:             for(counter = 0x00;counter < 4;counter++
      +                          ){
  3418     0A5C  01A1               	clrf	keypad_read_value@counter
  3419     0A5D                     l3235:
  3420     0A5D  01F0               	clrf	gpio_pin_write_logic@logic
  3421     0A5E  0821               	movf	keypad_read_value@counter,w
  3422     0A5F  0722               	addwf	keypad_read_value@keypad,w
  3423     0A60  120A  158A  2631  120A  158A  	fcall	_gpio_pin_write_logic
  3424     0A65                     l3237:
  3425                           
  3426                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 48:             }
  3427     0A65  3001               	movlw	1
  3428     0A66  00FF               	movwf	btemp+1
  3429     0A67  087F               	movf	btemp+1,w
  3430     0A68  1283               	bcf	3,5	;RP0=0, select bank0
  3431     0A69  1303               	bcf	3,6	;RP1=0, select bank0
  3432     0A6A  07A1               	addwf	keypad_read_value@counter,f
  3433     0A6B                     l3239:
  3434     0A6B  3004               	movlw	4
  3435     0A6C  0221               	subwf	keypad_read_value@counter,w
  3436     0A6D  1C03               	skipc
  3437     0A6E  2A70               	goto	u3881
  3438     0A6F  2A71               	goto	u3880
  3439     0A70                     u3881:
  3440     0A70  2A5D               	goto	l3235
  3441     0A71                     u3880:
  3442     0A71                     l3241:
  3443     0A71  01F0               	clrf	gpio_pin_write_logic@logic
  3444     0A72  0AF0               	incf	gpio_pin_write_logic@logic,f
  3445     0A73  0823               	movf	keypad_read_value@l_rows,w
  3446     0A74  0722               	addwf	keypad_read_value@keypad,w
  3447     0A75  120A  158A  2631  120A  158A  	fcall	_gpio_pin_write_logic
  3448     0A7A                     l3243:
  3449                           
  3450                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 50:             _delay((unsigned long)((10)*(8000000UL/4
      +                          000.0)));
  3451     0A7A  301A               	movlw	26
  3452     0A7B  00FA               	movwf	??_keypad_read_value+1
  3453     0A7C  30F8               	movlw	248
  3454     0A7D  00F9               	movwf	??_keypad_read_value
  3455     0A7E                     u5447:
  3456     0A7E  0BF9               	decfsz	??_keypad_read_value,f
  3457     0A7F  2A7E               	goto	u5447
  3458     0A80  0BFA               	decfsz	??_keypad_read_value+1,f
  3459     0A81  2A7E               	goto	u5447
  3460     0A82  0000               	nop
  3461     0A83                     l3245:
  3462                           
  3463                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 51:             for(l_coloumns = 0x00;l_coloumns < 3;l_c
      +                          oloumns++){
  3464     0A83  1283               	bcf	3,5	;RP0=0, select bank0
  3465     0A84  1303               	bcf	3,6	;RP1=0, select bank0
  3466     0A85  01A4               	clrf	keypad_read_value@l_coloumns
  3467     0A86                     l3251:
  3468     0A86  3020               	movlw	(low (keypad_read_value@val| 0))& (0+255)
  3469     0A87  00F0               	movwf	gpio_pin_read_logic@logic
  3470     0A88  0824               	movf	keypad_read_value@l_coloumns,w
  3471     0A89  0722               	addwf	keypad_read_value@keypad,w
  3472     0A8A  3E04               	addlw	4
  3473     0A8B  120A  158A  233C  120A  158A  	fcall	_gpio_pin_read_logic
  3474     0A90                     l3253:
  3475                           
  3476                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 53:                 if(val == GPIO_HIGH){
  3477     0A90  1283               	bcf	3,5	;RP0=0, select bank0
  3478     0A91  1303               	bcf	3,6	;RP1=0, select bank0
  3479     0A92  0320               	decf	keypad_read_value@val,w
  3480     0A93  1D03               	btfss	3,2
  3481     0A94  2A96               	goto	u3891
  3482     0A95  2A97               	goto	u3890
  3483     0A96                     u3891:
  3484     0A96  2AAF               	goto	l3257
  3485     0A97                     u3890:
  3486     0A97                     l3255:
  3487                           
  3488                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 54:                     *value = btn_values[l_rows][l_co
      +                          loumns];
  3489     0A97  3003               	movlw	3
  3490     0A98  00F0               	movwf	___bmul@multiplicand
  3491     0A99  0823               	movf	keypad_read_value@l_rows,w
  3492     0A9A  160A  118A  24B9  120A  158A  	fcall	___bmul
  3493     0A9F  3E01               	addlw	low ((_btn_values-__stringbase)| (0+32768))
  3494     0AA0  1283               	bcf	3,5	;RP0=0, select bank0
  3495     0AA1  1303               	bcf	3,6	;RP1=0, select bank0
  3496     0AA2  0724               	addwf	keypad_read_value@l_coloumns,w
  3497     0AA3  0084               	movwf	4
  3498     0AA4  120A  158A  200A  120A  158A  	fcall	stringdir
  3499     0AA9  00FF               	movwf	btemp+1
  3500     0AAA  0878               	movf	keypad_read_value@value,w
  3501     0AAB  0084               	movwf	4
  3502     0AAC  087F               	movf	btemp+1,w
  3503     0AAD  1383               	bcf	3,7	;select IRP bank0
  3504     0AAE  0080               	movwf	0
  3505     0AAF                     l3257:	
  3506                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 55:                 }
  3507                           
  3508                           
  3509                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 57:             }
  3510     0AAF  3001               	movlw	1
  3511     0AB0  00FF               	movwf	btemp+1
  3512     0AB1  087F               	movf	btemp+1,w
  3513     0AB2  07A4               	addwf	keypad_read_value@l_coloumns,f
  3514     0AB3                     l3259:
  3515     0AB3  3003               	movlw	3
  3516     0AB4  0224               	subwf	keypad_read_value@l_coloumns,w
  3517     0AB5  1C03               	skipc
  3518     0AB6  2AB8               	goto	u3901
  3519     0AB7  2AB9               	goto	u3900
  3520     0AB8                     u3901:
  3521     0AB8  2A86               	goto	l3251
  3522     0AB9                     u3900:
  3523     0AB9                     l3261:
  3524                           
  3525                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 58:         }
  3526     0AB9  3001               	movlw	1
  3527     0ABA  00FF               	movwf	btemp+1
  3528     0ABB  087F               	movf	btemp+1,w
  3529     0ABC  07A3               	addwf	keypad_read_value@l_rows,f
  3530     0ABD                     l3263:
  3531     0ABD  3004               	movlw	4
  3532     0ABE  0223               	subwf	keypad_read_value@l_rows,w
  3533     0ABF  1C03               	skipc
  3534     0AC0  2AC2               	goto	u3911
  3535     0AC1  2AC3               	goto	u3910
  3536     0AC2                     u3911:
  3537     0AC2  2A5C               	goto	l3229
  3538     0AC3                     u3910:
  3539     0AC3                     l32:
  3540     0AC3  0008               	return
  3541     0AC4                     __end_of_keypad_read_value:
  3542                           
  3543                           	psect	text9
  3544     0B3C                     __ptext9:	
  3545 ;; *************** function _gpio_pin_read_logic *****************
  3546 ;; Defined at:
  3547 ;;		line 73 in file "MCAL_LAYER/GPIO/mcal_gpio.c"
  3548 ;; Parameters:    Size  Location     Type
  3549 ;;  pin             1    wreg     PTR const struct .
  3550 ;;		 -> keypad$COLOUMNS_PIN(3), keypad(7), 
  3551 ;;  logic           1    0[COMMON] PTR enum E1519
  3552 ;;		 -> keypad_read_value@val(1), 
  3553 ;; Auto vars:     Size  Location     Type
  3554 ;;  pin             1    7[COMMON] PTR const struct .
  3555 ;;		 -> keypad$COLOUMNS_PIN(3), keypad(7), 
  3556 ;;  ret             1    6[COMMON] unsigned char 
  3557 ;; Return value:  Size  Location     Type
  3558 ;;                  1    wreg      unsigned char 
  3559 ;; Registers used:
  3560 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3561 ;; Tracked objects:
  3562 ;;		On entry : 0/0
  3563 ;;		On exit  : 0/0
  3564 ;;		Unchanged: 0/0
  3565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3566 ;;      Params:         1       0       0       0       0
  3567 ;;      Locals:         2       0       0       0       0
  3568 ;;      Temps:          5       0       0       0       0
  3569 ;;      Totals:         8       0       0       0       0
  3570 ;;Total ram usage:        8 bytes
  3571 ;; Hardware stack levels used: 1
  3572 ;; This function calls:
  3573 ;;		Nothing
  3574 ;; This function is called by:
  3575 ;;		_keypad_read_value
  3576 ;; This function uses a non-reentrant model
  3577 ;;
  3578                           
  3579     0B3C                     _gpio_pin_read_logic:	
  3580                           ;psect for function _gpio_pin_read_logic
  3581                           
  3582                           
  3583                           ;incstack = 0
  3584                           ; Regs used in _gpio_pin_read_logic: [wreg-fsr0h+status,2+status,0+btemp+1]
  3585                           ;gpio_pin_read_logic@pin stored from wreg
  3586     0B3C  00F7               	movwf	gpio_pin_read_logic@pin
  3587     0B3D                     l3073:
  3588                           
  3589                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 74:     uint8 ret = 0x00;
  3590     0B3D  01F6               	clrf	gpio_pin_read_logic@ret
  3591     0B3E                     l3075:
  3592                           
  3593                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 75:     if (pin == ((void*)0) || logic == ((void*)0)) {
  3594     0B3E  0877               	movf	gpio_pin_read_logic@pin,w
  3595     0B3F  1903               	btfsc	3,2
  3596     0B40  2B42               	goto	u3591
  3597     0B41  2B43               	goto	u3590
  3598     0B42                     u3591:
  3599     0B42  2B48               	goto	l343
  3600     0B43                     u3590:
  3601     0B43                     l3077:
  3602     0B43  0870               	movf	gpio_pin_read_logic@logic,w
  3603     0B44  1D03               	btfss	3,2
  3604     0B45  2B47               	goto	u3601
  3605     0B46  2B48               	goto	u3600
  3606     0B47                     u3601:
  3607     0B47  2B4B               	goto	l3079
  3608     0B48                     u3600:
  3609     0B48                     l343:
  3610                           
  3611                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 76:         ret = 0x01;
  3612     0B48  01F6               	clrf	gpio_pin_read_logic@ret
  3613     0B49  0AF6               	incf	gpio_pin_read_logic@ret,f
  3614                           
  3615                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 77:     } else {
  3616     0B4A  2BE9               	goto	l3101
  3617     0B4B                     l3079:
  3618                           
  3619                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 78:         if ((pin->port == PORTA_INDEX && pin->pin < 6)
      +                           || (pin->port == PORTB_INDEX && pin->pin < 8) || (pin->port == PORTC_INDEX && pin->pin 
      +                          < 8) ||
  3620     0B4B  0877               	movf	gpio_pin_read_logic@pin,w
  3621     0B4C  0084               	movwf	4
  3622     0B4D  1383               	bcf	3,7	;select IRP bank0
  3623     0B4E  0800               	movf	0,w
  3624     0B4F  3907               	andlw	7
  3625     0B50  3A00               	xorlw	0
  3626     0B51  1D03               	skipz
  3627     0B52  2B54               	goto	u3611
  3628     0B53  2B55               	goto	u3610
  3629     0B54                     u3611:
  3630     0B54  2B63               	goto	l3083
  3631     0B55                     u3610:
  3632     0B55                     l3081:
  3633     0B55  0877               	movf	gpio_pin_read_logic@pin,w
  3634     0B56  0084               	movwf	4
  3635     0B57  0C00               	rrf	0,w
  3636     0B58  00F1               	movwf	??_gpio_pin_read_logic
  3637     0B59  0CF1               	rrf	??_gpio_pin_read_logic,f
  3638     0B5A  0C71               	rrf	??_gpio_pin_read_logic,w
  3639     0B5B  3907               	andlw	7
  3640     0B5C  00F2               	movwf	??_gpio_pin_read_logic+1
  3641     0B5D  3006               	movlw	6
  3642     0B5E  0272               	subwf	??_gpio_pin_read_logic+1,w
  3643     0B5F  1C03               	skipc
  3644     0B60  2B62               	goto	u3621
  3645     0B61  2B63               	goto	u3620
  3646     0B62                     u3621:
  3647     0B62  2BBF               	goto	l3099
  3648     0B63                     u3620:
  3649     0B63                     l3083:
  3650     0B63  0877               	movf	gpio_pin_read_logic@pin,w
  3651     0B64  0084               	movwf	4
  3652     0B65  0800               	movf	0,w
  3653     0B66  3907               	andlw	7
  3654     0B67  3A01               	xorlw	1
  3655     0B68  1D03               	skipz
  3656     0B69  2B6B               	goto	u3631
  3657     0B6A  2B6C               	goto	u3630
  3658     0B6B                     u3631:
  3659     0B6B  2B7A               	goto	l3087
  3660     0B6C                     u3630:
  3661     0B6C                     l3085:
  3662     0B6C  0877               	movf	gpio_pin_read_logic@pin,w
  3663     0B6D  0084               	movwf	4
  3664     0B6E  0C00               	rrf	0,w
  3665     0B6F  00F1               	movwf	??_gpio_pin_read_logic
  3666     0B70  0CF1               	rrf	??_gpio_pin_read_logic,f
  3667     0B71  0C71               	rrf	??_gpio_pin_read_logic,w
  3668     0B72  3907               	andlw	7
  3669     0B73  00F2               	movwf	??_gpio_pin_read_logic+1
  3670     0B74  3008               	movlw	8
  3671     0B75  0272               	subwf	??_gpio_pin_read_logic+1,w
  3672     0B76  1C03               	skipc
  3673     0B77  2B79               	goto	u3641
  3674     0B78  2B7A               	goto	u3640
  3675     0B79                     u3641:
  3676     0B79  2BBF               	goto	l3099
  3677     0B7A                     u3640:
  3678     0B7A                     l3087:
  3679     0B7A  0877               	movf	gpio_pin_read_logic@pin,w
  3680     0B7B  0084               	movwf	4
  3681     0B7C  0800               	movf	0,w
  3682     0B7D  3907               	andlw	7
  3683     0B7E  3A02               	xorlw	2
  3684     0B7F  1D03               	skipz
  3685     0B80  2B82               	goto	u3651
  3686     0B81  2B83               	goto	u3650
  3687     0B82                     u3651:
  3688     0B82  2B91               	goto	l3091
  3689     0B83                     u3650:
  3690     0B83                     l3089:
  3691     0B83  0877               	movf	gpio_pin_read_logic@pin,w
  3692     0B84  0084               	movwf	4
  3693     0B85  0C00               	rrf	0,w
  3694     0B86  00F1               	movwf	??_gpio_pin_read_logic
  3695     0B87  0CF1               	rrf	??_gpio_pin_read_logic,f
  3696     0B88  0C71               	rrf	??_gpio_pin_read_logic,w
  3697     0B89  3907               	andlw	7
  3698     0B8A  00F2               	movwf	??_gpio_pin_read_logic+1
  3699     0B8B  3008               	movlw	8
  3700     0B8C  0272               	subwf	??_gpio_pin_read_logic+1,w
  3701     0B8D  1C03               	skipc
  3702     0B8E  2B90               	goto	u3661
  3703     0B8F  2B91               	goto	u3660
  3704     0B90                     u3661:
  3705     0B90  2BBF               	goto	l3099
  3706     0B91                     u3660:
  3707     0B91                     l3091:
  3708     0B91  0877               	movf	gpio_pin_read_logic@pin,w
  3709     0B92  0084               	movwf	4
  3710     0B93  0800               	movf	0,w
  3711     0B94  3907               	andlw	7
  3712     0B95  3A03               	xorlw	3
  3713     0B96  1D03               	skipz
  3714     0B97  2B99               	goto	u3671
  3715     0B98  2B9A               	goto	u3670
  3716     0B99                     u3671:
  3717     0B99  2BA8               	goto	l3095
  3718     0B9A                     u3670:
  3719     0B9A                     l3093:
  3720     0B9A  0877               	movf	gpio_pin_read_logic@pin,w
  3721     0B9B  0084               	movwf	4
  3722     0B9C  0C00               	rrf	0,w
  3723     0B9D  00F1               	movwf	??_gpio_pin_read_logic
  3724     0B9E  0CF1               	rrf	??_gpio_pin_read_logic,f
  3725     0B9F  0C71               	rrf	??_gpio_pin_read_logic,w
  3726     0BA0  3907               	andlw	7
  3727     0BA1  00F2               	movwf	??_gpio_pin_read_logic+1
  3728     0BA2  3008               	movlw	8
  3729     0BA3  0272               	subwf	??_gpio_pin_read_logic+1,w
  3730     0BA4  1C03               	skipc
  3731     0BA5  2BA7               	goto	u3681
  3732     0BA6  2BA8               	goto	u3680
  3733     0BA7                     u3681:
  3734     0BA7  2BBF               	goto	l3099
  3735     0BA8                     u3680:
  3736     0BA8                     l3095:
  3737     0BA8  0877               	movf	gpio_pin_read_logic@pin,w
  3738     0BA9  0084               	movwf	4
  3739     0BAA  0800               	movf	0,w
  3740     0BAB  3907               	andlw	7
  3741     0BAC  3A04               	xorlw	4
  3742     0BAD  1D03               	skipz
  3743     0BAE  2BB0               	goto	u3691
  3744     0BAF  2BB1               	goto	u3690
  3745     0BB0                     u3691:
  3746     0BB0  2B48               	goto	l343
  3747     0BB1                     u3690:
  3748     0BB1                     l3097:
  3749     0BB1  0877               	movf	gpio_pin_read_logic@pin,w
  3750     0BB2  0084               	movwf	4
  3751     0BB3  0C00               	rrf	0,w
  3752     0BB4  00F1               	movwf	??_gpio_pin_read_logic
  3753     0BB5  0CF1               	rrf	??_gpio_pin_read_logic,f
  3754     0BB6  0C71               	rrf	??_gpio_pin_read_logic,w
  3755     0BB7  3907               	andlw	7
  3756     0BB8  00F2               	movwf	??_gpio_pin_read_logic+1
  3757     0BB9  3003               	movlw	3
  3758     0BBA  0272               	subwf	??_gpio_pin_read_logic+1,w
  3759     0BBB  1803               	skipnc
  3760     0BBC  2BBE               	goto	u3701
  3761     0BBD  2BBF               	goto	u3700
  3762     0BBE                     u3701:
  3763     0BBE  2B48               	goto	l343
  3764     0BBF                     u3700:
  3765     0BBF                     l3099:
  3766                           
  3767                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 79:                 (pin->port == PORTD_INDEX && pin->pin 
      +                          < 8) || (pin->port == PORTE_INDEX && pin->pin < 3)) {;MCAL_LAYER/GPIO/mcal_gpio.c: 80:  
      +                                     *logic = ((*port_registers[pin->port] >> pin->pin) & 0x01);
  3768     0BBF  0877               	movf	gpio_pin_read_logic@pin,w
  3769     0BC0  0084               	movwf	4
  3770     0BC1  0800               	movf	0,w
  3771     0BC2  3907               	andlw	7
  3772     0BC3  00F1               	movwf	??_gpio_pin_read_logic
  3773     0BC4  0771               	addwf	??_gpio_pin_read_logic,w
  3774     0BC5  3EA0               	addlw	(low (_port_registers| 0))& (0+255)
  3775     0BC6  0084               	movwf	4
  3776     0BC7  0800               	movf	0,w
  3777     0BC8  00F2               	movwf	??_gpio_pin_read_logic+1
  3778     0BC9  0A84               	incf	4,f
  3779     0BCA  0800               	movf	0,w
  3780     0BCB  00F3               	movwf	??_gpio_pin_read_logic+2
  3781     0BCC  0872               	movf	??_gpio_pin_read_logic+1,w
  3782     0BCD  0084               	movwf	4
  3783     0BCE  1783               	bsf	3,7
  3784     0BCF  1C73               	btfss	??_gpio_pin_read_logic+2,0
  3785     0BD0  1383               	bcf	3,7
  3786     0BD1  0800               	movf	0,w
  3787     0BD2  00F4               	movwf	??_gpio_pin_read_logic+3
  3788     0BD3  0877               	movf	gpio_pin_read_logic@pin,w
  3789     0BD4  0084               	movwf	4
  3790     0BD5  1383               	bcf	3,7	;select IRP bank0
  3791     0BD6  0C00               	rrf	0,w
  3792     0BD7  00F5               	movwf	??_gpio_pin_read_logic+4
  3793     0BD8  0CF5               	rrf	??_gpio_pin_read_logic+4,f
  3794     0BD9  0C75               	rrf	??_gpio_pin_read_logic+4,w
  3795     0BDA  3907               	andlw	7
  3796     0BDB  3E01               	addlw	1
  3797     0BDC  2BDF               	goto	u3714
  3798     0BDD                     u3715:
  3799     0BDD  1003               	clrc
  3800     0BDE  0CF4               	rrf	??_gpio_pin_read_logic+3,f
  3801     0BDF                     u3714:
  3802     0BDF  3EFF               	addlw	-1
  3803     0BE0  1D03               	skipz
  3804     0BE1  2BDD               	goto	u3715
  3805     0BE2  0874               	movf	??_gpio_pin_read_logic+3,w
  3806     0BE3  3901               	andlw	1
  3807     0BE4  00FF               	movwf	btemp+1
  3808     0BE5  0870               	movf	gpio_pin_read_logic@logic,w
  3809     0BE6  0084               	movwf	4
  3810     0BE7  087F               	movf	btemp+1,w
  3811     0BE8  0080               	movwf	0
  3812     0BE9                     l3101:	
  3813                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 81:         } else {
  3814                           
  3815                           
  3816                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 85:     return ret;
  3817     0BE9  0876               	movf	gpio_pin_read_logic@ret,w
  3818     0BEA                     l357:
  3819     0BEA  0008               	return
  3820     0BEB                     __end_of_gpio_pin_read_logic:
  3821                           
  3822                           	psect	text10
  3823     14B9                     __ptext10:	
  3824 ;; *************** function ___bmul *****************
  3825 ;; Defined at:
  3826 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul8.c"
  3827 ;; Parameters:    Size  Location     Type
  3828 ;;  multiplier      1    wreg     unsigned char 
  3829 ;;  multiplicand    1    0[COMMON] unsigned char 
  3830 ;; Auto vars:     Size  Location     Type
  3831 ;;  multiplier      1    2[COMMON] unsigned char 
  3832 ;;  product         1    1[COMMON] unsigned char 
  3833 ;; Return value:  Size  Location     Type
  3834 ;;                  1    wreg      unsigned char 
  3835 ;; Registers used:
  3836 ;;		wreg, status,2, status,0, btemp+1
  3837 ;; Tracked objects:
  3838 ;;		On entry : 0/0
  3839 ;;		On exit  : 0/0
  3840 ;;		Unchanged: 0/0
  3841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3842 ;;      Params:         1       0       0       0       0
  3843 ;;      Locals:         2       0       0       0       0
  3844 ;;      Temps:          0       0       0       0       0
  3845 ;;      Totals:         3       0       0       0       0
  3846 ;;Total ram usage:        3 bytes
  3847 ;; Hardware stack levels used: 1
  3848 ;; This function calls:
  3849 ;;		Nothing
  3850 ;; This function is called by:
  3851 ;;		_keypad_read_value
  3852 ;; This function uses a non-reentrant model
  3853 ;;
  3854                           
  3855     14B9                     ___bmul:	
  3856                           ;psect for function ___bmul
  3857                           
  3858                           
  3859                           ;incstack = 0
  3860                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  3861                           ;___bmul@multiplier stored from wreg
  3862     14B9  00F2               	movwf	___bmul@multiplier
  3863     14BA                     l3187:
  3864     14BA  01F1               	clrf	___bmul@product
  3865     14BB                     l3189:
  3866     14BB  1C72               	btfss	___bmul@multiplier,0
  3867     14BC  2CBE               	goto	u3821
  3868     14BD  2CBF               	goto	u3820
  3869     14BE                     u3821:
  3870     14BE  2CC3               	goto	l3193
  3871     14BF                     u3820:
  3872     14BF                     l3191:
  3873     14BF  0870               	movf	___bmul@multiplicand,w
  3874     14C0  00FF               	movwf	btemp+1
  3875     14C1  087F               	movf	btemp+1,w
  3876     14C2  07F1               	addwf	___bmul@product,f
  3877     14C3                     l3193:
  3878     14C3  1003               	clrc
  3879     14C4  0DF0               	rlf	___bmul@multiplicand,f
  3880     14C5                     l3195:
  3881     14C5  1003               	clrc
  3882     14C6  0CF2               	rrf	___bmul@multiplier,f
  3883     14C7                     l3197:
  3884     14C7  0872               	movf	___bmul@multiplier,w
  3885     14C8  1D03               	btfss	3,2
  3886     14C9  2CCB               	goto	u3831
  3887     14CA  2CCC               	goto	u3830
  3888     14CB                     u3831:
  3889     14CB  2CBB               	goto	l3189
  3890     14CC                     u3830:
  3891     14CC                     l3199:
  3892     14CC  0871               	movf	___bmul@product,w
  3893     14CD                     l654:
  3894     14CD  0008               	return
  3895     14CE                     __end_of___bmul:
  3896                           
  3897                           	psect	text11
  3898     0004                     __ptext11:	
  3899 ;; *************** function _apllication_initilaize *****************
  3900 ;; Defined at:
  3901 ;;		line 103 in file "Temperature_Controlled_Fan_System.c"
  3902 ;; Parameters:    Size  Location     Type
  3903 ;;		None
  3904 ;; Auto vars:     Size  Location     Type
  3905 ;;		None
  3906 ;; Return value:  Size  Location     Type
  3907 ;;                  1    wreg      void 
  3908 ;; Registers used:
  3909 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3910 ;; Tracked objects:
  3911 ;;		On entry : 0/0
  3912 ;;		On exit  : 0/0
  3913 ;;		Unchanged: 0/0
  3914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3915 ;;      Params:         0       0       0       0       0
  3916 ;;      Locals:         0       0       0       0       0
  3917 ;;      Temps:          0       0       0       0       0
  3918 ;;      Totals:         0       0       0       0       0
  3919 ;;Total ram usage:        0 bytes
  3920 ;; Hardware stack levels used: 1
  3921 ;; Hardware stack levels required when called: 5
  3922 ;; This function calls:
  3923 ;;		_ecu_initialzie
  3924 ;;		_mcal_initialize
  3925 ;; This function is called by:
  3926 ;;		_main
  3927 ;; This function uses a non-reentrant model
  3928 ;;
  3929                           
  3930     0004                     _apllication_initilaize:	
  3931                           ;psect for function _apllication_initilaize
  3932                           
  3933     0004                     l3379:	
  3934                           ;incstack = 0
  3935                           ; Regs used in _apllication_initilaize: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  3936                           
  3937                           
  3938                           ;Temperature_Controlled_Fan_System.c: 104:     ecu_initialzie();
  3939     0004  160A  118A  24E5  120A  118A  	fcall	_ecu_initialzie
  3940     0009                     l3381:
  3941                           
  3942                           ;Temperature_Controlled_Fan_System.c: 105:     mcal_initialize();
  3943     0009  160A  118A  2465  120A  118A  	fcall	_mcal_initialize
  3944     000E                     l542:
  3945     000E  0008               	return
  3946     000F                     __end_of_apllication_initilaize:
  3947                           
  3948                           	psect	text12
  3949     1465                     __ptext12:	
  3950 ;; *************** function _mcal_initialize *****************
  3951 ;; Defined at:
  3952 ;;		line 12 in file "MCAL_LAYER/MCAL_LAYER.c"
  3953 ;; Parameters:    Size  Location     Type
  3954 ;;		None
  3955 ;; Auto vars:     Size  Location     Type
  3956 ;;  ret             1    0        unsigned char 
  3957 ;; Return value:  Size  Location     Type
  3958 ;;                  1    wreg      unsigned char 
  3959 ;; Registers used:
  3960 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3961 ;; Tracked objects:
  3962 ;;		On entry : 0/0
  3963 ;;		On exit  : 0/0
  3964 ;;		Unchanged: 0/0
  3965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3966 ;;      Params:         0       0       0       0       0
  3967 ;;      Locals:         0       0       0       0       0
  3968 ;;      Temps:          0       0       0       0       0
  3969 ;;      Totals:         0       0       0       0       0
  3970 ;;Total ram usage:        0 bytes
  3971 ;; Hardware stack levels used: 1
  3972 ;; Hardware stack levels required when called: 2
  3973 ;; This function calls:
  3974 ;;		_ADC_INIT
  3975 ;; This function is called by:
  3976 ;;		_apllication_initilaize
  3977 ;; This function uses a non-reentrant model
  3978 ;;
  3979                           
  3980     1465                     _mcal_initialize:	
  3981                           ;psect for function _mcal_initialize
  3982                           
  3983     1465                     l3183:	
  3984                           ;incstack = 0
  3985                           ; Regs used in _mcal_initialize: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3986                           
  3987     1465                     l3185:
  3988     1465  30C9               	movlw	(low (_adc| 0))& (0+255)
  3989     1466  160A  118A  2680  160A  118A  	fcall	_ADC_INIT
  3990     146B                     l453:
  3991     146B  0008               	return
  3992     146C                     __end_of_mcal_initialize:
  3993                           
  3994                           	psect	text13
  3995     1680                     __ptext13:	
  3996 ;; *************** function _ADC_INIT *****************
  3997 ;; Defined at:
  3998 ;;		line 12 in file "MCAL_LAYER/ADC/hal_adc.c"
  3999 ;; Parameters:    Size  Location     Type
  4000 ;;  adc             1    wreg     PTR const struct .
  4001 ;;		 -> adc(3), 
  4002 ;; Auto vars:     Size  Location     Type
  4003 ;;  adc             1    5[COMMON] PTR const struct .
  4004 ;;		 -> adc(3), 
  4005 ;;  ret             1    4[COMMON] unsigned char 
  4006 ;; Return value:  Size  Location     Type
  4007 ;;                  1    wreg      unsigned char 
  4008 ;; Registers used:
  4009 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4010 ;; Tracked objects:
  4011 ;;		On entry : 0/0
  4012 ;;		On exit  : 0/0
  4013 ;;		Unchanged: 0/0
  4014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4015 ;;      Params:         0       0       0       0       0
  4016 ;;      Locals:         2       0       0       0       0
  4017 ;;      Temps:          1       0       0       0       0
  4018 ;;      Totals:         3       0       0       0       0
  4019 ;;Total ram usage:        3 bytes
  4020 ;; Hardware stack levels used: 1
  4021 ;; Hardware stack levels required when called: 1
  4022 ;; This function calls:
  4023 ;;		_Result_Format
  4024 ;; This function is called by:
  4025 ;;		_mcal_initialize
  4026 ;; This function uses a non-reentrant model
  4027 ;;
  4028                           
  4029     1680                     _ADC_INIT:	
  4030                           ;psect for function _ADC_INIT
  4031                           
  4032                           
  4033                           ;incstack = 0
  4034                           ; Regs used in _ADC_INIT: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4035                           ;ADC_INIT@adc stored from wreg
  4036     1680  00F5               	movwf	ADC_INIT@adc
  4037     1681                     l3045:
  4038                           
  4039                           ;MCAL_LAYER/ADC/hal_adc.c: 13:     uint8 ret = 0x00;
  4040     1681  01F4               	clrf	ADC_INIT@ret
  4041     1682                     l3047:
  4042                           
  4043                           ;MCAL_LAYER/ADC/hal_adc.c: 14:     if(adc == ((void*)0)){
  4044     1682  0875               	movf	ADC_INIT@adc,w
  4045     1683  1D03               	btfss	3,2
  4046     1684  2E86               	goto	u3571
  4047     1685  2E87               	goto	u3570
  4048     1686                     u3571:
  4049     1686  2E8A               	goto	l190
  4050     1687                     u3570:
  4051     1687                     l3049:
  4052                           
  4053                           ;MCAL_LAYER/ADC/hal_adc.c: 15:         ret = 0x01;
  4054     1687  01F4               	clrf	ADC_INIT@ret
  4055     1688  0AF4               	incf	ADC_INIT@ret,f
  4056                           
  4057                           ;MCAL_LAYER/ADC/hal_adc.c: 16:     }
  4058     1689  2EAA               	goto	l3059
  4059     168A                     l190:	
  4060                           ;MCAL_LAYER/ADC/hal_adc.c: 17:     else{
  4061                           
  4062                           
  4063                           ;MCAL_LAYER/ADC/hal_adc.c: 18:         (ADCON0bits.ADON = 0);
  4064     168A  1283               	bcf	3,5	;RP0=0, select bank0
  4065     168B  1303               	bcf	3,6	;RP1=0, select bank0
  4066     168C  101F               	bcf	31,0	;volatile
  4067                           
  4068                           ;MCAL_LAYER/ADC/hal_adc.c: 19:         (ADCON0bits.GO_nDONE = 0);
  4069     168D  111F               	bcf	31,2	;volatile
  4070     168E                     l3051:
  4071                           
  4072                           ;MCAL_LAYER/ADC/hal_adc.c: 20:         (ADCON0bits.CHS = adc->channel);
  4073     168E  0875               	movf	ADC_INIT@adc,w
  4074     168F  0084               	movwf	4
  4075     1690  1383               	bcf	3,7	;select IRP bank0
  4076     1691  0800               	movf	0,w
  4077     1692  00F3               	movwf	??_ADC_INIT
  4078     1693  0DF3               	rlf	??_ADC_INIT,f
  4079     1694  0DF3               	rlf	??_ADC_INIT,f
  4080     1695  0DF3               	rlf	??_ADC_INIT,f
  4081     1696  081F               	movf	31,w	;volatile
  4082     1697  0673               	xorwf	??_ADC_INIT,w
  4083     1698  39C7               	andlw	-57
  4084     1699  0673               	xorwf	??_ADC_INIT,w
  4085     169A  009F               	movwf	31	;volatile
  4086     169B                     l3053:
  4087                           
  4088                           ;MCAL_LAYER/ADC/hal_adc.c: 21:         Result_Format(adc);
  4089     169B  0875               	movf	ADC_INIT@adc,w
  4090     169C  160A  118A  25E9  160A  118A  	fcall	_Result_Format
  4091     16A1                     l3055:
  4092                           
  4093                           ;MCAL_LAYER/ADC/hal_adc.c: 22:         (ADCON1bits.PCFG = 0x04);
  4094     16A1  1683               	bsf	3,5	;RP0=1, select bank1
  4095     16A2  1303               	bcf	3,6	;RP1=0, select bank1
  4096     16A3  081F               	movf	31,w	;volatile
  4097     16A4  39F0               	andlw	-16
  4098     16A5  3804               	iorlw	4
  4099     16A6  009F               	movwf	31	;volatile
  4100     16A7                     l3057:
  4101                           
  4102                           ;MCAL_LAYER/ADC/hal_adc.c: 23:         (ADCON0bits.ADON = 1);
  4103     16A7  1283               	bcf	3,5	;RP0=0, select bank0
  4104     16A8  1303               	bcf	3,6	;RP1=0, select bank0
  4105     16A9  141F               	bsf	31,0	;volatile
  4106     16AA                     l3059:
  4107                           
  4108                           ;MCAL_LAYER/ADC/hal_adc.c: 25:     return ret;
  4109     16AA  0874               	movf	ADC_INIT@ret,w
  4110     16AB                     l192:
  4111     16AB  0008               	return
  4112     16AC                     __end_of_ADC_INIT:
  4113                           
  4114                           	psect	text14
  4115     15E9                     __ptext14:	
  4116 ;; *************** function _Result_Format *****************
  4117 ;; Defined at:
  4118 ;;		line 92 in file "MCAL_LAYER/ADC/hal_adc.c"
  4119 ;; Parameters:    Size  Location     Type
  4120 ;;  adc             1    wreg     PTR const struct .
  4121 ;;		 -> adc(3), 
  4122 ;; Auto vars:     Size  Location     Type
  4123 ;;  adc             1    2[COMMON] PTR const struct .
  4124 ;;		 -> adc(3), 
  4125 ;;  ret             1    0        unsigned char 
  4126 ;; Return value:  Size  Location     Type
  4127 ;;                  1    wreg      unsigned char 
  4128 ;; Registers used:
  4129 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4130 ;; Tracked objects:
  4131 ;;		On entry : 0/0
  4132 ;;		On exit  : 0/0
  4133 ;;		Unchanged: 0/0
  4134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4135 ;;      Params:         0       0       0       0       0
  4136 ;;      Locals:         1       0       0       0       0
  4137 ;;      Temps:          2       0       0       0       0
  4138 ;;      Totals:         3       0       0       0       0
  4139 ;;Total ram usage:        3 bytes
  4140 ;; Hardware stack levels used: 1
  4141 ;; This function calls:
  4142 ;;		Nothing
  4143 ;; This function is called by:
  4144 ;;		_ADC_INIT
  4145 ;; This function uses a non-reentrant model
  4146 ;;
  4147                           
  4148     15E9                     _Result_Format:	
  4149                           ;psect for function _Result_Format
  4150                           
  4151                           
  4152                           ;incstack = 0
  4153                           ; Regs used in _Result_Format: [wreg-fsr0h+status,2+status,0]
  4154                           ;Result_Format@adc stored from wreg
  4155     15E9  00F2               	movwf	Result_Format@adc
  4156     15EA                     l2879:
  4157     15EA                     l2881:
  4158                           
  4159                           ;MCAL_LAYER/ADC/hal_adc.c: 94:     if(adc == ((void*)0)){
  4160     15EA  0872               	movf	Result_Format@adc,w
  4161     15EB  1D03               	btfss	3,2
  4162     15EC  2DEE               	goto	u3381
  4163     15ED  2DEF               	goto	u3380
  4164     15EE                     u3381:
  4165     15EE  2DF8               	goto	l2887
  4166     15EF                     u3380:
  4167     15EF                     l2883:
  4168                           
  4169                           ;MCAL_LAYER/ADC/hal_adc.c: 96:     }
  4170     15EF  2E0C               	goto	l232
  4171     15F0                     l229:	
  4172                           ;MCAL_LAYER/ADC/hal_adc.c: 99:             case RIGHT_JUSTIFIED :
  4173                           
  4174                           
  4175                           ;MCAL_LAYER/ADC/hal_adc.c: 100:                 ADCON1bits.ADFM = 1;
  4176     15F0  1683               	bsf	3,5	;RP0=1, select bank1
  4177     15F1  1303               	bcf	3,6	;RP1=0, select bank1
  4178     15F2  179F               	bsf	31,7	;volatile
  4179                           
  4180                           ;MCAL_LAYER/ADC/hal_adc.c: 101:             break;
  4181     15F3  2E0C               	goto	l232
  4182     15F4                     l231:	
  4183                           ;MCAL_LAYER/ADC/hal_adc.c: 102:             case LEFT_JUSTIFIED :
  4184                           
  4185                           
  4186                           ;MCAL_LAYER/ADC/hal_adc.c: 103:                 ADCON1bits.ADFM = 0;
  4187     15F4  1683               	bsf	3,5	;RP0=1, select bank1
  4188     15F5  1303               	bcf	3,6	;RP1=0, select bank1
  4189     15F6  139F               	bcf	31,7	;volatile
  4190                           
  4191                           ;MCAL_LAYER/ADC/hal_adc.c: 104:             break;
  4192     15F7  2E0C               	goto	l232
  4193     15F8                     l2887:
  4194     15F8  0872               	movf	Result_Format@adc,w
  4195     15F9  3E02               	addlw	2
  4196     15FA  0084               	movwf	4
  4197     15FB  1383               	bcf	3,7	;select IRP bank0
  4198     15FC  0800               	movf	0,w
  4199     15FD  00F0               	movwf	??_Result_Format
  4200     15FE  01F1               	clrf	??_Result_Format+1
  4201                           
  4202                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4203                           ; Switch size 1, requested type "simple"
  4204                           ; Number of cases is 1, Range of values is 0 to 0
  4205                           ; switch strategies available:
  4206                           ; Name         Instructions Cycles
  4207                           ; simple_byte            4     3 (average)
  4208                           ; direct_byte           11     8 (fixed)
  4209                           ; jumptable            260     6 (fixed)
  4210                           ;	Chosen strategy is simple_byte
  4211     15FF  0871               	movf	??_Result_Format+1,w
  4212     1600  3A00               	xorlw	0	; case 0
  4213     1601  1903               	skipnz
  4214     1602  2E04               	goto	l4081
  4215     1603  2E0C               	goto	l232
  4216     1604                     l4081:
  4217                           
  4218                           ; Switch size 1, requested type "simple"
  4219                           ; Number of cases is 2, Range of values is 0 to 1
  4220                           ; switch strategies available:
  4221                           ; Name         Instructions Cycles
  4222                           ; simple_byte            7     4 (average)
  4223                           ; direct_byte           14     8 (fixed)
  4224                           ; jumptable            260     6 (fixed)
  4225                           ;	Chosen strategy is simple_byte
  4226     1604  0870               	movf	??_Result_Format,w
  4227     1605  3A00               	xorlw	0	; case 0
  4228     1606  1903               	skipnz
  4229     1607  2DF0               	goto	l229
  4230     1608  3A01               	xorlw	1	; case 1
  4231     1609  1903               	skipnz
  4232     160A  2DF4               	goto	l231
  4233     160B  2E0C               	goto	l232
  4234     160C                     l232:
  4235     160C  0008               	return
  4236     160D                     __end_of_Result_Format:
  4237                           
  4238                           	psect	text15
  4239     14E5                     __ptext15:	
  4240 ;; *************** function _ecu_initialzie *****************
  4241 ;; Defined at:
  4242 ;;		line 33 in file "ECU_LAYER/ECU_LAYER.c"
  4243 ;; Parameters:    Size  Location     Type
  4244 ;;		None
  4245 ;; Auto vars:     Size  Location     Type
  4246 ;;		None
  4247 ;; Return value:  Size  Location     Type
  4248 ;;                  1    wreg      void 
  4249 ;; Registers used:
  4250 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4251 ;; Tracked objects:
  4252 ;;		On entry : 0/0
  4253 ;;		On exit  : 0/0
  4254 ;;		Unchanged: 0/0
  4255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4256 ;;      Params:         0       0       0       0       0
  4257 ;;      Locals:         0       0       0       0       0
  4258 ;;      Temps:          0       0       0       0       0
  4259 ;;      Totals:         0       0       0       0       0
  4260 ;;Total ram usage:        0 bytes
  4261 ;; Hardware stack levels used: 1
  4262 ;; Hardware stack levels required when called: 4
  4263 ;; This function calls:
  4264 ;;		_keypad_initialize
  4265 ;;		_lcd_4bits_initialize
  4266 ;;		_motor_initialize
  4267 ;; This function is called by:
  4268 ;;		_apllication_initilaize
  4269 ;; This function uses a non-reentrant model
  4270 ;;
  4271                           
  4272     14E5                     _ecu_initialzie:	
  4273                           ;psect for function _ecu_initialzie
  4274                           
  4275     14E5                     l3159:	
  4276                           ;incstack = 0
  4277                           ; Regs used in _ecu_initialzie: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4278                           
  4279                           
  4280                           ;ECU_LAYER/ECU_LAYER.c: 34:     motor_initialize(&motor1);
  4281     14E5  30CE               	movlw	(low (_motor1| 0))& (0+255)
  4282     14E6  160A  118A  24CE  160A  118A  	fcall	_motor_initialize
  4283                           
  4284                           ;ECU_LAYER/ECU_LAYER.c: 35:     motor_initialize(&motor2);
  4285     14EB  30CC               	movlw	(low (_motor2| 0))& (0+255)
  4286     14EC  160A  118A  24CE  160A  118A  	fcall	_motor_initialize
  4287                           
  4288                           ;ECU_LAYER/ECU_LAYER.c: 36:     keypad_initialize(&keypad);
  4289     14F1  30B8               	movlw	(low (_keypad| 0))& (0+255)
  4290     14F2  160A  118A  270C  160A  118A  	fcall	_keypad_initialize
  4291                           
  4292                           ;ECU_LAYER/ECU_LAYER.c: 37:     lcd_4bits_initialize(&lcd);
  4293     14F7  30BF               	movlw	(low (_lcd| 0))& (0+255)
  4294     14F8  120A  158A  23EB  160A  118A  	fcall	_lcd_4bits_initialize
  4295     14FD                     l177:
  4296     14FD  0008               	return
  4297     14FE                     __end_of_ecu_initialzie:
  4298                           
  4299                           	psect	text16
  4300     14CE                     __ptext16:	
  4301 ;; *************** function _motor_initialize *****************
  4302 ;; Defined at:
  4303 ;;		line 8 in file "ECU_LAYER/Motor/ecu_motor_driver.c"
  4304 ;; Parameters:    Size  Location     Type
  4305 ;;  motor           1    wreg     PTR const struct .
  4306 ;;		 -> motor2(2), motor1(2), 
  4307 ;; Auto vars:     Size  Location     Type
  4308 ;;  motor           1   13[COMMON] PTR const struct .
  4309 ;;		 -> motor2(2), motor1(2), 
  4310 ;;  ret             1   12[COMMON] unsigned char 
  4311 ;; Return value:  Size  Location     Type
  4312 ;;                  1    wreg      unsigned char 
  4313 ;; Registers used:
  4314 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4315 ;; Tracked objects:
  4316 ;;		On entry : 0/0
  4317 ;;		On exit  : 0/0
  4318 ;;		Unchanged: 0/0
  4319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4320 ;;      Params:         0       0       0       0       0
  4321 ;;      Locals:         2       0       0       0       0
  4322 ;;      Temps:          0       0       0       0       0
  4323 ;;      Totals:         2       0       0       0       0
  4324 ;;Total ram usage:        2 bytes
  4325 ;; Hardware stack levels used: 1
  4326 ;; Hardware stack levels required when called: 2
  4327 ;; This function calls:
  4328 ;;		_gpio_pin_initialize
  4329 ;; This function is called by:
  4330 ;;		_ecu_initialzie
  4331 ;; This function uses a non-reentrant model
  4332 ;;
  4333                           
  4334     14CE                     _motor_initialize:	
  4335                           ;psect for function _motor_initialize
  4336                           
  4337                           
  4338                           ;incstack = 0
  4339                           ; Regs used in _motor_initialize: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4340                           ;motor_initialize@motor stored from wreg
  4341     14CE  00FD               	movwf	motor_initialize@motor
  4342     14CF                     l3035:
  4343     14CF                     l3037:
  4344                           
  4345                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 10:     if(motor == ((void*)0)){
  4346     14CF  087D               	movf	motor_initialize@motor,w
  4347     14D0  1D03               	btfss	3,2
  4348     14D1  2CD3               	goto	u3561
  4349     14D2  2CD4               	goto	u3560
  4350     14D3                     u3561:
  4351     14D3  2CD5               	goto	l3041
  4352     14D4                     u3560:
  4353     14D4                     l3039:
  4354                           
  4355                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 12:     }
  4356     14D4  2CE4               	goto	l145
  4357     14D5                     l3041:
  4358                           
  4359                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 14:         ret = gpio_pin_initialize(&(motor->pins
      +                          [0]));
  4360     14D5  087D               	movf	motor_initialize@motor,w
  4361     14D6  120A  118A  200F  160A  118A  	fcall	_gpio_pin_initialize
  4362     14DB  00FC               	movwf	motor_initialize@ret
  4363                           
  4364                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 15:         ret = gpio_pin_initialize(&(motor->pins
      +                          [1]));
  4365     14DC  087D               	movf	motor_initialize@motor,w
  4366     14DD  3E01               	addlw	1
  4367     14DE  120A  118A  200F  160A  118A  	fcall	_gpio_pin_initialize
  4368     14E3  00FC               	movwf	motor_initialize@ret
  4369     14E4                     l145:
  4370     14E4  0008               	return
  4371     14E5                     __end_of_motor_initialize:
  4372                           
  4373                           	psect	text17
  4374     0BEB                     __ptext17:	
  4375 ;; *************** function _lcd_4bits_initialize *****************
  4376 ;; Defined at:
  4377 ;;		line 14 in file "ECU_LAYER/LCD/ecu_lcd.c"
  4378 ;; Parameters:    Size  Location     Type
  4379 ;;  lcd             1    wreg     PTR const struct .
  4380 ;;		 -> lcd(6), 
  4381 ;; Auto vars:     Size  Location     Type
  4382 ;;  lcd             1    7[BANK0 ] PTR const struct .
  4383 ;;		 -> lcd(6), 
  4384 ;;  ret             1    6[BANK0 ] unsigned char 
  4385 ;;  counter         1    5[BANK0 ] unsigned char 
  4386 ;; Return value:  Size  Location     Type
  4387 ;;                  1    wreg      unsigned char 
  4388 ;; Registers used:
  4389 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4390 ;; Tracked objects:
  4391 ;;		On entry : 0/0
  4392 ;;		On exit  : 0/0
  4393 ;;		Unchanged: 0/0
  4394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4395 ;;      Params:         0       0       0       0       0
  4396 ;;      Locals:         0       3       0       0       0
  4397 ;;      Temps:          0       3       0       0       0
  4398 ;;      Totals:         0       6       0       0       0
  4399 ;;Total ram usage:        6 bytes
  4400 ;; Hardware stack levels used: 1
  4401 ;; Hardware stack levels required when called: 3
  4402 ;; This function calls:
  4403 ;;		_gpio_pin_initialize
  4404 ;;		_lcd_4bits_send_command
  4405 ;; This function is called by:
  4406 ;;		_ecu_initialzie
  4407 ;; This function uses a non-reentrant model
  4408 ;;
  4409                           
  4410     0BEB                     _lcd_4bits_initialize:	
  4411                           ;psect for function _lcd_4bits_initialize
  4412                           
  4413                           
  4414                           ;incstack = 0
  4415                           ; Regs used in _lcd_4bits_initialize: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  4416                           ;lcd_4bits_initialize@lcd stored from wreg
  4417     0BEB  1283               	bcf	3,5	;RP0=0, select bank0
  4418     0BEC  1303               	bcf	3,6	;RP1=0, select bank0
  4419     0BED  00A7               	movwf	lcd_4bits_initialize@lcd
  4420     0BEE                     l2977:
  4421                           
  4422                           ;ECU_LAYER/LCD/ecu_lcd.c: 16:     uint8 counter = 0x00;
  4423     0BEE  01A5               	clrf	lcd_4bits_initialize@counter
  4424     0BEF                     l2979:
  4425                           
  4426                           ;ECU_LAYER/LCD/ecu_lcd.c: 17:     if(lcd == ((void*)0)){
  4427     0BEF  0827               	movf	lcd_4bits_initialize@lcd,w
  4428     0BF0  1D03               	btfss	3,2
  4429     0BF1  2BF3               	goto	u3521
  4430     0BF2  2BF4               	goto	u3520
  4431     0BF3                     u3521:
  4432     0BF3  2BF5               	goto	l2983
  4433     0BF4                     u3520:
  4434     0BF4                     l2981:
  4435                           
  4436                           ;ECU_LAYER/LCD/ecu_lcd.c: 19:     }
  4437     0BF4  2CA0               	goto	l57
  4438     0BF5                     l2983:
  4439                           
  4440                           ;ECU_LAYER/LCD/ecu_lcd.c: 21:         ret = gpio_pin_initialize(&(lcd->rs));
  4441     0BF5  0827               	movf	lcd_4bits_initialize@lcd,w
  4442     0BF6  120A  118A  200F  120A  158A  	fcall	_gpio_pin_initialize
  4443     0BFB  1283               	bcf	3,5	;RP0=0, select bank0
  4444     0BFC  1303               	bcf	3,6	;RP1=0, select bank0
  4445     0BFD  00A6               	movwf	lcd_4bits_initialize@ret
  4446                           
  4447                           ;ECU_LAYER/LCD/ecu_lcd.c: 22:         ret = gpio_pin_initialize(&(lcd->en));
  4448     0BFE  0827               	movf	lcd_4bits_initialize@lcd,w
  4449     0BFF  3E01               	addlw	1
  4450     0C00  120A  118A  200F  120A  158A  	fcall	_gpio_pin_initialize
  4451     0C05  1283               	bcf	3,5	;RP0=0, select bank0
  4452     0C06  1303               	bcf	3,6	;RP1=0, select bank0
  4453     0C07  00A6               	movwf	lcd_4bits_initialize@ret
  4454     0C08                     l2985:
  4455                           
  4456                           ;ECU_LAYER/LCD/ecu_lcd.c: 23:         for(counter = 0x00;counter < 4;counter++){
  4457     0C08  01A5               	clrf	lcd_4bits_initialize@counter
  4458     0C09                     l2991:
  4459     0C09  0825               	movf	lcd_4bits_initialize@counter,w
  4460     0C0A  0727               	addwf	lcd_4bits_initialize@lcd,w
  4461     0C0B  3E02               	addlw	2
  4462     0C0C  120A  118A  200F  120A  158A  	fcall	_gpio_pin_initialize
  4463     0C11                     l2993:
  4464                           
  4465                           ;ECU_LAYER/LCD/ecu_lcd.c: 25:         }
  4466     0C11  3001               	movlw	1
  4467     0C12  00FF               	movwf	btemp+1
  4468     0C13  087F               	movf	btemp+1,w
  4469     0C14  1283               	bcf	3,5	;RP0=0, select bank0
  4470     0C15  1303               	bcf	3,6	;RP1=0, select bank0
  4471     0C16  07A5               	addwf	lcd_4bits_initialize@counter,f
  4472     0C17                     l2995:
  4473     0C17  3004               	movlw	4
  4474     0C18  0225               	subwf	lcd_4bits_initialize@counter,w
  4475     0C19  1C03               	skipc
  4476     0C1A  2C1C               	goto	u3531
  4477     0C1B  2C1D               	goto	u3530
  4478     0C1C                     u3531:
  4479     0C1C  2C09               	goto	l2991
  4480     0C1D                     u3530:
  4481     0C1D                     l2997:
  4482                           
  4483                           ;ECU_LAYER/LCD/ecu_lcd.c: 26:         _delay((unsigned long)((150)*(8000000UL/4000.0)));
  4484     0C1D  3002               	movlw	2
  4485     0C1E  1283               	bcf	3,5	;RP0=0, select bank0
  4486     0C1F  1303               	bcf	3,6	;RP1=0, select bank0
  4487     0C20  00A4               	movwf	??_lcd_4bits_initialize+2
  4488     0C21  3086               	movlw	134
  4489     0C22  00A3               	movwf	??_lcd_4bits_initialize+1
  4490     0C23  3098               	movlw	152
  4491     0C24  00A2               	movwf	??_lcd_4bits_initialize
  4492     0C25                     u5457:
  4493     0C25  0BA2               	decfsz	??_lcd_4bits_initialize,f
  4494     0C26  2C25               	goto	u5457
  4495     0C27  0BA3               	decfsz	??_lcd_4bits_initialize+1,f
  4496     0C28  2C25               	goto	u5457
  4497     0C29  0BA4               	decfsz	??_lcd_4bits_initialize+2,f
  4498     0C2A  2C25               	goto	u5457
  4499     0C2B  0000               	nop
  4500     0C2C                     l2999:
  4501     0C2C  3038               	movlw	56
  4502     0C2D  00FC               	movwf	lcd_4bits_send_command@command
  4503     0C2E  1283               	bcf	3,5	;RP0=0, select bank0
  4504     0C2F  1303               	bcf	3,6	;RP1=0, select bank0
  4505     0C30  0827               	movf	lcd_4bits_initialize@lcd,w
  4506     0C31  120A  158A  205D  120A  158A  	fcall	_lcd_4bits_send_command
  4507     0C36                     l3001:
  4508                           
  4509                           ;ECU_LAYER/LCD/ecu_lcd.c: 28:         _delay((unsigned long)((50)*(8000000UL/4000.0)));
  4510     0C36  3082               	movlw	130
  4511     0C37  1283               	bcf	3,5	;RP0=0, select bank0
  4512     0C38  1303               	bcf	3,6	;RP1=0, select bank0
  4513     0C39  00A3               	movwf	??_lcd_4bits_initialize+1
  4514     0C3A  30DD               	movlw	221
  4515     0C3B  00A2               	movwf	??_lcd_4bits_initialize
  4516     0C3C                     u5467:
  4517     0C3C  0BA2               	decfsz	??_lcd_4bits_initialize,f
  4518     0C3D  2C3C               	goto	u5467
  4519     0C3E  0BA3               	decfsz	??_lcd_4bits_initialize+1,f
  4520     0C3F  2C3C               	goto	u5467
  4521     0C40  3038               	movlw	56
  4522     0C41  00FC               	movwf	lcd_4bits_send_command@command
  4523     0C42  1283               	bcf	3,5	;RP0=0, select bank0
  4524     0C43  1303               	bcf	3,6	;RP1=0, select bank0
  4525     0C44  0827               	movf	lcd_4bits_initialize@lcd,w
  4526     0C45  120A  158A  205D  120A  158A  	fcall	_lcd_4bits_send_command
  4527     0C4A                     l3003:
  4528                           
  4529                           ;ECU_LAYER/LCD/ecu_lcd.c: 30:         _delay((unsigned long)((150)*(8000000UL/4000000.0)
      +                          ));
  4530     0C4A  3063               	movlw	99
  4531     0C4B  1283               	bcf	3,5	;RP0=0, select bank0
  4532     0C4C  1303               	bcf	3,6	;RP1=0, select bank0
  4533     0C4D  00A2               	movwf	??_lcd_4bits_initialize
  4534     0C4E                     u5477:
  4535     0C4E  0BA2               	decfsz	??_lcd_4bits_initialize,f
  4536     0C4F  2C4E               	goto	u5477
  4537     0C50                     l3005:
  4538     0C50  3038               	movlw	56
  4539     0C51  00FC               	movwf	lcd_4bits_send_command@command
  4540     0C52  1283               	bcf	3,5	;RP0=0, select bank0
  4541     0C53  1303               	bcf	3,6	;RP1=0, select bank0
  4542     0C54  0827               	movf	lcd_4bits_initialize@lcd,w
  4543     0C55  120A  158A  205D  120A  158A  	fcall	_lcd_4bits_send_command
  4544     0C5A                     l3007:
  4545     0C5A  01FC               	clrf	lcd_4bits_send_command@command
  4546     0C5B  0AFC               	incf	lcd_4bits_send_command@command,f
  4547     0C5C  1283               	bcf	3,5	;RP0=0, select bank0
  4548     0C5D  1303               	bcf	3,6	;RP1=0, select bank0
  4549     0C5E  0827               	movf	lcd_4bits_initialize@lcd,w
  4550     0C5F  120A  158A  205D  120A  158A  	fcall	_lcd_4bits_send_command
  4551     0C64                     l3009:
  4552     0C64  3002               	movlw	2
  4553     0C65  00FC               	movwf	lcd_4bits_send_command@command
  4554     0C66  1283               	bcf	3,5	;RP0=0, select bank0
  4555     0C67  1303               	bcf	3,6	;RP1=0, select bank0
  4556     0C68  0827               	movf	lcd_4bits_initialize@lcd,w
  4557     0C69  120A  158A  205D  120A  158A  	fcall	_lcd_4bits_send_command
  4558     0C6E                     l3011:
  4559     0C6E  3006               	movlw	6
  4560     0C6F  00FC               	movwf	lcd_4bits_send_command@command
  4561     0C70  1283               	bcf	3,5	;RP0=0, select bank0
  4562     0C71  1303               	bcf	3,6	;RP1=0, select bank0
  4563     0C72  0827               	movf	lcd_4bits_initialize@lcd,w
  4564     0C73  120A  158A  205D  120A  158A  	fcall	_lcd_4bits_send_command
  4565     0C78                     l3013:
  4566     0C78  300C               	movlw	12
  4567     0C79  00FC               	movwf	lcd_4bits_send_command@command
  4568     0C7A  1283               	bcf	3,5	;RP0=0, select bank0
  4569     0C7B  1303               	bcf	3,6	;RP1=0, select bank0
  4570     0C7C  0827               	movf	lcd_4bits_initialize@lcd,w
  4571     0C7D  120A  158A  205D  120A  158A  	fcall	_lcd_4bits_send_command
  4572     0C82                     l3015:
  4573     0C82  3010               	movlw	16
  4574     0C83  00FC               	movwf	lcd_4bits_send_command@command
  4575     0C84  1283               	bcf	3,5	;RP0=0, select bank0
  4576     0C85  1303               	bcf	3,6	;RP1=0, select bank0
  4577     0C86  0827               	movf	lcd_4bits_initialize@lcd,w
  4578     0C87  120A  158A  205D  120A  158A  	fcall	_lcd_4bits_send_command
  4579     0C8C                     l3017:
  4580     0C8C  3028               	movlw	40
  4581     0C8D  00FC               	movwf	lcd_4bits_send_command@command
  4582     0C8E  1283               	bcf	3,5	;RP0=0, select bank0
  4583     0C8F  1303               	bcf	3,6	;RP1=0, select bank0
  4584     0C90  0827               	movf	lcd_4bits_initialize@lcd,w
  4585     0C91  120A  158A  205D  120A  158A  	fcall	_lcd_4bits_send_command
  4586     0C96                     l3019:
  4587     0C96  3080               	movlw	128
  4588     0C97  00FC               	movwf	lcd_4bits_send_command@command
  4589     0C98  1283               	bcf	3,5	;RP0=0, select bank0
  4590     0C99  1303               	bcf	3,6	;RP1=0, select bank0
  4591     0C9A  0827               	movf	lcd_4bits_initialize@lcd,w
  4592     0C9B  120A  158A  205D  120A  158A  	fcall	_lcd_4bits_send_command
  4593     0CA0                     l57:
  4594     0CA0  0008               	return
  4595     0CA1                     __end_of_lcd_4bits_initialize:
  4596                           
  4597                           	psect	text18
  4598     085D                     __ptext18:	
  4599 ;; *************** function _lcd_4bits_send_command *****************
  4600 ;; Defined at:
  4601 ;;		line 43 in file "ECU_LAYER/LCD/ecu_lcd.c"
  4602 ;; Parameters:    Size  Location     Type
  4603 ;;  lcd             1    wreg     PTR const struct .
  4604 ;;		 -> lcd(6), 
  4605 ;;  command         1   12[COMMON] unsigned char 
  4606 ;; Auto vars:     Size  Location     Type
  4607 ;;  lcd             1    1[BANK0 ] PTR const struct .
  4608 ;;		 -> lcd(6), 
  4609 ;;  ret             1    0[BANK0 ] unsigned char 
  4610 ;; Return value:  Size  Location     Type
  4611 ;;                  1    wreg      unsigned char 
  4612 ;; Registers used:
  4613 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4614 ;; Tracked objects:
  4615 ;;		On entry : 0/0
  4616 ;;		On exit  : 0/0
  4617 ;;		Unchanged: 0/0
  4618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4619 ;;      Params:         1       0       0       0       0
  4620 ;;      Locals:         0       2       0       0       0
  4621 ;;      Temps:          1       0       0       0       0
  4622 ;;      Totals:         2       2       0       0       0
  4623 ;;Total ram usage:        4 bytes
  4624 ;; Hardware stack levels used: 1
  4625 ;; Hardware stack levels required when called: 2
  4626 ;; This function calls:
  4627 ;;		_gpio_pin_write_logic
  4628 ;;		_send_4bits
  4629 ;;		_send_enable_signal
  4630 ;; This function is called by:
  4631 ;;		_lcd_4bits_initialize
  4632 ;;		_set_cursor
  4633 ;;		_main
  4634 ;;		_lcd_4bit_custom_character
  4635 ;; This function uses a non-reentrant model
  4636 ;;
  4637                           
  4638     085D                     _lcd_4bits_send_command:	
  4639                           ;psect for function _lcd_4bits_send_command
  4640                           
  4641                           
  4642                           ;incstack = 0
  4643                           ; Regs used in _lcd_4bits_send_command: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  4644                           ;lcd_4bits_send_command@lcd stored from wreg
  4645     085D  1283               	bcf	3,5	;RP0=0, select bank0
  4646     085E  1303               	bcf	3,6	;RP1=0, select bank0
  4647     085F  00A1               	movwf	lcd_4bits_send_command@lcd
  4648     0860                     l2867:
  4649     0860                     l2869:
  4650                           
  4651                           ;ECU_LAYER/LCD/ecu_lcd.c: 45:     if(lcd == ((void*)0)){
  4652     0860  0821               	movf	lcd_4bits_send_command@lcd,w
  4653     0861  1D03               	btfss	3,2
  4654     0862  2864               	goto	u3361
  4655     0863  2865               	goto	u3360
  4656     0864                     u3361:
  4657     0864  2868               	goto	l2873
  4658     0865                     u3360:
  4659     0865                     l2871:
  4660                           
  4661                           ;ECU_LAYER/LCD/ecu_lcd.c: 46:         ret = 0x01;
  4662     0865  01A0               	clrf	lcd_4bits_send_command@ret
  4663     0866  0AA0               	incf	lcd_4bits_send_command@ret,f
  4664                           
  4665                           ;ECU_LAYER/LCD/ecu_lcd.c: 47:     }
  4666     0867  28A2               	goto	l2875
  4667     0868                     l2873:
  4668                           
  4669                           ;ECU_LAYER/LCD/ecu_lcd.c: 49:         ret = gpio_pin_write_logic(&(lcd->rs),GPIO_LOW);
  4670     0868  01F0               	clrf	gpio_pin_write_logic@logic
  4671     0869  0821               	movf	lcd_4bits_send_command@lcd,w
  4672     086A  120A  158A  2631  120A  158A  	fcall	_gpio_pin_write_logic
  4673     086F  1283               	bcf	3,5	;RP0=0, select bank0
  4674     0870  1303               	bcf	3,6	;RP1=0, select bank0
  4675     0871  00A0               	movwf	lcd_4bits_send_command@ret
  4676                           
  4677                           ;ECU_LAYER/LCD/ecu_lcd.c: 50:         ret = send_4bits(lcd,(command >> 4));
  4678     0872  087C               	movf	lcd_4bits_send_command@command,w
  4679     0873  00FD               	movwf	??_lcd_4bits_send_command
  4680     0874  3004               	movlw	4
  4681     0875                     u3375:
  4682     0875  1003               	clrc
  4683     0876  0CFD               	rrf	??_lcd_4bits_send_command,f
  4684     0877  3EFF               	addlw	-1
  4685     0878  1D03               	skipz
  4686     0879  2875               	goto	u3375
  4687     087A  087D               	movf	??_lcd_4bits_send_command,w
  4688     087B  00F8               	movwf	send_4bits@command
  4689     087C  0821               	movf	lcd_4bits_send_command@lcd,w
  4690     087D  120A  158A  20EE  120A  158A  	fcall	_send_4bits
  4691     0882  1283               	bcf	3,5	;RP0=0, select bank0
  4692     0883  1303               	bcf	3,6	;RP1=0, select bank0
  4693     0884  00A0               	movwf	lcd_4bits_send_command@ret
  4694                           
  4695                           ;ECU_LAYER/LCD/ecu_lcd.c: 51:         ret = send_enable_signal(lcd);
  4696     0885  0821               	movf	lcd_4bits_send_command@lcd,w
  4697     0886  160A  118A  25C8  120A  158A  	fcall	_send_enable_signal
  4698     088B  1283               	bcf	3,5	;RP0=0, select bank0
  4699     088C  1303               	bcf	3,6	;RP1=0, select bank0
  4700     088D  00A0               	movwf	lcd_4bits_send_command@ret
  4701                           
  4702                           ;ECU_LAYER/LCD/ecu_lcd.c: 52:         ret = send_4bits(lcd,command);
  4703     088E  087C               	movf	lcd_4bits_send_command@command,w
  4704     088F  00F8               	movwf	send_4bits@command
  4705     0890  0821               	movf	lcd_4bits_send_command@lcd,w
  4706     0891  120A  158A  20EE  120A  158A  	fcall	_send_4bits
  4707     0896  1283               	bcf	3,5	;RP0=0, select bank0
  4708     0897  1303               	bcf	3,6	;RP1=0, select bank0
  4709     0898  00A0               	movwf	lcd_4bits_send_command@ret
  4710                           
  4711                           ;ECU_LAYER/LCD/ecu_lcd.c: 53:         ret = send_enable_signal(lcd);
  4712     0899  0821               	movf	lcd_4bits_send_command@lcd,w
  4713     089A  160A  118A  25C8  120A  158A  	fcall	_send_enable_signal
  4714     089F  1283               	bcf	3,5	;RP0=0, select bank0
  4715     08A0  1303               	bcf	3,6	;RP1=0, select bank0
  4716     08A1  00A0               	movwf	lcd_4bits_send_command@ret
  4717     08A2                     l2875:
  4718                           
  4719                           ;ECU_LAYER/LCD/ecu_lcd.c: 55:     return ret;
  4720     08A2  0820               	movf	lcd_4bits_send_command@ret,w
  4721     08A3                     l62:
  4722     08A3  0008               	return
  4723     08A4                     __end_of_lcd_4bits_send_command:
  4724                           
  4725                           	psect	text19
  4726     15C8                     __ptext19:	
  4727 ;; *************** function _send_enable_signal *****************
  4728 ;; Defined at:
  4729 ;;		line 171 in file "ECU_LAYER/LCD/ecu_lcd.c"
  4730 ;; Parameters:    Size  Location     Type
  4731 ;;  lcd             1    wreg     PTR const struct .
  4732 ;;		 -> lcd(6), 
  4733 ;; Auto vars:     Size  Location     Type
  4734 ;;  lcd             1   10[COMMON] PTR const struct .
  4735 ;;		 -> lcd(6), 
  4736 ;;  ret             1    9[COMMON] unsigned char 
  4737 ;; Return value:  Size  Location     Type
  4738 ;;                  1    wreg      unsigned char 
  4739 ;; Registers used:
  4740 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4741 ;; Tracked objects:
  4742 ;;		On entry : 0/0
  4743 ;;		On exit  : 0/0
  4744 ;;		Unchanged: 0/0
  4745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4746 ;;      Params:         0       0       0       0       0
  4747 ;;      Locals:         2       0       0       0       0
  4748 ;;      Temps:          1       0       0       0       0
  4749 ;;      Totals:         3       0       0       0       0
  4750 ;;Total ram usage:        3 bytes
  4751 ;; Hardware stack levels used: 1
  4752 ;; Hardware stack levels required when called: 1
  4753 ;; This function calls:
  4754 ;;		_gpio_pin_write_logic
  4755 ;; This function is called by:
  4756 ;;		_lcd_4bits_send_command
  4757 ;;		_lcd_4bits_send_char
  4758 ;; This function uses a non-reentrant model
  4759 ;;
  4760                           
  4761     15C8                     _send_enable_signal:	
  4762                           ;psect for function _send_enable_signal
  4763                           
  4764                           
  4765                           ;incstack = 0
  4766                           ; Regs used in _send_enable_signal: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4767                           ;send_enable_signal@lcd stored from wreg
  4768     15C8  00FA               	movwf	send_enable_signal@lcd
  4769     15C9                     l2683:
  4770     15C9                     l2685:
  4771                           
  4772                           ;ECU_LAYER/LCD/ecu_lcd.c: 173:     if(lcd == ((void*)0)){
  4773     15C9  087A               	movf	send_enable_signal@lcd,w
  4774     15CA  1D03               	btfss	3,2
  4775     15CB  2DCD               	goto	u2871
  4776     15CC  2DCE               	goto	u2870
  4777     15CD                     u2871:
  4778     15CD  2DD1               	goto	l2689
  4779     15CE                     u2870:
  4780     15CE                     l2687:
  4781                           
  4782                           ;ECU_LAYER/LCD/ecu_lcd.c: 174:         ret = 0x01;
  4783     15CE  01F9               	clrf	send_enable_signal@ret
  4784     15CF  0AF9               	incf	send_enable_signal@ret,f
  4785                           
  4786                           ;ECU_LAYER/LCD/ecu_lcd.c: 175:     }
  4787     15D0  2DE7               	goto	l125
  4788     15D1                     l2689:
  4789     15D1  01F0               	clrf	gpio_pin_write_logic@logic
  4790     15D2  0AF0               	incf	gpio_pin_write_logic@logic,f
  4791     15D3  087A               	movf	send_enable_signal@lcd,w
  4792     15D4  3E01               	addlw	1
  4793     15D5  120A  158A  2631  160A  118A  	fcall	_gpio_pin_write_logic
  4794     15DA                     l2691:
  4795                           
  4796                           ;ECU_LAYER/LCD/ecu_lcd.c: 178:         _delay((unsigned long)((5)*(8000000UL/4000000.0))
      +                          );
  4797     15DA  3003               	movlw	3
  4798     15DB  00F8               	movwf	??_send_enable_signal
  4799     15DC                     u5487:
  4800     15DC  0BF8               	decfsz	??_send_enable_signal,f
  4801     15DD  2DDC               	goto	u5487
  4802     15DE                     l2693:
  4803                           
  4804                           ;ECU_LAYER/LCD/ecu_lcd.c: 179:         ret = gpio_pin_write_logic(&(lcd->en),GPIO_LOW);
  4805     15DE  01F0               	clrf	gpio_pin_write_logic@logic
  4806     15DF  087A               	movf	send_enable_signal@lcd,w
  4807     15E0  3E01               	addlw	1
  4808     15E1  120A  158A  2631  160A  118A  	fcall	_gpio_pin_write_logic
  4809     15E6  00F9               	movwf	send_enable_signal@ret
  4810     15E7                     l125:	
  4811                           ;ECU_LAYER/LCD/ecu_lcd.c: 180:     }
  4812                           
  4813                           
  4814                           ;ECU_LAYER/LCD/ecu_lcd.c: 181:     return ret;
  4815     15E7  0879               	movf	send_enable_signal@ret,w
  4816     15E8                     l126:
  4817     15E8  0008               	return
  4818     15E9                     __end_of_send_enable_signal:
  4819                           
  4820                           	psect	text20
  4821     08EE                     __ptext20:	
  4822 ;; *************** function _send_4bits *****************
  4823 ;; Defined at:
  4824 ;;		line 157 in file "ECU_LAYER/LCD/ecu_lcd.c"
  4825 ;; Parameters:    Size  Location     Type
  4826 ;;  lcd             1    wreg     PTR struct .
  4827 ;;		 -> lcd(6), 
  4828 ;;  command         1    8[COMMON] unsigned char 
  4829 ;; Auto vars:     Size  Location     Type
  4830 ;;  lcd             1   11[COMMON] PTR struct .
  4831 ;;		 -> lcd(6), 
  4832 ;;  ret             1   10[COMMON] unsigned char 
  4833 ;; Return value:  Size  Location     Type
  4834 ;;                  1    wreg      unsigned char 
  4835 ;; Registers used:
  4836 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4837 ;; Tracked objects:
  4838 ;;		On entry : 0/0
  4839 ;;		On exit  : 0/0
  4840 ;;		Unchanged: 0/0
  4841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4842 ;;      Params:         1       0       0       0       0
  4843 ;;      Locals:         2       0       0       0       0
  4844 ;;      Temps:          1       0       0       0       0
  4845 ;;      Totals:         4       0       0       0       0
  4846 ;;Total ram usage:        4 bytes
  4847 ;; Hardware stack levels used: 1
  4848 ;; Hardware stack levels required when called: 1
  4849 ;; This function calls:
  4850 ;;		_gpio_pin_write_logic
  4851 ;; This function is called by:
  4852 ;;		_lcd_4bits_send_command
  4853 ;;		_lcd_4bits_send_char
  4854 ;; This function uses a non-reentrant model
  4855 ;;
  4856                           
  4857     08EE                     _send_4bits:	
  4858                           ;psect for function _send_4bits
  4859                           
  4860                           
  4861                           ;incstack = 0
  4862                           ; Regs used in _send_4bits: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4863                           ;send_4bits@lcd stored from wreg
  4864     08EE  00FB               	movwf	send_4bits@lcd
  4865     08EF                     l2671:
  4866     08EF                     l2673:
  4867                           
  4868                           ;ECU_LAYER/LCD/ecu_lcd.c: 159:     if(lcd == ((void*)0)){
  4869     08EF  087B               	movf	send_4bits@lcd,w
  4870     08F0  1D03               	btfss	3,2
  4871     08F1  28F3               	goto	u2841
  4872     08F2  28F4               	goto	u2840
  4873     08F3                     u2841:
  4874     08F3  28F7               	goto	l2677
  4875     08F4                     u2840:
  4876     08F4                     l2675:
  4877                           
  4878                           ;ECU_LAYER/LCD/ecu_lcd.c: 160:         ret = 0x01;
  4879     08F4  01FA               	clrf	send_4bits@ret
  4880     08F5  0AFA               	incf	send_4bits@ret,f
  4881                           
  4882                           ;ECU_LAYER/LCD/ecu_lcd.c: 161:     }
  4883     08F6  2936               	goto	l2679
  4884     08F7                     l2677:
  4885                           
  4886                           ;ECU_LAYER/LCD/ecu_lcd.c: 163:         ret = gpio_pin_write_logic(&(lcd->pins[0]),((comm
      +                          and >> 0) & 0x01));
  4887     08F7  0878               	movf	send_4bits@command,w
  4888     08F8  3901               	andlw	1
  4889     08F9  00F0               	movwf	gpio_pin_write_logic@logic
  4890     08FA  087B               	movf	send_4bits@lcd,w
  4891     08FB  3E02               	addlw	2
  4892     08FC  120A  158A  2631  120A  158A  	fcall	_gpio_pin_write_logic
  4893     0901  00FA               	movwf	send_4bits@ret
  4894                           
  4895                           ;ECU_LAYER/LCD/ecu_lcd.c: 164:         ret = gpio_pin_write_logic(&(lcd->pins[1]),((comm
      +                          and >> 1) & 0x01));
  4896     0902  0878               	movf	send_4bits@command,w
  4897     0903  00F9               	movwf	??_send_4bits
  4898     0904  1003               	clrc
  4899     0905  0C79               	rrf	??_send_4bits,w
  4900     0906  3901               	andlw	1
  4901     0907  00F0               	movwf	gpio_pin_write_logic@logic
  4902     0908  087B               	movf	send_4bits@lcd,w
  4903     0909  3E03               	addlw	3
  4904     090A  120A  158A  2631  120A  158A  	fcall	_gpio_pin_write_logic
  4905     090F  00FA               	movwf	send_4bits@ret
  4906                           
  4907                           ;ECU_LAYER/LCD/ecu_lcd.c: 165:         ret = gpio_pin_write_logic(&(lcd->pins[2]),((comm
      +                          and >> 2) & 0x01));
  4908     0910  0878               	movf	send_4bits@command,w
  4909     0911  00F9               	movwf	??_send_4bits
  4910     0912  3002               	movlw	2
  4911     0913                     u2855:
  4912     0913  1003               	clrc
  4913     0914  0CF9               	rrf	??_send_4bits,f
  4914     0915  3EFF               	addlw	-1
  4915     0916  1D03               	skipz
  4916     0917  2913               	goto	u2855
  4917     0918  0879               	movf	??_send_4bits,w
  4918     0919  3901               	andlw	1
  4919     091A  00F0               	movwf	gpio_pin_write_logic@logic
  4920     091B  087B               	movf	send_4bits@lcd,w
  4921     091C  3E04               	addlw	4
  4922     091D  120A  158A  2631  120A  158A  	fcall	_gpio_pin_write_logic
  4923     0922  00FA               	movwf	send_4bits@ret
  4924                           
  4925                           ;ECU_LAYER/LCD/ecu_lcd.c: 166:         ret = gpio_pin_write_logic(&(lcd->pins[3]),((comm
      +                          and >> 3) & 0x01));
  4926     0923  0878               	movf	send_4bits@command,w
  4927     0924  00F9               	movwf	??_send_4bits
  4928     0925  3003               	movlw	3
  4929     0926                     u2865:
  4930     0926  1003               	clrc
  4931     0927  0CF9               	rrf	??_send_4bits,f
  4932     0928  3EFF               	addlw	-1
  4933     0929  1D03               	skipz
  4934     092A  2926               	goto	u2865
  4935     092B  0879               	movf	??_send_4bits,w
  4936     092C  3901               	andlw	1
  4937     092D  00F0               	movwf	gpio_pin_write_logic@logic
  4938     092E  087B               	movf	send_4bits@lcd,w
  4939     092F  3E05               	addlw	5
  4940     0930  120A  158A  2631  120A  158A  	fcall	_gpio_pin_write_logic
  4941     0935  00FA               	movwf	send_4bits@ret
  4942     0936                     l2679:
  4943                           
  4944                           ;ECU_LAYER/LCD/ecu_lcd.c: 168:     return ret;
  4945     0936  087A               	movf	send_4bits@ret,w
  4946     0937                     l121:
  4947     0937  0008               	return
  4948     0938                     __end_of_send_4bits:
  4949                           
  4950                           	psect	text21
  4951     170C                     __ptext21:	
  4952 ;; *************** function _keypad_initialize *****************
  4953 ;; Defined at:
  4954 ;;		line 17 in file "ECU_LAYER/KEYPAD/ecu_keypad.c"
  4955 ;; Parameters:    Size  Location     Type
  4956 ;;  keypad          1    wreg     PTR const struct .
  4957 ;;		 -> keypad(7), 
  4958 ;; Auto vars:     Size  Location     Type
  4959 ;;  keypad          1    0[BANK0 ] PTR const struct .
  4960 ;;		 -> keypad(7), 
  4961 ;;  l_coloumns      1    2[BANK0 ] unsigned char 
  4962 ;;  l_rows          1    1[BANK0 ] unsigned char 
  4963 ;;  ret             1    0        unsigned char 
  4964 ;; Return value:  Size  Location     Type
  4965 ;;                  1    wreg      unsigned char 
  4966 ;; Registers used:
  4967 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4968 ;; Tracked objects:
  4969 ;;		On entry : 0/0
  4970 ;;		On exit  : 0/0
  4971 ;;		Unchanged: 0/0
  4972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4973 ;;      Params:         0       0       0       0       0
  4974 ;;      Locals:         0       3       0       0       0
  4975 ;;      Temps:          0       0       0       0       0
  4976 ;;      Totals:         0       3       0       0       0
  4977 ;;Total ram usage:        3 bytes
  4978 ;; Hardware stack levels used: 1
  4979 ;; Hardware stack levels required when called: 2
  4980 ;; This function calls:
  4981 ;;		_gpio_pin_initialize
  4982 ;; This function is called by:
  4983 ;;		_ecu_initialzie
  4984 ;; This function uses a non-reentrant model
  4985 ;;
  4986                           
  4987     170C                     _keypad_initialize:	
  4988                           ;psect for function _keypad_initialize
  4989                           
  4990                           
  4991                           ;incstack = 0
  4992                           ; Regs used in _keypad_initialize: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4993                           ;keypad_initialize@keypad stored from wreg
  4994     170C  1283               	bcf	3,5	;RP0=0, select bank0
  4995     170D  1303               	bcf	3,6	;RP1=0, select bank0
  4996     170E  00A0               	movwf	keypad_initialize@keypad
  4997     170F                     l2947:
  4998                           
  4999                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 19:     uint8 l_rows = 0x00;
  5000     170F  01A1               	clrf	keypad_initialize@l_rows
  5001                           
  5002                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 20:     uint8 l_coloumns = 0x00;
  5003     1710  01A2               	clrf	keypad_initialize@l_coloumns
  5004     1711                     l2949:
  5005                           
  5006                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 21:     if(keypad == ((void*)0)){
  5007     1711  0820               	movf	keypad_initialize@keypad,w
  5008     1712  1D03               	btfss	3,2
  5009     1713  2F15               	goto	u3491
  5010     1714  2F16               	goto	u3490
  5011     1715                     u3491:
  5012     1715  2F17               	goto	l2953
  5013     1716                     u3490:
  5014     1716                     l2951:
  5015                           
  5016                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 23:     }
  5017     1716  2F40               	goto	l19
  5018     1717                     l2953:
  5019                           
  5020                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 25:         for(l_rows = 0x00;l_rows < 4;l_rows++){
  5021     1717  01A1               	clrf	keypad_initialize@l_rows
  5022     1718                     l2959:
  5023     1718  0821               	movf	keypad_initialize@l_rows,w
  5024     1719  0720               	addwf	keypad_initialize@keypad,w
  5025     171A  120A  118A  200F  160A  118A  	fcall	_gpio_pin_initialize
  5026     171F                     l2961:
  5027                           
  5028                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 27:         }
  5029     171F  3001               	movlw	1
  5030     1720  00FF               	movwf	btemp+1
  5031     1721  087F               	movf	btemp+1,w
  5032     1722  1283               	bcf	3,5	;RP0=0, select bank0
  5033     1723  1303               	bcf	3,6	;RP1=0, select bank0
  5034     1724  07A1               	addwf	keypad_initialize@l_rows,f
  5035     1725                     l2963:
  5036     1725  3004               	movlw	4
  5037     1726  0221               	subwf	keypad_initialize@l_rows,w
  5038     1727  1C03               	skipc
  5039     1728  2F2A               	goto	u3501
  5040     1729  2F2B               	goto	u3500
  5041     172A                     u3501:
  5042     172A  2F18               	goto	l2959
  5043     172B                     u3500:
  5044     172B                     l2965:
  5045                           
  5046                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 29:         for(l_coloumns = 0x00;l_coloumns < 3;l_colou
      +                          mns++){
  5047     172B  01A2               	clrf	keypad_initialize@l_coloumns
  5048     172C                     l2971:
  5049     172C  0822               	movf	keypad_initialize@l_coloumns,w
  5050     172D  0720               	addwf	keypad_initialize@keypad,w
  5051     172E  3E04               	addlw	4
  5052     172F  120A  118A  200F  160A  118A  	fcall	_gpio_pin_initialize
  5053     1734                     l2973:
  5054                           
  5055                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 31:         }
  5056     1734  3001               	movlw	1
  5057     1735  00FF               	movwf	btemp+1
  5058     1736  087F               	movf	btemp+1,w
  5059     1737  1283               	bcf	3,5	;RP0=0, select bank0
  5060     1738  1303               	bcf	3,6	;RP1=0, select bank0
  5061     1739  07A2               	addwf	keypad_initialize@l_coloumns,f
  5062     173A                     l2975:
  5063     173A  3003               	movlw	3
  5064     173B  0222               	subwf	keypad_initialize@l_coloumns,w
  5065     173C  1C03               	skipc
  5066     173D  2F3F               	goto	u3511
  5067     173E  2F40               	goto	u3510
  5068     173F                     u3511:
  5069     173F  2F2C               	goto	l2971
  5070     1740                     u3510:
  5071     1740                     l19:
  5072     1740  0008               	return
  5073     1741                     __end_of_keypad_initialize:
  5074                           
  5075                           	psect	text22
  5076     000F                     __ptext22:	
  5077 ;; *************** function _gpio_pin_initialize *****************
  5078 ;; Defined at:
  5079 ;;		line 103 in file "MCAL_LAYER/GPIO/mcal_gpio.c"
  5080 ;; Parameters:    Size  Location     Type
  5081 ;;  pin             1    wreg     PTR const struct .
  5082 ;;		 -> lcd$pins(4), lcd(6), motor2$pins(2), motor2(2), 
  5083 ;;		 -> motor1$pins(2), motor1(2), keypad$COLOUMNS_PIN(3), keypad$ROWS_PIN(4), 
  5084 ;;		 -> keypad(7), 
  5085 ;; Auto vars:     Size  Location     Type
  5086 ;;  pin             1   11[COMMON] PTR const struct .
  5087 ;;		 -> lcd$pins(4), lcd(6), motor2$pins(2), motor2(2), 
  5088 ;;		 -> motor1$pins(2), motor1(2), keypad$COLOUMNS_PIN(3), keypad$ROWS_PIN(4), 
  5089 ;;		 -> keypad(7), 
  5090 ;;  ret             1   10[COMMON] unsigned char 
  5091 ;; Return value:  Size  Location     Type
  5092 ;;                  1    wreg      unsigned char 
  5093 ;; Registers used:
  5094 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5095 ;; Tracked objects:
  5096 ;;		On entry : 0/0
  5097 ;;		On exit  : 0/0
  5098 ;;		Unchanged: 0/0
  5099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5100 ;;      Params:         0       0       0       0       0
  5101 ;;      Locals:         2       0       0       0       0
  5102 ;;      Temps:          2       0       0       0       0
  5103 ;;      Totals:         4       0       0       0       0
  5104 ;;Total ram usage:        4 bytes
  5105 ;; Hardware stack levels used: 1
  5106 ;; Hardware stack levels required when called: 1
  5107 ;; This function calls:
  5108 ;;		_gpio_pin_direction_initialize
  5109 ;;		_gpio_pin_write_logic
  5110 ;; This function is called by:
  5111 ;;		_keypad_initialize
  5112 ;;		_lcd_4bits_initialize
  5113 ;;		_motor_initialize
  5114 ;; This function uses a non-reentrant model
  5115 ;;
  5116                           
  5117     000F                     _gpio_pin_initialize:	
  5118                           ;psect for function _gpio_pin_initialize
  5119                           
  5120                           
  5121                           ;incstack = 0
  5122                           ; Regs used in _gpio_pin_initialize: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  5123                           ;gpio_pin_initialize@pin stored from wreg
  5124     000F  00FB               	movwf	gpio_pin_initialize@pin
  5125     0010                     l2835:
  5126                           
  5127                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 104:     uint8 ret = 0x00;
  5128     0010  01FA               	clrf	gpio_pin_initialize@ret
  5129     0011                     l2837:
  5130                           
  5131                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 105:     if (pin == ((void*)0)) {
  5132     0011  087B               	movf	gpio_pin_initialize@pin,w
  5133     0012  1D03               	btfss	3,2
  5134     0013  2815               	goto	u3251
  5135     0014  2816               	goto	u3250
  5136     0015                     u3251:
  5137     0015  2819               	goto	l2841
  5138     0016                     u3250:
  5139     0016                     l2839:
  5140                           
  5141                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 106:         ret = 0x01;
  5142     0016  01FA               	clrf	gpio_pin_initialize@ret
  5143     0017  0AFA               	incf	gpio_pin_initialize@ret,f
  5144                           
  5145                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 107:     } else {
  5146     0018  28A0               	goto	l2863
  5147     0019                     l2841:
  5148                           
  5149                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 108:         if ((pin->port == PORTA_INDEX && pin->pin < 6
      +                          ) || (pin->port == PORTB_INDEX && pin->pin < 8) || (pin->port == PORTC_INDEX && pin->pin
      +                           < 8) ||
  5150     0019  087B               	movf	gpio_pin_initialize@pin,w
  5151     001A  0084               	movwf	4
  5152     001B  1383               	bcf	3,7	;select IRP bank0
  5153     001C  0800               	movf	0,w
  5154     001D  3907               	andlw	7
  5155     001E  3A00               	xorlw	0
  5156     001F  1D03               	skipz
  5157     0020  2822               	goto	u3261
  5158     0021  2823               	goto	u3260
  5159     0022                     u3261:
  5160     0022  2831               	goto	l2845
  5161     0023                     u3260:
  5162     0023                     l2843:
  5163     0023  087B               	movf	gpio_pin_initialize@pin,w
  5164     0024  0084               	movwf	4
  5165     0025  0C00               	rrf	0,w
  5166     0026  00F8               	movwf	??_gpio_pin_initialize
  5167     0027  0CF8               	rrf	??_gpio_pin_initialize,f
  5168     0028  0C78               	rrf	??_gpio_pin_initialize,w
  5169     0029  3907               	andlw	7
  5170     002A  00F9               	movwf	??_gpio_pin_initialize+1
  5171     002B  3006               	movlw	6
  5172     002C  0279               	subwf	??_gpio_pin_initialize+1,w
  5173     002D  1C03               	skipc
  5174     002E  2830               	goto	u3271
  5175     002F  2831               	goto	u3270
  5176     0030                     u3271:
  5177     0030  288D               	goto	l2861
  5178     0031                     u3270:
  5179     0031                     l2845:
  5180     0031  087B               	movf	gpio_pin_initialize@pin,w
  5181     0032  0084               	movwf	4
  5182     0033  0800               	movf	0,w
  5183     0034  3907               	andlw	7
  5184     0035  3A01               	xorlw	1
  5185     0036  1D03               	skipz
  5186     0037  2839               	goto	u3281
  5187     0038  283A               	goto	u3280
  5188     0039                     u3281:
  5189     0039  2848               	goto	l2849
  5190     003A                     u3280:
  5191     003A                     l2847:
  5192     003A  087B               	movf	gpio_pin_initialize@pin,w
  5193     003B  0084               	movwf	4
  5194     003C  0C00               	rrf	0,w
  5195     003D  00F8               	movwf	??_gpio_pin_initialize
  5196     003E  0CF8               	rrf	??_gpio_pin_initialize,f
  5197     003F  0C78               	rrf	??_gpio_pin_initialize,w
  5198     0040  3907               	andlw	7
  5199     0041  00F9               	movwf	??_gpio_pin_initialize+1
  5200     0042  3008               	movlw	8
  5201     0043  0279               	subwf	??_gpio_pin_initialize+1,w
  5202     0044  1C03               	skipc
  5203     0045  2847               	goto	u3291
  5204     0046  2848               	goto	u3290
  5205     0047                     u3291:
  5206     0047  288D               	goto	l2861
  5207     0048                     u3290:
  5208     0048                     l2849:
  5209     0048  087B               	movf	gpio_pin_initialize@pin,w
  5210     0049  0084               	movwf	4
  5211     004A  0800               	movf	0,w
  5212     004B  3907               	andlw	7
  5213     004C  3A02               	xorlw	2
  5214     004D  1D03               	skipz
  5215     004E  2850               	goto	u3301
  5216     004F  2851               	goto	u3300
  5217     0050                     u3301:
  5218     0050  285F               	goto	l2853
  5219     0051                     u3300:
  5220     0051                     l2851:
  5221     0051  087B               	movf	gpio_pin_initialize@pin,w
  5222     0052  0084               	movwf	4
  5223     0053  0C00               	rrf	0,w
  5224     0054  00F8               	movwf	??_gpio_pin_initialize
  5225     0055  0CF8               	rrf	??_gpio_pin_initialize,f
  5226     0056  0C78               	rrf	??_gpio_pin_initialize,w
  5227     0057  3907               	andlw	7
  5228     0058  00F9               	movwf	??_gpio_pin_initialize+1
  5229     0059  3008               	movlw	8
  5230     005A  0279               	subwf	??_gpio_pin_initialize+1,w
  5231     005B  1C03               	skipc
  5232     005C  285E               	goto	u3311
  5233     005D  285F               	goto	u3310
  5234     005E                     u3311:
  5235     005E  288D               	goto	l2861
  5236     005F                     u3310:
  5237     005F                     l2853:
  5238     005F  087B               	movf	gpio_pin_initialize@pin,w
  5239     0060  0084               	movwf	4
  5240     0061  0800               	movf	0,w
  5241     0062  3907               	andlw	7
  5242     0063  3A03               	xorlw	3
  5243     0064  1D03               	skipz
  5244     0065  2867               	goto	u3321
  5245     0066  2868               	goto	u3320
  5246     0067                     u3321:
  5247     0067  2876               	goto	l2857
  5248     0068                     u3320:
  5249     0068                     l2855:
  5250     0068  087B               	movf	gpio_pin_initialize@pin,w
  5251     0069  0084               	movwf	4
  5252     006A  0C00               	rrf	0,w
  5253     006B  00F8               	movwf	??_gpio_pin_initialize
  5254     006C  0CF8               	rrf	??_gpio_pin_initialize,f
  5255     006D  0C78               	rrf	??_gpio_pin_initialize,w
  5256     006E  3907               	andlw	7
  5257     006F  00F9               	movwf	??_gpio_pin_initialize+1
  5258     0070  3008               	movlw	8
  5259     0071  0279               	subwf	??_gpio_pin_initialize+1,w
  5260     0072  1C03               	skipc
  5261     0073  2875               	goto	u3331
  5262     0074  2876               	goto	u3330
  5263     0075                     u3331:
  5264     0075  288D               	goto	l2861
  5265     0076                     u3330:
  5266     0076                     l2857:
  5267     0076  087B               	movf	gpio_pin_initialize@pin,w
  5268     0077  0084               	movwf	4
  5269     0078  0800               	movf	0,w
  5270     0079  3907               	andlw	7
  5271     007A  3A04               	xorlw	4
  5272     007B  1D03               	skipz
  5273     007C  287E               	goto	u3341
  5274     007D  287F               	goto	u3340
  5275     007E                     u3341:
  5276     007E  2816               	goto	l2839
  5277     007F                     u3340:
  5278     007F                     l2859:
  5279     007F  087B               	movf	gpio_pin_initialize@pin,w
  5280     0080  0084               	movwf	4
  5281     0081  0C00               	rrf	0,w
  5282     0082  00F8               	movwf	??_gpio_pin_initialize
  5283     0083  0CF8               	rrf	??_gpio_pin_initialize,f
  5284     0084  0C78               	rrf	??_gpio_pin_initialize,w
  5285     0085  3907               	andlw	7
  5286     0086  00F9               	movwf	??_gpio_pin_initialize+1
  5287     0087  3003               	movlw	3
  5288     0088  0279               	subwf	??_gpio_pin_initialize+1,w
  5289     0089  1803               	skipnc
  5290     008A  288C               	goto	u3351
  5291     008B  288D               	goto	u3350
  5292     008C                     u3351:
  5293     008C  2816               	goto	l2839
  5294     008D                     u3350:
  5295     008D                     l2861:
  5296                           
  5297                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 109:                 (pin->port == PORTD_INDEX && pin->pin
      +                           < 8) || (pin->port == PORTE_INDEX && pin->pin < 3)) {;MCAL_LAYER/GPIO/mcal_gpio.c: 110:
      +                                       gpio_pin_direction_initialize(pin);
  5298     008D  087B               	movf	gpio_pin_initialize@pin,w
  5299     008E  120A  158A  2559  120A  118A  	fcall	_gpio_pin_direction_initialize
  5300                           
  5301                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 111:             gpio_pin_write_logic(pin, pin->logic);
  5302     0093  087B               	movf	gpio_pin_initialize@pin,w
  5303     0094  0084               	movwf	4
  5304     0095  3000               	movlw	0
  5305     0096  1383               	bcf	3,7	;select IRP bank0
  5306     0097  1B00               	btfsc	0,6
  5307     0098  3001               	movlw	1
  5308     0099  00F0               	movwf	gpio_pin_write_logic@logic
  5309     009A  087B               	movf	gpio_pin_initialize@pin,w
  5310     009B  120A  158A  2631  120A  118A  	fcall	_gpio_pin_write_logic
  5311     00A0                     l2863:	
  5312                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 112:         } else {
  5313                           
  5314                           
  5315                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 116:     return ret;
  5316     00A0  087A               	movf	gpio_pin_initialize@ret,w
  5317     00A1                     l391:
  5318     00A1  0008               	return
  5319     00A2                     __end_of_gpio_pin_initialize:
  5320                           
  5321                           	psect	text23
  5322     0E31                     __ptext23:	
  5323 ;; *************** function _gpio_pin_write_logic *****************
  5324 ;; Defined at:
  5325 ;;		line 50 in file "MCAL_LAYER/GPIO/mcal_gpio.c"
  5326 ;; Parameters:    Size  Location     Type
  5327 ;;  pin             1    wreg     PTR const struct .
  5328 ;;		 -> lcd$pins(4), lcd(6), motor2$pins(2), motor2(2), 
  5329 ;;		 -> motor1$pins(2), motor1(2), keypad$COLOUMNS_PIN(3), keypad$ROWS_PIN(4), 
  5330 ;;		 -> keypad(7), 
  5331 ;;  logic           1    0[COMMON] enum E1519
  5332 ;; Auto vars:     Size  Location     Type
  5333 ;;  pin             1    7[COMMON] PTR const struct .
  5334 ;;		 -> lcd$pins(4), lcd(6), motor2$pins(2), motor2(2), 
  5335 ;;		 -> motor1$pins(2), motor1(2), keypad$COLOUMNS_PIN(3), keypad$ROWS_PIN(4), 
  5336 ;;		 -> keypad(7), 
  5337 ;;  ret             1    6[COMMON] unsigned char 
  5338 ;; Return value:  Size  Location     Type
  5339 ;;                  1    wreg      unsigned char 
  5340 ;; Registers used:
  5341 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  5342 ;; Tracked objects:
  5343 ;;		On entry : 0/0
  5344 ;;		On exit  : 0/0
  5345 ;;		Unchanged: 0/0
  5346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5347 ;;      Params:         1       0       0       0       0
  5348 ;;      Locals:         2       0       0       0       0
  5349 ;;      Temps:          5       0       0       0       0
  5350 ;;      Totals:         8       0       0       0       0
  5351 ;;Total ram usage:        8 bytes
  5352 ;; Hardware stack levels used: 1
  5353 ;; This function calls:
  5354 ;;		Nothing
  5355 ;; This function is called by:
  5356 ;;		_keypad_read_value
  5357 ;;		_lcd_4bits_send_command
  5358 ;;		_lcd_4bits_send_char
  5359 ;;		_send_4bits
  5360 ;;		_send_enable_signal
  5361 ;;		_motor_turn_right
  5362 ;;		_motor_turn_left
  5363 ;;		_motor_turn_off
  5364 ;;		_gpio_pin_initialize
  5365 ;; This function uses a non-reentrant model
  5366 ;;
  5367                           
  5368     0E31                     _gpio_pin_write_logic:	
  5369                           ;psect for function _gpio_pin_write_logic
  5370                           
  5371                           
  5372                           ;incstack = 0
  5373                           ; Regs used in _gpio_pin_write_logic: [wreg-fsr0h+status,2+status,0+btemp+1]
  5374                           ;gpio_pin_write_logic@pin stored from wreg
  5375     0E31  00F7               	movwf	gpio_pin_write_logic@pin
  5376     0E32                     l2629:
  5377                           
  5378                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 51:     uint8 ret = 0x00;
  5379     0E32  01F6               	clrf	gpio_pin_write_logic@ret
  5380     0E33                     l2631:
  5381                           
  5382                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 52:     if (pin == ((void*)0)) {
  5383     0E33  0877               	movf	gpio_pin_write_logic@pin,w
  5384     0E34  1D03               	btfss	3,2
  5385     0E35  2E37               	goto	u2711
  5386     0E36  2E38               	goto	u2710
  5387     0E37                     u2711:
  5388     0E37  2E3B               	goto	l2635
  5389     0E38                     u2710:
  5390     0E38                     l2633:
  5391                           
  5392                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 53:         ret = 0x01;
  5393     0E38  01F6               	clrf	gpio_pin_write_logic@ret
  5394     0E39  0AF6               	incf	gpio_pin_write_logic@ret,f
  5395                           
  5396                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 54:     } else {
  5397     0E3A  2F0F               	goto	l2663
  5398     0E3B                     l2635:
  5399                           
  5400                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 55:         if ((pin->port == PORTA_INDEX && pin->pin < 6)
      +                           || (pin->port == PORTB_INDEX && pin->pin < 8) || (pin->port == PORTC_INDEX && pin->pin 
      +                          < 8) ||
  5401     0E3B  0877               	movf	gpio_pin_write_logic@pin,w
  5402     0E3C  0084               	movwf	4
  5403     0E3D  1383               	bcf	3,7	;select IRP bank0
  5404     0E3E  0800               	movf	0,w
  5405     0E3F  3907               	andlw	7
  5406     0E40  3A00               	xorlw	0
  5407     0E41  1D03               	skipz
  5408     0E42  2E44               	goto	u2721
  5409     0E43  2E45               	goto	u2720
  5410     0E44                     u2721:
  5411     0E44  2E53               	goto	l2639
  5412     0E45                     u2720:
  5413     0E45                     l2637:
  5414     0E45  0877               	movf	gpio_pin_write_logic@pin,w
  5415     0E46  0084               	movwf	4
  5416     0E47  0C00               	rrf	0,w
  5417     0E48  00F1               	movwf	??_gpio_pin_write_logic
  5418     0E49  0CF1               	rrf	??_gpio_pin_write_logic,f
  5419     0E4A  0C71               	rrf	??_gpio_pin_write_logic,w
  5420     0E4B  3907               	andlw	7
  5421     0E4C  00F2               	movwf	??_gpio_pin_write_logic+1
  5422     0E4D  3006               	movlw	6
  5423     0E4E  0272               	subwf	??_gpio_pin_write_logic+1,w
  5424     0E4F  1C03               	skipc
  5425     0E50  2E52               	goto	u2731
  5426     0E51  2E53               	goto	u2730
  5427     0E52                     u2731:
  5428     0E52  2EFF               	goto	l2661
  5429     0E53                     u2730:
  5430     0E53                     l2639:
  5431     0E53  0877               	movf	gpio_pin_write_logic@pin,w
  5432     0E54  0084               	movwf	4
  5433     0E55  0800               	movf	0,w
  5434     0E56  3907               	andlw	7
  5435     0E57  3A01               	xorlw	1
  5436     0E58  1D03               	skipz
  5437     0E59  2E5B               	goto	u2741
  5438     0E5A  2E5C               	goto	u2740
  5439     0E5B                     u2741:
  5440     0E5B  2E6A               	goto	l2643
  5441     0E5C                     u2740:
  5442     0E5C                     l2641:
  5443     0E5C  0877               	movf	gpio_pin_write_logic@pin,w
  5444     0E5D  0084               	movwf	4
  5445     0E5E  0C00               	rrf	0,w
  5446     0E5F  00F1               	movwf	??_gpio_pin_write_logic
  5447     0E60  0CF1               	rrf	??_gpio_pin_write_logic,f
  5448     0E61  0C71               	rrf	??_gpio_pin_write_logic,w
  5449     0E62  3907               	andlw	7
  5450     0E63  00F2               	movwf	??_gpio_pin_write_logic+1
  5451     0E64  3008               	movlw	8
  5452     0E65  0272               	subwf	??_gpio_pin_write_logic+1,w
  5453     0E66  1C03               	skipc
  5454     0E67  2E69               	goto	u2751
  5455     0E68  2E6A               	goto	u2750
  5456     0E69                     u2751:
  5457     0E69  2EFF               	goto	l2661
  5458     0E6A                     u2750:
  5459     0E6A                     l2643:
  5460     0E6A  0877               	movf	gpio_pin_write_logic@pin,w
  5461     0E6B  0084               	movwf	4
  5462     0E6C  0800               	movf	0,w
  5463     0E6D  3907               	andlw	7
  5464     0E6E  3A02               	xorlw	2
  5465     0E6F  1D03               	skipz
  5466     0E70  2E72               	goto	u2761
  5467     0E71  2E73               	goto	u2760
  5468     0E72                     u2761:
  5469     0E72  2E81               	goto	l2647
  5470     0E73                     u2760:
  5471     0E73                     l2645:
  5472     0E73  0877               	movf	gpio_pin_write_logic@pin,w
  5473     0E74  0084               	movwf	4
  5474     0E75  0C00               	rrf	0,w
  5475     0E76  00F1               	movwf	??_gpio_pin_write_logic
  5476     0E77  0CF1               	rrf	??_gpio_pin_write_logic,f
  5477     0E78  0C71               	rrf	??_gpio_pin_write_logic,w
  5478     0E79  3907               	andlw	7
  5479     0E7A  00F2               	movwf	??_gpio_pin_write_logic+1
  5480     0E7B  3008               	movlw	8
  5481     0E7C  0272               	subwf	??_gpio_pin_write_logic+1,w
  5482     0E7D  1C03               	skipc
  5483     0E7E  2E80               	goto	u2771
  5484     0E7F  2E81               	goto	u2770
  5485     0E80                     u2771:
  5486     0E80  2EFF               	goto	l2661
  5487     0E81                     u2770:
  5488     0E81                     l2647:
  5489     0E81  0877               	movf	gpio_pin_write_logic@pin,w
  5490     0E82  0084               	movwf	4
  5491     0E83  0800               	movf	0,w
  5492     0E84  3907               	andlw	7
  5493     0E85  3A03               	xorlw	3
  5494     0E86  1D03               	skipz
  5495     0E87  2E89               	goto	u2781
  5496     0E88  2E8A               	goto	u2780
  5497     0E89                     u2781:
  5498     0E89  2E98               	goto	l2651
  5499     0E8A                     u2780:
  5500     0E8A                     l2649:
  5501     0E8A  0877               	movf	gpio_pin_write_logic@pin,w
  5502     0E8B  0084               	movwf	4
  5503     0E8C  0C00               	rrf	0,w
  5504     0E8D  00F1               	movwf	??_gpio_pin_write_logic
  5505     0E8E  0CF1               	rrf	??_gpio_pin_write_logic,f
  5506     0E8F  0C71               	rrf	??_gpio_pin_write_logic,w
  5507     0E90  3907               	andlw	7
  5508     0E91  00F2               	movwf	??_gpio_pin_write_logic+1
  5509     0E92  3008               	movlw	8
  5510     0E93  0272               	subwf	??_gpio_pin_write_logic+1,w
  5511     0E94  1C03               	skipc
  5512     0E95  2E97               	goto	u2791
  5513     0E96  2E98               	goto	u2790
  5514     0E97                     u2791:
  5515     0E97  2EFF               	goto	l2661
  5516     0E98                     u2790:
  5517     0E98                     l2651:
  5518     0E98  0877               	movf	gpio_pin_write_logic@pin,w
  5519     0E99  0084               	movwf	4
  5520     0E9A  0800               	movf	0,w
  5521     0E9B  3907               	andlw	7
  5522     0E9C  3A04               	xorlw	4
  5523     0E9D  1D03               	skipz
  5524     0E9E  2EA0               	goto	u2801
  5525     0E9F  2EA1               	goto	u2800
  5526     0EA0                     u2801:
  5527     0EA0  2E38               	goto	l2633
  5528     0EA1                     u2800:
  5529     0EA1                     l2653:
  5530     0EA1  0877               	movf	gpio_pin_write_logic@pin,w
  5531     0EA2  0084               	movwf	4
  5532     0EA3  0C00               	rrf	0,w
  5533     0EA4  00F1               	movwf	??_gpio_pin_write_logic
  5534     0EA5  0CF1               	rrf	??_gpio_pin_write_logic,f
  5535     0EA6  0C71               	rrf	??_gpio_pin_write_logic,w
  5536     0EA7  3907               	andlw	7
  5537     0EA8  00F2               	movwf	??_gpio_pin_write_logic+1
  5538     0EA9  3003               	movlw	3
  5539     0EAA  0272               	subwf	??_gpio_pin_write_logic+1,w
  5540     0EAB  1803               	skipnc
  5541     0EAC  2EAE               	goto	u2811
  5542     0EAD  2EAF               	goto	u2810
  5543     0EAE                     u2811:
  5544     0EAE  2E38               	goto	l2633
  5545     0EAF                     u2810:
  5546     0EAF  2EFF               	goto	l2661
  5547     0EB0                     l2655:
  5548                           
  5549                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 60:                     (*port_registers[pin->port] |= (0x
      +                          01 << pin->pin));
  5550     0EB0  3001               	movlw	1
  5551     0EB1  00F1               	movwf	??_gpio_pin_write_logic
  5552     0EB2  0877               	movf	gpio_pin_write_logic@pin,w
  5553     0EB3  0084               	movwf	4
  5554     0EB4  0C00               	rrf	0,w
  5555     0EB5  00F2               	movwf	??_gpio_pin_write_logic+1
  5556     0EB6  0CF2               	rrf	??_gpio_pin_write_logic+1,f
  5557     0EB7  0C72               	rrf	??_gpio_pin_write_logic+1,w
  5558     0EB8  3907               	andlw	7
  5559     0EB9  3E01               	addlw	1
  5560     0EBA  2EBD               	goto	u2824
  5561     0EBB                     u2825:
  5562     0EBB  1003               	clrc
  5563     0EBC  0DF1               	rlf	??_gpio_pin_write_logic,f
  5564     0EBD                     u2824:
  5565     0EBD  3EFF               	addlw	-1
  5566     0EBE  1D03               	skipz
  5567     0EBF  2EBB               	goto	u2825
  5568     0EC0  0871               	movf	??_gpio_pin_write_logic,w
  5569     0EC1  00FF               	movwf	btemp+1
  5570     0EC2  0877               	movf	gpio_pin_write_logic@pin,w
  5571     0EC3  0084               	movwf	4
  5572     0EC4  0800               	movf	0,w
  5573     0EC5  3907               	andlw	7
  5574     0EC6  00F3               	movwf	??_gpio_pin_write_logic+2
  5575     0EC7  0773               	addwf	??_gpio_pin_write_logic+2,w
  5576     0EC8  3EA0               	addlw	(low (_port_registers| 0))& (0+255)
  5577     0EC9  0084               	movwf	4
  5578     0ECA  0800               	movf	0,w
  5579     0ECB  00F4               	movwf	??_gpio_pin_write_logic+3
  5580     0ECC  0A84               	incf	4,f
  5581     0ECD  0800               	movf	0,w
  5582     0ECE  00F5               	movwf	??_gpio_pin_write_logic+4
  5583     0ECF  0874               	movf	??_gpio_pin_write_logic+3,w
  5584     0ED0  0084               	movwf	4
  5585     0ED1  1783               	bsf	3,7
  5586     0ED2  1C75               	btfss	??_gpio_pin_write_logic+4,0
  5587     0ED3  1383               	bcf	3,7
  5588     0ED4  087F               	movf	btemp+1,w
  5589     0ED5  0480               	iorwf	0,f
  5590                           
  5591                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 61:                     break;
  5592     0ED6  2F0F               	goto	l2663
  5593     0ED7                     l2657:
  5594                           
  5595                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 63:                     (*port_registers[pin->port] &= ~(0
      +                          x01 << pin->pin));
  5596     0ED7  3001               	movlw	1
  5597     0ED8  00F1               	movwf	??_gpio_pin_write_logic
  5598     0ED9  0877               	movf	gpio_pin_write_logic@pin,w
  5599     0EDA  0084               	movwf	4
  5600     0EDB  0C00               	rrf	0,w
  5601     0EDC  00F2               	movwf	??_gpio_pin_write_logic+1
  5602     0EDD  0CF2               	rrf	??_gpio_pin_write_logic+1,f
  5603     0EDE  0C72               	rrf	??_gpio_pin_write_logic+1,w
  5604     0EDF  3907               	andlw	7
  5605     0EE0  3E01               	addlw	1
  5606     0EE1  2EE4               	goto	u2834
  5607     0EE2                     u2835:
  5608     0EE2  1003               	clrc
  5609     0EE3  0DF1               	rlf	??_gpio_pin_write_logic,f
  5610     0EE4                     u2834:
  5611     0EE4  3EFF               	addlw	-1
  5612     0EE5  1D03               	skipz
  5613     0EE6  2EE2               	goto	u2835
  5614     0EE7  0871               	movf	??_gpio_pin_write_logic,w
  5615     0EE8  3AFF               	xorlw	255
  5616     0EE9  00FF               	movwf	btemp+1
  5617     0EEA  0877               	movf	gpio_pin_write_logic@pin,w
  5618     0EEB  0084               	movwf	4
  5619     0EEC  0800               	movf	0,w
  5620     0EED  3907               	andlw	7
  5621     0EEE  00F3               	movwf	??_gpio_pin_write_logic+2
  5622     0EEF  0773               	addwf	??_gpio_pin_write_logic+2,w
  5623     0EF0  3EA0               	addlw	(low (_port_registers| 0))& (0+255)
  5624     0EF1  0084               	movwf	4
  5625     0EF2  0800               	movf	0,w
  5626     0EF3  00F4               	movwf	??_gpio_pin_write_logic+3
  5627     0EF4  0A84               	incf	4,f
  5628     0EF5  0800               	movf	0,w
  5629     0EF6  00F5               	movwf	??_gpio_pin_write_logic+4
  5630     0EF7  0874               	movf	??_gpio_pin_write_logic+3,w
  5631     0EF8  0084               	movwf	4
  5632     0EF9  1783               	bsf	3,7
  5633     0EFA  1C75               	btfss	??_gpio_pin_write_logic+4,0
  5634     0EFB  1383               	bcf	3,7
  5635     0EFC  087F               	movf	btemp+1,w
  5636     0EFD  0580               	andwf	0,f
  5637                           
  5638                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 64:                     break;
  5639     0EFE  2F0F               	goto	l2663
  5640     0EFF                     l2661:
  5641     0EFF  0870               	movf	gpio_pin_write_logic@logic,w
  5642     0F00  00F1               	movwf	??_gpio_pin_write_logic
  5643     0F01  01F2               	clrf	??_gpio_pin_write_logic+1
  5644                           
  5645                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5646                           ; Switch size 1, requested type "simple"
  5647                           ; Number of cases is 1, Range of values is 0 to 0
  5648                           ; switch strategies available:
  5649                           ; Name         Instructions Cycles
  5650                           ; simple_byte            4     3 (average)
  5651                           ; direct_byte           11     8 (fixed)
  5652                           ; jumptable            260     6 (fixed)
  5653                           ;	Chosen strategy is simple_byte
  5654     0F02  0872               	movf	??_gpio_pin_write_logic+1,w
  5655     0F03  3A00               	xorlw	0	; case 0
  5656     0F04  1903               	skipnz
  5657     0F05  2F07               	goto	l4083
  5658     0F06  2F0F               	goto	l2663
  5659     0F07                     l4083:
  5660                           
  5661                           ; Switch size 1, requested type "simple"
  5662                           ; Number of cases is 2, Range of values is 0 to 1
  5663                           ; switch strategies available:
  5664                           ; Name         Instructions Cycles
  5665                           ; simple_byte            7     4 (average)
  5666                           ; direct_byte           14     8 (fixed)
  5667                           ; jumptable            260     6 (fixed)
  5668                           ;	Chosen strategy is simple_byte
  5669     0F07  0871               	movf	??_gpio_pin_write_logic,w
  5670     0F08  3A00               	xorlw	0	; case 0
  5671     0F09  1903               	skipnz
  5672     0F0A  2ED7               	goto	l2657
  5673     0F0B  3A01               	xorlw	1	; case 1
  5674     0F0C  1903               	skipnz
  5675     0F0D  2EB0               	goto	l2655
  5676     0F0E  2F0F               	goto	l2663
  5677     0F0F                     l2663:
  5678                           
  5679                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 70:     return ret;
  5680     0F0F  0876               	movf	gpio_pin_write_logic@ret,w
  5681     0F10                     l338:
  5682     0F10  0008               	return
  5683     0F11                     __end_of_gpio_pin_write_logic:
  5684                           
  5685                           	psect	text24
  5686     0D59                     __ptext24:	
  5687 ;; *************** function _gpio_pin_direction_initialize *****************
  5688 ;; Defined at:
  5689 ;;		line 12 in file "MCAL_LAYER/GPIO/mcal_gpio.c"
  5690 ;; Parameters:    Size  Location     Type
  5691 ;;  pin             1    wreg     PTR const struct .
  5692 ;;		 -> lcd$pins(4), lcd(6), motor2$pins(2), motor2(2), 
  5693 ;;		 -> motor1$pins(2), motor1(2), keypad$COLOUMNS_PIN(3), keypad$ROWS_PIN(4), 
  5694 ;;		 -> keypad(7), 
  5695 ;; Auto vars:     Size  Location     Type
  5696 ;;  pin             1    5[COMMON] PTR const struct .
  5697 ;;		 -> lcd$pins(4), lcd(6), motor2$pins(2), motor2(2), 
  5698 ;;		 -> motor1$pins(2), motor1(2), keypad$COLOUMNS_PIN(3), keypad$ROWS_PIN(4), 
  5699 ;;		 -> keypad(7), 
  5700 ;;  ret             1    0        unsigned char 
  5701 ;; Return value:  Size  Location     Type
  5702 ;;                  1    wreg      unsigned char 
  5703 ;; Registers used:
  5704 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  5705 ;; Tracked objects:
  5706 ;;		On entry : 0/0
  5707 ;;		On exit  : 0/0
  5708 ;;		Unchanged: 0/0
  5709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5710 ;;      Params:         0       0       0       0       0
  5711 ;;      Locals:         1       0       0       0       0
  5712 ;;      Temps:          5       0       0       0       0
  5713 ;;      Totals:         6       0       0       0       0
  5714 ;;Total ram usage:        6 bytes
  5715 ;; Hardware stack levels used: 1
  5716 ;; This function calls:
  5717 ;;		Nothing
  5718 ;; This function is called by:
  5719 ;;		_gpio_pin_initialize
  5720 ;; This function uses a non-reentrant model
  5721 ;;
  5722                           
  5723     0D59                     _gpio_pin_direction_initialize:	
  5724                           ;psect for function _gpio_pin_direction_initialize
  5725                           
  5726                           
  5727                           ;incstack = 0
  5728                           ; Regs used in _gpio_pin_direction_initialize: [wreg-fsr0h+status,2+status,0+btemp+1]
  5729                           ;gpio_pin_direction_initialize@pin stored from wreg
  5730     0D59  00F5               	movwf	gpio_pin_direction_initialize@pin
  5731     0D5A                     l2697:
  5732     0D5A                     l2699:
  5733                           
  5734                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 14:     if (pin == ((void*)0)) {
  5735     0D5A  0875               	movf	gpio_pin_direction_initialize@pin,w
  5736     0D5B  1D03               	btfss	3,2
  5737     0D5C  2D5E               	goto	u2881
  5738     0D5D  2D5F               	goto	u2880
  5739     0D5E                     u2881:
  5740     0D5E  2D60               	goto	l2703
  5741     0D5F                     u2880:
  5742     0D5F                     l2701:
  5743                           
  5744                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 16:     } else {
  5745     0D5F  2E30               	goto	l298
  5746     0D60                     l2703:
  5747                           
  5748                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 17:         if ((pin->port == PORTA_INDEX && pin->pin < 6)
      +                           || (pin->port == PORTB_INDEX && pin->pin < 8) || (pin->port == PORTC_INDEX && pin->pin 
      +                          < 8) ||
  5749     0D60  0875               	movf	gpio_pin_direction_initialize@pin,w
  5750     0D61  0084               	movwf	4
  5751     0D62  1383               	bcf	3,7	;select IRP bank0
  5752     0D63  0800               	movf	0,w
  5753     0D64  3907               	andlw	7
  5754     0D65  3A00               	xorlw	0
  5755     0D66  1D03               	skipz
  5756     0D67  2D69               	goto	u2891
  5757     0D68  2D6A               	goto	u2890
  5758     0D69                     u2891:
  5759     0D69  2D78               	goto	l2707
  5760     0D6A                     u2890:
  5761     0D6A                     l2705:
  5762     0D6A  0875               	movf	gpio_pin_direction_initialize@pin,w
  5763     0D6B  0084               	movwf	4
  5764     0D6C  0C00               	rrf	0,w
  5765     0D6D  00F0               	movwf	??_gpio_pin_direction_initialize
  5766     0D6E  0CF0               	rrf	??_gpio_pin_direction_initialize,f
  5767     0D6F  0C70               	rrf	??_gpio_pin_direction_initialize,w
  5768     0D70  3907               	andlw	7
  5769     0D71  00F1               	movwf	??_gpio_pin_direction_initialize+1
  5770     0D72  3006               	movlw	6
  5771     0D73  0271               	subwf	??_gpio_pin_direction_initialize+1,w
  5772     0D74  1C03               	skipc
  5773     0D75  2D77               	goto	u2901
  5774     0D76  2D78               	goto	u2900
  5775     0D77                     u2901:
  5776     0D77  2E24               	goto	l2729
  5777     0D78                     u2900:
  5778     0D78                     l2707:
  5779     0D78  0875               	movf	gpio_pin_direction_initialize@pin,w
  5780     0D79  0084               	movwf	4
  5781     0D7A  0800               	movf	0,w
  5782     0D7B  3907               	andlw	7
  5783     0D7C  3A01               	xorlw	1
  5784     0D7D  1D03               	skipz
  5785     0D7E  2D80               	goto	u2911
  5786     0D7F  2D81               	goto	u2910
  5787     0D80                     u2911:
  5788     0D80  2D8F               	goto	l2711
  5789     0D81                     u2910:
  5790     0D81                     l2709:
  5791     0D81  0875               	movf	gpio_pin_direction_initialize@pin,w
  5792     0D82  0084               	movwf	4
  5793     0D83  0C00               	rrf	0,w
  5794     0D84  00F0               	movwf	??_gpio_pin_direction_initialize
  5795     0D85  0CF0               	rrf	??_gpio_pin_direction_initialize,f
  5796     0D86  0C70               	rrf	??_gpio_pin_direction_initialize,w
  5797     0D87  3907               	andlw	7
  5798     0D88  00F1               	movwf	??_gpio_pin_direction_initialize+1
  5799     0D89  3008               	movlw	8
  5800     0D8A  0271               	subwf	??_gpio_pin_direction_initialize+1,w
  5801     0D8B  1C03               	skipc
  5802     0D8C  2D8E               	goto	u2921
  5803     0D8D  2D8F               	goto	u2920
  5804     0D8E                     u2921:
  5805     0D8E  2E24               	goto	l2729
  5806     0D8F                     u2920:
  5807     0D8F                     l2711:
  5808     0D8F  0875               	movf	gpio_pin_direction_initialize@pin,w
  5809     0D90  0084               	movwf	4
  5810     0D91  0800               	movf	0,w
  5811     0D92  3907               	andlw	7
  5812     0D93  3A02               	xorlw	2
  5813     0D94  1D03               	skipz
  5814     0D95  2D97               	goto	u2931
  5815     0D96  2D98               	goto	u2930
  5816     0D97                     u2931:
  5817     0D97  2DA6               	goto	l2715
  5818     0D98                     u2930:
  5819     0D98                     l2713:
  5820     0D98  0875               	movf	gpio_pin_direction_initialize@pin,w
  5821     0D99  0084               	movwf	4
  5822     0D9A  0C00               	rrf	0,w
  5823     0D9B  00F0               	movwf	??_gpio_pin_direction_initialize
  5824     0D9C  0CF0               	rrf	??_gpio_pin_direction_initialize,f
  5825     0D9D  0C70               	rrf	??_gpio_pin_direction_initialize,w
  5826     0D9E  3907               	andlw	7
  5827     0D9F  00F1               	movwf	??_gpio_pin_direction_initialize+1
  5828     0DA0  3008               	movlw	8
  5829     0DA1  0271               	subwf	??_gpio_pin_direction_initialize+1,w
  5830     0DA2  1C03               	skipc
  5831     0DA3  2DA5               	goto	u2941
  5832     0DA4  2DA6               	goto	u2940
  5833     0DA5                     u2941:
  5834     0DA5  2E24               	goto	l2729
  5835     0DA6                     u2940:
  5836     0DA6                     l2715:
  5837     0DA6  0875               	movf	gpio_pin_direction_initialize@pin,w
  5838     0DA7  0084               	movwf	4
  5839     0DA8  0800               	movf	0,w
  5840     0DA9  3907               	andlw	7
  5841     0DAA  3A03               	xorlw	3
  5842     0DAB  1D03               	skipz
  5843     0DAC  2DAE               	goto	u2951
  5844     0DAD  2DAF               	goto	u2950
  5845     0DAE                     u2951:
  5846     0DAE  2DBD               	goto	l2719
  5847     0DAF                     u2950:
  5848     0DAF                     l2717:
  5849     0DAF  0875               	movf	gpio_pin_direction_initialize@pin,w
  5850     0DB0  0084               	movwf	4
  5851     0DB1  0C00               	rrf	0,w
  5852     0DB2  00F0               	movwf	??_gpio_pin_direction_initialize
  5853     0DB3  0CF0               	rrf	??_gpio_pin_direction_initialize,f
  5854     0DB4  0C70               	rrf	??_gpio_pin_direction_initialize,w
  5855     0DB5  3907               	andlw	7
  5856     0DB6  00F1               	movwf	??_gpio_pin_direction_initialize+1
  5857     0DB7  3008               	movlw	8
  5858     0DB8  0271               	subwf	??_gpio_pin_direction_initialize+1,w
  5859     0DB9  1C03               	skipc
  5860     0DBA  2DBC               	goto	u2961
  5861     0DBB  2DBD               	goto	u2960
  5862     0DBC                     u2961:
  5863     0DBC  2E24               	goto	l2729
  5864     0DBD                     u2960:
  5865     0DBD                     l2719:
  5866     0DBD  0875               	movf	gpio_pin_direction_initialize@pin,w
  5867     0DBE  0084               	movwf	4
  5868     0DBF  0800               	movf	0,w
  5869     0DC0  3907               	andlw	7
  5870     0DC1  3A04               	xorlw	4
  5871     0DC2  1D03               	skipz
  5872     0DC3  2DC5               	goto	u2971
  5873     0DC4  2DC6               	goto	u2970
  5874     0DC5                     u2971:
  5875     0DC5  2D5F               	goto	l2701
  5876     0DC6                     u2970:
  5877     0DC6                     l2721:
  5878     0DC6  0875               	movf	gpio_pin_direction_initialize@pin,w
  5879     0DC7  0084               	movwf	4
  5880     0DC8  0C00               	rrf	0,w
  5881     0DC9  00F0               	movwf	??_gpio_pin_direction_initialize
  5882     0DCA  0CF0               	rrf	??_gpio_pin_direction_initialize,f
  5883     0DCB  0C70               	rrf	??_gpio_pin_direction_initialize,w
  5884     0DCC  3907               	andlw	7
  5885     0DCD  00F1               	movwf	??_gpio_pin_direction_initialize+1
  5886     0DCE  3003               	movlw	3
  5887     0DCF  0271               	subwf	??_gpio_pin_direction_initialize+1,w
  5888     0DD0  1803               	skipnc
  5889     0DD1  2DD3               	goto	u2981
  5890     0DD2  2DD4               	goto	u2980
  5891     0DD3                     u2981:
  5892     0DD3  2D5F               	goto	l2701
  5893     0DD4                     u2980:
  5894     0DD4  2E24               	goto	l2729
  5895     0DD5                     l2723:
  5896                           
  5897                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 21:                     (*tris_registers[pin->port] &= ~(0
      +                          x01 << pin->pin));
  5898     0DD5  3001               	movlw	1
  5899     0DD6  00F0               	movwf	??_gpio_pin_direction_initialize
  5900     0DD7  0875               	movf	gpio_pin_direction_initialize@pin,w
  5901     0DD8  0084               	movwf	4
  5902     0DD9  0C00               	rrf	0,w
  5903     0DDA  00F1               	movwf	??_gpio_pin_direction_initialize+1
  5904     0DDB  0CF1               	rrf	??_gpio_pin_direction_initialize+1,f
  5905     0DDC  0C71               	rrf	??_gpio_pin_direction_initialize+1,w
  5906     0DDD  3907               	andlw	7
  5907     0DDE  3E01               	addlw	1
  5908     0DDF  2DE2               	goto	u2994
  5909     0DE0                     u2995:
  5910     0DE0  1003               	clrc
  5911     0DE1  0DF0               	rlf	??_gpio_pin_direction_initialize,f
  5912     0DE2                     u2994:
  5913     0DE2  3EFF               	addlw	-1
  5914     0DE3  1D03               	skipz
  5915     0DE4  2DE0               	goto	u2995
  5916     0DE5  0870               	movf	??_gpio_pin_direction_initialize,w
  5917     0DE6  3AFF               	xorlw	255
  5918     0DE7  00FF               	movwf	btemp+1
  5919     0DE8  0875               	movf	gpio_pin_direction_initialize@pin,w
  5920     0DE9  0084               	movwf	4
  5921     0DEA  0800               	movf	0,w
  5922     0DEB  3907               	andlw	7
  5923     0DEC  00F2               	movwf	??_gpio_pin_direction_initialize+2
  5924     0DED  0772               	addwf	??_gpio_pin_direction_initialize+2,w
  5925     0DEE  3EAA               	addlw	(low (_tris_registers| 0))& (0+255)
  5926     0DEF  0084               	movwf	4
  5927     0DF0  0800               	movf	0,w
  5928     0DF1  00F3               	movwf	??_gpio_pin_direction_initialize+3
  5929     0DF2  0A84               	incf	4,f
  5930     0DF3  0800               	movf	0,w
  5931     0DF4  00F4               	movwf	??_gpio_pin_direction_initialize+4
  5932     0DF5  0873               	movf	??_gpio_pin_direction_initialize+3,w
  5933     0DF6  0084               	movwf	4
  5934     0DF7  1783               	bsf	3,7
  5935     0DF8  1C74               	btfss	??_gpio_pin_direction_initialize+4,0
  5936     0DF9  1383               	bcf	3,7
  5937     0DFA  087F               	movf	btemp+1,w
  5938     0DFB  0580               	andwf	0,f
  5939                           
  5940                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 22:                     break;
  5941     0DFC  2E30               	goto	l298
  5942     0DFD                     l2725:
  5943                           
  5944                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 24:                     (*tris_registers[pin->port] |= (0x
      +                          01 << pin->pin));
  5945     0DFD  3001               	movlw	1
  5946     0DFE  00F0               	movwf	??_gpio_pin_direction_initialize
  5947     0DFF  0875               	movf	gpio_pin_direction_initialize@pin,w
  5948     0E00  0084               	movwf	4
  5949     0E01  0C00               	rrf	0,w
  5950     0E02  00F1               	movwf	??_gpio_pin_direction_initialize+1
  5951     0E03  0CF1               	rrf	??_gpio_pin_direction_initialize+1,f
  5952     0E04  0C71               	rrf	??_gpio_pin_direction_initialize+1,w
  5953     0E05  3907               	andlw	7
  5954     0E06  3E01               	addlw	1
  5955     0E07  2E0A               	goto	u3004
  5956     0E08                     u3005:
  5957     0E08  1003               	clrc
  5958     0E09  0DF0               	rlf	??_gpio_pin_direction_initialize,f
  5959     0E0A                     u3004:
  5960     0E0A  3EFF               	addlw	-1
  5961     0E0B  1D03               	skipz
  5962     0E0C  2E08               	goto	u3005
  5963     0E0D  0870               	movf	??_gpio_pin_direction_initialize,w
  5964     0E0E  00FF               	movwf	btemp+1
  5965     0E0F  0875               	movf	gpio_pin_direction_initialize@pin,w
  5966     0E10  0084               	movwf	4
  5967     0E11  0800               	movf	0,w
  5968     0E12  3907               	andlw	7
  5969     0E13  00F2               	movwf	??_gpio_pin_direction_initialize+2
  5970     0E14  0772               	addwf	??_gpio_pin_direction_initialize+2,w
  5971     0E15  3EAA               	addlw	(low (_tris_registers| 0))& (0+255)
  5972     0E16  0084               	movwf	4
  5973     0E17  0800               	movf	0,w
  5974     0E18  00F3               	movwf	??_gpio_pin_direction_initialize+3
  5975     0E19  0A84               	incf	4,f
  5976     0E1A  0800               	movf	0,w
  5977     0E1B  00F4               	movwf	??_gpio_pin_direction_initialize+4
  5978     0E1C  0873               	movf	??_gpio_pin_direction_initialize+3,w
  5979     0E1D  0084               	movwf	4
  5980     0E1E  1783               	bsf	3,7
  5981     0E1F  1C74               	btfss	??_gpio_pin_direction_initialize+4,0
  5982     0E20  1383               	bcf	3,7
  5983     0E21  087F               	movf	btemp+1,w
  5984     0E22  0480               	iorwf	0,f
  5985                           
  5986                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 25:                     break;
  5987     0E23  2E30               	goto	l298
  5988     0E24                     l2729:
  5989     0E24  0875               	movf	gpio_pin_direction_initialize@pin,w
  5990     0E25  0084               	movwf	4
  5991     0E26  0D00               	rlf	0,w
  5992     0E27  0D00               	rlf	0,w
  5993     0E28  3901               	andlw	1
  5994                           
  5995                           ; Switch size 1, requested type "simple"
  5996                           ; Number of cases is 2, Range of values is 0 to 1
  5997                           ; switch strategies available:
  5998                           ; Name         Instructions Cycles
  5999                           ; simple_byte            7     4 (average)
  6000                           ; direct_byte           14     8 (fixed)
  6001                           ; jumptable            260     6 (fixed)
  6002                           ;	Chosen strategy is simple_byte
  6003     0E29  3A00               	xorlw	0	; case 0
  6004     0E2A  1903               	skipnz
  6005     0E2B  2DD5               	goto	l2723
  6006     0E2C  3A01               	xorlw	1	; case 1
  6007     0E2D  1903               	skipnz
  6008     0E2E  2DFD               	goto	l2725
  6009     0E2F  2E30               	goto	l298
  6010     0E30                     l298:
  6011     0E30  0008               	return
  6012     0E31                     __end_of_gpio_pin_direction_initialize:
  6013                           
  6014                           	psect	text25
  6015     0CA1                     __ptext25:	
  6016 ;; *************** function ___xxtofl *****************
  6017 ;; Defined at:
  6018 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
  6019 ;; Parameters:    Size  Location     Type
  6020 ;;  sign            1    wreg     unsigned char 
  6021 ;;  val             4    0[COMMON] long 
  6022 ;; Auto vars:     Size  Location     Type
  6023 ;;  sign            1    8[COMMON] unsigned char 
  6024 ;;  arg             4   10[COMMON] unsigned long 
  6025 ;;  exp             1    9[COMMON] unsigned char 
  6026 ;; Return value:  Size  Location     Type
  6027 ;;                  4    0[COMMON] unsigned char 
  6028 ;; Registers used:
  6029 ;;		wreg, status,2, status,0, btemp+1
  6030 ;; Tracked objects:
  6031 ;;		On entry : 0/0
  6032 ;;		On exit  : 0/0
  6033 ;;		Unchanged: 0/0
  6034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6035 ;;      Params:         4       0       0       0       0
  6036 ;;      Locals:         6       0       0       0       0
  6037 ;;      Temps:          4       0       0       0       0
  6038 ;;      Totals:        14       0       0       0       0
  6039 ;;Total ram usage:       14 bytes
  6040 ;; Hardware stack levels used: 1
  6041 ;; This function calls:
  6042 ;;		Nothing
  6043 ;; This function is called by:
  6044 ;;		_main
  6045 ;; This function uses a non-reentrant model
  6046 ;;
  6047                           
  6048     0CA1                     ___xxtofl:	
  6049                           ;psect for function ___xxtofl
  6050                           
  6051                           
  6052                           ;incstack = 0
  6053                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  6054                           ;___xxtofl@sign stored from wreg
  6055     0CA1  00F8               	movwf	___xxtofl@sign
  6056     0CA2                     l3709:
  6057     0CA2  0878               	movf	___xxtofl@sign,w
  6058     0CA3  1903               	btfsc	3,2
  6059     0CA4  2CA6               	goto	u4771
  6060     0CA5  2CA7               	goto	u4770
  6061     0CA6                     u4771:
  6062     0CA6  2CBB               	goto	l3715
  6063     0CA7                     u4770:
  6064     0CA7                     l3711:
  6065     0CA7  1FF3               	btfss	___xxtofl@val+3,7
  6066     0CA8  2CAA               	goto	u4781
  6067     0CA9  2CAB               	goto	u4780
  6068     0CAA                     u4781:
  6069     0CAA  2CBB               	goto	l3715
  6070     0CAB                     u4780:
  6071     0CAB                     l3713:
  6072     0CAB  0970               	comf	___xxtofl@val,w
  6073     0CAC  00FA               	movwf	___xxtofl@arg
  6074     0CAD  0971               	comf	___xxtofl@val+1,w
  6075     0CAE  00FB               	movwf	___xxtofl@arg+1
  6076     0CAF  0972               	comf	___xxtofl@val+2,w
  6077     0CB0  00FC               	movwf	___xxtofl@arg+2
  6078     0CB1  0973               	comf	___xxtofl@val+3,w
  6079     0CB2  00FD               	movwf	___xxtofl@arg+3
  6080     0CB3  0AFA               	incf	___xxtofl@arg,f
  6081     0CB4  1903               	skipnz
  6082     0CB5  0AFB               	incf	___xxtofl@arg+1,f
  6083     0CB6  1903               	skipnz
  6084     0CB7  0AFC               	incf	___xxtofl@arg+2,f
  6085     0CB8  1903               	skipnz
  6086     0CB9  0AFD               	incf	___xxtofl@arg+3,f
  6087     0CBA  2CC3               	goto	l1069
  6088     0CBB                     l3715:
  6089     0CBB  0873               	movf	___xxtofl@val+3,w
  6090     0CBC  00FD               	movwf	___xxtofl@arg+3
  6091     0CBD  0872               	movf	___xxtofl@val+2,w
  6092     0CBE  00FC               	movwf	___xxtofl@arg+2
  6093     0CBF  0871               	movf	___xxtofl@val+1,w
  6094     0CC0  00FB               	movwf	___xxtofl@arg+1
  6095     0CC1  0870               	movf	___xxtofl@val,w
  6096     0CC2  00FA               	movwf	___xxtofl@arg
  6097     0CC3                     l1069:
  6098     0CC3  0873               	movf	___xxtofl@val+3,w
  6099     0CC4  0472               	iorwf	___xxtofl@val+2,w
  6100     0CC5  0471               	iorwf	___xxtofl@val+1,w
  6101     0CC6  0470               	iorwf	___xxtofl@val,w
  6102     0CC7  1D03               	skipz
  6103     0CC8  2CCA               	goto	u4791
  6104     0CC9  2CCB               	goto	u4790
  6105     0CCA                     u4791:
  6106     0CCA  2CD4               	goto	l3721
  6107     0CCB                     u4790:
  6108     0CCB                     l3717:
  6109     0CCB  3000               	movlw	0
  6110     0CCC  00F3               	movwf	?___xxtofl+3
  6111     0CCD  3000               	movlw	0
  6112     0CCE  00F2               	movwf	?___xxtofl+2
  6113     0CCF  3000               	movlw	0
  6114     0CD0  00F1               	movwf	?___xxtofl+1
  6115     0CD1  3000               	movlw	0
  6116     0CD2  00F0               	movwf	?___xxtofl
  6117     0CD3  2D58               	goto	l1071
  6118     0CD4                     l3721:
  6119     0CD4  3096               	movlw	150
  6120     0CD5  00F9               	movwf	___xxtofl@exp
  6121     0CD6  2CE4               	goto	l3727
  6122     0CD7                     l3723:
  6123     0CD7  3001               	movlw	1
  6124     0CD8  00FF               	movwf	btemp+1
  6125     0CD9  087F               	movf	btemp+1,w
  6126     0CDA  07F9               	addwf	___xxtofl@exp,f
  6127     0CDB                     l3725:
  6128     0CDB  3001               	movlw	1
  6129     0CDC                     u4805:
  6130     0CDC  1003               	clrc
  6131     0CDD  0CFD               	rrf	___xxtofl@arg+3,f
  6132     0CDE  0CFC               	rrf	___xxtofl@arg+2,f
  6133     0CDF  0CFB               	rrf	___xxtofl@arg+1,f
  6134     0CE0  0CFA               	rrf	___xxtofl@arg,f
  6135     0CE1  3EFF               	addlw	-1
  6136     0CE2  1D03               	skipz
  6137     0CE3  2CDC               	goto	u4805
  6138     0CE4                     l3727:
  6139     0CE4  30FE               	movlw	254
  6140     0CE5  057D               	andwf	___xxtofl@arg+3,w
  6141     0CE6  1D03               	btfss	3,2
  6142     0CE7  2CE9               	goto	u4811
  6143     0CE8  2CEA               	goto	u4810
  6144     0CE9                     u4811:
  6145     0CE9  2CD7               	goto	l3723
  6146     0CEA                     u4810:
  6147     0CEA  2D06               	goto	l3735
  6148     0CEB                     l3729:
  6149     0CEB  3001               	movlw	1
  6150     0CEC  00FF               	movwf	btemp+1
  6151     0CED  087F               	movf	btemp+1,w
  6152     0CEE  07F9               	addwf	___xxtofl@exp,f
  6153     0CEF                     l3731:
  6154     0CEF  3001               	movlw	1
  6155     0CF0  07FA               	addwf	___xxtofl@arg,f
  6156     0CF1  3000               	movlw	0
  6157     0CF2  1803               	skipnc
  6158     0CF3  3001               	movlw	1
  6159     0CF4  07FB               	addwf	___xxtofl@arg+1,f
  6160     0CF5  3000               	movlw	0
  6161     0CF6  1803               	skipnc
  6162     0CF7  3001               	movlw	1
  6163     0CF8  07FC               	addwf	___xxtofl@arg+2,f
  6164     0CF9  3000               	movlw	0
  6165     0CFA  1803               	skipnc
  6166     0CFB  3001               	movlw	1
  6167     0CFC  07FD               	addwf	___xxtofl@arg+3,f
  6168     0CFD                     l3733:
  6169     0CFD  3001               	movlw	1
  6170     0CFE                     u4825:
  6171     0CFE  1003               	clrc
  6172     0CFF  0CFD               	rrf	___xxtofl@arg+3,f
  6173     0D00  0CFC               	rrf	___xxtofl@arg+2,f
  6174     0D01  0CFB               	rrf	___xxtofl@arg+1,f
  6175     0D02  0CFA               	rrf	___xxtofl@arg,f
  6176     0D03  3EFF               	addlw	-1
  6177     0D04  1D03               	skipz
  6178     0D05  2CFE               	goto	u4825
  6179     0D06                     l3735:
  6180     0D06  30FF               	movlw	255
  6181     0D07  057D               	andwf	___xxtofl@arg+3,w
  6182     0D08  1D03               	btfss	3,2
  6183     0D09  2D0B               	goto	u4831
  6184     0D0A  2D0C               	goto	u4830
  6185     0D0B                     u4831:
  6186     0D0B  2CEB               	goto	l3729
  6187     0D0C                     u4830:
  6188     0D0C  2D18               	goto	l3739
  6189     0D0D                     l3737:
  6190     0D0D  3001               	movlw	1
  6191     0D0E  02F9               	subwf	___xxtofl@exp,f
  6192     0D0F  3001               	movlw	1
  6193     0D10  00F4               	movwf	??___xxtofl
  6194     0D11                     u4845:
  6195     0D11  1003               	clrc
  6196     0D12  0DFA               	rlf	___xxtofl@arg,f
  6197     0D13  0DFB               	rlf	___xxtofl@arg+1,f
  6198     0D14  0DFC               	rlf	___xxtofl@arg+2,f
  6199     0D15  0DFD               	rlf	___xxtofl@arg+3,f
  6200     0D16  0BF4               	decfsz	??___xxtofl,f
  6201     0D17  2D11               	goto	u4845
  6202     0D18                     l3739:
  6203     0D18  1BFC               	btfsc	___xxtofl@arg+2,7
  6204     0D19  2D1B               	goto	u4851
  6205     0D1A  2D1C               	goto	u4850
  6206     0D1B                     u4851:
  6207     0D1B  2D22               	goto	l1082
  6208     0D1C                     u4850:
  6209     0D1C                     l3741:
  6210     0D1C  3002               	movlw	2
  6211     0D1D  0279               	subwf	___xxtofl@exp,w
  6212     0D1E  1803               	skipnc
  6213     0D1F  2D21               	goto	u4861
  6214     0D20  2D22               	goto	u4860
  6215     0D21                     u4861:
  6216     0D21  2D0D               	goto	l3737
  6217     0D22                     u4860:
  6218     0D22                     l1082:
  6219     0D22  1879               	btfsc	___xxtofl@exp,0
  6220     0D23  2D25               	goto	u4871
  6221     0D24  2D26               	goto	u4870
  6222     0D25                     u4871:
  6223     0D25  2D2E               	goto	l1083
  6224     0D26                     u4870:
  6225     0D26                     l3743:
  6226     0D26  30FF               	movlw	255
  6227     0D27  05FA               	andwf	___xxtofl@arg,f
  6228     0D28  30FF               	movlw	255
  6229     0D29  05FB               	andwf	___xxtofl@arg+1,f
  6230     0D2A  307F               	movlw	127
  6231     0D2B  05FC               	andwf	___xxtofl@arg+2,f
  6232     0D2C  30FF               	movlw	255
  6233     0D2D  05FD               	andwf	___xxtofl@arg+3,f
  6234     0D2E                     l1083:
  6235     0D2E  1003               	clrc
  6236     0D2F  0CF9               	rrf	___xxtofl@exp,f
  6237     0D30                     l3745:
  6238     0D30  0879               	movf	___xxtofl@exp,w
  6239     0D31  00F4               	movwf	??___xxtofl
  6240     0D32  01F5               	clrf	??___xxtofl+1
  6241     0D33  01F6               	clrf	??___xxtofl+2
  6242     0D34  01F7               	clrf	??___xxtofl+3
  6243     0D35  3018               	movlw	24
  6244     0D36                     u4885:
  6245     0D36  1003               	clrc
  6246     0D37  0DF4               	rlf	??___xxtofl,f
  6247     0D38  0DF5               	rlf	??___xxtofl+1,f
  6248     0D39  0DF6               	rlf	??___xxtofl+2,f
  6249     0D3A  0DF7               	rlf	??___xxtofl+3,f
  6250     0D3B                     u4880:
  6251     0D3B  3EFF               	addlw	-1
  6252     0D3C  1D03               	skipz
  6253     0D3D  2D36               	goto	u4885
  6254     0D3E  0874               	movf	??___xxtofl,w
  6255     0D3F  04FA               	iorwf	___xxtofl@arg,f
  6256     0D40  0875               	movf	??___xxtofl+1,w
  6257     0D41  04FB               	iorwf	___xxtofl@arg+1,f
  6258     0D42  0876               	movf	??___xxtofl+2,w
  6259     0D43  04FC               	iorwf	___xxtofl@arg+2,f
  6260     0D44  0877               	movf	??___xxtofl+3,w
  6261     0D45  04FD               	iorwf	___xxtofl@arg+3,f
  6262     0D46                     l3747:
  6263     0D46  0878               	movf	___xxtofl@sign,w
  6264     0D47  1903               	btfsc	3,2
  6265     0D48  2D4A               	goto	u4891
  6266     0D49  2D4B               	goto	u4890
  6267     0D4A                     u4891:
  6268     0D4A  2D50               	goto	l3753
  6269     0D4B                     u4890:
  6270     0D4B                     l3749:
  6271     0D4B  1FF3               	btfss	___xxtofl@val+3,7
  6272     0D4C  2D4E               	goto	u4901
  6273     0D4D  2D4F               	goto	u4900
  6274     0D4E                     u4901:
  6275     0D4E  2D50               	goto	l3753
  6276     0D4F                     u4900:
  6277     0D4F                     l3751:
  6278     0D4F  17FD               	bsf	___xxtofl@arg+3,7
  6279     0D50                     l3753:
  6280     0D50  087D               	movf	___xxtofl@arg+3,w
  6281     0D51  00F3               	movwf	?___xxtofl+3
  6282     0D52  087C               	movf	___xxtofl@arg+2,w
  6283     0D53  00F2               	movwf	?___xxtofl+2
  6284     0D54  087B               	movf	___xxtofl@arg+1,w
  6285     0D55  00F1               	movwf	?___xxtofl+1
  6286     0D56  087A               	movf	___xxtofl@arg,w
  6287     0D57  00F0               	movwf	?___xxtofl
  6288     0D58                     l1071:
  6289     0D58  0008               	return
  6290     0D59                     __end_of___xxtofl:
  6291                           
  6292                           	psect	text26
  6293     0AC4                     __ptext26:	
  6294 ;; *************** function ___fltol *****************
  6295 ;; Defined at:
  6296 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  6297 ;; Parameters:    Size  Location     Type
  6298 ;;  f1              4   52[BANK0 ] unsigned char 
  6299 ;; Auto vars:     Size  Location     Type
  6300 ;;  exp1            1   61[BANK0 ] unsigned char 
  6301 ;;  sign1           1   60[BANK0 ] unsigned char 
  6302 ;; Return value:  Size  Location     Type
  6303 ;;                  4   52[BANK0 ] long 
  6304 ;; Registers used:
  6305 ;;		wreg, status,2, status,0, btemp+1
  6306 ;; Tracked objects:
  6307 ;;		On entry : 0/0
  6308 ;;		On exit  : 0/0
  6309 ;;		Unchanged: 0/0
  6310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6311 ;;      Params:         0       4       0       0       0
  6312 ;;      Locals:         0       2       0       0       0
  6313 ;;      Temps:          0       4       0       0       0
  6314 ;;      Totals:         0      10       0       0       0
  6315 ;;Total ram usage:       10 bytes
  6316 ;; Hardware stack levels used: 1
  6317 ;; This function calls:
  6318 ;;		Nothing
  6319 ;; This function is called by:
  6320 ;;		_main
  6321 ;; This function uses a non-reentrant model
  6322 ;;
  6323                           
  6324     0AC4                     ___fltol:	
  6325                           ;psect for function ___fltol
  6326                           
  6327     0AC4                     l3383:	
  6328                           ;incstack = 0
  6329                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  6330                           
  6331     0AC4  1003               	clrc
  6332     0AC5  1283               	bcf	3,5	;RP0=0, select bank0
  6333     0AC6  1303               	bcf	3,6	;RP1=0, select bank0
  6334     0AC7  0D56               	rlf	___fltol@f1+2,w
  6335     0AC8  0D57               	rlf	___fltol@f1+3,w
  6336     0AC9  00DD               	movwf	___fltol@exp1
  6337     0ACA  085D               	movf	___fltol@exp1,w
  6338     0ACB  1D03               	btfss	3,2
  6339     0ACC  2ACE               	goto	u4011
  6340     0ACD  2ACF               	goto	u4010
  6341     0ACE                     u4011:
  6342     0ACE  2AD8               	goto	l3389
  6343     0ACF                     u4010:
  6344     0ACF                     l3385:
  6345     0ACF  3000               	movlw	0
  6346     0AD0  00D7               	movwf	?___fltol+3
  6347     0AD1  3000               	movlw	0
  6348     0AD2  00D6               	movwf	?___fltol+2
  6349     0AD3  3000               	movlw	0
  6350     0AD4  00D5               	movwf	?___fltol+1
  6351     0AD5  3000               	movlw	0
  6352     0AD6  00D4               	movwf	?___fltol
  6353     0AD7  2B3B               	goto	l822
  6354     0AD8                     l3389:
  6355     0AD8  0854               	movf	___fltol@f1,w
  6356     0AD9  00D8               	movwf	??___fltol
  6357     0ADA  0855               	movf	___fltol@f1+1,w
  6358     0ADB  00D9               	movwf	??___fltol+1
  6359     0ADC  0856               	movf	___fltol@f1+2,w
  6360     0ADD  00DA               	movwf	??___fltol+2
  6361     0ADE  0857               	movf	___fltol@f1+3,w
  6362     0ADF  00DB               	movwf	??___fltol+3
  6363     0AE0  301F               	movlw	31
  6364     0AE1                     u4025:
  6365     0AE1  1003               	clrc
  6366     0AE2  0CDB               	rrf	??___fltol+3,f
  6367     0AE3  0CDA               	rrf	??___fltol+2,f
  6368     0AE4  0CD9               	rrf	??___fltol+1,f
  6369     0AE5  0CD8               	rrf	??___fltol,f
  6370     0AE6                     u4020:
  6371     0AE6  3EFF               	addlw	-1
  6372     0AE7  1D03               	skipz
  6373     0AE8  2AE1               	goto	u4025
  6374     0AE9  0858               	movf	??___fltol,w
  6375     0AEA  00DC               	movwf	___fltol@sign1
  6376     0AEB                     l3391:
  6377     0AEB  17D6               	bsf	___fltol@f1+2,7
  6378     0AEC                     l3393:
  6379     0AEC  30FF               	movlw	255
  6380     0AED  05D4               	andwf	___fltol@f1,f
  6381     0AEE  30FF               	movlw	255
  6382     0AEF  05D5               	andwf	___fltol@f1+1,f
  6383     0AF0  30FF               	movlw	255
  6384     0AF1  05D6               	andwf	___fltol@f1+2,f
  6385     0AF2  3000               	movlw	0
  6386     0AF3  05D7               	andwf	___fltol@f1+3,f
  6387     0AF4                     l3395:
  6388     0AF4  3096               	movlw	150
  6389     0AF5  02DD               	subwf	___fltol@exp1,f
  6390     0AF6                     l3397:
  6391     0AF6  1FDD               	btfss	___fltol@exp1,7
  6392     0AF7  2AF9               	goto	u4031
  6393     0AF8  2AFA               	goto	u4030
  6394     0AF9                     u4031:
  6395     0AF9  2B14               	goto	l3409
  6396     0AFA                     u4030:
  6397     0AFA                     l3399:
  6398     0AFA  085D               	movf	___fltol@exp1,w
  6399     0AFB  3A80               	xorlw	128
  6400     0AFC  3E97               	addlw	151
  6401     0AFD  1803               	skipnc
  6402     0AFE  2B00               	goto	u4041
  6403     0AFF  2B01               	goto	u4040
  6404     0B00                     u4041:
  6405     0B00  2B02               	goto	l3405
  6406     0B01                     u4040:
  6407     0B01  2ACF               	goto	l3385
  6408     0B02                     l3405:
  6409     0B02  3001               	movlw	1
  6410     0B03                     u4055:
  6411     0B03  1003               	clrc
  6412     0B04  0CD7               	rrf	___fltol@f1+3,f
  6413     0B05  0CD6               	rrf	___fltol@f1+2,f
  6414     0B06  0CD5               	rrf	___fltol@f1+1,f
  6415     0B07  0CD4               	rrf	___fltol@f1,f
  6416     0B08  3EFF               	addlw	-1
  6417     0B09  1D03               	skipz
  6418     0B0A  2B03               	goto	u4055
  6419     0B0B                     l3407:
  6420     0B0B  3001               	movlw	1
  6421     0B0C  00FF               	movwf	btemp+1
  6422     0B0D  087F               	movf	btemp+1,w
  6423     0B0E  07DD               	addwf	___fltol@exp1,f
  6424     0B0F  1D03               	btfss	3,2
  6425     0B10  2B12               	goto	u4061
  6426     0B11  2B13               	goto	u4060
  6427     0B12                     u4061:
  6428     0B12  2B02               	goto	l3405
  6429     0B13                     u4060:
  6430     0B13  2B2B               	goto	l3417
  6431     0B14                     l3409:
  6432     0B14  3020               	movlw	32
  6433     0B15  025D               	subwf	___fltol@exp1,w
  6434     0B16  1C03               	skipc
  6435     0B17  2B19               	goto	u4071
  6436     0B18  2B1A               	goto	u4070
  6437     0B19                     u4071:
  6438     0B19  2B26               	goto	l829
  6439     0B1A                     u4070:
  6440     0B1A  2ACF               	goto	l3385
  6441     0B1B                     l3415:
  6442     0B1B  3001               	movlw	1
  6443     0B1C  00D8               	movwf	??___fltol
  6444     0B1D                     u4085:
  6445     0B1D  1003               	clrc
  6446     0B1E  0DD4               	rlf	___fltol@f1,f
  6447     0B1F  0DD5               	rlf	___fltol@f1+1,f
  6448     0B20  0DD6               	rlf	___fltol@f1+2,f
  6449     0B21  0DD7               	rlf	___fltol@f1+3,f
  6450     0B22  0BD8               	decfsz	??___fltol,f
  6451     0B23  2B1D               	goto	u4085
  6452     0B24  3001               	movlw	1
  6453     0B25  02DD               	subwf	___fltol@exp1,f
  6454     0B26                     l829:
  6455     0B26  085D               	movf	___fltol@exp1,w
  6456     0B27  1D03               	btfss	3,2
  6457     0B28  2B2A               	goto	u4091
  6458     0B29  2B2B               	goto	u4090
  6459     0B2A                     u4091:
  6460     0B2A  2B1B               	goto	l3415
  6461     0B2B                     u4090:
  6462     0B2B                     l3417:
  6463     0B2B  085C               	movf	___fltol@sign1,w
  6464     0B2C  1903               	btfsc	3,2
  6465     0B2D  2B2F               	goto	u4101
  6466     0B2E  2B30               	goto	u4100
  6467     0B2F                     u4101:
  6468     0B2F  2B3B               	goto	l832
  6469     0B30                     u4100:
  6470     0B30                     l3419:
  6471     0B30  09D4               	comf	___fltol@f1,f
  6472     0B31  09D5               	comf	___fltol@f1+1,f
  6473     0B32  09D6               	comf	___fltol@f1+2,f
  6474     0B33  09D7               	comf	___fltol@f1+3,f
  6475     0B34  0AD4               	incf	___fltol@f1,f
  6476     0B35  1903               	skipnz
  6477     0B36  0AD5               	incf	___fltol@f1+1,f
  6478     0B37  1903               	skipnz
  6479     0B38  0AD6               	incf	___fltol@f1+2,f
  6480     0B39  1903               	skipnz
  6481     0B3A  0AD7               	incf	___fltol@f1+3,f
  6482     0B3B                     l832:
  6483     0B3B                     l822:
  6484     0B3B  0008               	return
  6485     0B3C                     __end_of___fltol:
  6486                           
  6487                           	psect	text27
  6488     048F                     __ptext27:	
  6489 ;; *************** function ___flmul *****************
  6490 ;; Defined at:
  6491 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
  6492 ;; Parameters:    Size  Location     Type
  6493 ;;  b               4    0[BANK0 ] long 
  6494 ;;  a               4    4[BANK0 ] long 
  6495 ;; Auto vars:     Size  Location     Type
  6496 ;;  prod            4   20[BANK0 ] struct .
  6497 ;;  grs             4   14[BANK0 ] unsigned long 
  6498 ;;  temp            2   24[BANK0 ] struct .
  6499 ;;  bexp            1   19[BANK0 ] unsigned char 
  6500 ;;  aexp            1   18[BANK0 ] unsigned char 
  6501 ;;  sign            1   13[BANK0 ] unsigned char 
  6502 ;; Return value:  Size  Location     Type
  6503 ;;                  4    0[BANK0 ] unsigned char 
  6504 ;; Registers used:
  6505 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6506 ;; Tracked objects:
  6507 ;;		On entry : 0/0
  6508 ;;		On exit  : 0/0
  6509 ;;		Unchanged: 0/0
  6510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6511 ;;      Params:         0       8       0       0       0
  6512 ;;      Locals:         0      13       0       0       0
  6513 ;;      Temps:          0       5       0       0       0
  6514 ;;      Totals:         0      26       0       0       0
  6515 ;;Total ram usage:       26 bytes
  6516 ;; Hardware stack levels used: 1
  6517 ;; Hardware stack levels required when called: 1
  6518 ;; This function calls:
  6519 ;;		__Umul8_16
  6520 ;; This function is called by:
  6521 ;;		_main
  6522 ;; This function uses a non-reentrant model
  6523 ;;
  6524                           
  6525     048F                     ___flmul:	
  6526                           ;psect for function ___flmul
  6527                           
  6528     048F                     l3567:	
  6529                           ;incstack = 0
  6530                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6531                           
  6532     048F  1283               	bcf	3,5	;RP0=0, select bank0
  6533     0490  1303               	bcf	3,6	;RP1=0, select bank0
  6534     0491  0823               	movf	___flmul@b+3,w
  6535     0492  3980               	andlw	128
  6536     0493  00AD               	movwf	___flmul@sign
  6537     0494                     l3569:
  6538     0494  0823               	movf	___flmul@b+3,w
  6539     0495  00A8               	movwf	??___flmul
  6540     0496  0728               	addwf	??___flmul,w
  6541     0497  00B3               	movwf	___flmul@bexp
  6542     0498                     l3571:
  6543     0498  1FA2               	btfss	___flmul@b+2,7
  6544     0499  2C9B               	goto	u4401
  6545     049A  2C9C               	goto	u4400
  6546     049B                     u4401:
  6547     049B  2C9D               	goto	l3575
  6548     049C                     u4400:
  6549     049C                     l3573:
  6550     049C  1433               	bsf	___flmul@bexp,0
  6551     049D                     l3575:
  6552     049D  0833               	movf	___flmul@bexp,w
  6553     049E  1903               	btfsc	3,2
  6554     049F  2CA1               	goto	u4411
  6555     04A0  2CA2               	goto	u4410
  6556     04A1                     u4411:
  6557     04A1  2CB1               	goto	l3583
  6558     04A2                     u4410:
  6559     04A2                     l3577:
  6560     04A2  0A33               	incf	___flmul@bexp,w
  6561     04A3  1D03               	btfss	3,2
  6562     04A4  2CA6               	goto	u4421
  6563     04A5  2CA7               	goto	u4420
  6564     04A6                     u4421:
  6565     04A6  2CAF               	goto	l3581
  6566     04A7                     u4420:
  6567     04A7                     l3579:
  6568     04A7  3000               	movlw	0
  6569     04A8  00A3               	movwf	___flmul@b+3
  6570     04A9  3000               	movlw	0
  6571     04AA  00A2               	movwf	___flmul@b+2
  6572     04AB  3000               	movlw	0
  6573     04AC  00A1               	movwf	___flmul@b+1
  6574     04AD  3000               	movlw	0
  6575     04AE  00A0               	movwf	___flmul@b
  6576     04AF                     l3581:
  6577     04AF  17A2               	bsf	___flmul@b+2,7
  6578     04B0  2CB9               	goto	l3585
  6579     04B1                     l3583:
  6580     04B1  3000               	movlw	0
  6581     04B2  00A3               	movwf	___flmul@b+3
  6582     04B3  3000               	movlw	0
  6583     04B4  00A2               	movwf	___flmul@b+2
  6584     04B5  3000               	movlw	0
  6585     04B6  00A1               	movwf	___flmul@b+1
  6586     04B7  3000               	movlw	0
  6587     04B8  00A0               	movwf	___flmul@b
  6588     04B9                     l3585:
  6589     04B9  0827               	movf	___flmul@a+3,w
  6590     04BA  3980               	andlw	128
  6591     04BB  00FF               	movwf	btemp+1
  6592     04BC  087F               	movf	btemp+1,w
  6593     04BD  06AD               	xorwf	___flmul@sign,f
  6594     04BE                     l3587:
  6595     04BE  0827               	movf	___flmul@a+3,w
  6596     04BF  00A8               	movwf	??___flmul
  6597     04C0  0728               	addwf	??___flmul,w
  6598     04C1  00B2               	movwf	___flmul@aexp
  6599     04C2                     l3589:
  6600     04C2  1FA6               	btfss	___flmul@a+2,7
  6601     04C3  2CC5               	goto	u4431
  6602     04C4  2CC6               	goto	u4430
  6603     04C5                     u4431:
  6604     04C5  2CC7               	goto	l3593
  6605     04C6                     u4430:
  6606     04C6                     l3591:
  6607     04C6  1432               	bsf	___flmul@aexp,0
  6608     04C7                     l3593:
  6609     04C7  0832               	movf	___flmul@aexp,w
  6610     04C8  1903               	btfsc	3,2
  6611     04C9  2CCB               	goto	u4441
  6612     04CA  2CCC               	goto	u4440
  6613     04CB                     u4441:
  6614     04CB  2CDB               	goto	l3601
  6615     04CC                     u4440:
  6616     04CC                     l3595:
  6617     04CC  0A32               	incf	___flmul@aexp,w
  6618     04CD  1D03               	btfss	3,2
  6619     04CE  2CD0               	goto	u4451
  6620     04CF  2CD1               	goto	u4450
  6621     04D0                     u4451:
  6622     04D0  2CD9               	goto	l3599
  6623     04D1                     u4450:
  6624     04D1                     l3597:
  6625     04D1  3000               	movlw	0
  6626     04D2  00A7               	movwf	___flmul@a+3
  6627     04D3  3000               	movlw	0
  6628     04D4  00A6               	movwf	___flmul@a+2
  6629     04D5  3000               	movlw	0
  6630     04D6  00A5               	movwf	___flmul@a+1
  6631     04D7  3000               	movlw	0
  6632     04D8  00A4               	movwf	___flmul@a
  6633     04D9                     l3599:
  6634     04D9  17A6               	bsf	___flmul@a+2,7
  6635     04DA  2CE3               	goto	l3603
  6636     04DB                     l3601:
  6637     04DB  3000               	movlw	0
  6638     04DC  00A7               	movwf	___flmul@a+3
  6639     04DD  3000               	movlw	0
  6640     04DE  00A6               	movwf	___flmul@a+2
  6641     04DF  3000               	movlw	0
  6642     04E0  00A5               	movwf	___flmul@a+1
  6643     04E1  3000               	movlw	0
  6644     04E2  00A4               	movwf	___flmul@a
  6645     04E3                     l3603:
  6646     04E3  0832               	movf	___flmul@aexp,w
  6647     04E4  1903               	btfsc	3,2
  6648     04E5  2CE7               	goto	u4461
  6649     04E6  2CE8               	goto	u4460
  6650     04E7                     u4461:
  6651     04E7  2CED               	goto	l3607
  6652     04E8                     u4460:
  6653     04E8                     l3605:
  6654     04E8  0833               	movf	___flmul@bexp,w
  6655     04E9  1D03               	btfss	3,2
  6656     04EA  2CEC               	goto	u4471
  6657     04EB  2CED               	goto	u4470
  6658     04EC                     u4471:
  6659     04EC  2CF6               	goto	l3611
  6660     04ED                     u4470:
  6661     04ED                     l3607:
  6662     04ED  3000               	movlw	0
  6663     04EE  00A3               	movwf	?___flmul+3
  6664     04EF  3000               	movlw	0
  6665     04F0  00A2               	movwf	?___flmul+2
  6666     04F1  3000               	movlw	0
  6667     04F2  00A1               	movwf	?___flmul+1
  6668     04F3  3000               	movlw	0
  6669     04F4  00A0               	movwf	?___flmul
  6670     04F5  2FD3               	goto	l1025
  6671     04F6                     l3611:
  6672     04F6  0820               	movf	___flmul@b,w
  6673     04F7  00F0               	movwf	__Umul8_16@multiplicand
  6674     04F8  0826               	movf	___flmul@a+2,w
  6675     04F9  160A  118A  2631  120A  118A  	fcall	__Umul8_16
  6676     04FE  0871               	movf	?__Umul8_16+1,w
  6677     04FF  1283               	bcf	3,5	;RP0=0, select bank0
  6678     0500  1303               	bcf	3,6	;RP1=0, select bank0
  6679     0501  00B9               	movwf	___flmul@temp+1
  6680     0502  0870               	movf	?__Umul8_16,w
  6681     0503  00B8               	movwf	___flmul@temp
  6682     0504                     l3613:
  6683     0504  0838               	movf	___flmul@temp,w
  6684     0505  00A8               	movwf	??___flmul
  6685     0506  01A9               	clrf	??___flmul+1
  6686     0507  01AA               	clrf	??___flmul+2
  6687     0508  01AB               	clrf	??___flmul+3
  6688     0509  082B               	movf	??___flmul+3,w
  6689     050A  00B1               	movwf	___flmul@grs+3
  6690     050B  082A               	movf	??___flmul+2,w
  6691     050C  00B0               	movwf	___flmul@grs+2
  6692     050D  0829               	movf	??___flmul+1,w
  6693     050E  00AF               	movwf	___flmul@grs+1
  6694     050F  0828               	movf	??___flmul,w
  6695     0510  00AE               	movwf	___flmul@grs
  6696     0511                     l3615:
  6697     0511  0839               	movf	___flmul@temp+1,w
  6698     0512  00A8               	movwf	??___flmul
  6699     0513  01A9               	clrf	??___flmul+1
  6700     0514  01AA               	clrf	??___flmul+2
  6701     0515  01AB               	clrf	??___flmul+3
  6702     0516  082B               	movf	??___flmul+3,w
  6703     0517  00B7               	movwf	___flmul@prod+3
  6704     0518  082A               	movf	??___flmul+2,w
  6705     0519  00B6               	movwf	___flmul@prod+2
  6706     051A  0829               	movf	??___flmul+1,w
  6707     051B  00B5               	movwf	___flmul@prod+1
  6708     051C  0828               	movf	??___flmul,w
  6709     051D  00B4               	movwf	___flmul@prod
  6710     051E  0821               	movf	___flmul@b+1,w
  6711     051F  00F0               	movwf	__Umul8_16@multiplicand
  6712     0520  0825               	movf	___flmul@a+1,w
  6713     0521  160A  118A  2631  120A  118A  	fcall	__Umul8_16
  6714     0526  0871               	movf	?__Umul8_16+1,w
  6715     0527  1283               	bcf	3,5	;RP0=0, select bank0
  6716     0528  1303               	bcf	3,6	;RP1=0, select bank0
  6717     0529  00B9               	movwf	___flmul@temp+1
  6718     052A  0870               	movf	?__Umul8_16,w
  6719     052B  00B8               	movwf	___flmul@temp
  6720     052C                     l3617:
  6721     052C  0838               	movf	___flmul@temp,w
  6722     052D  00A8               	movwf	??___flmul
  6723     052E  01A9               	clrf	??___flmul+1
  6724     052F  01AA               	clrf	??___flmul+2
  6725     0530  01AB               	clrf	??___flmul+3
  6726     0531  0828               	movf	??___flmul,w
  6727     0532  07AE               	addwf	___flmul@grs,f
  6728     0533  0829               	movf	??___flmul+1,w
  6729     0534  1103               	clrz
  6730     0535  1803               	skipnc
  6731     0536  3E01               	addlw	1
  6732     0537  1903               	skipnz
  6733     0538  2D3A               	goto	u4481
  6734     0539  07AF               	addwf	___flmul@grs+1,f
  6735     053A                     u4481:
  6736     053A  082A               	movf	??___flmul+2,w
  6737     053B  1103               	clrz
  6738     053C  1803               	skipnc
  6739     053D  3E01               	addlw	1
  6740     053E  1903               	skipnz
  6741     053F  2D41               	goto	u4482
  6742     0540  07B0               	addwf	___flmul@grs+2,f
  6743     0541                     u4482:
  6744     0541  082B               	movf	??___flmul+3,w
  6745     0542  1103               	clrz
  6746     0543  1803               	skipnc
  6747     0544  3E01               	addlw	1
  6748     0545  1903               	skipnz
  6749     0546  2D48               	goto	u4483
  6750     0547  07B1               	addwf	___flmul@grs+3,f
  6751     0548                     u4483:
  6752     0548                     l3619:
  6753     0548  0839               	movf	___flmul@temp+1,w
  6754     0549  00A8               	movwf	??___flmul
  6755     054A  01A9               	clrf	??___flmul+1
  6756     054B  01AA               	clrf	??___flmul+2
  6757     054C  01AB               	clrf	??___flmul+3
  6758     054D  0828               	movf	??___flmul,w
  6759     054E  07B4               	addwf	___flmul@prod,f
  6760     054F  0829               	movf	??___flmul+1,w
  6761     0550  1103               	clrz
  6762     0551  1803               	skipnc
  6763     0552  3E01               	addlw	1
  6764     0553  1903               	skipnz
  6765     0554  2D56               	goto	u4491
  6766     0555  07B5               	addwf	___flmul@prod+1,f
  6767     0556                     u4491:
  6768     0556  082A               	movf	??___flmul+2,w
  6769     0557  1103               	clrz
  6770     0558  1803               	skipnc
  6771     0559  3E01               	addlw	1
  6772     055A  1903               	skipnz
  6773     055B  2D5D               	goto	u4492
  6774     055C  07B6               	addwf	___flmul@prod+2,f
  6775     055D                     u4492:
  6776     055D  082B               	movf	??___flmul+3,w
  6777     055E  1103               	clrz
  6778     055F  1803               	skipnc
  6779     0560  3E01               	addlw	1
  6780     0561  1903               	skipnz
  6781     0562  2D64               	goto	u4493
  6782     0563  07B7               	addwf	___flmul@prod+3,f
  6783     0564                     u4493:
  6784     0564  0822               	movf	___flmul@b+2,w
  6785     0565  00F0               	movwf	__Umul8_16@multiplicand
  6786     0566  0824               	movf	___flmul@a,w
  6787     0567  160A  118A  2631  120A  118A  	fcall	__Umul8_16
  6788     056C  0871               	movf	?__Umul8_16+1,w
  6789     056D  1283               	bcf	3,5	;RP0=0, select bank0
  6790     056E  1303               	bcf	3,6	;RP1=0, select bank0
  6791     056F  00B9               	movwf	___flmul@temp+1
  6792     0570  0870               	movf	?__Umul8_16,w
  6793     0571  00B8               	movwf	___flmul@temp
  6794     0572                     l3621:
  6795     0572  0838               	movf	___flmul@temp,w
  6796     0573  00A8               	movwf	??___flmul
  6797     0574  01A9               	clrf	??___flmul+1
  6798     0575  01AA               	clrf	??___flmul+2
  6799     0576  01AB               	clrf	??___flmul+3
  6800     0577  0828               	movf	??___flmul,w
  6801     0578  07AE               	addwf	___flmul@grs,f
  6802     0579  0829               	movf	??___flmul+1,w
  6803     057A  1103               	clrz
  6804     057B  1803               	skipnc
  6805     057C  3E01               	addlw	1
  6806     057D  1903               	skipnz
  6807     057E  2D80               	goto	u4501
  6808     057F  07AF               	addwf	___flmul@grs+1,f
  6809     0580                     u4501:
  6810     0580  082A               	movf	??___flmul+2,w
  6811     0581  1103               	clrz
  6812     0582  1803               	skipnc
  6813     0583  3E01               	addlw	1
  6814     0584  1903               	skipnz
  6815     0585  2D87               	goto	u4502
  6816     0586  07B0               	addwf	___flmul@grs+2,f
  6817     0587                     u4502:
  6818     0587  082B               	movf	??___flmul+3,w
  6819     0588  1103               	clrz
  6820     0589  1803               	skipnc
  6821     058A  3E01               	addlw	1
  6822     058B  1903               	skipnz
  6823     058C  2D8E               	goto	u4503
  6824     058D  07B1               	addwf	___flmul@grs+3,f
  6825     058E                     u4503:
  6826     058E                     l3623:
  6827     058E  0839               	movf	___flmul@temp+1,w
  6828     058F  00A8               	movwf	??___flmul
  6829     0590  01A9               	clrf	??___flmul+1
  6830     0591  01AA               	clrf	??___flmul+2
  6831     0592  01AB               	clrf	??___flmul+3
  6832     0593  0828               	movf	??___flmul,w
  6833     0594  07B4               	addwf	___flmul@prod,f
  6834     0595  0829               	movf	??___flmul+1,w
  6835     0596  1103               	clrz
  6836     0597  1803               	skipnc
  6837     0598  3E01               	addlw	1
  6838     0599  1903               	skipnz
  6839     059A  2D9C               	goto	u4511
  6840     059B  07B5               	addwf	___flmul@prod+1,f
  6841     059C                     u4511:
  6842     059C  082A               	movf	??___flmul+2,w
  6843     059D  1103               	clrz
  6844     059E  1803               	skipnc
  6845     059F  3E01               	addlw	1
  6846     05A0  1903               	skipnz
  6847     05A1  2DA3               	goto	u4512
  6848     05A2  07B6               	addwf	___flmul@prod+2,f
  6849     05A3                     u4512:
  6850     05A3  082B               	movf	??___flmul+3,w
  6851     05A4  1103               	clrz
  6852     05A5  1803               	skipnc
  6853     05A6  3E01               	addlw	1
  6854     05A7  1903               	skipnz
  6855     05A8  2DAA               	goto	u4513
  6856     05A9  07B7               	addwf	___flmul@prod+3,f
  6857     05AA                     u4513:
  6858     05AA                     l3625:
  6859     05AA  3008               	movlw	8
  6860     05AB  00A8               	movwf	??___flmul
  6861     05AC                     u4525:
  6862     05AC  1003               	clrc
  6863     05AD  0DAE               	rlf	___flmul@grs,f
  6864     05AE  0DAF               	rlf	___flmul@grs+1,f
  6865     05AF  0DB0               	rlf	___flmul@grs+2,f
  6866     05B0  0DB1               	rlf	___flmul@grs+3,f
  6867     05B1  0BA8               	decfsz	??___flmul,f
  6868     05B2  2DAC               	goto	u4525
  6869     05B3                     l3627:
  6870     05B3  0821               	movf	___flmul@b+1,w
  6871     05B4  00F0               	movwf	__Umul8_16@multiplicand
  6872     05B5  0824               	movf	___flmul@a,w
  6873     05B6  160A  118A  2631  120A  118A  	fcall	__Umul8_16
  6874     05BB  0871               	movf	?__Umul8_16+1,w
  6875     05BC  1283               	bcf	3,5	;RP0=0, select bank0
  6876     05BD  1303               	bcf	3,6	;RP1=0, select bank0
  6877     05BE  00B9               	movwf	___flmul@temp+1
  6878     05BF  0870               	movf	?__Umul8_16,w
  6879     05C0  00B8               	movwf	___flmul@temp
  6880     05C1                     l3629:
  6881     05C1  0838               	movf	___flmul@temp,w
  6882     05C2  00A8               	movwf	??___flmul
  6883     05C3  0839               	movf	___flmul@temp+1,w
  6884     05C4  00A9               	movwf	??___flmul+1
  6885     05C5  01AA               	clrf	??___flmul+2
  6886     05C6  01AB               	clrf	??___flmul+3
  6887     05C7  0828               	movf	??___flmul,w
  6888     05C8  07AE               	addwf	___flmul@grs,f
  6889     05C9  0829               	movf	??___flmul+1,w
  6890     05CA  1103               	clrz
  6891     05CB  1803               	skipnc
  6892     05CC  3E01               	addlw	1
  6893     05CD  1903               	skipnz
  6894     05CE  2DD0               	goto	u4531
  6895     05CF  07AF               	addwf	___flmul@grs+1,f
  6896     05D0                     u4531:
  6897     05D0  082A               	movf	??___flmul+2,w
  6898     05D1  1103               	clrz
  6899     05D2  1803               	skipnc
  6900     05D3  3E01               	addlw	1
  6901     05D4  1903               	skipnz
  6902     05D5  2DD7               	goto	u4532
  6903     05D6  07B0               	addwf	___flmul@grs+2,f
  6904     05D7                     u4532:
  6905     05D7  082B               	movf	??___flmul+3,w
  6906     05D8  1103               	clrz
  6907     05D9  1803               	skipnc
  6908     05DA  3E01               	addlw	1
  6909     05DB  1903               	skipnz
  6910     05DC  2DDE               	goto	u4533
  6911     05DD  07B1               	addwf	___flmul@grs+3,f
  6912     05DE                     u4533:
  6913     05DE                     l3631:
  6914     05DE  0820               	movf	___flmul@b,w
  6915     05DF  00F0               	movwf	__Umul8_16@multiplicand
  6916     05E0  0825               	movf	___flmul@a+1,w
  6917     05E1  160A  118A  2631  120A  118A  	fcall	__Umul8_16
  6918     05E6  0871               	movf	?__Umul8_16+1,w
  6919     05E7  1283               	bcf	3,5	;RP0=0, select bank0
  6920     05E8  1303               	bcf	3,6	;RP1=0, select bank0
  6921     05E9  00B9               	movwf	___flmul@temp+1
  6922     05EA  0870               	movf	?__Umul8_16,w
  6923     05EB  00B8               	movwf	___flmul@temp
  6924     05EC                     l3633:
  6925     05EC  0838               	movf	___flmul@temp,w
  6926     05ED  00A8               	movwf	??___flmul
  6927     05EE  0839               	movf	___flmul@temp+1,w
  6928     05EF  00A9               	movwf	??___flmul+1
  6929     05F0  01AA               	clrf	??___flmul+2
  6930     05F1  01AB               	clrf	??___flmul+3
  6931     05F2  0828               	movf	??___flmul,w
  6932     05F3  07AE               	addwf	___flmul@grs,f
  6933     05F4  0829               	movf	??___flmul+1,w
  6934     05F5  1103               	clrz
  6935     05F6  1803               	skipnc
  6936     05F7  3E01               	addlw	1
  6937     05F8  1903               	skipnz
  6938     05F9  2DFB               	goto	u4541
  6939     05FA  07AF               	addwf	___flmul@grs+1,f
  6940     05FB                     u4541:
  6941     05FB  082A               	movf	??___flmul+2,w
  6942     05FC  1103               	clrz
  6943     05FD  1803               	skipnc
  6944     05FE  3E01               	addlw	1
  6945     05FF  1903               	skipnz
  6946     0600  2E02               	goto	u4542
  6947     0601  07B0               	addwf	___flmul@grs+2,f
  6948     0602                     u4542:
  6949     0602  082B               	movf	??___flmul+3,w
  6950     0603  1103               	clrz
  6951     0604  1803               	skipnc
  6952     0605  3E01               	addlw	1
  6953     0606  1903               	skipnz
  6954     0607  2E09               	goto	u4543
  6955     0608  07B1               	addwf	___flmul@grs+3,f
  6956     0609                     u4543:
  6957     0609                     l3635:
  6958     0609  3008               	movlw	8
  6959     060A  00A8               	movwf	??___flmul
  6960     060B                     u4555:
  6961     060B  1003               	clrc
  6962     060C  0DAE               	rlf	___flmul@grs,f
  6963     060D  0DAF               	rlf	___flmul@grs+1,f
  6964     060E  0DB0               	rlf	___flmul@grs+2,f
  6965     060F  0DB1               	rlf	___flmul@grs+3,f
  6966     0610  0BA8               	decfsz	??___flmul,f
  6967     0611  2E0B               	goto	u4555
  6968     0612  0820               	movf	___flmul@b,w
  6969     0613  00F0               	movwf	__Umul8_16@multiplicand
  6970     0614  0824               	movf	___flmul@a,w
  6971     0615  160A  118A  2631  120A  118A  	fcall	__Umul8_16
  6972     061A  0871               	movf	?__Umul8_16+1,w
  6973     061B  1283               	bcf	3,5	;RP0=0, select bank0
  6974     061C  1303               	bcf	3,6	;RP1=0, select bank0
  6975     061D  00B9               	movwf	___flmul@temp+1
  6976     061E  0870               	movf	?__Umul8_16,w
  6977     061F  00B8               	movwf	___flmul@temp
  6978     0620                     l3637:
  6979     0620  0838               	movf	___flmul@temp,w
  6980     0621  00A8               	movwf	??___flmul
  6981     0622  0839               	movf	___flmul@temp+1,w
  6982     0623  00A9               	movwf	??___flmul+1
  6983     0624  01AA               	clrf	??___flmul+2
  6984     0625  01AB               	clrf	??___flmul+3
  6985     0626  0828               	movf	??___flmul,w
  6986     0627  07AE               	addwf	___flmul@grs,f
  6987     0628  0829               	movf	??___flmul+1,w
  6988     0629  1103               	clrz
  6989     062A  1803               	skipnc
  6990     062B  3E01               	addlw	1
  6991     062C  1903               	skipnz
  6992     062D  2E2F               	goto	u4561
  6993     062E  07AF               	addwf	___flmul@grs+1,f
  6994     062F                     u4561:
  6995     062F  082A               	movf	??___flmul+2,w
  6996     0630  1103               	clrz
  6997     0631  1803               	skipnc
  6998     0632  3E01               	addlw	1
  6999     0633  1903               	skipnz
  7000     0634  2E36               	goto	u4562
  7001     0635  07B0               	addwf	___flmul@grs+2,f
  7002     0636                     u4562:
  7003     0636  082B               	movf	??___flmul+3,w
  7004     0637  1103               	clrz
  7005     0638  1803               	skipnc
  7006     0639  3E01               	addlw	1
  7007     063A  1903               	skipnz
  7008     063B  2E3D               	goto	u4563
  7009     063C  07B1               	addwf	___flmul@grs+3,f
  7010     063D                     u4563:
  7011     063D                     l3639:
  7012     063D  0821               	movf	___flmul@b+1,w
  7013     063E  00F0               	movwf	__Umul8_16@multiplicand
  7014     063F  0826               	movf	___flmul@a+2,w
  7015     0640  160A  118A  2631  120A  118A  	fcall	__Umul8_16
  7016     0645  0871               	movf	?__Umul8_16+1,w
  7017     0646  1283               	bcf	3,5	;RP0=0, select bank0
  7018     0647  1303               	bcf	3,6	;RP1=0, select bank0
  7019     0648  00B9               	movwf	___flmul@temp+1
  7020     0649  0870               	movf	?__Umul8_16,w
  7021     064A  00B8               	movwf	___flmul@temp
  7022     064B  0838               	movf	___flmul@temp,w
  7023     064C  00A8               	movwf	??___flmul
  7024     064D  0839               	movf	___flmul@temp+1,w
  7025     064E  00A9               	movwf	??___flmul+1
  7026     064F  01AA               	clrf	??___flmul+2
  7027     0650  01AB               	clrf	??___flmul+3
  7028     0651  0828               	movf	??___flmul,w
  7029     0652  07B4               	addwf	___flmul@prod,f
  7030     0653  0829               	movf	??___flmul+1,w
  7031     0654  1103               	clrz
  7032     0655  1803               	skipnc
  7033     0656  3E01               	addlw	1
  7034     0657  1903               	skipnz
  7035     0658  2E5A               	goto	u4571
  7036     0659  07B5               	addwf	___flmul@prod+1,f
  7037     065A                     u4571:
  7038     065A  082A               	movf	??___flmul+2,w
  7039     065B  1103               	clrz
  7040     065C  1803               	skipnc
  7041     065D  3E01               	addlw	1
  7042     065E  1903               	skipnz
  7043     065F  2E61               	goto	u4572
  7044     0660  07B6               	addwf	___flmul@prod+2,f
  7045     0661                     u4572:
  7046     0661  082B               	movf	??___flmul+3,w
  7047     0662  1103               	clrz
  7048     0663  1803               	skipnc
  7049     0664  3E01               	addlw	1
  7050     0665  1903               	skipnz
  7051     0666  2E68               	goto	u4573
  7052     0667  07B7               	addwf	___flmul@prod+3,f
  7053     0668                     u4573:
  7054     0668                     l3641:
  7055     0668  0822               	movf	___flmul@b+2,w
  7056     0669  00F0               	movwf	__Umul8_16@multiplicand
  7057     066A  0825               	movf	___flmul@a+1,w
  7058     066B  160A  118A  2631  120A  118A  	fcall	__Umul8_16
  7059     0670  0871               	movf	?__Umul8_16+1,w
  7060     0671  1283               	bcf	3,5	;RP0=0, select bank0
  7061     0672  1303               	bcf	3,6	;RP1=0, select bank0
  7062     0673  00B9               	movwf	___flmul@temp+1
  7063     0674  0870               	movf	?__Umul8_16,w
  7064     0675  00B8               	movwf	___flmul@temp
  7065     0676                     l3643:
  7066     0676  0838               	movf	___flmul@temp,w
  7067     0677  00A8               	movwf	??___flmul
  7068     0678  0839               	movf	___flmul@temp+1,w
  7069     0679  00A9               	movwf	??___flmul+1
  7070     067A  01AA               	clrf	??___flmul+2
  7071     067B  01AB               	clrf	??___flmul+3
  7072     067C  0828               	movf	??___flmul,w
  7073     067D  07B4               	addwf	___flmul@prod,f
  7074     067E  0829               	movf	??___flmul+1,w
  7075     067F  1103               	clrz
  7076     0680  1803               	skipnc
  7077     0681  3E01               	addlw	1
  7078     0682  1903               	skipnz
  7079     0683  2E85               	goto	u4581
  7080     0684  07B5               	addwf	___flmul@prod+1,f
  7081     0685                     u4581:
  7082     0685  082A               	movf	??___flmul+2,w
  7083     0686  1103               	clrz
  7084     0687  1803               	skipnc
  7085     0688  3E01               	addlw	1
  7086     0689  1903               	skipnz
  7087     068A  2E8C               	goto	u4582
  7088     068B  07B6               	addwf	___flmul@prod+2,f
  7089     068C                     u4582:
  7090     068C  082B               	movf	??___flmul+3,w
  7091     068D  1103               	clrz
  7092     068E  1803               	skipnc
  7093     068F  3E01               	addlw	1
  7094     0690  1903               	skipnz
  7095     0691  2E93               	goto	u4583
  7096     0692  07B7               	addwf	___flmul@prod+3,f
  7097     0693                     u4583:
  7098     0693  0822               	movf	___flmul@b+2,w
  7099     0694  00F0               	movwf	__Umul8_16@multiplicand
  7100     0695  0826               	movf	___flmul@a+2,w
  7101     0696  160A  118A  2631  120A  118A  	fcall	__Umul8_16
  7102     069B  0871               	movf	?__Umul8_16+1,w
  7103     069C  1283               	bcf	3,5	;RP0=0, select bank0
  7104     069D  1303               	bcf	3,6	;RP1=0, select bank0
  7105     069E  00B9               	movwf	___flmul@temp+1
  7106     069F  0870               	movf	?__Umul8_16,w
  7107     06A0  00B8               	movwf	___flmul@temp
  7108     06A1                     l3645:
  7109     06A1  0838               	movf	___flmul@temp,w
  7110     06A2  00A8               	movwf	??___flmul
  7111     06A3  0839               	movf	___flmul@temp+1,w
  7112     06A4  00A9               	movwf	??___flmul+1
  7113     06A5  01AA               	clrf	??___flmul+2
  7114     06A6  01AB               	clrf	??___flmul+3
  7115     06A7  3008               	movlw	8
  7116     06A8                     u4595:
  7117     06A8  1003               	clrc
  7118     06A9  0DA8               	rlf	??___flmul,f
  7119     06AA  0DA9               	rlf	??___flmul+1,f
  7120     06AB  0DAA               	rlf	??___flmul+2,f
  7121     06AC  0DAB               	rlf	??___flmul+3,f
  7122     06AD                     u4590:
  7123     06AD  3EFF               	addlw	-1
  7124     06AE  1D03               	skipz
  7125     06AF  2EA8               	goto	u4595
  7126     06B0  0828               	movf	??___flmul,w
  7127     06B1  07B4               	addwf	___flmul@prod,f
  7128     06B2  0829               	movf	??___flmul+1,w
  7129     06B3  1103               	clrz
  7130     06B4  1803               	skipnc
  7131     06B5  3E01               	addlw	1
  7132     06B6  1903               	skipnz
  7133     06B7  2EB9               	goto	u4601
  7134     06B8  07B5               	addwf	___flmul@prod+1,f
  7135     06B9                     u4601:
  7136     06B9  082A               	movf	??___flmul+2,w
  7137     06BA  1103               	clrz
  7138     06BB  1803               	skipnc
  7139     06BC  3E01               	addlw	1
  7140     06BD  1903               	skipnz
  7141     06BE  2EC0               	goto	u4602
  7142     06BF  07B6               	addwf	___flmul@prod+2,f
  7143     06C0                     u4602:
  7144     06C0  082B               	movf	??___flmul+3,w
  7145     06C1  1103               	clrz
  7146     06C2  1803               	skipnc
  7147     06C3  3E01               	addlw	1
  7148     06C4  1903               	skipnz
  7149     06C5  2EC7               	goto	u4603
  7150     06C6  07B7               	addwf	___flmul@prod+3,f
  7151     06C7                     u4603:
  7152     06C7                     l3647:
  7153     06C7  082E               	movf	___flmul@grs,w
  7154     06C8  00A8               	movwf	??___flmul
  7155     06C9  082F               	movf	___flmul@grs+1,w
  7156     06CA  00A9               	movwf	??___flmul+1
  7157     06CB  0830               	movf	___flmul@grs+2,w
  7158     06CC  00AA               	movwf	??___flmul+2
  7159     06CD  0831               	movf	___flmul@grs+3,w
  7160     06CE  00AB               	movwf	??___flmul+3
  7161     06CF  3018               	movlw	24
  7162     06D0                     u4615:
  7163     06D0  1003               	clrc
  7164     06D1  0CAB               	rrf	??___flmul+3,f
  7165     06D2  0CAA               	rrf	??___flmul+2,f
  7166     06D3  0CA9               	rrf	??___flmul+1,f
  7167     06D4  0CA8               	rrf	??___flmul,f
  7168     06D5                     u4610:
  7169     06D5  3EFF               	addlw	-1
  7170     06D6  1D03               	skipz
  7171     06D7  2ED0               	goto	u4615
  7172     06D8  0828               	movf	??___flmul,w
  7173     06D9  07B4               	addwf	___flmul@prod,f
  7174     06DA  0829               	movf	??___flmul+1,w
  7175     06DB  1103               	clrz
  7176     06DC  1803               	skipnc
  7177     06DD  3E01               	addlw	1
  7178     06DE  1903               	skipnz
  7179     06DF  2EE1               	goto	u4621
  7180     06E0  07B5               	addwf	___flmul@prod+1,f
  7181     06E1                     u4621:
  7182     06E1  082A               	movf	??___flmul+2,w
  7183     06E2  1103               	clrz
  7184     06E3  1803               	skipnc
  7185     06E4  3E01               	addlw	1
  7186     06E5  1903               	skipnz
  7187     06E6  2EE8               	goto	u4622
  7188     06E7  07B6               	addwf	___flmul@prod+2,f
  7189     06E8                     u4622:
  7190     06E8  082B               	movf	??___flmul+3,w
  7191     06E9  1103               	clrz
  7192     06EA  1803               	skipnc
  7193     06EB  3E01               	addlw	1
  7194     06EC  1903               	skipnz
  7195     06ED  2EEF               	goto	u4623
  7196     06EE  07B7               	addwf	___flmul@prod+3,f
  7197     06EF                     u4623:
  7198     06EF                     l3649:
  7199     06EF  3008               	movlw	8
  7200     06F0  00A8               	movwf	??___flmul
  7201     06F1                     u4635:
  7202     06F1  1003               	clrc
  7203     06F2  0DAE               	rlf	___flmul@grs,f
  7204     06F3  0DAF               	rlf	___flmul@grs+1,f
  7205     06F4  0DB0               	rlf	___flmul@grs+2,f
  7206     06F5  0DB1               	rlf	___flmul@grs+3,f
  7207     06F6  0BA8               	decfsz	??___flmul,f
  7208     06F7  2EF1               	goto	u4635
  7209     06F8                     l3651:
  7210     06F8  0833               	movf	___flmul@bexp,w
  7211     06F9  0732               	addwf	___flmul@aexp,w
  7212     06FA  00A8               	movwf	??___flmul
  7213     06FB  01A9               	clrf	??___flmul+1
  7214     06FC  0DA9               	rlf	??___flmul+1,f
  7215     06FD  0828               	movf	??___flmul,w
  7216     06FE  3E82               	addlw	130
  7217     06FF  00B8               	movwf	___flmul@temp
  7218     0700  0829               	movf	??___flmul+1,w
  7219     0701  1803               	skipnc
  7220     0702  3E01               	addlw	1
  7221     0703  3EFF               	addlw	255
  7222     0704  00B9               	movwf	___flmul@temp+1
  7223     0705  2F23               	goto	l3663
  7224     0706                     l3653:
  7225     0706  3001               	movlw	1
  7226     0707  00A8               	movwf	??___flmul
  7227     0708                     u4645:
  7228     0708  1003               	clrc
  7229     0709  0DB4               	rlf	___flmul@prod,f
  7230     070A  0DB5               	rlf	___flmul@prod+1,f
  7231     070B  0DB6               	rlf	___flmul@prod+2,f
  7232     070C  0DB7               	rlf	___flmul@prod+3,f
  7233     070D  0BA8               	decfsz	??___flmul,f
  7234     070E  2F08               	goto	u4645
  7235     070F                     l3655:
  7236     070F  1FB1               	btfss	___flmul@grs+3,7
  7237     0710  2F12               	goto	u4651
  7238     0711  2F13               	goto	u4650
  7239     0712                     u4651:
  7240     0712  2F14               	goto	l3659
  7241     0713                     u4650:
  7242     0713                     l3657:
  7243     0713  1434               	bsf	___flmul@prod,0
  7244     0714                     l3659:
  7245     0714  3001               	movlw	1
  7246     0715  00A8               	movwf	??___flmul
  7247     0716                     u4665:
  7248     0716  1003               	clrc
  7249     0717  0DAE               	rlf	___flmul@grs,f
  7250     0718  0DAF               	rlf	___flmul@grs+1,f
  7251     0719  0DB0               	rlf	___flmul@grs+2,f
  7252     071A  0DB1               	rlf	___flmul@grs+3,f
  7253     071B  0BA8               	decfsz	??___flmul,f
  7254     071C  2F16               	goto	u4665
  7255     071D                     l3661:
  7256     071D  30FF               	movlw	255
  7257     071E  07B8               	addwf	___flmul@temp,f
  7258     071F  1803               	skipnc
  7259     0720  0AB9               	incf	___flmul@temp+1,f
  7260     0721  30FF               	movlw	255
  7261     0722  07B9               	addwf	___flmul@temp+1,f
  7262     0723                     l3663:
  7263     0723  1FB6               	btfss	___flmul@prod+2,7
  7264     0724  2F26               	goto	u4671
  7265     0725  2F27               	goto	u4670
  7266     0726                     u4671:
  7267     0726  2F06               	goto	l3653
  7268     0727                     u4670:
  7269     0727                     l3665:
  7270     0727  01B2               	clrf	___flmul@aexp
  7271     0728                     l3667:
  7272     0728  1FB1               	btfss	___flmul@grs+3,7
  7273     0729  2F2B               	goto	u4681
  7274     072A  2F2C               	goto	u4680
  7275     072B                     u4681:
  7276     072B  2F48               	goto	l3675
  7277     072C                     u4680:
  7278     072C                     l3669:
  7279     072C  30FF               	movlw	255
  7280     072D  052E               	andwf	___flmul@grs,w
  7281     072E  00A8               	movwf	??___flmul
  7282     072F  30FF               	movlw	255
  7283     0730  052F               	andwf	___flmul@grs+1,w
  7284     0731  00A9               	movwf	??___flmul+1
  7285     0732  30FF               	movlw	255
  7286     0733  0530               	andwf	___flmul@grs+2,w
  7287     0734  00AA               	movwf	??___flmul+2
  7288     0735  307F               	movlw	127
  7289     0736  0531               	andwf	___flmul@grs+3,w
  7290     0737  00AB               	movwf	??___flmul+3
  7291     0738  082B               	movf	??___flmul+3,w
  7292     0739  042A               	iorwf	??___flmul+2,w
  7293     073A  0429               	iorwf	??___flmul+1,w
  7294     073B  0428               	iorwf	??___flmul,w
  7295     073C  1903               	skipnz
  7296     073D  2F3F               	goto	u4691
  7297     073E  2F40               	goto	u4690
  7298     073F                     u4691:
  7299     073F  2F43               	goto	l1031
  7300     0740                     u4690:
  7301     0740                     l3671:
  7302     0740  01B2               	clrf	___flmul@aexp
  7303     0741  0AB2               	incf	___flmul@aexp,f
  7304     0742  2F48               	goto	l3675
  7305     0743                     l1031:
  7306     0743  1C34               	btfss	___flmul@prod,0
  7307     0744  2F46               	goto	u4701
  7308     0745  2F47               	goto	u4700
  7309     0746                     u4701:
  7310     0746  2F48               	goto	l3675
  7311     0747                     u4700:
  7312     0747  2F40               	goto	l3671
  7313     0748                     l3675:
  7314     0748  0832               	movf	___flmul@aexp,w
  7315     0749  1903               	btfsc	3,2
  7316     074A  2F4C               	goto	u4711
  7317     074B  2F4D               	goto	u4710
  7318     074C                     u4711:
  7319     074C  2F7E               	goto	l3685
  7320     074D                     u4710:
  7321     074D                     l3677:
  7322     074D  3001               	movlw	1
  7323     074E  07B4               	addwf	___flmul@prod,f
  7324     074F  3000               	movlw	0
  7325     0750  1803               	skipnc
  7326     0751  3001               	movlw	1
  7327     0752  07B5               	addwf	___flmul@prod+1,f
  7328     0753  3000               	movlw	0
  7329     0754  1803               	skipnc
  7330     0755  3001               	movlw	1
  7331     0756  07B6               	addwf	___flmul@prod+2,f
  7332     0757  3000               	movlw	0
  7333     0758  1803               	skipnc
  7334     0759  3001               	movlw	1
  7335     075A  07B7               	addwf	___flmul@prod+3,f
  7336     075B                     l3679:
  7337     075B  1C37               	btfss	___flmul@prod+3,0
  7338     075C  2F5E               	goto	u4721
  7339     075D  2F5F               	goto	u4720
  7340     075E                     u4721:
  7341     075E  2F7E               	goto	l3685
  7342     075F                     u4720:
  7343     075F                     l3681:
  7344     075F  0834               	movf	___flmul@prod,w
  7345     0760  00A8               	movwf	??___flmul
  7346     0761  0835               	movf	___flmul@prod+1,w
  7347     0762  00A9               	movwf	??___flmul+1
  7348     0763  0836               	movf	___flmul@prod+2,w
  7349     0764  00AA               	movwf	??___flmul+2
  7350     0765  0837               	movf	___flmul@prod+3,w
  7351     0766  00AB               	movwf	??___flmul+3
  7352     0767  3001               	movlw	1
  7353     0768  00AC               	movwf	??___flmul+4
  7354     0769                     u4735:
  7355     0769  0D2B               	rlf	??___flmul+3,w
  7356     076A  0CAB               	rrf	??___flmul+3,f
  7357     076B  0CAA               	rrf	??___flmul+2,f
  7358     076C  0CA9               	rrf	??___flmul+1,f
  7359     076D  0CA8               	rrf	??___flmul,f
  7360     076E                     u4730:
  7361     076E  0BAC               	decfsz	??___flmul+4,f
  7362     076F  2F69               	goto	u4735
  7363     0770  082B               	movf	??___flmul+3,w
  7364     0771  00B7               	movwf	___flmul@prod+3
  7365     0772  082A               	movf	??___flmul+2,w
  7366     0773  00B6               	movwf	___flmul@prod+2
  7367     0774  0829               	movf	??___flmul+1,w
  7368     0775  00B5               	movwf	___flmul@prod+1
  7369     0776  0828               	movf	??___flmul,w
  7370     0777  00B4               	movwf	___flmul@prod
  7371     0778                     l3683:
  7372     0778  3001               	movlw	1
  7373     0779  07B8               	addwf	___flmul@temp,f
  7374     077A  1803               	skipnc
  7375     077B  0AB9               	incf	___flmul@temp+1,f
  7376     077C  3000               	movlw	0
  7377     077D  07B9               	addwf	___flmul@temp+1,f
  7378     077E                     l3685:
  7379     077E  0839               	movf	___flmul@temp+1,w
  7380     077F  3A80               	xorlw	128
  7381     0780  00FF               	movwf	btemp+1
  7382     0781  3080               	movlw	128
  7383     0782  027F               	subwf	btemp+1,w
  7384     0783  1D03               	skipz
  7385     0784  2F87               	goto	u4745
  7386     0785  30FF               	movlw	255
  7387     0786  0238               	subwf	___flmul@temp,w
  7388     0787                     u4745:
  7389     0787  1C03               	skipc
  7390     0788  2F8A               	goto	u4741
  7391     0789  2F8B               	goto	u4740
  7392     078A                     u4741:
  7393     078A  2F96               	goto	l3689
  7394     078B                     u4740:
  7395     078B                     l3687:
  7396     078B  307F               	movlw	127
  7397     078C  1283               	bcf	3,5	;RP0=0, select bank0
  7398     078D  1303               	bcf	3,6	;RP1=0, select bank0
  7399     078E  00B7               	movwf	___flmul@prod+3
  7400     078F  3080               	movlw	128
  7401     0790  00B6               	movwf	___flmul@prod+2
  7402     0791  3000               	movlw	0
  7403     0792  00B5               	movwf	___flmul@prod+1
  7404     0793  3000               	movlw	0
  7405     0794  00B4               	movwf	___flmul@prod
  7406     0795  2FC7               	goto	l3703
  7407     0796                     l3689:
  7408     0796  1283               	bcf	3,5	;RP0=0, select bank0
  7409     0797  1303               	bcf	3,6	;RP1=0, select bank0
  7410     0798  0839               	movf	___flmul@temp+1,w
  7411     0799  3A80               	xorlw	128
  7412     079A  00FF               	movwf	btemp+1
  7413     079B  3080               	movlw	128
  7414     079C  027F               	subwf	btemp+1,w
  7415     079D  1D03               	skipz
  7416     079E  2FA1               	goto	u4755
  7417     079F  3001               	movlw	1
  7418     07A0  0238               	subwf	___flmul@temp,w
  7419     07A1                     u4755:
  7420     07A1  1803               	skipnc
  7421     07A2  2FA4               	goto	u4751
  7422     07A3  2FA5               	goto	u4750
  7423     07A4                     u4751:
  7424     07A4  2FB1               	goto	l3695
  7425     07A5                     u4750:
  7426     07A5                     l3691:
  7427     07A5  3000               	movlw	0
  7428     07A6  1283               	bcf	3,5	;RP0=0, select bank0
  7429     07A7  1303               	bcf	3,6	;RP1=0, select bank0
  7430     07A8  00B7               	movwf	___flmul@prod+3
  7431     07A9  3000               	movlw	0
  7432     07AA  00B6               	movwf	___flmul@prod+2
  7433     07AB  3000               	movlw	0
  7434     07AC  00B5               	movwf	___flmul@prod+1
  7435     07AD  3000               	movlw	0
  7436     07AE  00B4               	movwf	___flmul@prod
  7437     07AF                     l3693:
  7438     07AF  01AD               	clrf	___flmul@sign
  7439     07B0  2FC7               	goto	l3703
  7440     07B1                     l3695:
  7441     07B1  1283               	bcf	3,5	;RP0=0, select bank0
  7442     07B2  1303               	bcf	3,6	;RP1=0, select bank0
  7443     07B3  0838               	movf	___flmul@temp,w
  7444     07B4  00B3               	movwf	___flmul@bexp
  7445     07B5  30FF               	movlw	255
  7446     07B6  05B4               	andwf	___flmul@prod,f
  7447     07B7  30FF               	movlw	255
  7448     07B8  05B5               	andwf	___flmul@prod+1,f
  7449     07B9  307F               	movlw	127
  7450     07BA  05B6               	andwf	___flmul@prod+2,f
  7451     07BB  3000               	movlw	0
  7452     07BC  05B7               	andwf	___flmul@prod+3,f
  7453     07BD                     l3697:
  7454     07BD  1C33               	btfss	___flmul@bexp,0
  7455     07BE  2FC0               	goto	u4761
  7456     07BF  2FC1               	goto	u4760
  7457     07C0                     u4761:
  7458     07C0  2FC2               	goto	l3701
  7459     07C1                     u4760:
  7460     07C1                     l3699:
  7461     07C1  17B6               	bsf	___flmul@prod+2,7
  7462     07C2                     l3701:
  7463     07C2  0833               	movf	___flmul@bexp,w
  7464     07C3  00A8               	movwf	??___flmul
  7465     07C4  1003               	clrc
  7466     07C5  0C28               	rrf	??___flmul,w
  7467     07C6  00B7               	movwf	___flmul@prod+3
  7468     07C7                     l3703:
  7469     07C7  082D               	movf	___flmul@sign,w
  7470     07C8  00FF               	movwf	btemp+1
  7471     07C9  087F               	movf	btemp+1,w
  7472     07CA  04B7               	iorwf	___flmul@prod+3,f
  7473     07CB                     l3705:
  7474     07CB  0837               	movf	___flmul@prod+3,w
  7475     07CC  00A3               	movwf	?___flmul+3
  7476     07CD  0836               	movf	___flmul@prod+2,w
  7477     07CE  00A2               	movwf	?___flmul+2
  7478     07CF  0835               	movf	___flmul@prod+1,w
  7479     07D0  00A1               	movwf	?___flmul+1
  7480     07D1  0834               	movf	___flmul@prod,w
  7481     07D2  00A0               	movwf	?___flmul
  7482     07D3                     l1025:
  7483     07D3  0008               	return
  7484     07D4                     __end_of___flmul:
  7485                           
  7486                           	psect	text28
  7487     1631                     __ptext28:	
  7488 ;; *************** function __Umul8_16 *****************
  7489 ;; Defined at:
  7490 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul8_16.c"
  7491 ;; Parameters:    Size  Location     Type
  7492 ;;  multiplier      1    wreg     unsigned char 
  7493 ;;  multiplicand    1    0[COMMON] unsigned char 
  7494 ;; Auto vars:     Size  Location     Type
  7495 ;;  multiplier      1    8[COMMON] unsigned char 
  7496 ;;  word_mpld       2    6[COMMON] unsigned short 
  7497 ;;  product         2    4[COMMON] unsigned short 
  7498 ;; Return value:  Size  Location     Type
  7499 ;;                  2    0[COMMON] unsigned int 
  7500 ;; Registers used:
  7501 ;;		wreg, status,2, status,0
  7502 ;; Tracked objects:
  7503 ;;		On entry : 0/0
  7504 ;;		On exit  : 0/0
  7505 ;;		Unchanged: 0/0
  7506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7507 ;;      Params:         2       0       0       0       0
  7508 ;;      Locals:         5       0       0       0       0
  7509 ;;      Temps:          2       0       0       0       0
  7510 ;;      Totals:         9       0       0       0       0
  7511 ;;Total ram usage:        9 bytes
  7512 ;; Hardware stack levels used: 1
  7513 ;; This function calls:
  7514 ;;		Nothing
  7515 ;; This function is called by:
  7516 ;;		___flmul
  7517 ;; This function uses a non-reentrant model
  7518 ;;
  7519                           
  7520     1631                     __Umul8_16:	
  7521                           ;psect for function __Umul8_16
  7522                           
  7523                           
  7524                           ;incstack = 0
  7525                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  7526                           ;__Umul8_16@multiplier stored from wreg
  7527     1631  00F8               	movwf	__Umul8_16@multiplier
  7528     1632                     l3203:
  7529     1632  01F4               	clrf	__Umul8_16@product
  7530     1633  01F5               	clrf	__Umul8_16@product+1
  7531     1634                     l3205:
  7532     1634  0870               	movf	__Umul8_16@multiplicand,w
  7533     1635  00F2               	movwf	??__Umul8_16
  7534     1636  01F3               	clrf	??__Umul8_16+1
  7535     1637  0872               	movf	??__Umul8_16,w
  7536     1638  00F6               	movwf	__Umul8_16@word_mpld
  7537     1639  0873               	movf	??__Umul8_16+1,w
  7538     163A  00F7               	movwf	__Umul8_16@word_mpld+1
  7539     163B                     l3207:
  7540     163B  1C78               	btfss	__Umul8_16@multiplier,0
  7541     163C  2E3E               	goto	u3841
  7542     163D  2E3F               	goto	u3840
  7543     163E                     u3841:
  7544     163E  2E45               	goto	l1044
  7545     163F                     u3840:
  7546     163F                     l3209:
  7547     163F  0876               	movf	__Umul8_16@word_mpld,w
  7548     1640  07F4               	addwf	__Umul8_16@product,f
  7549     1641  1803               	skipnc
  7550     1642  0AF5               	incf	__Umul8_16@product+1,f
  7551     1643  0877               	movf	__Umul8_16@word_mpld+1,w
  7552     1644  07F5               	addwf	__Umul8_16@product+1,f
  7553     1645                     l1044:
  7554     1645  3001               	movlw	1
  7555     1646                     u3855:
  7556     1646  1003               	clrc
  7557     1647  0DF6               	rlf	__Umul8_16@word_mpld,f
  7558     1648  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  7559     1649  3EFF               	addlw	-1
  7560     164A  1D03               	skipz
  7561     164B  2E46               	goto	u3855
  7562     164C  1003               	clrc
  7563     164D  0CF8               	rrf	__Umul8_16@multiplier,f
  7564     164E                     l3211:
  7565     164E  0878               	movf	__Umul8_16@multiplier,w
  7566     164F  1D03               	btfss	3,2
  7567     1650  2E52               	goto	u3861
  7568     1651  2E53               	goto	u3860
  7569     1652                     u3861:
  7570     1652  2E3B               	goto	l3207
  7571     1653                     u3860:
  7572     1653                     l3213:
  7573     1653  0875               	movf	__Umul8_16@product+1,w
  7574     1654  00F1               	movwf	?__Umul8_16+1
  7575     1655  0874               	movf	__Umul8_16@product,w
  7576     1656  00F0               	movwf	?__Umul8_16
  7577     1657                     l1046:
  7578     1657  0008               	return
  7579     1658                     __end_of__Umul8_16:
  7580                           
  7581                           	psect	text29
  7582     00A2                     __ptext29:	
  7583 ;; *************** function ___fldiv *****************
  7584 ;; Defined at:
  7585 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcdiv.c"
  7586 ;; Parameters:    Size  Location     Type
  7587 ;;  a               4   26[BANK0 ] unsigned int 
  7588 ;;  b               4   30[BANK0 ] unsigned int 
  7589 ;; Auto vars:     Size  Location     Type
  7590 ;;  grs             4   46[BANK0 ] unsigned long 
  7591 ;;  rem             4   39[BANK0 ] unsigned long 
  7592 ;;  new_exp         2   44[BANK0 ] short 
  7593 ;;  aexp            1   51[BANK0 ] unsigned char 
  7594 ;;  bexp            1   50[BANK0 ] unsigned char 
  7595 ;;  sign            1   43[BANK0 ] unsigned char 
  7596 ;; Return value:  Size  Location     Type
  7597 ;;                  4   26[BANK0 ] unsigned char 
  7598 ;; Registers used:
  7599 ;;		wreg, status,2, status,0, btemp+1
  7600 ;; Tracked objects:
  7601 ;;		On entry : 0/0
  7602 ;;		On exit  : 0/0
  7603 ;;		Unchanged: 0/0
  7604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7605 ;;      Params:         0       8       0       0       0
  7606 ;;      Locals:         0      13       0       0       0
  7607 ;;      Temps:          0       5       0       0       0
  7608 ;;      Totals:         0      26       0       0       0
  7609 ;;Total ram usage:       26 bytes
  7610 ;; Hardware stack levels used: 1
  7611 ;; This function calls:
  7612 ;;		Nothing
  7613 ;; This function is called by:
  7614 ;;		_main
  7615 ;; This function uses a non-reentrant model
  7616 ;;
  7617                           
  7618     00A2                     ___fldiv:	
  7619                           ;psect for function ___fldiv
  7620                           
  7621     00A2                     l3421:	
  7622                           ;incstack = 0
  7623                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  7624                           
  7625     00A2  1283               	bcf	3,5	;RP0=0, select bank0
  7626     00A3  1303               	bcf	3,6	;RP1=0, select bank0
  7627     00A4  0841               	movf	___fldiv@b+3,w
  7628     00A5  3980               	andlw	128
  7629     00A6  00CB               	movwf	___fldiv@sign
  7630     00A7                     l3423:
  7631     00A7  0841               	movf	___fldiv@b+3,w
  7632     00A8  00C2               	movwf	??___fldiv
  7633     00A9  0742               	addwf	??___fldiv,w
  7634     00AA  00D2               	movwf	___fldiv@bexp
  7635     00AB                     l3425:
  7636     00AB  1FC0               	btfss	___fldiv@b+2,7
  7637     00AC  28AE               	goto	u4111
  7638     00AD  28AF               	goto	u4110
  7639     00AE                     u4111:
  7640     00AE  28B0               	goto	l3429
  7641     00AF                     u4110:
  7642     00AF                     l3427:
  7643     00AF  1452               	bsf	___fldiv@bexp,0
  7644     00B0                     l3429:
  7645     00B0  0852               	movf	___fldiv@bexp,w
  7646     00B1  1903               	btfsc	3,2
  7647     00B2  28B4               	goto	u4121
  7648     00B3  28B5               	goto	u4120
  7649     00B4                     u4121:
  7650     00B4  28C5               	goto	l3439
  7651     00B5                     u4120:
  7652     00B5                     l3431:
  7653     00B5  0A52               	incf	___fldiv@bexp,w
  7654     00B6  1D03               	btfss	3,2
  7655     00B7  28B9               	goto	u4131
  7656     00B8  28BA               	goto	u4130
  7657     00B9                     u4131:
  7658     00B9  28C2               	goto	l3435
  7659     00BA                     u4130:
  7660     00BA                     l3433:
  7661     00BA  3000               	movlw	0
  7662     00BB  00C1               	movwf	___fldiv@b+3
  7663     00BC  3000               	movlw	0
  7664     00BD  00C0               	movwf	___fldiv@b+2
  7665     00BE  3000               	movlw	0
  7666     00BF  00BF               	movwf	___fldiv@b+1
  7667     00C0  3000               	movlw	0
  7668     00C1  00BE               	movwf	___fldiv@b
  7669     00C2                     l3435:
  7670     00C2  17C0               	bsf	___fldiv@b+2,7
  7671     00C3                     l3437:
  7672     00C3  01C1               	clrf	___fldiv@b+3
  7673     00C4  28CD               	goto	l3441
  7674     00C5                     l3439:
  7675     00C5  3000               	movlw	0
  7676     00C6  00C1               	movwf	___fldiv@b+3
  7677     00C7  3000               	movlw	0
  7678     00C8  00C0               	movwf	___fldiv@b+2
  7679     00C9  3000               	movlw	0
  7680     00CA  00BF               	movwf	___fldiv@b+1
  7681     00CB  3000               	movlw	0
  7682     00CC  00BE               	movwf	___fldiv@b
  7683     00CD                     l3441:
  7684     00CD  083D               	movf	___fldiv@a+3,w
  7685     00CE  3980               	andlw	128
  7686     00CF  00FF               	movwf	btemp+1
  7687     00D0  087F               	movf	btemp+1,w
  7688     00D1  06CB               	xorwf	___fldiv@sign,f
  7689     00D2                     l3443:
  7690     00D2  083D               	movf	___fldiv@a+3,w
  7691     00D3  00C2               	movwf	??___fldiv
  7692     00D4  0742               	addwf	??___fldiv,w
  7693     00D5  00D3               	movwf	___fldiv@aexp
  7694     00D6                     l3445:
  7695     00D6  1FBC               	btfss	___fldiv@a+2,7
  7696     00D7  28D9               	goto	u4141
  7697     00D8  28DA               	goto	u4140
  7698     00D9                     u4141:
  7699     00D9  28DB               	goto	l3449
  7700     00DA                     u4140:
  7701     00DA                     l3447:
  7702     00DA  1453               	bsf	___fldiv@aexp,0
  7703     00DB                     l3449:
  7704     00DB  0853               	movf	___fldiv@aexp,w
  7705     00DC  1903               	btfsc	3,2
  7706     00DD  28DF               	goto	u4151
  7707     00DE  28E0               	goto	u4150
  7708     00DF                     u4151:
  7709     00DF  28F0               	goto	l3459
  7710     00E0                     u4150:
  7711     00E0                     l3451:
  7712     00E0  0A53               	incf	___fldiv@aexp,w
  7713     00E1  1D03               	btfss	3,2
  7714     00E2  28E4               	goto	u4161
  7715     00E3  28E5               	goto	u4160
  7716     00E4                     u4161:
  7717     00E4  28ED               	goto	l3455
  7718     00E5                     u4160:
  7719     00E5                     l3453:
  7720     00E5  3000               	movlw	0
  7721     00E6  00BD               	movwf	___fldiv@a+3
  7722     00E7  3000               	movlw	0
  7723     00E8  00BC               	movwf	___fldiv@a+2
  7724     00E9  3000               	movlw	0
  7725     00EA  00BB               	movwf	___fldiv@a+1
  7726     00EB  3000               	movlw	0
  7727     00EC  00BA               	movwf	___fldiv@a
  7728     00ED                     l3455:
  7729     00ED  17BC               	bsf	___fldiv@a+2,7
  7730     00EE                     l3457:
  7731     00EE  01BD               	clrf	___fldiv@a+3
  7732     00EF  28F8               	goto	l985
  7733     00F0                     l3459:
  7734     00F0  3000               	movlw	0
  7735     00F1  00BD               	movwf	___fldiv@a+3
  7736     00F2  3000               	movlw	0
  7737     00F3  00BC               	movwf	___fldiv@a+2
  7738     00F4  3000               	movlw	0
  7739     00F5  00BB               	movwf	___fldiv@a+1
  7740     00F6  3000               	movlw	0
  7741     00F7  00BA               	movwf	___fldiv@a
  7742     00F8                     l985:
  7743     00F8  083D               	movf	___fldiv@a+3,w
  7744     00F9  043C               	iorwf	___fldiv@a+2,w
  7745     00FA  043B               	iorwf	___fldiv@a+1,w
  7746     00FB  043A               	iorwf	___fldiv@a,w
  7747     00FC  1D03               	skipz
  7748     00FD  28FF               	goto	u4171
  7749     00FE  2900               	goto	u4170
  7750     00FF                     u4171:
  7751     00FF  2919               	goto	l3469
  7752     0100                     u4170:
  7753     0100                     l3461:
  7754     0100  3000               	movlw	0
  7755     0101  00C1               	movwf	___fldiv@b+3
  7756     0102  3000               	movlw	0
  7757     0103  00C0               	movwf	___fldiv@b+2
  7758     0104  3000               	movlw	0
  7759     0105  00BF               	movwf	___fldiv@b+1
  7760     0106  3000               	movlw	0
  7761     0107  00BE               	movwf	___fldiv@b
  7762     0108  3080               	movlw	128
  7763     0109  04C0               	iorwf	___fldiv@b+2,f
  7764     010A  307F               	movlw	127
  7765     010B  04C1               	iorwf	___fldiv@b+3,f
  7766     010C                     l3463:
  7767     010C  084B               	movf	___fldiv@sign,w
  7768     010D  00FF               	movwf	btemp+1
  7769     010E  087F               	movf	btemp+1,w
  7770     010F  04C1               	iorwf	___fldiv@b+3,f
  7771     0110                     l3465:
  7772     0110  0841               	movf	___fldiv@b+3,w
  7773     0111  00BD               	movwf	?___fldiv+3
  7774     0112  0840               	movf	___fldiv@b+2,w
  7775     0113  00BC               	movwf	?___fldiv+2
  7776     0114  083F               	movf	___fldiv@b+1,w
  7777     0115  00BB               	movwf	?___fldiv+1
  7778     0116  083E               	movf	___fldiv@b,w
  7779     0117  00BA               	movwf	?___fldiv
  7780     0118  2A70               	goto	l987
  7781     0119                     l3469:
  7782     0119  0852               	movf	___fldiv@bexp,w
  7783     011A  1D03               	btfss	3,2
  7784     011B  291D               	goto	u4181
  7785     011C  291E               	goto	u4180
  7786     011D                     u4181:
  7787     011D  2927               	goto	l3475
  7788     011E                     u4180:
  7789     011E                     l3471:
  7790     011E  3000               	movlw	0
  7791     011F  00BD               	movwf	?___fldiv+3
  7792     0120  3000               	movlw	0
  7793     0121  00BC               	movwf	?___fldiv+2
  7794     0122  3000               	movlw	0
  7795     0123  00BB               	movwf	?___fldiv+1
  7796     0124  3000               	movlw	0
  7797     0125  00BA               	movwf	?___fldiv
  7798     0126  2A70               	goto	l987
  7799     0127                     l3475:
  7800     0127  0852               	movf	___fldiv@bexp,w
  7801     0128  00C2               	movwf	??___fldiv
  7802     0129  01C3               	clrf	??___fldiv+1
  7803     012A  0843               	movf	??___fldiv+1,w
  7804     012B  00C5               	movwf	??___fldiv+3
  7805     012C  0853               	movf	___fldiv@aexp,w
  7806     012D  0242               	subwf	??___fldiv,w
  7807     012E  00C4               	movwf	??___fldiv+2
  7808     012F  1C03               	skipc
  7809     0130  03C5               	decf	??___fldiv+3,f
  7810     0131  0844               	movf	??___fldiv+2,w
  7811     0132  3E7F               	addlw	127
  7812     0133  00CC               	movwf	___fldiv@new_exp
  7813     0134  0845               	movf	??___fldiv+3,w
  7814     0135  1803               	skipnc
  7815     0136  3E01               	addlw	1
  7816     0137  3E00               	addlw	0
  7817     0138  00CD               	movwf	___fldiv@new_exp+1
  7818     0139                     l3477:
  7819     0139  0841               	movf	___fldiv@b+3,w
  7820     013A  00CA               	movwf	___fldiv@rem+3
  7821     013B  0840               	movf	___fldiv@b+2,w
  7822     013C  00C9               	movwf	___fldiv@rem+2
  7823     013D  083F               	movf	___fldiv@b+1,w
  7824     013E  00C8               	movwf	___fldiv@rem+1
  7825     013F  083E               	movf	___fldiv@b,w
  7826     0140  00C7               	movwf	___fldiv@rem
  7827     0141                     l3479:
  7828     0141  3000               	movlw	0
  7829     0142  00C1               	movwf	___fldiv@b+3
  7830     0143  3000               	movlw	0
  7831     0144  00C0               	movwf	___fldiv@b+2
  7832     0145  3000               	movlw	0
  7833     0146  00BF               	movwf	___fldiv@b+1
  7834     0147  3000               	movlw	0
  7835     0148  00BE               	movwf	___fldiv@b
  7836     0149                     l3481:
  7837     0149  3000               	movlw	0
  7838     014A  00D1               	movwf	___fldiv@grs+3
  7839     014B  3000               	movlw	0
  7840     014C  00D0               	movwf	___fldiv@grs+2
  7841     014D  3000               	movlw	0
  7842     014E  00CF               	movwf	___fldiv@grs+1
  7843     014F  3000               	movlw	0
  7844     0150  00CE               	movwf	___fldiv@grs
  7845     0151                     l3483:
  7846     0151  01D3               	clrf	___fldiv@aexp
  7847     0152  299D               	goto	l3503
  7848     0153                     l3485:
  7849     0153  0853               	movf	___fldiv@aexp,w
  7850     0154  1903               	btfsc	3,2
  7851     0155  2957               	goto	u4191
  7852     0156  2958               	goto	u4190
  7853     0157                     u4191:
  7854     0157  2978               	goto	l3495
  7855     0158                     u4190:
  7856     0158                     l3487:
  7857     0158  3001               	movlw	1
  7858     0159  00C2               	movwf	??___fldiv
  7859     015A                     u4205:
  7860     015A  1003               	clrc
  7861     015B  0DC7               	rlf	___fldiv@rem,f
  7862     015C  0DC8               	rlf	___fldiv@rem+1,f
  7863     015D  0DC9               	rlf	___fldiv@rem+2,f
  7864     015E  0DCA               	rlf	___fldiv@rem+3,f
  7865     015F  0BC2               	decfsz	??___fldiv,f
  7866     0160  295A               	goto	u4205
  7867     0161  3001               	movlw	1
  7868     0162  00C2               	movwf	??___fldiv
  7869     0163                     u4215:
  7870     0163  1003               	clrc
  7871     0164  0DBE               	rlf	___fldiv@b,f
  7872     0165  0DBF               	rlf	___fldiv@b+1,f
  7873     0166  0DC0               	rlf	___fldiv@b+2,f
  7874     0167  0DC1               	rlf	___fldiv@b+3,f
  7875     0168  0BC2               	decfsz	??___fldiv,f
  7876     0169  2963               	goto	u4215
  7877     016A                     l3489:
  7878     016A  1FD1               	btfss	___fldiv@grs+3,7
  7879     016B  296D               	goto	u4221
  7880     016C  296E               	goto	u4220
  7881     016D                     u4221:
  7882     016D  296F               	goto	l3493
  7883     016E                     u4220:
  7884     016E                     l3491:
  7885     016E  143E               	bsf	___fldiv@b,0
  7886     016F                     l3493:
  7887     016F  3001               	movlw	1
  7888     0170  00C2               	movwf	??___fldiv
  7889     0171                     u4235:
  7890     0171  1003               	clrc
  7891     0172  0DCE               	rlf	___fldiv@grs,f
  7892     0173  0DCF               	rlf	___fldiv@grs+1,f
  7893     0174  0DD0               	rlf	___fldiv@grs+2,f
  7894     0175  0DD1               	rlf	___fldiv@grs+3,f
  7895     0176  0BC2               	decfsz	??___fldiv,f
  7896     0177  2971               	goto	u4235
  7897     0178                     l3495:
  7898     0178  083D               	movf	___fldiv@a+3,w
  7899     0179  024A               	subwf	___fldiv@rem+3,w
  7900     017A  1D03               	skipz
  7901     017B  2986               	goto	u4245
  7902     017C  083C               	movf	___fldiv@a+2,w
  7903     017D  0249               	subwf	___fldiv@rem+2,w
  7904     017E  1D03               	skipz
  7905     017F  2986               	goto	u4245
  7906     0180  083B               	movf	___fldiv@a+1,w
  7907     0181  0248               	subwf	___fldiv@rem+1,w
  7908     0182  1D03               	skipz
  7909     0183  2986               	goto	u4245
  7910     0184  083A               	movf	___fldiv@a,w
  7911     0185  0247               	subwf	___fldiv@rem,w
  7912     0186                     u4245:
  7913     0186  1C03               	skipc
  7914     0187  2989               	goto	u4241
  7915     0188  298A               	goto	u4240
  7916     0189                     u4241:
  7917     0189  2999               	goto	l3501
  7918     018A                     u4240:
  7919     018A                     l3497:
  7920     018A  1751               	bsf	___fldiv@grs+3,6
  7921     018B                     l3499:
  7922     018B  083A               	movf	___fldiv@a,w
  7923     018C  02C7               	subwf	___fldiv@rem,f
  7924     018D  083B               	movf	___fldiv@a+1,w
  7925     018E  1C03               	skipc
  7926     018F  0F3B               	incfsz	___fldiv@a+1,w
  7927     0190  02C8               	subwf	___fldiv@rem+1,f
  7928     0191  083C               	movf	___fldiv@a+2,w
  7929     0192  1C03               	skipc
  7930     0193  0F3C               	incfsz	___fldiv@a+2,w
  7931     0194  02C9               	subwf	___fldiv@rem+2,f
  7932     0195  083D               	movf	___fldiv@a+3,w
  7933     0196  1C03               	skipc
  7934     0197  0F3D               	incfsz	___fldiv@a+3,w
  7935     0198  02CA               	subwf	___fldiv@rem+3,f
  7936     0199                     l3501:
  7937     0199  3001               	movlw	1
  7938     019A  00FF               	movwf	btemp+1
  7939     019B  087F               	movf	btemp+1,w
  7940     019C  07D3               	addwf	___fldiv@aexp,f
  7941     019D                     l3503:
  7942     019D  301A               	movlw	26
  7943     019E  0253               	subwf	___fldiv@aexp,w
  7944     019F  1C03               	skipc
  7945     01A0  29A2               	goto	u4251
  7946     01A1  29A3               	goto	u4250
  7947     01A2                     u4251:
  7948     01A2  2953               	goto	l3485
  7949     01A3                     u4250:
  7950     01A3                     l3505:
  7951     01A3  084A               	movf	___fldiv@rem+3,w
  7952     01A4  0449               	iorwf	___fldiv@rem+2,w
  7953     01A5  0448               	iorwf	___fldiv@rem+1,w
  7954     01A6  0447               	iorwf	___fldiv@rem,w
  7955     01A7  1903               	skipnz
  7956     01A8  29AA               	goto	u4261
  7957     01A9  29AB               	goto	u4260
  7958     01AA                     u4261:
  7959     01AA  29CA               	goto	l3519
  7960     01AB                     u4260:
  7961     01AB                     l3507:
  7962     01AB  144E               	bsf	___fldiv@grs,0
  7963     01AC  29CA               	goto	l3519
  7964     01AD                     l3509:
  7965     01AD  3001               	movlw	1
  7966     01AE  00C2               	movwf	??___fldiv
  7967     01AF                     u4275:
  7968     01AF  1003               	clrc
  7969     01B0  0DBE               	rlf	___fldiv@b,f
  7970     01B1  0DBF               	rlf	___fldiv@b+1,f
  7971     01B2  0DC0               	rlf	___fldiv@b+2,f
  7972     01B3  0DC1               	rlf	___fldiv@b+3,f
  7973     01B4  0BC2               	decfsz	??___fldiv,f
  7974     01B5  29AF               	goto	u4275
  7975     01B6                     l3511:
  7976     01B6  1FD1               	btfss	___fldiv@grs+3,7
  7977     01B7  29B9               	goto	u4281
  7978     01B8  29BA               	goto	u4280
  7979     01B9                     u4281:
  7980     01B9  29BB               	goto	l3515
  7981     01BA                     u4280:
  7982     01BA                     l3513:
  7983     01BA  143E               	bsf	___fldiv@b,0
  7984     01BB                     l3515:
  7985     01BB  3001               	movlw	1
  7986     01BC  00C2               	movwf	??___fldiv
  7987     01BD                     u4295:
  7988     01BD  1003               	clrc
  7989     01BE  0DCE               	rlf	___fldiv@grs,f
  7990     01BF  0DCF               	rlf	___fldiv@grs+1,f
  7991     01C0  0DD0               	rlf	___fldiv@grs+2,f
  7992     01C1  0DD1               	rlf	___fldiv@grs+3,f
  7993     01C2  0BC2               	decfsz	??___fldiv,f
  7994     01C3  29BD               	goto	u4295
  7995     01C4                     l3517:
  7996     01C4  30FF               	movlw	255
  7997     01C5  07CC               	addwf	___fldiv@new_exp,f
  7998     01C6  1803               	skipnc
  7999     01C7  0ACD               	incf	___fldiv@new_exp+1,f
  8000     01C8  30FF               	movlw	255
  8001     01C9  07CD               	addwf	___fldiv@new_exp+1,f
  8002     01CA                     l3519:
  8003     01CA  1FC0               	btfss	___fldiv@b+2,7
  8004     01CB  29CD               	goto	u4301
  8005     01CC  29CE               	goto	u4300
  8006     01CD                     u4301:
  8007     01CD  29AD               	goto	l3509
  8008     01CE                     u4300:
  8009     01CE                     l3521:
  8010     01CE  01D3               	clrf	___fldiv@aexp
  8011     01CF                     l3523:
  8012     01CF  1FD1               	btfss	___fldiv@grs+3,7
  8013     01D0  29D2               	goto	u4311
  8014     01D1  29D3               	goto	u4310
  8015     01D2                     u4311:
  8016     01D2  29EF               	goto	l3531
  8017     01D3                     u4310:
  8018     01D3                     l3525:
  8019     01D3  30FF               	movlw	255
  8020     01D4  054E               	andwf	___fldiv@grs,w
  8021     01D5  00C2               	movwf	??___fldiv
  8022     01D6  30FF               	movlw	255
  8023     01D7  054F               	andwf	___fldiv@grs+1,w
  8024     01D8  00C3               	movwf	??___fldiv+1
  8025     01D9  30FF               	movlw	255
  8026     01DA  0550               	andwf	___fldiv@grs+2,w
  8027     01DB  00C4               	movwf	??___fldiv+2
  8028     01DC  307F               	movlw	127
  8029     01DD  0551               	andwf	___fldiv@grs+3,w
  8030     01DE  00C5               	movwf	??___fldiv+3
  8031     01DF  0845               	movf	??___fldiv+3,w
  8032     01E0  0444               	iorwf	??___fldiv+2,w
  8033     01E1  0443               	iorwf	??___fldiv+1,w
  8034     01E2  0442               	iorwf	??___fldiv,w
  8035     01E3  1903               	skipnz
  8036     01E4  29E6               	goto	u4321
  8037     01E5  29E7               	goto	u4320
  8038     01E6                     u4321:
  8039     01E6  29EA               	goto	l1001
  8040     01E7                     u4320:
  8041     01E7                     l3527:
  8042     01E7  01D3               	clrf	___fldiv@aexp
  8043     01E8  0AD3               	incf	___fldiv@aexp,f
  8044     01E9  29EF               	goto	l3531
  8045     01EA                     l1001:
  8046     01EA  1C3E               	btfss	___fldiv@b,0
  8047     01EB  29ED               	goto	u4331
  8048     01EC  29EE               	goto	u4330
  8049     01ED                     u4331:
  8050     01ED  29EF               	goto	l3531
  8051     01EE                     u4330:
  8052     01EE  29E7               	goto	l3527
  8053     01EF                     l3531:
  8054     01EF  0853               	movf	___fldiv@aexp,w
  8055     01F0  1903               	btfsc	3,2
  8056     01F1  29F3               	goto	u4341
  8057     01F2  29F4               	goto	u4340
  8058     01F3                     u4341:
  8059     01F3  2A25               	goto	l3541
  8060     01F4                     u4340:
  8061     01F4                     l3533:
  8062     01F4  3001               	movlw	1
  8063     01F5  07BE               	addwf	___fldiv@b,f
  8064     01F6  3000               	movlw	0
  8065     01F7  1803               	skipnc
  8066     01F8  3001               	movlw	1
  8067     01F9  07BF               	addwf	___fldiv@b+1,f
  8068     01FA  3000               	movlw	0
  8069     01FB  1803               	skipnc
  8070     01FC  3001               	movlw	1
  8071     01FD  07C0               	addwf	___fldiv@b+2,f
  8072     01FE  3000               	movlw	0
  8073     01FF  1803               	skipnc
  8074     0200  3001               	movlw	1
  8075     0201  07C1               	addwf	___fldiv@b+3,f
  8076     0202                     l3535:
  8077     0202  1C41               	btfss	___fldiv@b+3,0
  8078     0203  2A05               	goto	u4351
  8079     0204  2A06               	goto	u4350
  8080     0205                     u4351:
  8081     0205  2A25               	goto	l3541
  8082     0206                     u4350:
  8083     0206                     l3537:
  8084     0206  083E               	movf	___fldiv@b,w
  8085     0207  00C2               	movwf	??___fldiv
  8086     0208  083F               	movf	___fldiv@b+1,w
  8087     0209  00C3               	movwf	??___fldiv+1
  8088     020A  0840               	movf	___fldiv@b+2,w
  8089     020B  00C4               	movwf	??___fldiv+2
  8090     020C  0841               	movf	___fldiv@b+3,w
  8091     020D  00C5               	movwf	??___fldiv+3
  8092     020E  3001               	movlw	1
  8093     020F  00C6               	movwf	??___fldiv+4
  8094     0210                     u4365:
  8095     0210  0D45               	rlf	??___fldiv+3,w
  8096     0211  0CC5               	rrf	??___fldiv+3,f
  8097     0212  0CC4               	rrf	??___fldiv+2,f
  8098     0213  0CC3               	rrf	??___fldiv+1,f
  8099     0214  0CC2               	rrf	??___fldiv,f
  8100     0215                     u4360:
  8101     0215  0BC6               	decfsz	??___fldiv+4,f
  8102     0216  2A10               	goto	u4365
  8103     0217  0845               	movf	??___fldiv+3,w
  8104     0218  00C1               	movwf	___fldiv@b+3
  8105     0219  0844               	movf	??___fldiv+2,w
  8106     021A  00C0               	movwf	___fldiv@b+2
  8107     021B  0843               	movf	??___fldiv+1,w
  8108     021C  00BF               	movwf	___fldiv@b+1
  8109     021D  0842               	movf	??___fldiv,w
  8110     021E  00BE               	movwf	___fldiv@b
  8111     021F                     l3539:
  8112     021F  3001               	movlw	1
  8113     0220  07CC               	addwf	___fldiv@new_exp,f
  8114     0221  1803               	skipnc
  8115     0222  0ACD               	incf	___fldiv@new_exp+1,f
  8116     0223  3000               	movlw	0
  8117     0224  07CD               	addwf	___fldiv@new_exp+1,f
  8118     0225                     l3541:
  8119     0225  084D               	movf	___fldiv@new_exp+1,w
  8120     0226  3A80               	xorlw	128
  8121     0227  00FF               	movwf	btemp+1
  8122     0228  3080               	movlw	128
  8123     0229  027F               	subwf	btemp+1,w
  8124     022A  1D03               	skipz
  8125     022B  2A2E               	goto	u4375
  8126     022C  30FF               	movlw	255
  8127     022D  024C               	subwf	___fldiv@new_exp,w
  8128     022E                     u4375:
  8129     022E  1C03               	skipc
  8130     022F  2A31               	goto	u4371
  8131     0230  2A32               	goto	u4370
  8132     0231                     u4371:
  8133     0231  2A40               	goto	l3545
  8134     0232                     u4370:
  8135     0232                     l3543:
  8136     0232  30FF               	movlw	255
  8137     0233  1283               	bcf	3,5	;RP0=0, select bank0
  8138     0234  1303               	bcf	3,6	;RP1=0, select bank0
  8139     0235  00CC               	movwf	___fldiv@new_exp
  8140     0236  3000               	movlw	0
  8141     0237  00CD               	movwf	___fldiv@new_exp+1
  8142     0238  3000               	movlw	0
  8143     0239  00C1               	movwf	___fldiv@b+3
  8144     023A  3000               	movlw	0
  8145     023B  00C0               	movwf	___fldiv@b+2
  8146     023C  3000               	movlw	0
  8147     023D  00BF               	movwf	___fldiv@b+1
  8148     023E  3000               	movlw	0
  8149     023F  00BE               	movwf	___fldiv@b
  8150     0240                     l3545:
  8151     0240  1283               	bcf	3,5	;RP0=0, select bank0
  8152     0241  1303               	bcf	3,6	;RP1=0, select bank0
  8153     0242  084D               	movf	___fldiv@new_exp+1,w
  8154     0243  3A80               	xorlw	128
  8155     0244  00FF               	movwf	btemp+1
  8156     0245  3080               	movlw	128
  8157     0246  027F               	subwf	btemp+1,w
  8158     0247  1D03               	skipz
  8159     0248  2A4B               	goto	u4385
  8160     0249  3001               	movlw	1
  8161     024A  024C               	subwf	___fldiv@new_exp,w
  8162     024B                     u4385:
  8163     024B  1803               	skipnc
  8164     024C  2A4E               	goto	u4381
  8165     024D  2A4F               	goto	u4380
  8166     024E                     u4381:
  8167     024E  2A5C               	goto	l1007
  8168     024F                     u4380:
  8169     024F                     l3547:
  8170     024F  1283               	bcf	3,5	;RP0=0, select bank0
  8171     0250  1303               	bcf	3,6	;RP1=0, select bank0
  8172     0251  01CC               	clrf	___fldiv@new_exp
  8173     0252  01CD               	clrf	___fldiv@new_exp+1
  8174     0253                     l3549:
  8175     0253  3000               	movlw	0
  8176     0254  00C1               	movwf	___fldiv@b+3
  8177     0255  3000               	movlw	0
  8178     0256  00C0               	movwf	___fldiv@b+2
  8179     0257  3000               	movlw	0
  8180     0258  00BF               	movwf	___fldiv@b+1
  8181     0259  3000               	movlw	0
  8182     025A  00BE               	movwf	___fldiv@b
  8183     025B                     l3551:
  8184     025B  01CB               	clrf	___fldiv@sign
  8185     025C                     l1007:
  8186     025C  1283               	bcf	3,5	;RP0=0, select bank0
  8187     025D  1303               	bcf	3,6	;RP1=0, select bank0
  8188     025E  084C               	movf	___fldiv@new_exp,w
  8189     025F  00D2               	movwf	___fldiv@bexp
  8190     0260                     l3553:
  8191     0260  1C52               	btfss	___fldiv@bexp,0
  8192     0261  2A63               	goto	u4391
  8193     0262  2A64               	goto	u4390
  8194     0263                     u4391:
  8195     0263  2A66               	goto	l3557
  8196     0264                     u4390:
  8197     0264                     l3555:
  8198     0264  17C0               	bsf	___fldiv@b+2,7
  8199     0265  2A6A               	goto	l3559
  8200     0266                     l3557:
  8201     0266  307F               	movlw	127
  8202     0267  00FF               	movwf	btemp+1
  8203     0268  087F               	movf	btemp+1,w
  8204     0269  05C0               	andwf	___fldiv@b+2,f
  8205     026A                     l3559:
  8206     026A  0852               	movf	___fldiv@bexp,w
  8207     026B  00C2               	movwf	??___fldiv
  8208     026C  1003               	clrc
  8209     026D  0C42               	rrf	??___fldiv,w
  8210     026E  00C1               	movwf	___fldiv@b+3
  8211     026F  290C               	goto	l3463
  8212     0270                     l987:
  8213     0270  0008               	return
  8214     0271                     __end_of___fldiv:
  8215                           
  8216                           	psect	text30
  8217     15A7                     __ptext30:	
  8218 ;; *************** function _WRITE_DATA_EEPROM *****************
  8219 ;; Defined at:
  8220 ;;		line 10 in file "MCAL_LAYER/EEPROM/eeprom.c"
  8221 ;; Parameters:    Size  Location     Type
  8222 ;;  add             2    0[COMMON] unsigned short 
  8223 ;;  data            1    2[COMMON] unsigned char 
  8224 ;; Auto vars:     Size  Location     Type
  8225 ;;  status          1    3[COMMON] unsigned char 
  8226 ;; Return value:  Size  Location     Type
  8227 ;;                  1    wreg      unsigned char 
  8228 ;; Registers used:
  8229 ;;		wreg, status,2, status,0
  8230 ;; Tracked objects:
  8231 ;;		On entry : 0/0
  8232 ;;		On exit  : 0/0
  8233 ;;		Unchanged: 0/0
  8234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8235 ;;      Params:         3       0       0       0       0
  8236 ;;      Locals:         1       0       0       0       0
  8237 ;;      Temps:          0       0       0       0       0
  8238 ;;      Totals:         4       0       0       0       0
  8239 ;;Total ram usage:        4 bytes
  8240 ;; Hardware stack levels used: 1
  8241 ;; This function calls:
  8242 ;;		Nothing
  8243 ;; This function is called by:
  8244 ;;		_main
  8245 ;; This function uses a non-reentrant model
  8246 ;;
  8247                           
  8248     15A7                     _WRITE_DATA_EEPROM:	
  8249                           ;psect for function _WRITE_DATA_EEPROM
  8250                           
  8251     15A7                     l3347:	
  8252                           ;incstack = 0
  8253                           ; Regs used in _WRITE_DATA_EEPROM: [wreg+status,2+status,0]
  8254                           
  8255                           
  8256                           ;MCAL_LAYER/EEPROM/eeprom.c: 11:     uint8 status = INTCONbits.GIE;
  8257     15A7  3000               	movlw	0
  8258     15A8  1B8B               	btfsc	11,7	;volatile
  8259     15A9  3001               	movlw	1
  8260     15AA  00F3               	movwf	WRITE_DATA_EEPROM@status
  8261     15AB                     l3349:
  8262                           
  8263                           ;MCAL_LAYER/EEPROM/eeprom.c: 12:     (EECON1bits.EEPGD = 0);
  8264     15AB  1683               	bsf	3,5	;RP0=1, select bank3
  8265     15AC  1703               	bsf	3,6	;RP1=1, select bank3
  8266     15AD  138C               	bcf	12,7	;volsfr
  8267     15AE                     l3351:
  8268                           
  8269                           ;MCAL_LAYER/EEPROM/eeprom.c: 13:     EEADR = (add & 0xFF);
  8270     15AE  0870               	movf	WRITE_DATA_EEPROM@add,w
  8271     15AF  1283               	bcf	3,5	;RP0=0, select bank2
  8272     15B0  1703               	bsf	3,6	;RP1=1, select bank2
  8273     15B1  008D               	movwf	13	;volatile
  8274     15B2                     l3353:
  8275                           
  8276                           ;MCAL_LAYER/EEPROM/eeprom.c: 14:     EEDATA = data;
  8277     15B2  0872               	movf	WRITE_DATA_EEPROM@data,w
  8278     15B3  008C               	movwf	12	;volatile
  8279     15B4                     l3355:
  8280                           
  8281                           ;MCAL_LAYER/EEPROM/eeprom.c: 15:     (EECON1bits.WREN = 1);
  8282     15B4  1683               	bsf	3,5	;RP0=1, select bank3
  8283     15B5  1703               	bsf	3,6	;RP1=1, select bank3
  8284     15B6  150C               	bsf	12,2	;volsfr
  8285     15B7                     l3357:
  8286                           
  8287                           ;MCAL_LAYER/EEPROM/eeprom.c: 16:     (INTCONbits.GIE = 0);
  8288     15B7  138B               	bcf	11,7	;volatile
  8289     15B8                     l3359:
  8290                           
  8291                           ;MCAL_LAYER/EEPROM/eeprom.c: 18:     EECON2 = 0x55;
  8292     15B8  3055               	movlw	85
  8293     15B9  008D               	movwf	13	;volsfr
  8294     15BA                     l3361:
  8295                           
  8296                           ;MCAL_LAYER/EEPROM/eeprom.c: 19:     EECON2 = 0xAA;
  8297     15BA  30AA               	movlw	170
  8298     15BB  008D               	movwf	13	;volsfr
  8299     15BC                     l3363:
  8300                           
  8301                           ;MCAL_LAYER/EEPROM/eeprom.c: 21:     (EECON1bits.WR = 1);
  8302     15BC  148C               	bsf	12,1	;volsfr
  8303     15BD                     l247:	
  8304                           ;MCAL_LAYER/EEPROM/eeprom.c: 22:     while(EECON1bits.WR);
  8305                           
  8306     15BD  188C               	btfsc	12,1	;volsfr
  8307     15BE  2DC0               	goto	u4001
  8308     15BF  2DC1               	goto	u4000
  8309     15C0                     u4001:
  8310     15C0  2DBD               	goto	l247
  8311     15C1                     u4000:
  8312     15C1                     l249:
  8313                           
  8314                           ;MCAL_LAYER/EEPROM/eeprom.c: 23:     (EECON1bits.WREN = 0);
  8315     15C1  110C               	bcf	12,2	;volsfr
  8316     15C2                     l3365:
  8317                           
  8318                           ;MCAL_LAYER/EEPROM/eeprom.c: 24:     INTCONbits.GIE = status;
  8319     15C2  0C73               	rrf	WRITE_DATA_EEPROM@status,w
  8320     15C3  1C03               	skipc
  8321     15C4  138B               	bcf	11,7	;volatile
  8322     15C5  1803               	skipnc
  8323     15C6  178B               	bsf	11,7	;volatile
  8324     15C7                     l250:
  8325     15C7  0008               	return
  8326     15C8                     __end_of_WRITE_DATA_EEPROM:
  8327                           
  8328                           	psect	text31
  8329     1494                     __ptext31:	
  8330 ;; *************** function _READ_DATA_EEPROM *****************
  8331 ;; Defined at:
  8332 ;;		line 26 in file "MCAL_LAYER/EEPROM/eeprom.c"
  8333 ;; Parameters:    Size  Location     Type
  8334 ;;  add             2    0[COMMON] unsigned short 
  8335 ;;  data            1    2[COMMON] PTR unsigned char 
  8336 ;;		 -> Max_Temp(2), 
  8337 ;; Auto vars:     Size  Location     Type
  8338 ;;		None
  8339 ;; Return value:  Size  Location     Type
  8340 ;;                  1    wreg      unsigned char 
  8341 ;; Registers used:
  8342 ;;		wreg, fsr0l, fsr0h
  8343 ;; Tracked objects:
  8344 ;;		On entry : 0/0
  8345 ;;		On exit  : 0/0
  8346 ;;		Unchanged: 0/0
  8347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8348 ;;      Params:         3       0       0       0       0
  8349 ;;      Locals:         0       0       0       0       0
  8350 ;;      Temps:          0       0       0       0       0
  8351 ;;      Totals:         3       0       0       0       0
  8352 ;;Total ram usage:        3 bytes
  8353 ;; Hardware stack levels used: 1
  8354 ;; This function calls:
  8355 ;;		Nothing
  8356 ;; This function is called by:
  8357 ;;		_main
  8358 ;; This function uses a non-reentrant model
  8359 ;;
  8360                           
  8361     1494                     _READ_DATA_EEPROM:	
  8362                           ;psect for function _READ_DATA_EEPROM
  8363                           
  8364     1494                     l3367:	
  8365                           ;incstack = 0
  8366                           ; Regs used in _READ_DATA_EEPROM: [wregfsr0]
  8367                           
  8368                           
  8369                           ;MCAL_LAYER/EEPROM/eeprom.c: 27:     EEADR = (add & 0xFF);
  8370     1494  0870               	movf	READ_DATA_EEPROM@add,w
  8371     1495  1283               	bcf	3,5	;RP0=0, select bank2
  8372     1496  1703               	bsf	3,6	;RP1=1, select bank2
  8373     1497  008D               	movwf	13	;volatile
  8374     1498                     l3369:
  8375                           
  8376                           ;MCAL_LAYER/EEPROM/eeprom.c: 28:     (EECON1bits.EEPGD = 0);
  8377     1498  1683               	bsf	3,5	;RP0=1, select bank3
  8378     1499  1703               	bsf	3,6	;RP1=1, select bank3
  8379     149A  138C               	bcf	12,7	;volsfr
  8380     149B                     l3371:
  8381                           
  8382                           ;MCAL_LAYER/EEPROM/eeprom.c: 29:     (EECON1bits.RD = 1);
  8383     149B  140C               	bsf	12,0	;volsfr
  8384     149C                     l3373:
  8385                           
  8386                           ;MCAL_LAYER/EEPROM/eeprom.c: 30:     __nop();
  8387     149C  0000               	nop
  8388     149D                     l3375:
  8389                           
  8390                           ;MCAL_LAYER/EEPROM/eeprom.c: 31:     __nop();
  8391     149D  0000               	nop
  8392     149E                     l3377:
  8393                           
  8394                           ;MCAL_LAYER/EEPROM/eeprom.c: 32:     *data = EEDATA;
  8395     149E  0872               	movf	READ_DATA_EEPROM@data,w
  8396     149F  0084               	movwf	4
  8397     14A0  1283               	bcf	3,5	;RP0=0, select bank2
  8398     14A1  1703               	bsf	3,6	;RP1=1, select bank2
  8399     14A2  080C               	movf	12,w	;volatile
  8400     14A3  1383               	bcf	3,7	;select IRP bank0
  8401     14A4  0080               	movwf	0
  8402     14A5                     l253:
  8403     14A5  0008               	return
  8404     14A6                     __end_of_READ_DATA_EEPROM:
  8405                           
  8406                           	psect	text32
  8407     08A4                     __ptext32:	
  8408 ;; *************** function _Convert_uint16_to_string *****************
  8409 ;; Defined at:
  8410 ;;		line 116 in file "ECU_LAYER/LCD/ecu_lcd.c"
  8411 ;; Parameters:    Size  Location     Type
  8412 ;;  data            2   29[BANK0 ] unsigned short 
  8413 ;;  str             1   31[BANK0 ] PTR unsigned char 
  8414 ;;		 -> lcd_show_max(6), lcd_show(6), 
  8415 ;; Auto vars:     Size  Location     Type
  8416 ;;  temp            6   33[BANK0 ] unsigned char [6]
  8417 ;;  counter         1   39[BANK0 ] unsigned char 
  8418 ;; Return value:  Size  Location     Type
  8419 ;;                  1    wreg      void 
  8420 ;; Registers used:
  8421 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8422 ;; Tracked objects:
  8423 ;;		On entry : 0/0
  8424 ;;		On exit  : 0/0
  8425 ;;		Unchanged: 0/0
  8426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8427 ;;      Params:         0       3       0       0       0
  8428 ;;      Locals:         0       7       0       0       0
  8429 ;;      Temps:          0       1       0       0       0
  8430 ;;      Totals:         0      11       0       0       0
  8431 ;;Total ram usage:       11 bytes
  8432 ;; Hardware stack levels used: 1
  8433 ;; Hardware stack levels required when called: 5
  8434 ;; This function calls:
  8435 ;;		_memset
  8436 ;;		_sprintf
  8437 ;; This function is called by:
  8438 ;;		_main
  8439 ;; This function uses a non-reentrant model
  8440 ;;
  8441                           
  8442     08A4                     _Convert_uint16_to_string:	
  8443                           ;psect for function _Convert_uint16_to_string
  8444                           
  8445     08A4                     l3287:	
  8446                           ;incstack = 0
  8447                           ; Regs used in _Convert_uint16_to_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
  8448                           
  8449                           
  8450                           ;ECU_LAYER/LCD/ecu_lcd.c: 117:     uint8 temp[6] = {0};
  8451     08A4  3041               	movlw	Convert_uint16_to_string@temp& (0+255)
  8452     08A5  0084               	movwf	4
  8453     08A6  3006               	movlw	6
  8454     08A7  00FF               	movwf	btemp+1
  8455     08A8                     u3940:
  8456     08A8  1383               	bcf	3,7	;select IRP bank0
  8457     08A9  0180               	clrf	0
  8458     08AA  0A84               	incf	4,f
  8459     08AB  0BFF               	decfsz	btemp+1,f
  8460     08AC  28A8               	goto	u3940
  8461     08AD                     l3289:
  8462                           
  8463                           ;ECU_LAYER/LCD/ecu_lcd.c: 118:     uint8 counter = 0;
  8464     08AD  1283               	bcf	3,5	;RP0=0, select bank0
  8465     08AE  1303               	bcf	3,6	;RP1=0, select bank0
  8466     08AF  01C7               	clrf	Convert_uint16_to_string@counter
  8467     08B0                     l3291:
  8468                           
  8469                           ;ECU_LAYER/LCD/ecu_lcd.c: 119:     memset(str,' ',5);
  8470     08B0  3020               	movlw	32
  8471     08B1  00F0               	movwf	memset@c
  8472     08B2  3000               	movlw	0
  8473     08B3  00F1               	movwf	memset@c+1
  8474     08B4  3005               	movlw	5
  8475     08B5  00F2               	movwf	memset@n
  8476     08B6  3000               	movlw	0
  8477     08B7  00F3               	movwf	memset@n+1
  8478     08B8  083F               	movf	Convert_uint16_to_string@str,w
  8479     08B9  160A  118A  254B  120A  158A  	fcall	_memset
  8480     08BE                     l3293:
  8481                           
  8482                           ;ECU_LAYER/LCD/ecu_lcd.c: 120:     str[5] = '\0';
  8483     08BE  1283               	bcf	3,5	;RP0=0, select bank0
  8484     08BF  1303               	bcf	3,6	;RP1=0, select bank0
  8485     08C0  083F               	movf	Convert_uint16_to_string@str,w
  8486     08C1  3E05               	addlw	5
  8487     08C2  0084               	movwf	4
  8488     08C3  1383               	bcf	3,7	;select IRP bank0
  8489     08C4  0180               	clrf	0
  8490     08C5                     l3295:
  8491                           
  8492                           ;ECU_LAYER/LCD/ecu_lcd.c: 121:     sprintf((char *)temp,"%i",data);
  8493     08C5  304B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  8494     08C6  00AC               	movwf	sprintf@fmt
  8495     08C7  083E               	movf	Convert_uint16_to_string@data+1,w
  8496     08C8  00AE               	movwf	?_sprintf+2
  8497     08C9  083D               	movf	Convert_uint16_to_string@data,w
  8498     08CA  00AD               	movwf	?_sprintf+1
  8499     08CB  3041               	movlw	(low (Convert_uint16_to_string@temp| 0))& (0+255)
  8500     08CC  160A  118A  2567  120A  158A  	fcall	_sprintf
  8501                           
  8502                           ;ECU_LAYER/LCD/ecu_lcd.c: 122:     while(temp[counter] != '\0'){
  8503     08D1  28E2               	goto	l3301
  8504     08D2                     l3297:
  8505                           
  8506                           ;ECU_LAYER/LCD/ecu_lcd.c: 123:         str[counter] = temp[counter];
  8507     08D2  0847               	movf	Convert_uint16_to_string@counter,w
  8508     08D3  3E41               	addlw	(low (Convert_uint16_to_string@temp| 0))& (0+255)
  8509     08D4  0084               	movwf	4
  8510     08D5  0800               	movf	0,w
  8511     08D6  00FF               	movwf	btemp+1
  8512     08D7  0847               	movf	Convert_uint16_to_string@counter,w
  8513     08D8  073F               	addwf	Convert_uint16_to_string@str,w
  8514     08D9  00C0               	movwf	??_Convert_uint16_to_string
  8515     08DA  0840               	movf	??_Convert_uint16_to_string,w
  8516     08DB  0084               	movwf	4
  8517     08DC  087F               	movf	btemp+1,w
  8518     08DD  0080               	movwf	0
  8519     08DE                     l3299:
  8520                           
  8521                           ;ECU_LAYER/LCD/ecu_lcd.c: 124:         counter++;
  8522     08DE  3001               	movlw	1
  8523     08DF  00FF               	movwf	btemp+1
  8524     08E0  087F               	movf	btemp+1,w
  8525     08E1  07C7               	addwf	Convert_uint16_to_string@counter,f
  8526     08E2                     l3301:
  8527                           
  8528                           ;ECU_LAYER/LCD/ecu_lcd.c: 122:     while(temp[counter] != '\0'){
  8529     08E2  1283               	bcf	3,5	;RP0=0, select bank0
  8530     08E3  1303               	bcf	3,6	;RP1=0, select bank0
  8531     08E4  0847               	movf	Convert_uint16_to_string@counter,w
  8532     08E5  3E41               	addlw	(low (Convert_uint16_to_string@temp| 0))& (0+255)
  8533     08E6  0084               	movwf	4
  8534     08E7  1383               	bcf	3,7	;select IRP bank0
  8535     08E8  0800               	movf	0,w
  8536     08E9  1D03               	btfss	3,2
  8537     08EA  28EC               	goto	u3951
  8538     08EB  28ED               	goto	u3950
  8539     08EC                     u3951:
  8540     08EC  28D2               	goto	l3297
  8541     08ED                     u3950:
  8542     08ED                     l101:
  8543     08ED  0008               	return
  8544     08EE                     __end_of_Convert_uint16_to_string:
  8545                           
  8546                           	psect	text33
  8547     1567                     __ptext33:	
  8548 ;; *************** function _sprintf *****************
  8549 ;; Defined at:
  8550 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  8551 ;; Parameters:    Size  Location     Type
  8552 ;;  s               1    wreg     PTR unsigned char 
  8553 ;;		 -> Convert_uint32_to_string@temp(11), Convert_uint16_to_string@temp(6), Convert_uint8_to_string@temp(4), 
  8554 ;;  fmt             1   12[BANK0 ] PTR const unsigned char 
  8555 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  8556 ;; Auto vars:     Size  Location     Type
  8557 ;;  s               1   17[BANK0 ] PTR unsigned char 
  8558 ;;		 -> Convert_uint32_to_string@temp(11), Convert_uint16_to_string@temp(6), Convert_uint8_to_string@temp(4), 
  8559 ;;  f              11   18[BANK0 ] struct _IO_FILE
  8560 ;;  ret             2    0        int 
  8561 ;;  ap              1   16[BANK0 ] PTR void [1]
  8562 ;;		 -> ?_sprintf(2), 
  8563 ;; Return value:  Size  Location     Type
  8564 ;;                  2   12[BANK0 ] int 
  8565 ;; Registers used:
  8566 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8567 ;; Tracked objects:
  8568 ;;		On entry : 0/0
  8569 ;;		On exit  : 0/0
  8570 ;;		Unchanged: 0/0
  8571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8572 ;;      Params:         0       3       0       0       0
  8573 ;;      Locals:         0      13       0       0       0
  8574 ;;      Temps:          0       1       0       0       0
  8575 ;;      Totals:         0      17       0       0       0
  8576 ;;Total ram usage:       17 bytes
  8577 ;; Hardware stack levels used: 1
  8578 ;; Hardware stack levels required when called: 4
  8579 ;; This function calls:
  8580 ;;		_vfprintf
  8581 ;; This function is called by:
  8582 ;;		_Convert_uint16_to_string
  8583 ;;		_Convert_uint8_to_string
  8584 ;;		_Convert_uint32_to_string
  8585 ;; This function uses a non-reentrant model
  8586 ;;
  8587                           
  8588     1567                     _sprintf:	
  8589                           ;psect for function _sprintf
  8590                           
  8591                           
  8592                           ;incstack = 0
  8593                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8594                           ;sprintf@s stored from wreg
  8595     1567  1283               	bcf	3,5	;RP0=0, select bank0
  8596     1568  1303               	bcf	3,6	;RP1=0, select bank0
  8597     1569  00B1               	movwf	sprintf@s
  8598     156A                     l3147:
  8599     156A  302D               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  8600     156B  00B0               	movwf	sprintf@ap
  8601     156C  0831               	movf	sprintf@s,w
  8602     156D  00B2               	movwf	sprintf@f
  8603     156E                     l3149:
  8604     156E  01B4               	clrf	sprintf@f+2
  8605     156F  01B5               	clrf	sprintf@f+3
  8606     1570                     l3151:
  8607     1570  01BB               	clrf	sprintf@f+9
  8608     1571  01BC               	clrf	sprintf@f+10
  8609     1572                     l3153:
  8610     1572  082C               	movf	sprintf@fmt,w
  8611     1573  00A8               	movwf	vfprintf@fmt
  8612     1574  3030               	movlw	(low (sprintf@ap| 0))& (0+255)
  8613     1575  00A9               	movwf	vfprintf@ap
  8614     1576  3032               	movlw	(low (sprintf@f| 0))& (0+255)
  8615     1577  160A  118A  2586  160A  118A  	fcall	_vfprintf
  8616     157C                     l3155:
  8617     157C  1283               	bcf	3,5	;RP0=0, select bank0
  8618     157D  1303               	bcf	3,6	;RP1=0, select bank0
  8619     157E  0834               	movf	sprintf@f+2,w
  8620     157F  0731               	addwf	sprintf@s,w
  8621     1580  00AF               	movwf	??_sprintf
  8622     1581  082F               	movf	??_sprintf,w
  8623     1582  0084               	movwf	4
  8624     1583  1383               	bcf	3,7	;select IRP bank0
  8625     1584  0180               	clrf	0
  8626     1585                     l1097:
  8627     1585  0008               	return
  8628     1586                     __end_of_sprintf:
  8629                           
  8630                           	psect	text34
  8631     1586                     __ptext34:	
  8632 ;; *************** function _vfprintf *****************
  8633 ;; Defined at:
  8634 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  8635 ;; Parameters:    Size  Location     Type
  8636 ;;  fp              1    wreg     PTR struct _IO_FILE
  8637 ;;		 -> sprintf@f(11), 
  8638 ;;  fmt             1    8[BANK0 ] PTR const unsigned char 
  8639 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  8640 ;;  ap              1    9[BANK0 ] PTR PTR void 
  8641 ;;		 -> sprintf@ap(1), 
  8642 ;; Auto vars:     Size  Location     Type
  8643 ;;  fp              1   10[BANK0 ] PTR struct _IO_FILE
  8644 ;;		 -> sprintf@f(11), 
  8645 ;;  cfmt            1   11[BANK0 ] PTR unsigned char 
  8646 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  8647 ;; Return value:  Size  Location     Type
  8648 ;;                  2    8[BANK0 ] int 
  8649 ;; Registers used:
  8650 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8651 ;; Tracked objects:
  8652 ;;		On entry : 0/0
  8653 ;;		On exit  : 0/0
  8654 ;;		Unchanged: 0/0
  8655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8656 ;;      Params:         0       2       0       0       0
  8657 ;;      Locals:         0       2       0       0       0
  8658 ;;      Temps:          0       0       0       0       0
  8659 ;;      Totals:         0       4       0       0       0
  8660 ;;Total ram usage:        4 bytes
  8661 ;; Hardware stack levels used: 1
  8662 ;; Hardware stack levels required when called: 3
  8663 ;; This function calls:
  8664 ;;		_vfpfcnvrt
  8665 ;; This function is called by:
  8666 ;;		_sprintf
  8667 ;; This function uses a non-reentrant model
  8668 ;;
  8669                           
  8670     1586                     _vfprintf:	
  8671                           ;psect for function _vfprintf
  8672                           
  8673                           
  8674                           ;incstack = 0
  8675                           ; Regs used in _vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8676                           ;vfprintf@fp stored from wreg
  8677     1586  1283               	bcf	3,5	;RP0=0, select bank0
  8678     1587  1303               	bcf	3,6	;RP1=0, select bank0
  8679     1588  00AA               	movwf	vfprintf@fp
  8680     1589                     l3063:
  8681                           
  8682                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  8683     1589  0828               	movf	vfprintf@fmt,w
  8684     158A  00AB               	movwf	vfprintf@cfmt
  8685                           
  8686                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  8687     158B  2D96               	goto	l3067
  8688     158C                     l3065:
  8689                           
  8690                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  8691     158C  302B               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  8692     158D  00FA               	movwf	vfpfcnvrt@fmt
  8693     158E  0829               	movf	vfprintf@ap,w
  8694     158F  00FB               	movwf	vfpfcnvrt@ap
  8695     1590  082A               	movf	vfprintf@fp,w
  8696     1591  120A  158A  2711  160A  118A  	fcall	_vfpfcnvrt
  8697     1596                     l3067:
  8698                           
  8699                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  8700     1596  1283               	bcf	3,5	;RP0=0, select bank0
  8701     1597  1303               	bcf	3,6	;RP1=0, select bank0
  8702     1598  082B               	movf	vfprintf@cfmt,w
  8703     1599  0084               	movwf	4
  8704     159A  120A  158A  200A  160A  118A  	fcall	stringdir
  8705     159F  3A00               	xorlw	0
  8706     15A0  1D03               	skipz
  8707     15A1  2DA3               	goto	u3581
  8708     15A2  2DA4               	goto	u3580
  8709     15A3                     u3581:
  8710     15A3  2D8C               	goto	l3065
  8711     15A4                     u3580:
  8712     15A4                     l3069:
  8713                           
  8714                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  8715     15A4  01A8               	clrf	?_vfprintf
  8716     15A5  01A9               	clrf	?_vfprintf+1
  8717     15A6                     l1141:
  8718     15A6  0008               	return
  8719     15A7                     __end_of_vfprintf:
  8720                           
  8721                           	psect	text35
  8722     0F11                     __ptext35:	
  8723 ;; *************** function _vfpfcnvrt *****************
  8724 ;; Defined at:
  8725 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  8726 ;; Parameters:    Size  Location     Type
  8727 ;;  fp              1    wreg     PTR struct _IO_FILE
  8728 ;;		 -> sprintf@f(11), 
  8729 ;;  fmt             1   10[COMMON] PTR PTR unsigned char 
  8730 ;;		 -> vfprintf@cfmt(1), 
  8731 ;;  ap              1   11[COMMON] PTR PTR void 
  8732 ;;		 -> sprintf@ap(1), 
  8733 ;; Auto vars:     Size  Location     Type
  8734 ;;  fp              1    1[BANK0 ] PTR struct _IO_FILE
  8735 ;;		 -> sprintf@f(11), 
  8736 ;;  convarg         4    3[BANK0 ] struct .
  8737 ;;  c               1    7[BANK0 ] unsigned char 
  8738 ;;  cp              1    2[BANK0 ] PTR unsigned char 
  8739 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  8740 ;;  done            1    0[BANK0 ] _Bool 
  8741 ;; Return value:  Size  Location     Type
  8742 ;;                  1    wreg      void 
  8743 ;; Registers used:
  8744 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8745 ;; Tracked objects:
  8746 ;;		On entry : 0/0
  8747 ;;		On exit  : 0/0
  8748 ;;		Unchanged: 0/0
  8749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8750 ;;      Params:         2       0       0       0       0
  8751 ;;      Locals:         0       8       0       0       0
  8752 ;;      Temps:          2       0       0       0       0
  8753 ;;      Totals:         4       8       0       0       0
  8754 ;;Total ram usage:       12 bytes
  8755 ;; Hardware stack levels used: 1
  8756 ;; Hardware stack levels required when called: 2
  8757 ;; This function calls:
  8758 ;;		___awdiv
  8759 ;;		___awmod
  8760 ;;		_abs
  8761 ;;		_fputc
  8762 ;; This function is called by:
  8763 ;;		_vfprintf
  8764 ;; This function uses a non-reentrant model
  8765 ;;
  8766                           
  8767     0F11                     _vfpfcnvrt:	
  8768                           ;psect for function _vfpfcnvrt
  8769                           
  8770                           
  8771                           ;incstack = 0
  8772                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8773                           ;vfpfcnvrt@fp stored from wreg
  8774     0F11  1283               	bcf	3,5	;RP0=0, select bank0
  8775     0F12  1303               	bcf	3,6	;RP1=0, select bank0
  8776     0F13  00A1               	movwf	vfpfcnvrt@fp
  8777     0F14                     l2895:
  8778                           
  8779                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  8780     0F14  087A               	movf	vfpfcnvrt@fmt,w
  8781     0F15  0084               	movwf	4
  8782     0F16  1383               	bcf	3,7	;select IRP bank0
  8783     0F17  0800               	movf	0,w
  8784     0F18  0084               	movwf	4
  8785     0F19  120A  158A  200A  120A  158A  	fcall	stringdir
  8786     0F1E  3A25               	xorlw	37
  8787     0F1F  1D03               	skipz
  8788     0F20  2F22               	goto	u3391
  8789     0F21  2F23               	goto	u3390
  8790     0F22                     u3391:
  8791     0F22  2FE8               	goto	l2941
  8792     0F23                     u3390:
  8793     0F23                     l2897:
  8794                           
  8795                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  8796     0F23  3001               	movlw	1
  8797     0F24  00FF               	movwf	btemp+1
  8798     0F25  087A               	movf	vfpfcnvrt@fmt,w
  8799     0F26  0084               	movwf	4
  8800     0F27  087F               	movf	btemp+1,w
  8801     0F28  0780               	addwf	0,f
  8802     0F29                     l2899:
  8803                           
  8804                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  8805     0F29  1683               	bsf	3,5	;RP0=1, select bank1
  8806     0F2A  1303               	bcf	3,6	;RP1=0, select bank1
  8807     0F2B  01DA               	clrf	_width^(0+128)
  8808     0F2C  01DB               	clrf	(_width+1)^(0+128)
  8809     0F2D  1003               	clrc
  8810     0F2E  3000               	movlw	0
  8811     0F2F  1803               	btfsc	3,0
  8812     0F30  3001               	movlw	1
  8813     0F31  00DE               	movwf	_flags^(0+128)
  8814     0F32                     l2901:
  8815                           
  8816                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  8817     0F32  30FF               	movlw	255
  8818     0F33  00DC               	movwf	_prec^(0+128)
  8819     0F34  30FF               	movlw	255
  8820     0F35  00DD               	movwf	(_prec^(0+128)+1)
  8821     0F36                     l2903:
  8822                           
  8823                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  8824     0F36  087A               	movf	vfpfcnvrt@fmt,w
  8825     0F37  0084               	movwf	4
  8826     0F38  0800               	movf	0,w
  8827     0F39  1283               	bcf	3,5	;RP0=0, select bank0
  8828     0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  8829     0F3B  00A2               	movwf	vfpfcnvrt@cp
  8830     0F3C                     l2905:
  8831                           
  8832                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  8833     0F3C  0822               	movf	vfpfcnvrt@cp,w
  8834     0F3D  0084               	movwf	4
  8835     0F3E  120A  158A  200A  120A  158A  	fcall	stringdir
  8836     0F43  3A64               	xorlw	100
  8837     0F44  1903               	skipnz
  8838     0F45  2F47               	goto	u3401
  8839     0F46  2F48               	goto	u3400
  8840     0F47                     u3401:
  8841     0F47  2F54               	goto	l2909
  8842     0F48                     u3400:
  8843     0F48                     l2907:
  8844     0F48  0822               	movf	vfpfcnvrt@cp,w
  8845     0F49  0084               	movwf	4
  8846     0F4A  120A  158A  200A  120A  158A  	fcall	stringdir
  8847     0F4F  3A69               	xorlw	105
  8848     0F50  1D03               	skipz
  8849     0F51  2F53               	goto	u3411
  8850     0F52  2F54               	goto	u3410
  8851     0F53                     u3411:
  8852     0F53  2FE0               	goto	l2937
  8853     0F54                     u3410:
  8854     0F54                     l2909:
  8855                           
  8856                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  8857     0F54  087B               	movf	vfpfcnvrt@ap,w
  8858     0F55  0084               	movwf	4
  8859     0F56  0800               	movf	0,w
  8860     0F57  00FF               	movwf	btemp+1
  8861     0F58  3002               	movlw	2
  8862     0F59  0780               	addwf	0,f
  8863     0F5A  087F               	movf	btemp+1,w
  8864     0F5B  0084               	movwf	4
  8865     0F5C  0800               	movf	0,w
  8866     0F5D  00A3               	movwf	vfpfcnvrt@convarg
  8867     0F5E  0A84               	incf	4,f
  8868     0F5F  0800               	movf	0,w
  8869     0F60  00A4               	movwf	vfpfcnvrt@convarg+1
  8870     0F61                     l2911:
  8871                           
  8872                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  8873     0F61  087A               	movf	vfpfcnvrt@fmt,w
  8874     0F62  0084               	movwf	4
  8875     0F63  0822               	movf	vfpfcnvrt@cp,w
  8876     0F64  3E01               	addlw	1
  8877     0F65  0080               	movwf	0
  8878     0F66                     l2913:
  8879                           
  8880                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  8881     0F66  3020               	movlw	32
  8882     0F67  00A7               	movwf	vfpfcnvrt@c
  8883     0F68                     l2915:
  8884                           
  8885                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  8886     0F68  1BA4               	btfsc	vfpfcnvrt@convarg+1,7
  8887     0F69  2F6B               	goto	u3421
  8888     0F6A  2F6D               	goto	u3420
  8889     0F6B                     u3421:
  8890     0F6B  3001               	movlw	1
  8891     0F6C  2F6E               	goto	u3430
  8892     0F6D                     u3420:
  8893     0F6D  3000               	movlw	0
  8894     0F6E                     u3430:
  8895     0F6E  00A0               	movwf	vfpfcnvrt@done
  8896     0F6F                     l2917:
  8897                           
  8898                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  8899     0F6F  3001               	movlw	1
  8900     0F70  02A7               	subwf	vfpfcnvrt@c,f
  8901     0F71  0827               	movf	vfpfcnvrt@c,w
  8902     0F72  3E90               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8903     0F73  0084               	movwf	4
  8904     0F74  300A               	movlw	10
  8905     0F75  00F0               	movwf	___awmod@divisor
  8906     0F76  3000               	movlw	0
  8907     0F77  00F1               	movwf	___awmod@divisor+1
  8908     0F78  0824               	movf	vfpfcnvrt@convarg+1,w
  8909     0F79  00F3               	movwf	___awmod@dividend+1
  8910     0F7A  0823               	movf	vfpfcnvrt@convarg,w
  8911     0F7B  00F2               	movwf	___awmod@dividend
  8912     0F7C  120A  158A  218E  120A  158A  	fcall	___awmod
  8913     0F81  0871               	movf	?___awmod+1,w
  8914     0F82  00F7               	movwf	abs@a+1
  8915     0F83  0870               	movf	?___awmod,w
  8916     0F84  00F6               	movwf	abs@a
  8917     0F85  160A  118A  2483  120A  158A  	fcall	_abs
  8918     0F8A  0876               	movf	?_abs,w
  8919     0F8B  3E30               	addlw	48
  8920     0F8C  1783               	bsf	3,7	;select IRP bank3
  8921     0F8D  0080               	movwf	0
  8922     0F8E                     l2919:
  8923                           
  8924                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  8925     0F8E  300A               	movlw	10
  8926     0F8F  00F0               	movwf	___awdiv@divisor
  8927     0F90  3000               	movlw	0
  8928     0F91  00F1               	movwf	___awdiv@divisor+1
  8929     0F92  1283               	bcf	3,5	;RP0=0, select bank0
  8930     0F93  1303               	bcf	3,6	;RP1=0, select bank0
  8931     0F94  0824               	movf	vfpfcnvrt@convarg+1,w
  8932     0F95  00F3               	movwf	___awdiv@dividend+1
  8933     0F96  0823               	movf	vfpfcnvrt@convarg,w
  8934     0F97  00F2               	movwf	___awdiv@dividend
  8935     0F98  120A  158A  21E7  120A  158A  	fcall	___awdiv
  8936     0F9D  0871               	movf	?___awdiv+1,w
  8937     0F9E  1283               	bcf	3,5	;RP0=0, select bank0
  8938     0F9F  1303               	bcf	3,6	;RP1=0, select bank0
  8939     0FA0  00A4               	movwf	vfpfcnvrt@convarg+1
  8940     0FA1  0870               	movf	?___awdiv,w
  8941     0FA2  00A3               	movwf	vfpfcnvrt@convarg
  8942     0FA3                     l2921:
  8943                           
  8944                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  8945     0FA3  0823               	movf	vfpfcnvrt@convarg,w
  8946     0FA4  0424               	iorwf	vfpfcnvrt@convarg+1,w
  8947     0FA5  1903               	btfsc	3,2
  8948     0FA6  2FA8               	goto	u3441
  8949     0FA7  2FA9               	goto	u3440
  8950     0FA8                     u3441:
  8951     0FA8  2FAE               	goto	l2925
  8952     0FA9                     u3440:
  8953     0FA9                     l2923:
  8954     0FA9  0827               	movf	vfpfcnvrt@c,w
  8955     0FAA  1D03               	btfss	3,2
  8956     0FAB  2FAD               	goto	u3451
  8957     0FAC  2FAE               	goto	u3450
  8958     0FAD                     u3451:
  8959     0FAD  2F6F               	goto	l2917
  8960     0FAE                     u3450:
  8961     0FAE                     l2925:
  8962                           
  8963                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  8964     0FAE  0827               	movf	vfpfcnvrt@c,w
  8965     0FAF  1903               	btfsc	3,2
  8966     0FB0  2FB2               	goto	u3461
  8967     0FB1  2FB3               	goto	u3460
  8968     0FB2                     u3461:
  8969     0FB2  2FD9               	goto	l2935
  8970     0FB3                     u3460:
  8971     0FB3                     l2927:
  8972     0FB3  0820               	movf	vfpfcnvrt@done,w
  8973     0FB4  1903               	btfsc	3,2
  8974     0FB5  2FB7               	goto	u3471
  8975     0FB6  2FB8               	goto	u3470
  8976     0FB7                     u3471:
  8977     0FB7  2FD9               	goto	l2935
  8978     0FB8                     u3470:
  8979     0FB8                     l2929:
  8980                           
  8981                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  8982     0FB8  3001               	movlw	1
  8983     0FB9  02A7               	subwf	vfpfcnvrt@c,f
  8984     0FBA  0827               	movf	vfpfcnvrt@c,w
  8985     0FBB  3E90               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8986     0FBC  0084               	movwf	4
  8987     0FBD  302D               	movlw	45
  8988     0FBE  1783               	bsf	3,7	;select IRP bank3
  8989     0FBF  0080               	movwf	0
  8990     0FC0  2FD9               	goto	l2935
  8991     0FC1                     l2931:
  8992                           
  8993                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  8994     0FC1  0827               	movf	vfpfcnvrt@c,w
  8995     0FC2  3E90               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8996     0FC3  0084               	movwf	4
  8997     0FC4  1783               	bsf	3,7	;select IRP bank3
  8998     0FC5  0800               	movf	0,w
  8999     0FC6  00FC               	movwf	??_vfpfcnvrt
  9000     0FC7  01FD               	clrf	??_vfpfcnvrt+1
  9001     0FC8  087C               	movf	??_vfpfcnvrt,w
  9002     0FC9  00F0               	movwf	fputc@c
  9003     0FCA  087D               	movf	??_vfpfcnvrt+1,w
  9004     0FCB  00F1               	movwf	fputc@c+1
  9005     0FCC  0821               	movf	vfpfcnvrt@fp,w
  9006     0FCD  00F2               	movwf	fputc@fp
  9007     0FCE  120A  158A  2138  120A  158A  	fcall	_fputc
  9008     0FD3                     l2933:
  9009     0FD3  3001               	movlw	1
  9010     0FD4  00FF               	movwf	btemp+1
  9011     0FD5  087F               	movf	btemp+1,w
  9012     0FD6  1283               	bcf	3,5	;RP0=0, select bank0
  9013     0FD7  1303               	bcf	3,6	;RP1=0, select bank0
  9014     0FD8  07A7               	addwf	vfpfcnvrt@c,f
  9015     0FD9                     l2935:
  9016                           
  9017                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  9018     0FD9  3020               	movlw	32
  9019     0FDA  0627               	xorwf	vfpfcnvrt@c,w
  9020     0FDB  1D03               	btfss	3,2
  9021     0FDC  2FDE               	goto	u3481
  9022     0FDD  2FDF               	goto	u3480
  9023     0FDE                     u3481:
  9024     0FDE  2FC1               	goto	l2931
  9025     0FDF                     u3480:
  9026     0FDF  2FFF               	goto	l1135
  9027     0FE0                     l2937:
  9028                           
  9029                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  9030     0FE0  3001               	movlw	1
  9031     0FE1  00FF               	movwf	btemp+1
  9032     0FE2  087A               	movf	vfpfcnvrt@fmt,w
  9033     0FE3  0084               	movwf	4
  9034     0FE4  087F               	movf	btemp+1,w
  9035     0FE5  1383               	bcf	3,7	;select IRP bank0
  9036     0FE6  0780               	addwf	0,f
  9037     0FE7  2FFF               	goto	l1135
  9038     0FE8                     l2941:
  9039                           
  9040                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  9041     0FE8  087A               	movf	vfpfcnvrt@fmt,w
  9042     0FE9  0084               	movwf	4
  9043     0FEA  0800               	movf	0,w
  9044     0FEB  0084               	movwf	4
  9045     0FEC  120A  158A  200A  120A  158A  	fcall	stringdir
  9046     0FF1  00FC               	movwf	??_vfpfcnvrt
  9047     0FF2  01FD               	clrf	??_vfpfcnvrt+1
  9048     0FF3  087C               	movf	??_vfpfcnvrt,w
  9049     0FF4  00F0               	movwf	fputc@c
  9050     0FF5  087D               	movf	??_vfpfcnvrt+1,w
  9051     0FF6  00F1               	movwf	fputc@c+1
  9052     0FF7  0821               	movf	vfpfcnvrt@fp,w
  9053     0FF8  00F2               	movwf	fputc@fp
  9054     0FF9  120A  158A  2138  120A  158A  	fcall	_fputc
  9055     0FFE  2FE0               	goto	l2937
  9056     0FFF                     l1135:
  9057     0FFF  0008               	return
  9058     1000                     __end_of_vfpfcnvrt:
  9059                           
  9060                           	psect	text36
  9061     0938                     __ptext36:	
  9062 ;; *************** function _fputc *****************
  9063 ;; Defined at:
  9064 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  9065 ;; Parameters:    Size  Location     Type
  9066 ;;  c               2    0[COMMON] int 
  9067 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  9068 ;;		 -> sprintf@f(11), 
  9069 ;; Auto vars:     Size  Location     Type
  9070 ;;		None
  9071 ;; Return value:  Size  Location     Type
  9072 ;;                  2    0[COMMON] int 
  9073 ;; Registers used:
  9074 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9075 ;; Tracked objects:
  9076 ;;		On entry : 0/0
  9077 ;;		On exit  : 0/0
  9078 ;;		Unchanged: 0/0
  9079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9080 ;;      Params:         3       0       0       0       0
  9081 ;;      Locals:         0       0       0       0       0
  9082 ;;      Temps:          5       0       0       0       0
  9083 ;;      Totals:         8       0       0       0       0
  9084 ;;Total ram usage:        8 bytes
  9085 ;; Hardware stack levels used: 1
  9086 ;; Hardware stack levels required when called: 1
  9087 ;; This function calls:
  9088 ;;		_putch
  9089 ;; This function is called by:
  9090 ;;		_vfpfcnvrt
  9091 ;; This function uses a non-reentrant model
  9092 ;;
  9093                           
  9094     0938                     _fputc:	
  9095                           ;psect for function _fputc
  9096                           
  9097     0938                     l2813:	
  9098                           ;incstack = 0
  9099                           ; Regs used in _fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9100                           
  9101     0938  0872               	movf	fputc@fp,w
  9102     0939  1903               	btfsc	3,2
  9103     093A  293C               	goto	u3201
  9104     093B  293D               	goto	u3200
  9105     093C                     u3201:
  9106     093C  2942               	goto	l2817
  9107     093D                     u3200:
  9108     093D                     l2815:
  9109     093D  0872               	movf	fputc@fp,w
  9110     093E  1D03               	btfss	3,2
  9111     093F  2941               	goto	u3211
  9112     0940  2942               	goto	u3210
  9113     0941                     u3211:
  9114     0941  2949               	goto	l2819
  9115     0942                     u3210:
  9116     0942                     l2817:
  9117     0942  0870               	movf	fputc@c,w
  9118     0943  120A  118A  2003  120A  158A  	fcall	_putch
  9119     0948  298D               	goto	l1160
  9120     0949                     l2819:
  9121     0949  0872               	movf	fputc@fp,w
  9122     094A  3E09               	addlw	9
  9123     094B  0084               	movwf	4
  9124     094C  1383               	bcf	3,7	;select IRP bank0
  9125     094D  0800               	movf	0,w
  9126     094E  00F3               	movwf	??_fputc
  9127     094F  0A84               	incf	4,f
  9128     0950  0800               	movf	0,w
  9129     0951  00F4               	movwf	??_fputc+1
  9130     0952  0873               	movf	??_fputc,w
  9131     0953  0474               	iorwf	??_fputc+1,w
  9132     0954  1903               	btfsc	3,2
  9133     0955  2957               	goto	u3221
  9134     0956  2958               	goto	u3220
  9135     0957                     u3221:
  9136     0957  2976               	goto	l2823
  9137     0958                     u3220:
  9138     0958                     l2821:
  9139     0958  0872               	movf	fputc@fp,w
  9140     0959  3E09               	addlw	9
  9141     095A  0084               	movwf	4
  9142     095B  0800               	movf	0,w
  9143     095C  00F3               	movwf	??_fputc
  9144     095D  0A84               	incf	4,f
  9145     095E  0800               	movf	0,w
  9146     095F  00F4               	movwf	??_fputc+1
  9147     0960  0872               	movf	fputc@fp,w
  9148     0961  3E02               	addlw	2
  9149     0962  0084               	movwf	4
  9150     0963  0800               	movf	0,w
  9151     0964  00F5               	movwf	??_fputc+2
  9152     0965  0A84               	incf	4,f
  9153     0966  0800               	movf	0,w
  9154     0967  00F6               	movwf	??_fputc+3
  9155     0968  0876               	movf	??_fputc+3,w
  9156     0969  3A80               	xorlw	128
  9157     096A  00F7               	movwf	??_fputc+4
  9158     096B  0874               	movf	??_fputc+1,w
  9159     096C  3A80               	xorlw	128
  9160     096D  0277               	subwf	??_fputc+4,w
  9161     096E  1D03               	skipz
  9162     096F  2972               	goto	u3235
  9163     0970  0873               	movf	??_fputc,w
  9164     0971  0275               	subwf	??_fputc+2,w
  9165     0972                     u3235:
  9166     0972  1803               	skipnc
  9167     0973  2975               	goto	u3231
  9168     0974  2976               	goto	u3230
  9169     0975                     u3231:
  9170     0975  298D               	goto	l1160
  9171     0976                     u3230:
  9172     0976                     l2823:
  9173     0976  0872               	movf	fputc@fp,w
  9174     0977  3E02               	addlw	2
  9175     0978  0084               	movwf	4
  9176     0979  1383               	bcf	3,7	;select IRP bank0
  9177     097A  0800               	movf	0,w
  9178     097B  00F3               	movwf	??_fputc
  9179     097C  0872               	movf	fputc@fp,w
  9180     097D  0084               	movwf	4
  9181     097E  0800               	movf	0,w
  9182     097F  0773               	addwf	??_fputc,w
  9183     0980  00F4               	movwf	??_fputc+1
  9184     0981  0874               	movf	??_fputc+1,w
  9185     0982  0084               	movwf	4
  9186     0983  0870               	movf	fputc@c,w
  9187     0984  0080               	movwf	0
  9188     0985  0872               	movf	fputc@fp,w
  9189     0986  3E02               	addlw	2
  9190     0987  0084               	movwf	4
  9191     0988  3001               	movlw	1
  9192     0989  0780               	addwf	0,f
  9193     098A  0A84               	incf	4,f
  9194     098B  1803               	skipnc
  9195     098C  0A80               	incf	0,f
  9196     098D                     l1160:
  9197     098D  0008               	return
  9198     098E                     __end_of_fputc:
  9199                           
  9200                           	psect	text37
  9201     0003                     __ptext37:	
  9202 ;; *************** function _putch *****************
  9203 ;; Defined at:
  9204 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  9205 ;; Parameters:    Size  Location     Type
  9206 ;;  c               1    wreg     unsigned char 
  9207 ;; Auto vars:     Size  Location     Type
  9208 ;;  c               1    0[COMMON] unsigned char 
  9209 ;; Return value:  Size  Location     Type
  9210 ;;                  1    wreg      void 
  9211 ;; Registers used:
  9212 ;;		wreg
  9213 ;; Tracked objects:
  9214 ;;		On entry : 0/0
  9215 ;;		On exit  : 0/0
  9216 ;;		Unchanged: 0/0
  9217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9218 ;;      Params:         0       0       0       0       0
  9219 ;;      Locals:         0       0       0       0       0
  9220 ;;      Temps:          0       0       0       0       0
  9221 ;;      Totals:         0       0       0       0       0
  9222 ;;Total ram usage:        0 bytes
  9223 ;; Hardware stack levels used: 1
  9224 ;; This function calls:
  9225 ;;		Nothing
  9226 ;; This function is called by:
  9227 ;;		_fputc
  9228 ;; This function uses a non-reentrant model
  9229 ;;
  9230                           
  9231     0003                     _putch:	
  9232                           ;psect for function _putch
  9233                           
  9234     0003                     l1171:	
  9235                           ;incstack = 0
  9236                           ; Regs used in _putch: [wreg]
  9237                           
  9238     0003  0008               	return
  9239     0004                     __end_of_putch:
  9240                           
  9241                           	psect	text38
  9242     1483                     __ptext38:	
  9243 ;; *************** function _abs *****************
  9244 ;; Defined at:
  9245 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  9246 ;; Parameters:    Size  Location     Type
  9247 ;;  a               2    6[COMMON] int 
  9248 ;; Auto vars:     Size  Location     Type
  9249 ;;		None
  9250 ;; Return value:  Size  Location     Type
  9251 ;;                  2    6[COMMON] int 
  9252 ;; Registers used:
  9253 ;;		wreg, status,2, status,0
  9254 ;; Tracked objects:
  9255 ;;		On entry : 0/0
  9256 ;;		On exit  : 0/0
  9257 ;;		Unchanged: 0/0
  9258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9259 ;;      Params:         2       0       0       0       0
  9260 ;;      Locals:         0       0       0       0       0
  9261 ;;      Temps:          2       0       0       0       0
  9262 ;;      Totals:         4       0       0       0       0
  9263 ;;Total ram usage:        4 bytes
  9264 ;; Hardware stack levels used: 1
  9265 ;; This function calls:
  9266 ;;		Nothing
  9267 ;; This function is called by:
  9268 ;;		_vfpfcnvrt
  9269 ;; This function uses a non-reentrant model
  9270 ;;
  9271                           
  9272     1483                     _abs:	
  9273                           ;psect for function _abs
  9274                           
  9275     1483                     l2827:	
  9276                           ;incstack = 0
  9277                           ; Regs used in _abs: [wreg+status,2+status,0]
  9278                           
  9279     1483  1BF7               	btfsc	abs@a+1,7
  9280     1484  2C86               	goto	u3241
  9281     1485  2C87               	goto	u3240
  9282     1486                     u3241:
  9283     1486  2C88               	goto	l2831
  9284     1487                     u3240:
  9285     1487                     l2829:
  9286     1487  2C93               	goto	l1148
  9287     1488                     l2831:
  9288     1488  0976               	comf	abs@a,w
  9289     1489  00F8               	movwf	??_abs
  9290     148A  0977               	comf	abs@a+1,w
  9291     148B  00F9               	movwf	??_abs+1
  9292     148C  0AF8               	incf	??_abs,f
  9293     148D  1903               	skipnz
  9294     148E  0AF9               	incf	??_abs+1,f
  9295     148F  0878               	movf	??_abs,w
  9296     1490  00F6               	movwf	?_abs
  9297     1491  0879               	movf	??_abs+1,w
  9298     1492  00F7               	movwf	?_abs+1
  9299     1493                     l1148:
  9300     1493  0008               	return
  9301     1494                     __end_of_abs:
  9302                           
  9303                           	psect	text39
  9304     098E                     __ptext39:	
  9305 ;; *************** function ___awmod *****************
  9306 ;; Defined at:
  9307 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  9308 ;; Parameters:    Size  Location     Type
  9309 ;;  divisor         2    0[COMMON] int 
  9310 ;;  dividend        2    2[COMMON] int 
  9311 ;; Auto vars:     Size  Location     Type
  9312 ;;  sign            1    5[COMMON] unsigned char 
  9313 ;;  counter         1    4[COMMON] unsigned char 
  9314 ;; Return value:  Size  Location     Type
  9315 ;;                  2    0[COMMON] int 
  9316 ;; Registers used:
  9317 ;;		wreg, status,2, status,0, btemp+1
  9318 ;; Tracked objects:
  9319 ;;		On entry : 0/0
  9320 ;;		On exit  : 0/0
  9321 ;;		Unchanged: 0/0
  9322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9323 ;;      Params:         4       0       0       0       0
  9324 ;;      Locals:         2       0       0       0       0
  9325 ;;      Temps:          0       0       0       0       0
  9326 ;;      Totals:         6       0       0       0       0
  9327 ;;Total ram usage:        6 bytes
  9328 ;; Hardware stack levels used: 1
  9329 ;; This function calls:
  9330 ;;		Nothing
  9331 ;; This function is called by:
  9332 ;;		_vfpfcnvrt
  9333 ;; This function uses a non-reentrant model
  9334 ;;
  9335                           
  9336     098E                     ___awmod:	
  9337                           ;psect for function ___awmod
  9338                           
  9339     098E                     l2775:	
  9340                           ;incstack = 0
  9341                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  9342                           
  9343     098E  01F5               	clrf	___awmod@sign
  9344     098F                     l2777:
  9345     098F  1FF3               	btfss	___awmod@dividend+1,7
  9346     0990  2992               	goto	u3111
  9347     0991  2993               	goto	u3110
  9348     0992                     u3111:
  9349     0992  299A               	goto	l2783
  9350     0993                     u3110:
  9351     0993                     l2779:
  9352     0993  09F2               	comf	___awmod@dividend,f
  9353     0994  09F3               	comf	___awmod@dividend+1,f
  9354     0995  0AF2               	incf	___awmod@dividend,f
  9355     0996  1903               	skipnz
  9356     0997  0AF3               	incf	___awmod@dividend+1,f
  9357     0998                     l2781:
  9358     0998  01F5               	clrf	___awmod@sign
  9359     0999  0AF5               	incf	___awmod@sign,f
  9360     099A                     l2783:
  9361     099A  1FF1               	btfss	___awmod@divisor+1,7
  9362     099B  299D               	goto	u3121
  9363     099C  299E               	goto	u3120
  9364     099D                     u3121:
  9365     099D  29A3               	goto	l2787
  9366     099E                     u3120:
  9367     099E                     l2785:
  9368     099E  09F0               	comf	___awmod@divisor,f
  9369     099F  09F1               	comf	___awmod@divisor+1,f
  9370     09A0  0AF0               	incf	___awmod@divisor,f
  9371     09A1  1903               	skipnz
  9372     09A2  0AF1               	incf	___awmod@divisor+1,f
  9373     09A3                     l2787:
  9374     09A3  0870               	movf	___awmod@divisor,w
  9375     09A4  0471               	iorwf	___awmod@divisor+1,w
  9376     09A5  1903               	btfsc	3,2
  9377     09A6  29A8               	goto	u3131
  9378     09A7  29A9               	goto	u3130
  9379     09A8                     u3131:
  9380     09A8  29D8               	goto	l2805
  9381     09A9                     u3130:
  9382     09A9                     l2789:
  9383     09A9  01F4               	clrf	___awmod@counter
  9384     09AA  0AF4               	incf	___awmod@counter,f
  9385     09AB  29B7               	goto	l2795
  9386     09AC                     l2791:
  9387     09AC  3001               	movlw	1
  9388     09AD                     u3145:
  9389     09AD  1003               	clrc
  9390     09AE  0DF0               	rlf	___awmod@divisor,f
  9391     09AF  0DF1               	rlf	___awmod@divisor+1,f
  9392     09B0  3EFF               	addlw	-1
  9393     09B1  1D03               	skipz
  9394     09B2  29AD               	goto	u3145
  9395     09B3                     l2793:
  9396     09B3  3001               	movlw	1
  9397     09B4  00FF               	movwf	btemp+1
  9398     09B5  087F               	movf	btemp+1,w
  9399     09B6  07F4               	addwf	___awmod@counter,f
  9400     09B7                     l2795:
  9401     09B7  1FF1               	btfss	___awmod@divisor+1,7
  9402     09B8  29BA               	goto	u3151
  9403     09B9  29BB               	goto	u3150
  9404     09BA                     u3151:
  9405     09BA  29AC               	goto	l2791
  9406     09BB                     u3150:
  9407     09BB                     l2797:
  9408     09BB  0871               	movf	___awmod@divisor+1,w
  9409     09BC  0273               	subwf	___awmod@dividend+1,w
  9410     09BD  1D03               	skipz
  9411     09BE  29C1               	goto	u3165
  9412     09BF  0870               	movf	___awmod@divisor,w
  9413     09C0  0272               	subwf	___awmod@dividend,w
  9414     09C1                     u3165:
  9415     09C1  1C03               	skipc
  9416     09C2  29C4               	goto	u3161
  9417     09C3  29C5               	goto	u3160
  9418     09C4                     u3161:
  9419     09C4  29CB               	goto	l2801
  9420     09C5                     u3160:
  9421     09C5                     l2799:
  9422     09C5  0870               	movf	___awmod@divisor,w
  9423     09C6  02F2               	subwf	___awmod@dividend,f
  9424     09C7  0871               	movf	___awmod@divisor+1,w
  9425     09C8  1C03               	skipc
  9426     09C9  03F3               	decf	___awmod@dividend+1,f
  9427     09CA  02F3               	subwf	___awmod@dividend+1,f
  9428     09CB                     l2801:
  9429     09CB  3001               	movlw	1
  9430     09CC                     u3175:
  9431     09CC  1003               	clrc
  9432     09CD  0CF1               	rrf	___awmod@divisor+1,f
  9433     09CE  0CF0               	rrf	___awmod@divisor,f
  9434     09CF  3EFF               	addlw	-1
  9435     09D0  1D03               	skipz
  9436     09D1  29CC               	goto	u3175
  9437     09D2                     l2803:
  9438     09D2  3001               	movlw	1
  9439     09D3  02F4               	subwf	___awmod@counter,f
  9440     09D4  1D03               	btfss	3,2
  9441     09D5  29D7               	goto	u3181
  9442     09D6  29D8               	goto	u3180
  9443     09D7                     u3181:
  9444     09D7  29BB               	goto	l2797
  9445     09D8                     u3180:
  9446     09D8                     l2805:
  9447     09D8  0875               	movf	___awmod@sign,w
  9448     09D9  1903               	btfsc	3,2
  9449     09DA  29DC               	goto	u3191
  9450     09DB  29DD               	goto	u3190
  9451     09DC                     u3191:
  9452     09DC  29E2               	goto	l2809
  9453     09DD                     u3190:
  9454     09DD                     l2807:
  9455     09DD  09F2               	comf	___awmod@dividend,f
  9456     09DE  09F3               	comf	___awmod@dividend+1,f
  9457     09DF  0AF2               	incf	___awmod@dividend,f
  9458     09E0  1903               	skipnz
  9459     09E1  0AF3               	incf	___awmod@dividend+1,f
  9460     09E2                     l2809:
  9461     09E2  0873               	movf	___awmod@dividend+1,w
  9462     09E3  00F1               	movwf	?___awmod+1
  9463     09E4  0872               	movf	___awmod@dividend,w
  9464     09E5  00F0               	movwf	?___awmod
  9465     09E6                     l794:
  9466     09E6  0008               	return
  9467     09E7                     __end_of___awmod:
  9468                           
  9469                           	psect	text40
  9470     09E7                     __ptext40:	
  9471 ;; *************** function ___awdiv *****************
  9472 ;; Defined at:
  9473 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  9474 ;; Parameters:    Size  Location     Type
  9475 ;;  divisor         2    0[COMMON] int 
  9476 ;;  dividend        2    2[COMMON] int 
  9477 ;; Auto vars:     Size  Location     Type
  9478 ;;  quotient        2    6[COMMON] int 
  9479 ;;  sign            1    5[COMMON] unsigned char 
  9480 ;;  counter         1    4[COMMON] unsigned char 
  9481 ;; Return value:  Size  Location     Type
  9482 ;;                  2    0[COMMON] int 
  9483 ;; Registers used:
  9484 ;;		wreg, status,2, status,0, btemp+1
  9485 ;; Tracked objects:
  9486 ;;		On entry : 0/0
  9487 ;;		On exit  : 0/0
  9488 ;;		Unchanged: 0/0
  9489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9490 ;;      Params:         4       0       0       0       0
  9491 ;;      Locals:         4       0       0       0       0
  9492 ;;      Temps:          0       0       0       0       0
  9493 ;;      Totals:         8       0       0       0       0
  9494 ;;Total ram usage:        8 bytes
  9495 ;; Hardware stack levels used: 1
  9496 ;; This function calls:
  9497 ;;		Nothing
  9498 ;; This function is called by:
  9499 ;;		_vfpfcnvrt
  9500 ;; This function uses a non-reentrant model
  9501 ;;
  9502                           
  9503     09E7                     ___awdiv:	
  9504                           ;psect for function ___awdiv
  9505                           
  9506     09E7                     l2731:	
  9507                           ;incstack = 0
  9508                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  9509                           
  9510     09E7  01F5               	clrf	___awdiv@sign
  9511     09E8                     l2733:
  9512     09E8  1FF1               	btfss	___awdiv@divisor+1,7
  9513     09E9  29EB               	goto	u3011
  9514     09EA  29EC               	goto	u3010
  9515     09EB                     u3011:
  9516     09EB  29F3               	goto	l2739
  9517     09EC                     u3010:
  9518     09EC                     l2735:
  9519     09EC  09F0               	comf	___awdiv@divisor,f
  9520     09ED  09F1               	comf	___awdiv@divisor+1,f
  9521     09EE  0AF0               	incf	___awdiv@divisor,f
  9522     09EF  1903               	skipnz
  9523     09F0  0AF1               	incf	___awdiv@divisor+1,f
  9524     09F1                     l2737:
  9525     09F1  01F5               	clrf	___awdiv@sign
  9526     09F2  0AF5               	incf	___awdiv@sign,f
  9527     09F3                     l2739:
  9528     09F3  1FF3               	btfss	___awdiv@dividend+1,7
  9529     09F4  29F6               	goto	u3021
  9530     09F5  29F7               	goto	u3020
  9531     09F6                     u3021:
  9532     09F6  2A00               	goto	l2745
  9533     09F7                     u3020:
  9534     09F7                     l2741:
  9535     09F7  09F2               	comf	___awdiv@dividend,f
  9536     09F8  09F3               	comf	___awdiv@dividend+1,f
  9537     09F9  0AF2               	incf	___awdiv@dividend,f
  9538     09FA  1903               	skipnz
  9539     09FB  0AF3               	incf	___awdiv@dividend+1,f
  9540     09FC                     l2743:
  9541     09FC  3001               	movlw	1
  9542     09FD  00FF               	movwf	btemp+1
  9543     09FE  087F               	movf	btemp+1,w
  9544     09FF  06F5               	xorwf	___awdiv@sign,f
  9545     0A00                     l2745:
  9546     0A00  01F6               	clrf	___awdiv@quotient
  9547     0A01  01F7               	clrf	___awdiv@quotient+1
  9548     0A02                     l2747:
  9549     0A02  0870               	movf	___awdiv@divisor,w
  9550     0A03  0471               	iorwf	___awdiv@divisor+1,w
  9551     0A04  1903               	btfsc	3,2
  9552     0A05  2A07               	goto	u3031
  9553     0A06  2A08               	goto	u3030
  9554     0A07                     u3031:
  9555     0A07  2A3F               	goto	l2767
  9556     0A08                     u3030:
  9557     0A08                     l2749:
  9558     0A08  01F4               	clrf	___awdiv@counter
  9559     0A09  0AF4               	incf	___awdiv@counter,f
  9560     0A0A  2A16               	goto	l2755
  9561     0A0B                     l2751:
  9562     0A0B  3001               	movlw	1
  9563     0A0C                     u3045:
  9564     0A0C  1003               	clrc
  9565     0A0D  0DF0               	rlf	___awdiv@divisor,f
  9566     0A0E  0DF1               	rlf	___awdiv@divisor+1,f
  9567     0A0F  3EFF               	addlw	-1
  9568     0A10  1D03               	skipz
  9569     0A11  2A0C               	goto	u3045
  9570     0A12                     l2753:
  9571     0A12  3001               	movlw	1
  9572     0A13  00FF               	movwf	btemp+1
  9573     0A14  087F               	movf	btemp+1,w
  9574     0A15  07F4               	addwf	___awdiv@counter,f
  9575     0A16                     l2755:
  9576     0A16  1FF1               	btfss	___awdiv@divisor+1,7
  9577     0A17  2A19               	goto	u3051
  9578     0A18  2A1A               	goto	u3050
  9579     0A19                     u3051:
  9580     0A19  2A0B               	goto	l2751
  9581     0A1A                     u3050:
  9582     0A1A                     l2757:
  9583     0A1A  3001               	movlw	1
  9584     0A1B                     u3065:
  9585     0A1B  1003               	clrc
  9586     0A1C  0DF6               	rlf	___awdiv@quotient,f
  9587     0A1D  0DF7               	rlf	___awdiv@quotient+1,f
  9588     0A1E  3EFF               	addlw	-1
  9589     0A1F  1D03               	skipz
  9590     0A20  2A1B               	goto	u3065
  9591     0A21  0871               	movf	___awdiv@divisor+1,w
  9592     0A22  0273               	subwf	___awdiv@dividend+1,w
  9593     0A23  1D03               	skipz
  9594     0A24  2A27               	goto	u3075
  9595     0A25  0870               	movf	___awdiv@divisor,w
  9596     0A26  0272               	subwf	___awdiv@dividend,w
  9597     0A27                     u3075:
  9598     0A27  1C03               	skipc
  9599     0A28  2A2A               	goto	u3071
  9600     0A29  2A2B               	goto	u3070
  9601     0A2A                     u3071:
  9602     0A2A  2A32               	goto	l2763
  9603     0A2B                     u3070:
  9604     0A2B                     l2759:
  9605     0A2B  0870               	movf	___awdiv@divisor,w
  9606     0A2C  02F2               	subwf	___awdiv@dividend,f
  9607     0A2D  0871               	movf	___awdiv@divisor+1,w
  9608     0A2E  1C03               	skipc
  9609     0A2F  03F3               	decf	___awdiv@dividend+1,f
  9610     0A30  02F3               	subwf	___awdiv@dividend+1,f
  9611     0A31                     l2761:
  9612     0A31  1476               	bsf	___awdiv@quotient,0
  9613     0A32                     l2763:
  9614     0A32  3001               	movlw	1
  9615     0A33                     u3085:
  9616     0A33  1003               	clrc
  9617     0A34  0CF1               	rrf	___awdiv@divisor+1,f
  9618     0A35  0CF0               	rrf	___awdiv@divisor,f
  9619     0A36  3EFF               	addlw	-1
  9620     0A37  1D03               	skipz
  9621     0A38  2A33               	goto	u3085
  9622     0A39                     l2765:
  9623     0A39  3001               	movlw	1
  9624     0A3A  02F4               	subwf	___awdiv@counter,f
  9625     0A3B  1D03               	btfss	3,2
  9626     0A3C  2A3E               	goto	u3091
  9627     0A3D  2A3F               	goto	u3090
  9628     0A3E                     u3091:
  9629     0A3E  2A1A               	goto	l2757
  9630     0A3F                     u3090:
  9631     0A3F                     l2767:
  9632     0A3F  0875               	movf	___awdiv@sign,w
  9633     0A40  1903               	btfsc	3,2
  9634     0A41  2A43               	goto	u3101
  9635     0A42  2A44               	goto	u3100
  9636     0A43                     u3101:
  9637     0A43  2A49               	goto	l2771
  9638     0A44                     u3100:
  9639     0A44                     l2769:
  9640     0A44  09F6               	comf	___awdiv@quotient,f
  9641     0A45  09F7               	comf	___awdiv@quotient+1,f
  9642     0A46  0AF6               	incf	___awdiv@quotient,f
  9643     0A47  1903               	skipnz
  9644     0A48  0AF7               	incf	___awdiv@quotient+1,f
  9645     0A49                     l2771:
  9646     0A49  0877               	movf	___awdiv@quotient+1,w
  9647     0A4A  00F1               	movwf	?___awdiv+1
  9648     0A4B  0876               	movf	___awdiv@quotient,w
  9649     0A4C  00F0               	movwf	?___awdiv
  9650     0A4D                     l781:
  9651     0A4D  0008               	return
  9652     0A4E                     __end_of___awdiv:
  9653                           
  9654                           	psect	text41
  9655     154B                     __ptext41:	
  9656 ;; *************** function _memset *****************
  9657 ;; Defined at:
  9658 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memset.c"
  9659 ;; Parameters:    Size  Location     Type
  9660 ;;  dest            1    wreg     PTR void 
  9661 ;;		 -> lcd_show_max(6), lcd_show(6), 
  9662 ;;  c               2    0[COMMON] int 
  9663 ;;  n               2    2[COMMON] unsigned int 
  9664 ;; Auto vars:     Size  Location     Type
  9665 ;;  dest            1    5[COMMON] PTR void 
  9666 ;;		 -> lcd_show_max(6), lcd_show(6), 
  9667 ;;  p               1    4[COMMON] PTR unsigned char 
  9668 ;;		 -> lcd_show_max(6), lcd_show(6), 
  9669 ;; Return value:  Size  Location     Type
  9670 ;;                  1    wreg      PTR void 
  9671 ;; Registers used:
  9672 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  9673 ;; Tracked objects:
  9674 ;;		On entry : 0/0
  9675 ;;		On exit  : 0/0
  9676 ;;		Unchanged: 0/0
  9677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9678 ;;      Params:         4       0       0       0       0
  9679 ;;      Locals:         2       0       0       0       0
  9680 ;;      Temps:          0       0       0       0       0
  9681 ;;      Totals:         6       0       0       0       0
  9682 ;;Total ram usage:        6 bytes
  9683 ;; Hardware stack levels used: 1
  9684 ;; This function calls:
  9685 ;;		Nothing
  9686 ;; This function is called by:
  9687 ;;		_Convert_uint16_to_string
  9688 ;;		_Convert_uint8_to_string
  9689 ;;		_Convert_uint32_to_string
  9690 ;; This function uses a non-reentrant model
  9691 ;;
  9692                           
  9693     154B                     _memset:	
  9694                           ;psect for function _memset
  9695                           
  9696                           
  9697                           ;incstack = 0
  9698                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0+btemp+1]
  9699                           ;memset@dest stored from wreg
  9700     154B  00F5               	movwf	memset@dest
  9701     154C                     l3139:
  9702     154C  0875               	movf	memset@dest,w
  9703     154D  00F4               	movwf	memset@p
  9704     154E  2D58               	goto	l3145
  9705     154F                     l3141:
  9706     154F  0874               	movf	memset@p,w
  9707     1550  0084               	movwf	4
  9708     1551  0870               	movf	memset@c,w
  9709     1552  1383               	bcf	3,7	;select IRP bank0
  9710     1553  0080               	movwf	0
  9711     1554                     l3143:
  9712     1554  3001               	movlw	1
  9713     1555  00FF               	movwf	btemp+1
  9714     1556  087F               	movf	btemp+1,w
  9715     1557  07F4               	addwf	memset@p,f
  9716     1558                     l3145:
  9717     1558  3001               	movlw	1
  9718     1559  02F2               	subwf	memset@n,f
  9719     155A  3000               	movlw	0
  9720     155B  1C03               	skipc
  9721     155C  03F3               	decf	memset@n+1,f
  9722     155D  02F3               	subwf	memset@n+1,f
  9723     155E  0A72               	incf	memset@n,w
  9724     155F  1D03               	skipz
  9725     1560  2D65               	goto	u3751
  9726     1561  0A73               	incf	memset@n+1,w
  9727     1562  1D03               	btfss	3,2
  9728     1563  2D65               	goto	u3751
  9729     1564  2D66               	goto	u3750
  9730     1565                     u3751:
  9731     1565  2D4F               	goto	l3141
  9732     1566                     u3750:
  9733     1566                     l1090:
  9734     1566  0008               	return
  9735     1567                     __end_of_memset:
  9736                           
  9737                           	psect	text42
  9738     1658                     __ptext42:	
  9739 ;; *************** function _ADC_Start_Conversion_Blocking *****************
  9740 ;; Defined at:
  9741 ;;		line 78 in file "MCAL_LAYER/ADC/hal_adc.c"
  9742 ;; Parameters:    Size  Location     Type
  9743 ;;  adc             1    wreg     PTR const struct .
  9744 ;;		 -> adc(3), 
  9745 ;;  channel         1    5[COMMON] enum E1595
  9746 ;;  result          2    6[COMMON] unsigned short 
  9747 ;; Auto vars:     Size  Location     Type
  9748 ;;  adc             1    9[COMMON] PTR const struct .
  9749 ;;		 -> adc(3), 
  9750 ;;  ret             1    0        unsigned char 
  9751 ;; Return value:  Size  Location     Type
  9752 ;;                  1    wreg      unsigned char 
  9753 ;; Registers used:
  9754 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9755 ;; Tracked objects:
  9756 ;;		On entry : 0/0
  9757 ;;		On exit  : 0/0
  9758 ;;		Unchanged: 0/0
  9759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9760 ;;      Params:         3       0       0       0       0
  9761 ;;      Locals:         1       0       0       0       0
  9762 ;;      Temps:          1       0       0       0       0
  9763 ;;      Totals:         5       0       0       0       0
  9764 ;;Total ram usage:        5 bytes
  9765 ;; Hardware stack levels used: 1
  9766 ;; Hardware stack levels required when called: 1
  9767 ;; This function calls:
  9768 ;;		_ADC_Get_Conversion_Result
  9769 ;;		_ADC_Start_Conversion
  9770 ;; This function is called by:
  9771 ;;		_main
  9772 ;; This function uses a non-reentrant model
  9773 ;;
  9774                           
  9775     1658                     _ADC_Start_Conversion_Blocking:	
  9776                           ;psect for function _ADC_Start_Conversion_Blocking
  9777                           
  9778                           
  9779                           ;incstack = 0
  9780                           ; Regs used in _ADC_Start_Conversion_Blocking: [wreg-fsr0h+status,2+status,0+btemp+1+pcl
      +                          ath+cstack]
  9781                           ;ADC_Start_Conversion_Blocking@adc stored from wreg
  9782     1658  00F9               	movwf	ADC_Start_Conversion_Blocking@adc
  9783     1659                     l3333:
  9784     1659                     l3335:
  9785                           
  9786                           ;MCAL_LAYER/ADC/hal_adc.c: 80:     if(adc == ((void*)0)){
  9787     1659  0879               	movf	ADC_Start_Conversion_Blocking@adc,w
  9788     165A  1D03               	btfss	3,2
  9789     165B  2E5D               	goto	u3991
  9790     165C  2E5E               	goto	u3990
  9791     165D                     u3991:
  9792     165D  2E5F               	goto	l221
  9793     165E                     u3990:
  9794     165E                     l3337:
  9795                           
  9796                           ;MCAL_LAYER/ADC/hal_adc.c: 82:     }
  9797     165E  2E7F               	goto	l223
  9798     165F                     l221:	
  9799                           ;MCAL_LAYER/ADC/hal_adc.c: 83:     else{
  9800                           
  9801                           
  9802                           ;MCAL_LAYER/ADC/hal_adc.c: 84:         (ADCON0bits.GO_nDONE = 0);
  9803     165F  1283               	bcf	3,5	;RP0=0, select bank0
  9804     1660  1303               	bcf	3,6	;RP1=0, select bank0
  9805     1661  111F               	bcf	31,2	;volatile
  9806     1662                     l3339:
  9807                           
  9808                           ;MCAL_LAYER/ADC/hal_adc.c: 85:         (ADCON0bits.CHS = adc->channel);
  9809     1662  0879               	movf	ADC_Start_Conversion_Blocking@adc,w
  9810     1663  0084               	movwf	4
  9811     1664  1383               	bcf	3,7	;select IRP bank0
  9812     1665  0800               	movf	0,w
  9813     1666  00F8               	movwf	??_ADC_Start_Conversion_Blocking
  9814     1667  0DF8               	rlf	??_ADC_Start_Conversion_Blocking,f
  9815     1668  0DF8               	rlf	??_ADC_Start_Conversion_Blocking,f
  9816     1669  0DF8               	rlf	??_ADC_Start_Conversion_Blocking,f
  9817     166A  081F               	movf	31,w	;volatile
  9818     166B  0678               	xorwf	??_ADC_Start_Conversion_Blocking,w
  9819     166C  39C7               	andlw	-57
  9820     166D  0678               	xorwf	??_ADC_Start_Conversion_Blocking,w
  9821     166E  009F               	movwf	31	;volatile
  9822     166F                     l3341:
  9823                           
  9824                           ;MCAL_LAYER/ADC/hal_adc.c: 86:         ADC_Start_Conversion(adc);
  9825     166F  0879               	movf	ADC_Start_Conversion_Blocking@adc,w
  9826     1670  160A  118A  2474  160A  118A  	fcall	_ADC_Start_Conversion
  9827     1675                     l3343:
  9828                           
  9829                           ;MCAL_LAYER/ADC/hal_adc.c: 87:         ADC_Get_Conversion_Result(adc,result);
  9830     1675  0876               	movf	ADC_Start_Conversion_Blocking@result,w
  9831     1676  00F0               	movwf	ADC_Get_Conversion_Result@result
  9832     1677  0877               	movf	ADC_Start_Conversion_Blocking@result+1,w
  9833     1678  00F1               	movwf	ADC_Get_Conversion_Result@result+1
  9834     1679  0879               	movf	ADC_Start_Conversion_Blocking@adc,w
  9835     167A  160A  118A  2776  160A  118A  	fcall	_ADC_Get_Conversion_Result
  9836     167F                     l223:
  9837     167F  0008               	return
  9838     1680                     __end_of_ADC_Start_Conversion_Blocking:
  9839                           
  9840                           	psect	text43
  9841     1474                     __ptext43:	
  9842 ;; *************** function _ADC_Start_Conversion *****************
  9843 ;; Defined at:
  9844 ;;		line 37 in file "MCAL_LAYER/ADC/hal_adc.c"
  9845 ;; Parameters:    Size  Location     Type
  9846 ;;  adc             1    wreg     PTR const struct .
  9847 ;;		 -> adc(3), 
  9848 ;; Auto vars:     Size  Location     Type
  9849 ;;  adc             1    0[COMMON] PTR const struct .
  9850 ;;		 -> adc(3), 
  9851 ;;  ret             1    0        unsigned char 
  9852 ;; Return value:  Size  Location     Type
  9853 ;;                  1    wreg      unsigned char 
  9854 ;; Registers used:
  9855 ;;		wreg, status,2, status,0
  9856 ;; Tracked objects:
  9857 ;;		On entry : 0/0
  9858 ;;		On exit  : 0/0
  9859 ;;		Unchanged: 0/0
  9860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9861 ;;      Params:         0       0       0       0       0
  9862 ;;      Locals:         1       0       0       0       0
  9863 ;;      Temps:          0       0       0       0       0
  9864 ;;      Totals:         1       0       0       0       0
  9865 ;;Total ram usage:        1 bytes
  9866 ;; Hardware stack levels used: 1
  9867 ;; This function calls:
  9868 ;;		Nothing
  9869 ;; This function is called by:
  9870 ;;		_ADC_Start_Conversion_Blocking
  9871 ;; This function uses a non-reentrant model
  9872 ;;
  9873                           
  9874     1474                     _ADC_Start_Conversion:	
  9875                           ;psect for function _ADC_Start_Conversion
  9876                           
  9877                           
  9878                           ;incstack = 0
  9879                           ; Regs used in _ADC_Start_Conversion: [wreg+status,2+status,0]
  9880                           ;ADC_Start_Conversion@adc stored from wreg
  9881     1474  00F0               	movwf	ADC_Start_Conversion@adc
  9882     1475                     l3161:
  9883     1475                     l3163:
  9884                           
  9885                           ;MCAL_LAYER/ADC/hal_adc.c: 39:     if(adc == ((void*)0)){
  9886     1475  0870               	movf	ADC_Start_Conversion@adc,w
  9887     1476  1D03               	btfss	3,2
  9888     1477  2C79               	goto	u3761
  9889     1478  2C7A               	goto	u3760
  9890     1479                     u3761:
  9891     1479  2C7B               	goto	l200
  9892     147A                     u3760:
  9893     147A                     l3165:
  9894                           
  9895                           ;MCAL_LAYER/ADC/hal_adc.c: 41:     }
  9896     147A  2C82               	goto	l205
  9897     147B                     l200:	
  9898                           ;MCAL_LAYER/ADC/hal_adc.c: 42:     else{
  9899                           
  9900                           
  9901                           ;MCAL_LAYER/ADC/hal_adc.c: 43:         ADCON0bits.GO_nDONE = 1;
  9902     147B  1283               	bcf	3,5	;RP0=0, select bank0
  9903     147C  1303               	bcf	3,6	;RP1=0, select bank0
  9904     147D  151F               	bsf	31,2	;volatile
  9905     147E                     l202:	
  9906                           ;MCAL_LAYER/ADC/hal_adc.c: 44:         while(ADCON0bits.GO_nDONE);
  9907                           
  9908     147E  191F               	btfsc	31,2	;volatile
  9909     147F  2C81               	goto	u3771
  9910     1480  2C82               	goto	u3770
  9911     1481                     u3771:
  9912     1481  2C7E               	goto	l202
  9913     1482                     u3770:
  9914     1482                     l205:
  9915     1482  0008               	return
  9916     1483                     __end_of_ADC_Start_Conversion:
  9917                           
  9918                           	psect	text44
  9919     1776                     __ptext44:	
  9920 ;; *************** function _ADC_Get_Conversion_Result *****************
  9921 ;; Defined at:
  9922 ;;		line 60 in file "MCAL_LAYER/ADC/hal_adc.c"
  9923 ;; Parameters:    Size  Location     Type
  9924 ;;  adc             1    wreg     PTR const struct .
  9925 ;;		 -> adc(3), 
  9926 ;;  result          2    0[COMMON] PTR unsigned short 
  9927 ;;		 -> RAM(512), 
  9928 ;; Auto vars:     Size  Location     Type
  9929 ;;  adc             1    4[COMMON] PTR const struct .
  9930 ;;		 -> adc(3), 
  9931 ;;  ret             1    0        unsigned char 
  9932 ;; Return value:  Size  Location     Type
  9933 ;;                  1    wreg      unsigned char 
  9934 ;; Registers used:
  9935 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  9936 ;; Tracked objects:
  9937 ;;		On entry : 0/0
  9938 ;;		On exit  : 0/0
  9939 ;;		Unchanged: 0/0
  9940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9941 ;;      Params:         2       0       0       0       0
  9942 ;;      Locals:         1       0       0       0       0
  9943 ;;      Temps:          2       0       0       0       0
  9944 ;;      Totals:         5       0       0       0       0
  9945 ;;Total ram usage:        5 bytes
  9946 ;; Hardware stack levels used: 1
  9947 ;; This function calls:
  9948 ;;		Nothing
  9949 ;; This function is called by:
  9950 ;;		_ADC_Start_Conversion_Blocking
  9951 ;; This function uses a non-reentrant model
  9952 ;;
  9953                           
  9954     1776                     _ADC_Get_Conversion_Result:	
  9955                           ;psect for function _ADC_Get_Conversion_Result
  9956                           
  9957                           
  9958                           ;incstack = 0
  9959                           ; Regs used in _ADC_Get_Conversion_Result: [wreg-fsr0h+status,2+status,0+btemp+1]
  9960                           ;ADC_Get_Conversion_Result@adc stored from wreg
  9961     1776  00F4               	movwf	ADC_Get_Conversion_Result@adc
  9962     1777                     l3167:
  9963     1777                     l3169:
  9964                           
  9965                           ;MCAL_LAYER/ADC/hal_adc.c: 62:     if(adc == ((void*)0)){
  9966     1777  0874               	movf	ADC_Get_Conversion_Result@adc,w
  9967     1778  1D03               	btfss	3,2
  9968     1779  2F7B               	goto	u3781
  9969     177A  2F7C               	goto	u3780
  9970     177B                     u3781:
  9971     177B  2F7D               	goto	l3173
  9972     177C                     u3780:
  9973     177C                     l3171:
  9974                           
  9975                           ;MCAL_LAYER/ADC/hal_adc.c: 64:     }
  9976     177C  2FB7               	goto	l218
  9977     177D                     l3173:
  9978                           
  9979                           ;MCAL_LAYER/ADC/hal_adc.c: 66:         if(adc->format == RIGHT_JUSTIFIED){
  9980     177D  0874               	movf	ADC_Get_Conversion_Result@adc,w
  9981     177E  3E02               	addlw	2
  9982     177F  0084               	movwf	4
  9983     1780  1383               	bcf	3,7	;select IRP bank0
  9984     1781  0800               	movf	0,w
  9985     1782  1D03               	btfss	3,2
  9986     1783  2F85               	goto	u3791
  9987     1784  2F86               	goto	u3790
  9988     1785                     u3791:
  9989     1785  2F95               	goto	l3177
  9990     1786                     u3790:
  9991     1786                     l3175:
  9992                           
  9993                           ;MCAL_LAYER/ADC/hal_adc.c: 67:             *result = (uint16)(ADRESL + (ADRESH << 8));
  9994     1786  0870               	movf	ADC_Get_Conversion_Result@result,w
  9995     1787  0084               	movwf	4
  9996     1788  1783               	bsf	3,7
  9997     1789  1C71               	btfss	ADC_Get_Conversion_Result@result+1,0
  9998     178A  1383               	bcf	3,7
  9999     178B  1683               	bsf	3,5	;RP0=1, select bank1
 10000     178C  1303               	bcf	3,6	;RP1=0, select bank1
 10001     178D  081E               	movf	30,w	;volatile
 10002     178E  0080               	movwf	0
 10003     178F  0A84               	incf	4,f
 10004     1790  1283               	bcf	3,5	;RP0=0, select bank0
 10005     1791  1303               	bcf	3,6	;RP1=0, select bank0
 10006     1792  081E               	movf	30,w	;volatile
 10007     1793  0080               	movwf	0
 10008                           
 10009                           ;MCAL_LAYER/ADC/hal_adc.c: 68:         }
 10010     1794  2FB7               	goto	l218
 10011     1795                     l3177:
 10012     1795  0874               	movf	ADC_Get_Conversion_Result@adc,w
 10013     1796  3E02               	addlw	2
 10014     1797  0084               	movwf	4
 10015     1798  0300               	decf	0,w
 10016     1799  1D03               	btfss	3,2
 10017     179A  2F9C               	goto	u3801
 10018     179B  2F9D               	goto	u3800
 10019     179C                     u3801:
 10020     179C  2FB7               	goto	l214
 10021     179D                     u3800:
 10022     179D                     l3179:
 10023                           
 10024                           ;MCAL_LAYER/ADC/hal_adc.c: 70:             *result = (uint16)((ADRESL + (ADRESH << 8)) >
      +                          > 6);
 10025     179D  1283               	bcf	3,5	;RP0=0, select bank0
 10026     179E  1303               	bcf	3,6	;RP1=0, select bank0
 10027     179F  081E               	movf	30,w	;volatile
 10028     17A0  00F3               	movwf	??_ADC_Get_Conversion_Result+1
 10029     17A1  1683               	bsf	3,5	;RP0=1, select bank1
 10030     17A2  1303               	bcf	3,6	;RP1=0, select bank1
 10031     17A3  081E               	movf	30,w	;volatile
 10032     17A4  00F2               	movwf	??_ADC_Get_Conversion_Result
 10033     17A5  3006               	movlw	6
 10034     17A6  00FF               	movwf	btemp+1
 10035     17A7                     u3815:
 10036     17A7  0D73               	rlf	??_ADC_Get_Conversion_Result+1,w
 10037     17A8  0CF3               	rrf	??_ADC_Get_Conversion_Result+1,f
 10038     17A9  0CF2               	rrf	??_ADC_Get_Conversion_Result,f
 10039     17AA  0BFF               	decfsz	btemp+1,f
 10040     17AB  2FA7               	goto	u3815
 10041     17AC  0870               	movf	ADC_Get_Conversion_Result@result,w
 10042     17AD  0084               	movwf	4
 10043     17AE  1783               	bsf	3,7
 10044     17AF  1C71               	btfss	ADC_Get_Conversion_Result@result+1,0
 10045     17B0  1383               	bcf	3,7
 10046     17B1  0872               	movf	??_ADC_Get_Conversion_Result,w
 10047     17B2  0080               	movwf	0
 10048     17B3  0A84               	incf	4,f
 10049     17B4  0873               	movf	??_ADC_Get_Conversion_Result+1,w
 10050     17B5  0080               	movwf	0
 10051     17B6  2FB7               	goto	l218
 10052     17B7                     l214:	
 10053                           ;MCAL_LAYER/ADC/hal_adc.c: 73:     }
 10054                           
 10055     17B7                     l218:
 10056     17B7  0008               	return
 10057     17B8                     __end_of_ADC_Get_Conversion_Result:
 10058     007E                     btemp	set	126	;btemp
 10059     007E                     wtemp0	set	126
 10060                           
 10061                           	psect	config
 10062                           
 10063                           ;Config register CONFIG @ 0x2007
 10064                           ;	Oscillator Selection bits
 10065                           ;	FOSC = EXTRC, RC oscillator
 10066                           ;	Watchdog Timer Enable bit
 10067                           ;	WDTE = OFF, WDT disabled
 10068                           ;	Power-up Timer Enable bit
 10069                           ;	PWRTE = OFF, PWRT disabled
 10070                           ;	Brown-out Reset Enable bit
 10071                           ;	BOREN = OFF, BOR disabled
 10072                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
 10073                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
 10074                           ;	Data EEPROM Memory Code Protection bit
 10075                           ;	CPD = OFF, Data EEPROM code protection off
 10076                           ;	Flash Program Memory Write Enable bits
 10077                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
 10078                           ;	In-Circuit Debugger Mode bit
 10079                           ;	DEBUG = 0x1, unprogrammed default
 10080                           ;	Flash Program Memory Code Protection bit
 10081                           ;	CP = OFF, Code protection off
 10082     2007                     	org	8199
 10083     2007  3F3B               	dw	16187

Data Sizes:
    Strings     65
    Constant    12
    Data        48
    BSS         88
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     67      80
    BANK1            80      0      80
    BANK3            96      0      43
    BANK2            96      0       0

Pointer List with Targets:

    ADC_Get_Conversion_Result@adc	PTR const struct . size(1) Largest target is 3
		 -> adc(BANK1[3]), 

    ADC_Get_Conversion_Result@result	PTR unsigned short  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    ADC_INIT@adc	PTR const struct . size(1) Largest target is 3
		 -> adc(BANK1[3]), 

    ADC_Start_Conversion@adc	PTR const struct . size(1) Largest target is 3
		 -> adc(BANK1[3]), 

    ADC_Start_Conversion_Blocking@adc	PTR const struct . size(1) Largest target is 3
		 -> adc(BANK1[3]), 

    Convert_uint16_to_string@str	PTR unsigned char  size(1) Largest target is 6
		 -> lcd_show(BANK1[6]), lcd_show_max(BANK1[6]), 

    EXT_INTX_HANDLER	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    EXT_RB4_HIGH_HANDLER	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    EXT_RB4_LOW_HANDLER	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    EXT_RB5_HIGH_HANDLER	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    EXT_RB5_LOW_HANDLER	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    EXT_RB6_HIGH_HANDLER	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    EXT_RB6_LOW_HANDLER	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    EXT_RB7_HIGH_HANDLER	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    EXT_RB7_LOW_HANDLER	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    f$.$buffer	PTR unsigned char  size(1) Largest target is 0

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    gpio_pin_direction_initialize@pin	PTR const struct . size(1) Largest target is 7
		 -> keypad(BANK1[7]), keypad$COLOUMNS_PIN(BANK1[3]), keypad$ROWS_PIN(BANK1[4]), lcd(BANK1[6]), 
		 -> lcd$pins(BANK1[4]), motor1(BANK1[2]), motor1$pins(BANK1[2]), motor2(BANK1[2]), 
		 -> motor2$pins(BANK1[2]), 

    gpio_pin_initialize@pin	PTR const struct . size(1) Largest target is 7
		 -> keypad(BANK1[7]), keypad$COLOUMNS_PIN(BANK1[3]), keypad$ROWS_PIN(BANK1[4]), lcd(BANK1[6]), 
		 -> lcd$pins(BANK1[4]), motor1(BANK1[2]), motor1$pins(BANK1[2]), motor2(BANK1[2]), 
		 -> motor2$pins(BANK1[2]), 

    gpio_pin_read_logic@logic	PTR enum E1519 size(1) Largest target is 1
		 -> keypad_read_value@val(BANK0[1]), 

    gpio_pin_read_logic@pin	PTR const struct . size(1) Largest target is 7
		 -> keypad(BANK1[7]), keypad$COLOUMNS_PIN(BANK1[3]), 

    gpio_pin_write_logic@pin	PTR const struct . size(1) Largest target is 7
		 -> keypad(BANK1[7]), keypad$COLOUMNS_PIN(BANK1[3]), keypad$ROWS_PIN(BANK1[4]), lcd(BANK1[6]), 
		 -> lcd$pins(BANK1[4]), motor1(BANK1[2]), motor1$pins(BANK1[2]), motor2(BANK1[2]), 
		 -> motor2$pins(BANK1[2]), 

    keypad_initialize@keypad	PTR const struct . size(1) Largest target is 7
		 -> keypad(BANK1[7]), 

    keypad_read_value@keypad	PTR const struct . size(1) Largest target is 7
		 -> keypad(BANK1[7]), 

    keypad_read_value@value	PTR unsigned char  size(1) Largest target is 4
		 -> temp(BANK1[4]), val(BANK0[1]), 

    lcd_4bits_initialize@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd(BANK1[6]), 

    lcd_4bits_send_char@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd(BANK1[6]), 

    lcd_4bits_send_command@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd(BANK1[6]), 

    lcd_4bits_send_string@data	PTR unsigned char  size(2) Largest target is 17
		 -> lcd_show(BANK1[6]), lcd_show_max(BANK1[6]), STR_4(CODE[15]), STR_5(CODE[17]), 
		 -> STR_6(CODE[11]), STR_7(CODE[15]), STR_8(CODE[15]), 

    lcd_4bits_send_string@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd(BANK1[6]), 

    lcd_4bits_send_string_pos@data	PTR unsigned char  size(2) Largest target is 15
		 -> lcd_show(BANK1[6]), lcd_show_max(BANK1[6]), STR_4(CODE[15]), STR_6(CODE[11]), 
		 -> STR_7(CODE[15]), STR_8(CODE[15]), 

    lcd_4bits_send_string_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd(BANK1[6]), 

    memset@dest	PTR void  size(1) Largest target is 6
		 -> lcd_show(BANK1[6]), lcd_show_max(BANK1[6]), 

    memset@p	PTR unsigned char  size(1) Largest target is 6
		 -> lcd_show(BANK1[6]), lcd_show_max(BANK1[6]), 

    motor_initialize@motor	PTR const struct . size(1) Largest target is 2
		 -> motor1(BANK1[2]), motor2(BANK1[2]), 

    motor_turn_left@motor	PTR const struct . size(1) Largest target is 2
		 -> motor2(BANK1[2]), 

    motor_turn_off@motor	PTR const struct . size(1) Largest target is 2
		 -> motor1(BANK1[2]), motor2(BANK1[2]), 

    motor_turn_right@motor	PTR const struct . size(1) Largest target is 2
		 -> motor1(BANK1[2]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTB(SFR0[1]), PORTC(SFR0[1]), PORTD(SFR0[1]), 
		 -> PORTE(SFR0[1]), 

    READ_DATA_EEPROM@data	PTR unsigned char  size(1) Largest target is 2
		 -> Max_Temp(BANK0[2]), 

    Result_Format@adc	PTR const struct . size(1) Largest target is 3
		 -> adc(BANK1[3]), 

    S1220$buffer	PTR unsigned char  size(1) Largest target is 0

    S1220$source	PTR const unsigned char  size(1) Largest target is 0

    send_4bits@lcd	PTR struct . size(1) Largest target is 6
		 -> lcd(BANK1[6]), 

    send_enable_signal@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd(BANK1[6]), 

    set_cursor@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd(BANK1[6]), 

    sp__memset	PTR void  size(1) Largest target is 6
		 -> lcd_show(BANK1[6]), lcd_show_max(BANK1[6]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 11
		 -> Convert_uint16_to_string@temp(BANK0[6]), Convert_uint32_to_string@temp(COMMON[11]), Convert_uint8_to_string@temp(COMMON[4]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(SFR1[1]), TRISB(SFR1[1]), TRISC(SFR1[1]), TRISD(SFR1[1]), 
		 -> TRISE(SFR1[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _main->_lcd_4bits_send_command
    _motor_turn_right->_gpio_pin_write_logic
    _motor_turn_off->_gpio_pin_write_logic
    _motor_turn_left->_gpio_pin_write_logic
    _set_cursor->_lcd_4bits_send_command
    _lcd_4bits_send_string->_lcd_4bits_send_char
    _lcd_4bits_send_char->_send_4bits
    _keypad_read_value->_gpio_pin_read_logic
    _keypad_read_value->_gpio_pin_write_logic
    _mcal_initialize->_ADC_INIT
    _ADC_INIT->_Result_Format
    _ecu_initialzie->_motor_initialize
    _motor_initialize->_gpio_pin_initialize
    _lcd_4bits_initialize->_lcd_4bits_send_command
    _lcd_4bits_send_command->_send_4bits
    _send_enable_signal->_gpio_pin_write_logic
    _send_4bits->_gpio_pin_write_logic
    _keypad_initialize->_gpio_pin_initialize
    _gpio_pin_initialize->_gpio_pin_write_logic
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    ___fldiv->___xxtofl
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _ADC_Start_Conversion_Blocking->_ADC_Get_Conversion_Result

Critical Paths under _main in BANK0

    _main->___fltol
    _lcd_4bits_send_string_pos->_lcd_4bits_send_string
    _lcd_4bits_send_string_pos->_set_cursor
    _set_cursor->_lcd_4bits_send_command
    _lcd_4bits_send_string->_lcd_4bits_send_char
    _ecu_initialzie->_lcd_4bits_initialize
    _lcd_4bits_initialize->_lcd_4bits_send_command
    ___fltol->___fldiv
    ___fldiv->___flmul
    _Convert_uint16_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   79285
                                             62 BANK0      5     5      0
      _ADC_Start_Conversion_Blocking
           _Convert_uint16_to_string
                   _READ_DATA_EEPROM
                  _WRITE_DATA_EEPROM
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
             _apllication_initilaize
                  _keypad_read_value
             _lcd_4bits_send_command
              _lcd_4bits_send_string
          _lcd_4bits_send_string_pos
                    _motor_turn_left
                     _motor_turn_off
                   _motor_turn_right
 ---------------------------------------------------------------------------------
 (1) _motor_turn_right                                     2     2      0    2372
                                              8 COMMON     2     2      0
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _motor_turn_off                                       2     2      0    2372
                                              8 COMMON     2     2      0
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _motor_turn_left                                      2     2      0    2339
                                              8 COMMON     2     2      0
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _lcd_4bits_send_string_pos                            6     2      4   20310
                                              6 BANK0      6     2      4
              _lcd_4bits_send_string
                         _set_cursor
 ---------------------------------------------------------------------------------
 (2) _set_cursor                                           4     2      2   10162
                                              2 BANK0      4     2      2
             _lcd_4bits_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bits_send_string                                4     2      2    8440
                                              2 BANK0      4     2      2
                _lcd_4bits_send_char
 ---------------------------------------------------------------------------------
 (3) _lcd_4bits_send_char                                  4     3      1    8108
                                             12 COMMON     2     1      1
                                              0 BANK0      2     2      0
               _gpio_pin_write_logic
                         _send_4bits
                 _send_enable_signal
 ---------------------------------------------------------------------------------
 (1) _keypad_read_value                                    9     8      1    3449
                                              8 COMMON     3     2      1
                                              0 BANK0      5     5      0
                             ___bmul
                _gpio_pin_read_logic
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_read_logic                                  8     7      1     464
                                              0 COMMON     8     7      1
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1     118
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _apllication_initilaize                               0     0      0   20228
                     _ecu_initialzie
                    _mcal_initialize
 ---------------------------------------------------------------------------------
 (2) _mcal_initialize                                      1     1      0     210
                           _ADC_INIT
 ---------------------------------------------------------------------------------
 (3) _ADC_INIT                                             3     3      0     208
                                              3 COMMON     3     3      0
                      _Result_Format
 ---------------------------------------------------------------------------------
 (4) _Result_Format                                        4     4      0      85
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _ecu_initialzie                                       0     0      0   20018
                  _keypad_initialize
               _lcd_4bits_initialize
                   _motor_initialize
 ---------------------------------------------------------------------------------
 (3) _motor_initialize                                     2     2      0    3330
                                             12 COMMON     2     2      0
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (3) _lcd_4bits_initialize                                 6     6      0   13253
                                              2 BANK0      6     6      0
                _gpio_pin_initialize
             _lcd_4bits_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bits_send_command                               4     3      1    9634
                                             12 COMMON     2     1      1
                                              0 BANK0      2     2      0
               _gpio_pin_write_logic
                         _send_4bits
                 _send_enable_signal
 ---------------------------------------------------------------------------------
 (4) _send_enable_signal                                   3     3      0    2454
                                              8 COMMON     3     3      0
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _send_4bits                                           4     3      1    2892
                                              8 COMMON     4     3      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _keypad_initialize                                    4     4      0    3435
                                              0 BANK0      3     3      0
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_initialize                                  4     4      0    3188
                                              8 COMMON     4     4      0
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                 8     7      1    2230
                                              0 COMMON     8     7      1
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_initialize                        7     7      0     394
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                             52 BANK0     10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2417
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1273
                                             26 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _WRITE_DATA_EEPROM                                    4     1      3     219
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _READ_DATA_EEPROM                                     3     0      3     196
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (1) _Convert_uint16_to_string                            11     8      3    4560
                                             29 BANK0     11     8      3
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             19    16      3    3376
                                             12 BANK0     17    14      3
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     2      2    2850
                                              8 BANK0      4     2      2
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           12    10      2    2543
                                             10 COMMON     4     2      2
                                              0 BANK0      8     8      0
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     782
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMMON     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                               6     2      4     651
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _ADC_Start_Conversion_Blocking                        6     3      3     593
                                              5 COMMON     5     2      3
          _ADC_Get_Conversion_Result
               _ADC_Start_Conversion
 ---------------------------------------------------------------------------------
 (2) _ADC_Start_Conversion                                 2     2      0      63
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Get_Conversion_Result                            6     4      2     227
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Start_Conversion_Blocking
     _ADC_Get_Conversion_Result
     _ADC_Start_Conversion
   _Convert_uint16_to_string
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _READ_DATA_EEPROM
   _WRITE_DATA_EEPROM
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
   ___fltol
     ___fldiv (ARG)
     ___flmul (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _apllication_initilaize
     _ecu_initialzie
       _keypad_initialize
         _gpio_pin_initialize
           _gpio_pin_direction_initialize
           _gpio_pin_write_logic
       _lcd_4bits_initialize
         _gpio_pin_initialize
         _lcd_4bits_send_command
           _gpio_pin_write_logic
           _send_4bits
             _gpio_pin_write_logic
           _send_enable_signal
             _gpio_pin_write_logic
       _motor_initialize
         _gpio_pin_initialize
     _mcal_initialize
       _ADC_INIT
         _Result_Format
   _keypad_read_value
     ___bmul
     _gpio_pin_read_logic
     _gpio_pin_write_logic
   _lcd_4bits_send_command
   _lcd_4bits_send_string
     _lcd_4bits_send_char
       _gpio_pin_write_logic
       _send_4bits
       _send_enable_signal
   _lcd_4bits_send_string_pos
     _lcd_4bits_send_string
     _set_cursor
       _lcd_4bits_send_command
   _motor_turn_left
     _gpio_pin_write_logic
   _motor_turn_off
     _gpio_pin_write_logic
   _motor_turn_right
     _gpio_pin_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      2B       9       44.8%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      50       7      100.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     43      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      D9      12        0.0%
ABS                  0      0      D9       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Aug 16 15:14:35 2024

         ADC_Get_Conversion_Result@adc 0074                           ___fldiv@aexp 0053  
                         ___fldiv@bexp 0052                                      pc 0002  
                         ___fldiv@sign 004B                         ___bmul@product 0071  
                                   l32 0AC3                                     l19 1740  
                                   l62 08A3                                     l80 1775  
                                   l57 0CA0                                     l67 17FF  
                                   l85 1630                           ___awdiv@sign 0075  
          keypad_read_value@l_coloumns 0024                                     fsr 0004  
                  __Umul8_16@word_mpld 0076                       _READ_DATA_EEPROM 1494  
                                  l101 08ED                                    l200 147B  
                                  l121 0937                                    l202 147E  
                                  l205 1482                                    l221 165F  
                                  l125 15E7                                    l214 17B7  
                                  l126 15E8                                    l150 154A  
                                  l223 167F                                    l231 15F4  
                                  l232 160C                                    l136 16DB  
                                  l160 1516                                    l145 14E4  
            _lcd_4bits_send_string_pos 160D                                    l218 17B7  
                                  l250 15C7                                    l155 1530  
                                  l253 14A5                                    l229 15F0  
                                  l190 168A                                    l247 15BD  
                                  l343 0B48                                    l192 16AB  
                                  l249 15C1                                    l177 14FD  
                                  l338 0F10                                    l453 146B  
                                  l357 0BEA                                    l542 000E  
                                  l391 00A1                                    l519 034A  
                                  l298 0E30                                    l822 0B3B  
                                  l654 14CD                                    l832 0B3B  
                                  l781 0A4D                                    l829 0B26  
                                  l794 09E6                                    l985 00F8  
                                  l987 0270                                    _adc 00C9  
                                  _abs 1483                                    _lcd 00BF  
                                  _val 006F                                    fsr0 0004  
                                  indf 0000                           ___awmod@sign 0075  
                      _mcal_initialize 1465                      ?_motor_initialize 0070  
                         ___flmul@aexp 0032                           ___flmul@bexp 0033  
                         ___flmul@sign 002D                           ___flmul@temp 0038  
                         ___flmul@prod 0034                     ??_motor_initialize 007C  
                         ___fltol@exp1 005D                                   l1001 01EA  
                                 l1007 025C                                   l1031 0743  
                                 l1025 07D3                                   ?_abs 0076  
                                 l1044 1645                                   l1141 15A6  
                                 l1046 1657                                   l1135 0FFF  
                                 l1071 0D58                                   l1160 098D  
                                 l3001 0C36                                   l1090 1566  
                                 l1082 0D22                                   l1171 0003  
                                 l1083 0D2E                                   l3011 0C6E  
                                 l3003 0C4A                                   l1148 1493  
                                 l1069 0CC3                                   l3013 0C78  
                                 l3005 0C50                                   l3101 0BE9  
                                 l3015 0C82                                   l3007 0C5A  
                                 l3031 17FE                                   l3023 17BB  
                                 l3111 16B8                                   l1097 1585  
                                 l3017 0C8C                                   l3009 0C64  
                                 l3041 14D5                                   l3025 17BB  
                                 l3113 16C5                                   l3105 16AF  
                                 l4001 03CC                                   l3211 164E  
                                 l3203 1632                                   l3019 0C96  
                                 l3035 14CF                                   l3051 168E  
                                 l3027 17C0                                   l3131 1760  
                                 l3123 1744                                   l3107 16B0  
                                 l4011 0425                                   l4003 03CF  
                                 l3141 154F                                   l3301 08E2  
                                 l3213 1653                                   l3205 1634  
                                 l3037 14CF                                   l3053 169B  
                                 l3045 1681                                   l3221 0A5A  
                                 l3029 17C3                                   l3133 1766  
                                 l3125 1745                                   l3109 16B5  
                                 l3117 16D2                                   l4021 0457  
                                 l4013 0433                                   l4005 03DA  
                                 l3143 1554                                   l3063 1589  
                                 l3151 1570                                   l3207 163B  
                                 l3039 14D4                                   l3055 16A1  
                                 l3047 1682                                   l3223 0A5B  
                                 l3135 1774                                   l3127 174A  
                                 l3119 16DA                                   l3303 1532  
                                 l4023 0464                                   l4015 043E  
                                 l4007 03E1                                   l3161 1475  
                                 l3145 1558                                   l3065 158C  
                                 l3153 1572                                   l3209 163F  
                                 l3057 16A7                                   l3049 1687  
                                 l3081 0B55                                   l3073 0B3D  
                                 l3241 0A71                                   l3217 0A51  
                                 l3129 174D                                   l3313 1518  
                                 l3305 1532                                   l4025 0470  
                                 l4017 0447                                   l4009 0420  
                                 l3171 177C                                   l3163 1475  
                                 l3139 154C                                   l3067 1596  
                                 l3155 157C                                   l3147 156A  
                                 l3059 16AA                                   l3091 0B91  
                                 l3083 0B63                                   l3075 0B3E  
                                 l3251 0A86                                   l3243 0A7A  
                                 l3235 0A5D                                   l3219 0A55  
                                 l3315 1518                                   l3323 14FF  
                                 l3307 1537                                   l4027 047C  
                                 l4019 044E                                   l3173 177D  
                                 l3165 147A                                   l3341 166F  
                                 l3333 1659                                   l3069 15A4  
                                 l3149 156E                                   l3501 0199  
                                 l3421 00A2                                   l3405 0B02  
                                 l2701 0D5F                                   l3093 0B9A  
                                 l3085 0B6C                                   l3077 0B43  
                                 l3261 0AB9                                   l3253 0A90  
                                 l3245 0A83                                   l3237 0A65  
                                 l3229 0A5C                                   l3317 151D  
                                 l3325 14FF                                   l3309 1538  
                                 l4029 0480                                   l3175 1786  
                                 l3167 1777                                   l3343 1675  
                                 l3335 1659                                   l3351 15AE  
                                 l3511 01B6                                   l3503 019D  
                                 l3431 00B5                                   l3423 00A7  
                                 l3415 0B1B                                   l3407 0B0B  
                                 l2711 0D8F                                   l2703 0D60  
                                 l2631 0E33                                   l3159 14E5  
                                 l3183 1465                                   l3191 14BF  
                                 l3095 0BA8                                   l3087 0B7A  
                                 l3079 0B4B                                   l3263 0ABD  
                                 l3255 0A97                                   l3239 0A6B  
                                 l3319 151E                                   l3327 1504  
                     ??_motor_turn_off 0078                                   l3177 1795  
                                 l3169 1777                                   l3337 165E  
                                 l2801 09CB                                   l3361 15BA  
                                 l3353 15B2                                   l3521 01CE  
                                 l3513 01BA                                   l3505 01A3  
                                 l3441 00CD                                   l3433 00BA  
                                 l3425 00AB                                   l3601 04DB  
                                 l3417 0B2B                                   l3409 0B14  
                                 l2721 0DC6                                   l2713 0D98  
                                 l2705 0D6A                                   l2641 0E5C  
                                 l2633 0E38                                   l4081 1604  
                                 l3185 1465                                   l3193 14C3  
                                 l3097 0BB1                                   l3089 0B83  
                                 l3257 0AAF                                   l3281 1615  
                                 l3329 1505                                   l3179 179D  
                                 l3339 1662                                   l2731 09E7  
                                 l2803 09D2                                   l3291 08B0  
                                 l3371 149B                                   l3363 15BC  
                                 l3355 15B4                                   l3347 15A7  
                                 l3531 01EF                                   l3523 01CF  
                                 l3515 01BB                                   l3507 01AB  
                                 l3451 00E0                                   l3443 00D2  
                                 l3435 00C2                                   l3427 00AF  
                                 l3611 04F6                                   l3603 04E3  
                                 l3419 0B30                                   l2723 0DD5  
                                 l2715 0DA6                                   l2707 0D78  
                                 l4083 0F07                                   l2651 0E98  
                                 l2643 0E6A                                   l2635 0E3B  
                                 l3195 14C5                                   l3187 14BA  
                                 l3099 0BBF                                   l3259 0AB3  
                                 l3283 1616                                   l2741 09F7  
                                 l2733 09E8                                   l2805 09D8  
                                 l2821 0958                                   l2813 0938  
                                 l2901 0F32                                   l3293 08BE  
                                 l3373 149C                                   l3365 15C2  
                                 l3357 15B7                                   l3349 15AB  
                                 l3533 01F4                                   l3541 0225  
                                 l3525 01D3                                   l3517 01C4  
                                 l3509 01AD                                   l3461 0100  
                                 l3453 00E5                                   l3445 00D6  
                                 l3437 00C3                                   l3429 00B0  
                                 l3701 07C2                                   l3621 0572  
                                 l3613 0504                                   l3605 04E8  
                                 l2725 0DFD                                   l2717 0DAF  
                                 l2709 0D81                                   l2653 0EA1  
                                 l2645 0E73                                   l2661 0EFF  
                                 l2637 0E45                                   l2629 0E32  
                                 l3381 0009                                   l3197 14C7  
                                 l3189 14BB                                   l3277 1610  
                                 l2751 0A0B                                   l2743 09FC  
                                 l2735 09EC                                   l2807 09DD  
                                 l2831 1488                                   l2823 0976  
                                 l2815 093D                                   l2911 0F61  
                                 l2903 0F36                                   l3295 08C5  
                                 l3287 08A4                                   l3375 149D  
                                 l3367 1494                                   l3359 15B8  
                                 l3551 025B                                   l3543 0232  
                                 l3535 0202                                   l3527 01E7  
                                 l3519 01CA                                   l3471 011E  
                                 l3463 010C                                   l3455 00ED  
                                 l3447 00DA                                   l3439 00C5  
                                 l3703 07C7                                   l3631 05DE  
                                 l3623 058E                                   l3615 0511  
                                 l3607 04ED                                   l3391 0AEB  
                                 l3383 0AC4                                   l3711 0CA7  
                                 l2719 0DBD                                   l2655 0EB0  
                                 l2647 0E81                                   l2639 0E53  
                                 l2663 0F0F                                   l2671 08EF  
                                 l3199 14CC                                   l3279 1610  
                                 l2761 0A31                                   l2753 0A12  
                                 l2745 0A00                                   l2737 09F1  
                                 l2809 09E2                                   l2817 0942  
                                 l2921 0FA3                                   l2913 0F66  
                                 l2905 0F3C                                   l3297 08D2  
                                 l3289 08AD                                   l3377 149E  
                                 l3369 1498                                   l3553 0260  
                                 l3545 0240                                   l3537 0206  
                                 l3481 0149                                   l3465 0110  
                                 l3457 00EE                                   l3449 00DB  
                                 l3705 07CB                                   l3641 0668  
                                 l3633 05EC                                   l3625 05AA  
                                 l3617 052C                                   l3393 0AEC  
                                 l3385 0ACF                                   l3721 0CD4  
                                 l3713 0CAB                                   l2729 0E24  
                                 l2657 0ED7                                   l2649 0E8A  
                                 l2841 0019                                   l2673 08EF  
                                 l2771 0A49                                   l2763 0A32  
                                 l2755 0A16                                   l2747 0A02  
                                 l2739 09F3                                   l2827 1483  
                                 l2819 0949                                   l2931 0FC1  
                                 l2923 0FA9                                   l2915 0F68  
                                 l2907 0F48                                   l3299 08DE  
                                 l3555 0264                                   l3547 024F  
                                 l3539 021F                                   l3491 016E  
                                 l3483 0151                                   l3475 0127  
                                 l3459 00F0                                   l3651 06F8  
                                 l3643 0676                                   l3635 0609  
                                 l3627 05B3                                   l3619 0548  
                                 l3571 0498                                   l3395 0AF4  
                                 l3731 0CEF                                   l3723 0CD7  
                                 l3715 0CBB                                   l2851 0051  
                                 l2843 0023                                   l2835 0010  
                                 l2675 08F4                                   l2691 15DA  
                                 l2683 15C9                                   l3379 0004  
                                 l2765 0A39                                   l2757 0A1A  
                                 l2749 0A08                                   l2781 0998  
                                 l2829 1487                                   l2933 0FD3  
                                 l2925 0FAE                                   l2917 0F6F  
                                 l2909 0F54                                   l2941 0FE8  
                                 l3557 0266                                   l3549 0253  
                                 l3493 016F                                   l3485 0153  
                                 l3477 0139                                   l3469 0119  
                                 l3661 071D                                   l3653 0706  
                                 l3645 06A1                                   l3637 0620  
                                 l3629 05C1                                   l3581 04AF  
                                 l3573 049C                                   l3397 0AF6  
                                 l3389 0AD8                                   l3741 0D1C  
                                 l3733 0CFD                                   l3725 0CDB  
                                 l3717 0CCB                                   l3709 0CA2  
                                 l2853 005F                                   l2861 008D  
                                 l2845 0031                                   l2837 0011  
                                 l2677 08F7                                   l2693 15DE  
                                 l2685 15C9                                   l2759 0A2B  
                                 l2767 0A3F                                   l2791 09AC  
                                 l2783 099A                                   l2775 098E  
                                 l2927 0FB3                                   l2935 0FD9  
                                 l2919 0F8E                                   l3559 026A  
                                 l3487 0158                                   l3495 0178  
                                 l3479 0141                                   l3671 0740  
                                 l3655 070F                                   l3663 0723  
                                 l3647 06C7                                   l3639 063D  
                                 l3591 04C6                                   l3583 04B1  
                                 l3575 049D                                   l3567 048F  
                                 l3399 0AFA                                   l3751 0D4F  
                                 l3743 0D26                                   l3735 0D06  
                                 l3727 0CE4                                   l2855 0068  
                                 l2847 003A                                   l2863 00A0  
                                 l2839 0016                                   l2951 1716  
                                 l2679 0936                                   l2687 15CE  
                                 l2871 0865                                   l2769 0A44  
                                 l2793 09B3                                   l2785 099E  
                                 l2777 098F                                   l2929 0FB8  
                                 l2937 0FE0                                   l3497 018A  
                                 l3489 016A                                   l3681 075F  
                                 l3665 0727                                   l3657 0713  
                                 l3649 06EF                                   l3593 04C7  
                                 l3585 04B9                                   l3577 04A2  
                                 l3569 0494                                   l3753 0D50  
                                 l3745 0D30                                   l3737 0D0D  
                                 l3729 0CEB                                   l2697 0D5A  
                                 l2857 0076                                   l2849 0048  
                                 l2961 171F                                   l2953 1717  
                                 l2689 15D1                                   l2873 0868  
                                 l2881 15EA                                   l2795 09B7  
                                 l2787 09A3                                   l2779 0993  
                                 l3499 018B                                   l3691 07A5  
                                 l3683 0778                                   l3675 0748  
                                 l3667 0728                                   l3659 0714  
                                 l3595 04CC                                   l3587 04BE  
                                 l3579 04A7                                   l3747 0D46  
                                 l3739 0D18                                   l2699 0D5A  
                                 l2859 007F                                   l2971 172C  
                                 l2963 1725                                   l2947 170F  
                                 l2875 08A2                                   l2867 0860  
                                 l2883 15EF                                   l2797 09BB  
                                 l2789 09A9                                   l3693 07AF  
                                 l3677 074D                                   l3685 077E  
                                 l3669 072C                                   l3597 04D1  
                                 l3589 04C2                                   l3749 0D4B  
                                 l2973 1734                                   l2965 172B  
                                 l2949 1711                                   l2869 0860  
                                 l2981 0BF4                                   l3941 028C  
                                 l2799 09C5                                   l2895 0F14  
                                 l3695 07B1                                   l3687 078B  
                                 l3679 075B                                   l3599 04D9  
                                 l2975 173A                                   l2959 1718  
                                 l2991 0C09                                   l2983 0BF5  
                                 l2887 15F8                                   l2879 15EA  
                                 l3951 02FD                                   l3943 02DD  
                                 l3935 0271                                   l2897 0F23  
                                 l3697 07BD                                   l3689 0796  
                                 l2993 0C11                                   l2985 0C08  
                                 l2977 0BEE                                   l3961 0323  
                                 l3953 0316                                   l3945 02E8  
                                 l3937 0276                                   l2899 0F29  
                                 l3699 07C1                                   l2995 0C17  
                                 l2979 0BEF                                   l3963 032F  
                                 l3947 02F0                                   l3939 0281  
                                 l2997 0C1D                                   l3981 0365  
                                 l3965 033E                                   l3949 02F8  
                                 l2999 0C2C                                   l3991 0394  
                                 l3983 0375                                   l3975 034D  
                                 l3967 0344                                   l3959 031A  
                                 l3993 039E                                   l3985 0383  
                                 l3977 035C                                   l3969 034C  
                                 l3995 03B8                                   l3979 035D  
                                 l3997 03C0                                   l3989 038C  
                                 l3999 03C6                                   STR_1 085A  
                                 STR_2 085A                                   STR_4 083C  
                                 STR_5 081C                                   STR_6 0831  
                                 STR_7 082D                                   STR_8 084B  
                                 u3010 09EC                                   u3011 09EB  
                                 u3100 0A44                                   u3020 09F7  
                                 u3004 0E0A                                   u3101 0A43  
                                 u3021 09F6                                   u3005 0E08  
                                 u3030 0A08                                   u3110 0993  
                                 u3031 0A07                                   u3111 0992  
                                 u3120 099E                                   u3200 093D  
                                 u4000 15C1                                   u3121 099D  
                                 u3201 093C                                   u4001 15C0  
                                 u3050 0A1A                                   u3130 09A9  
                                 u3210 0942                                   u4010 0ACF  
                                 u3051 0A19                                   u3131 09A8  
                                 u3211 0941                                   u4011 0ACE  
                                 u3220 0958                                   u4100 0B30  
                                 u4020 0AE6                                   u3300 0051  
                                 u3045 0A0C                                   u3221 0957  
                                 u4101 0B2F                                   u3301 0050  
                                 u3070 0A2B                                   u3150 09BB  
                                 u3230 0976                                   u4110 00AF  
                                 u4030 0AFA                                   u3310 005F  
                                 u3071 0A2A                                   u3151 09BA  
                                 u3231 0975                                   u4111 00AE  
                                 u4031 0AF9                                   u3311 005E  
                                 u3160 09C5                                   u3240 1487  
                                 u3400 0F48                                   u4120 00B5  
                                 u4040 0B01                                   u3320 0068  
                                 u3065 0A1B                                   u3161 09C4  
                                 u3145 09AD                                   u3241 1486  
                                 u3401 0F47                                   u4121 00B4  
                                 u4041 0B00                                   u4025 0AE1  
                                 u3321 0067                                   u3090 0A3F  
                                 u3410 0F54                                   u4130 00BA  
                                 u3330 0076                                   u3250 0016  
                                 u3091 0A3E                                   u3075 0A27  
                                 u3235 0972                                   u3411 0F53  
                                 u4131 00B9                                   u3331 0075  
                                 u3251 0015                                   u3180 09D8  
                                 u3420 0F6D                                   u4300 01CE  
                                 u4220 016E                                   u4140 00DA  
                                 u4060 0B13                                   u3340 007F  
                                 u3260 0023                                   u3500 172B  
                                 u3085 0A33                                   u3181 09D7  
                                 u3165 09C1                                   u3421 0F6B  
                                 u4301 01CD                                   u4221 016D  
                                 u4205 015A                                   u4141 00D9  
                                 u4061 0B12                                   u3341 007E  
                                 u3261 0022                                   u3501 172A  
                                 u3190 09DD                                   u3430 0F6E  
                                 u4310 01D3                                   u4150 00E0  
                                 u4070 0B1A                                   u2710 0E38  
                                 u3350 008D                                   u3270 0031  
                                 u3510 1740                                   u3191 09DC  
                                 u3175 09CC                                   u4311 01D2  
                                 u4215 0163                                   u4151 00DF  
                                 u4071 0B19                                   u4055 0B03  
                                 u2711 0E37                                   u3351 008C  
                                 u3271 0030                                   u3511 173F  
                                 u3440 0FA9                                   u4320 01E7  
                                 u4240 018A                                   u4160 00E5  
                                 u4400 049C                                   u2800 0EA1  
                                 u2720 0E45                                   u3280 003A  
                                 u3360 0865                                   u3520 0BF4  
                                 u3600 0B48                                   u3441 0FA8  
                                 u4321 01E6                                   u4241 0189  
                                 u4161 00E4                                   u4401 049B  
                                 u2801 0EA0                                   u2721 0E44  
                                 u3281 0039                                   u3361 0864  
                                 u3521 0BF3                                   u3601 0B47  
                          main@counter 0061                                   u3450 0FAE  
                                 u4330 01EE                                   u4250 01A3  
                                 u4170 0100                                   u4410 04A2  
                                 u4090 0B2B                                   u2810 0EAF  
                                 u2730 0E53                                   u3290 0048  
                                 u3530 0C1D                                   u3610 0B55  
                                 u3451 0FAD                                   u4331 01ED  
                                 u4251 01A2                                   u4235 0171  
                                 u4171 00FF                                   u4411 04A1  
                                 u4091 0B2A                                   u2811 0EAE  
                                 u2731 0E52                                   u3291 0047  
                                 u3531 0C1C                                   u3611 0B54  
                                 u3460 0FB3                                   u4340 01F4  
                                 u4260 01AB                                   u4180 011E  
                                 u4420 04A7                                   u2900 0D78  
                                 u2740 0E5C                                   u3380 15EF  
                                 u3700 0BBF                                   u3620 0B63  
                                 u3540 17C0                                   u5300 034A  
                                 u3461 0FB2                                   u4341 01F3  
                                 u4261 01AA                                   u4245 0186  
                                 u4181 011D                                   u4501 0580  
                                 u4421 04A6                                   u4085 0B1D  
                                 u2901 0D77                                   u2741 0E5B  
                                 u3381 15EE                                   u3701 0BBE  
                                 u3621 0B62                                   u3541 17BF  
                                 u5301 0349                                   u3470 0FB8  
                                 u3390 0F23                                   u4350 0206  
                                 u4190 0158                                   u4502 0587  
                                 u4430 04C6                                   u2910 0D81  
                                 u2750 0E6A                                   u3630 0B6C  
                                 u5310 035C                                   u3471 0FB7  
                                 u3391 0F22                                   u4351 0205  
                                 u4191 0157                                   u4511 059C  
                                 u4503 058E                                   u4431 04C5  
                                 u2911 0D80                                   u2751 0E69  
                                 u3375 0875                                   u3631 0B6B  
                                 u5311 035B                                   u3800 179D  
                                 u3480 0FDF                                   u4360 0215  
                                 u4280 01BA                                   u4512 05A3  
                                 u4440 04CC                                   u2920 0D8F  
                                 u2824 0EBD                                   u2760 0E73  
                                 u2840 08F4                                   u3560 14D4  
                                 u3640 0B7A                                   u3720 16B5  
                                 u5320 03CC                                   u3801 179C  
                                 u3481 0FDE                                   u4281 01B9  
                                 u4601 06B9                                   u4513 05AA  
                                 u4441 04CB                                   u2921 0D8E  
                                 u2825 0EBB                                   u2761 0E72  
                                 u2841 08F3                                   u3561 14D3  
                                 u3641 0B79                                   u3721 16B4  
                                 u5321 03CB                                   u4370 0232  
                                 u4610 06D5                                   u4602 06C0  
                                 u4450 04D1                                   u2930 0D98  
                                 u2834 0EE4                                   u2770 0E81  
                                 u3490 1716                                   u3570 1687  
                                 u3714 0BDF                                   u3650 0B83  
                                 u3730 174A                                   u5330 03E1  
                                 u4371 0231                                   u4275 01AF  
                                 u4603 06C7                                   u4531 05D0  
                                 u4451 04D0                                   u2931 0D97  
                                 u2835 0EE2                                   u2771 0E80  
                                 u3491 1715                                   u3571 1686  
                                 u3715 0BDD                                   u3651 0B82  
                                 u3555 17D1                                   u3731 1749  
                                 u5331 03E0                                   u3580 15A4  
                                 u4380 024F                                   u4700 0747  
                                 u4532 05D7                                   u4460 04E8  
                                 u2940 0DA6                                   u2780 0E8A  
                                 u3820 14BF                                   u3660 0B91  
                                 u3900 0AB9                                   u3740 1774  
                                 u5340 0425                                   u3581 15A3  
                                 u4381 024E                                   u4365 0210  
                                 u4701 0746                                   u4621 06E1  
                                 u4541 05FB                                   u4533 05DE  
                                 u4525 05AC                                   u4461 04E7  
                                 u2941 0DA5                                   u2781 0E89  
                                 u3821 14BE                                   u3661 0B90  
                                 u3901 0AB8                                   u3741 1773  
                                 u5341 0424                                   u3750 1566  
                                 u4390 0264                                   u4710 074D  
                                 u4622 06E8                                   u4542 0602  
                                 u4470 04ED                                   u2950 0DAF  
                                 u2790 0E98                                   u2870 15CE  
                                 u3830 14CC                                   u3670 0B9A  
                                 u3590 0B43                                   u3910 0AC3  
                                 u5350 043E                                   u5270 02F8  
                                 u3815 17A7                                   u3751 1565  
                                 u4391 0263                                   u4375 022E  
                                 u4295 01BD                                   u4711 074C  
                                 u4623 06EF                                   u4615 06D0  
                                 u4543 0609                                   u4471 04EC  
                                 u2951 0DAE                                   u2791 0E97  
                                 u2855 0913                                   u2871 15CD  
                                 u3831 14CB                                   u3671 0B99  
                                 u3591 0B42                                   u3911 0AC2  
                                 u5351 043D                                   u5407 0337  
                                 u5271 02F7                                   u3760 147A  
                                 u3840 163F                                   u4720 075F  
                                 u2960 0DBD                                   u2880 0D5F  
                                 u3680 0BA8                                   u5360 0447  
                                 u5280 02FD                                   u3761 1479  
                                 u4385 024B                                   u3841 163E  
                                 u4721 075E                                   u4561 062F  
                                 u4481 053A                                   u2961 0DBC  
                                 u2881 0D5E                                   u2865 0926  
                                 u3681 0BA7                                   u5361 0446  
                                 u5417 037D                                   u5281 02FC  
                                 u3770 1482                                   u4730 076E  
                                 u4650 0713                                   u4562 0636  
                                 u4482 0541                                   u4810 0CEA  
                                 u2970 0DC6                                   u2890 0D6A  
                                 u3690 0BB1                                   u3930 1615  
                                 u5370 0457                                   u5290 032F  
                                 u3771 1481                                   u4651 0712  
                                 u4635 06F1                                   u4571 065A  
                                 u4563 063D                                   u4555 060B  
                                 u4491 0556                                   u4483 0548  
                                 u4811 0CE9                                   u2971 0DC5  
                                 u2891 0D69                                   u3691 0BB0  
                                 u3931 1614                                   u5371 0456  
                                 u5427 039A                                   u5291 032E  
                                 u3780 177C                                   u3940 08A8  
                                 u3860 1653                                   u4740 078B  
                                 u4572 0661                                   u4492 055D  
                                 u4900 0D4F                                   u2980 0DD4  
                                 u5380 047C                                   u3781 177B  
                                 u3861 1652                                   u4741 078A  
                                 u4645 0708                                   u4581 0685  
                                 u4573 0668                                   u4493 0564  
                                 u4901 0D4E                                   u4805 0CDC  
                                 u2981 0DD3                                   u5381 047B  
                                 u5437 03B2                                   u3790 1786  
                                 u3950 08ED                                   u4750 07A5  
                                 u4670 0727                                   u4590 06AD  
                                 u4582 068C                                   u4830 0D0C  
                                 u3870 0A5A                                   u3791 1785  
                                 u3951 08EC                                   u3855 1646  
                                 u4751 07A4                                   u4735 0769  
                                 u4671 0726                                   u4583 0693  
                                 u4831 0D0B                                   u5447 0A7E  
                                 u3871 0A59                                   u4760 07C1  
                                 u4680 072C                                   u3880 0A71  
                                 u3960 1537                                   u4761 07C0  
                                 u4745 0787                                   u4681 072B  
                                 u4665 0716                                   u4825 0CFE  
                                 u5457 0C25                                   u3881 0A70  
                                 u3961 1536                                   u5385 0478  
                                 u4690 0740                                   u4850 0D1C  
                                 u4770 0CA7                                   u2994 0DE2  
                                 u3890 0A97                                   u3970 151D  
                                 u4755 07A1                                   u4691 073F  
                                 u4595 06A8                                   u4851 0D1B  
                                 u4771 0CA6                                   u2995 0DE0  
                                 u5467 0C3C                                   u3891 0A96  
                                 u3971 151C                                   u4860 0D22  
                                 u4780 0CAB                                   u3980 1504  
                                 u4861 0D21                                   u4845 0D11  
                                 u4781 0CAA                                   u5477 0C4E  
                                 u3981 1503                                   u5397 0305  
                                 u3990 165E                                   u4870 0D26  
                                 u4790 0CCB                                   u3991 165D  
                                 u4871 0D25                                   u4791 0CCA  
                                 u5487 15DC                                   u4880 0D3B  
                                 u4890 0D4B                                   u4891 0D4A  
                                 u4885 0D36                                   _Temp 0063  
                                 abs@a 0076                                   _dbuf 0190  
                                 _flag 0065                       __end_of_ADC_INIT 16AC  
                                 _main 0271                                   _pass 00B4  
                                 _prec 00DC                                   _temp 00C5  
                                 btemp 007E                                   start 0000  
                  _EXT_RB4_LOW_HANDLER 006A                        ___fldiv@new_exp 004C  
                    ___bmul@multiplier 0072                      set_cursor@coloumn 0023  
                 keypad_read_value@val 0020                                  ??_abs 0078  
                 _gpio_pin_write_logic 0E31       ADC_Start_Conversion_Blocking@adc 0079  
               lcd_4bits_send_char@lcd 0021                 lcd_4bits_send_char@ret 0020  
                        ___fltol@sign1 005C                      ??_motor_turn_left 0078  
                                ?_main 0070                        __end_of___fldiv 0271  
                      __end_of___awdiv 0A4E                                  _EEADR 010D  
                      __end_of___awmod 09E7                        __end_of___flmul 07D4  
                      __end_of___fltol 0B3C                        ___awdiv@divisor 0070  
                      ___awdiv@counter 0074                           vfpfcnvrt@fmt 007A  
               ?_lcd_4bits_send_string 0022                                  _PORTA 0005  
                                _PORTB 0006                                  _PORTC 0007  
                                _PORTD 0008                                  _PORTE 0009  
                                _TRISA 0085                                  _TRISB 0086  
                                _TRISC 0087                                  _TRISD 0088  
                                _TRISE 0089                                  _flags 00DE  
                 _ADC_Start_Conversion 1474                   _EXT_RB7_HIGH_HANDLER 00E1  
                                _fputc 0938                                  _width 00DA  
                                _putch 0003                                  main@i 0062  
                                pclath 000A          lcd_4bits_send_command@command 007C  
                                status 0003                                  wtemp0 007E  
                      __end_of_sprintf 1586                    _EXT_RB5_LOW_HANDLER 0068  
       ?_gpio_pin_direction_initialize 0070                        __initialization 07D4  
                         __end_of_main 048F                  ?_gpio_pin_write_logic 0070  
 ADC_Start_Conversion_Blocking@channel 0075                __end_of_mcal_initialize 146C  
             gpio_pin_read_logic@logic 0070            __end_of_lcd_4bits_send_char 1800  
                               ??_main 005E                lcd_4bits_send_char@data 007C  
              ?_lcd_4bits_send_command 007C                       _EXT_INTX_HANDLER 006C  
                    ?_motor_turn_right 0070                  ?_ADC_Start_Conversion 0070  
                   ??_motor_turn_right 0078                                 ?_fputc 0070  
                               _ADRESH 001E                                 _ADRESL 009E  
                               _EEDATA 010C                                 _EECON2 018D  
                     ___awdiv@dividend 0072                                 ?_putch 0070  
                        vfpfcnvrt@done 0020               keypad_read_value@counter 0021  
                 READ_DATA_EEPROM@data 0072                       __end_of___xxtofl 0D59  
                  _EXT_RB6_LOW_HANDLER 0066                keypad_initialize@l_rows 0021  
                __end_of_Result_Format 160D                           vfprintf@cfmt 002B  
              keypad_initialize@keypad 0020                                 ___bmul 14B9  
                            ??___fldiv 0042                              ??___awdiv 0074  
                            ??___awmod 0074                              ??___flmul 0028  
                            ??___fltol 0058             ??_Convert_uint16_to_string 0040  
                               _keypad 00B8                                 _memset 154B  
                     ___awdiv@quotient 0076                        ___awmod@divisor 0070  
                               _motor1 00CE                                 _motor2 00CC  
                      ___awmod@counter 0074                   WRITE_DATA_EEPROM@add 0070  
       __end_of_lcd_4bits_send_command 08A4                                 fputc@c 0070  
                            ?_ADC_INIT 0070                                 putch@c 0070  
                     __end_of_vfprintf 15A7                ADC_Start_Conversion@adc 0070  
                            ??_sprintf 002F                           ___xxtofl@arg 007A  
                         ___xxtofl@exp 0079                           ___xxtofl@val 0070  
              __end_of__initialization 07FC               __end_of_READ_DATA_EEPROM 14A6  
                           ___fltol@f1 0054                    _EXT_RB7_LOW_HANDLER 00E0  
                  ___bmul@multiplicand 0070                 ??_gpio_pin_write_logic 0071  
                       __pcstackCOMMON 0070           __end_of_lcd_4bits_initialize 0CA1  
                         __pidataBANK1 16DC                          __end_of_fputc 098E  
                        __end_of_putch 0004           Convert_uint16_to_string@data 003D  
                     ?_mcal_initialize 0070           Convert_uint16_to_string@temp 0041  
                        send_4bits@lcd 007B                          send_4bits@ret 007A  
                           ??_ADC_INIT 0073                 ??_ADC_Start_Conversion 0070  
               keypad_read_value@value 0078             ?_ADC_Get_Conversion_Result 0070  
                              ??_fputc 0073                                ??_putch 0070  
                           __pbssBANK0 0063                             __pbssBANK1 00D0  
                           __pbssBANK3 0190      __end_of_lcd_4bits_send_string_pos 1631  
                      _motor_turn_left 1517                      __end_of__Umul8_16 1658  
                           __pmaintext 0271                                ?___bmul 0070  
          Convert_uint16_to_string@str 003F                                ?_memset 0070  
              ??_lcd_4bits_send_string 007E                              ?___xxtofl 0070  
            lcd_4bits_send_command@lcd 0021              lcd_4bits_send_command@ret 0020  
    __end_of_ADC_Get_Conversion_Result 17B8                             __stringtab 0800  
                           _btn_values 0810                         _tris_registers 00AA  
      ??_ADC_Start_Conversion_Blocking 0078                    _gpio_pin_initialize 000F  
                              ___fldiv 00A2                                ___awdiv 09E7  
                  _gpio_pin_read_logic 0B3C                                ___awmod 098E  
                              ___flmul 048F                                ___fltol 0AC4  
                              _adc_res 00EE                              ?_vfprintf 0028  
                              __ptext1 1531                                __ptext2 14FE  
                              __ptext3 1517                                __ptext4 160D  
                              __ptext5 16AC                                __ptext6 1741  
                              __ptext7 17B8                                __ptext8 0A4E  
                              __ptext9 0B3C               ??_apllication_initilaize 007E  
      ??_gpio_pin_direction_initialize 0070                                _counter 00DF  
                           ??___xxtofl 0074                       ___awmod@dividend 0072  
           __end_of_send_enable_signal 15E9                   ?_gpio_pin_initialize 0070  
                           _send_4bits 08EE                   ?_gpio_pin_read_logic 0070  
                              _sprintf 1567                                clrloop0 146D  
                 _lcd_4bits_initialize 0BEB                   end_of_initialization 07FC  
              __end_of_motor_turn_left 1531                  WRITE_DATA_EEPROM@data 0072  
          lcd_4bits_initialize@counter 0025                                fputc@fp 0072  
                              memset@c 0070                                memset@n 0072  
                              memset@p 0074                  motor_turn_right@motor 0079  
                           _set_cursor 16AC                      __end_of_vfpfcnvrt 1000  
                     vfpfcnvrt@convarg 0023                             ??_vfprintf 007E  
                         _lcd_show_max 00E2                         _ecu_initialzie 14E5  
                        ___xxtofl@sign 0078                  ??_gpio_pin_initialize 0078  
                ??_gpio_pin_read_logic 0071                            ___fldiv@grs 004E  
                          ___fldiv@rem 0047                  ?_lcd_4bits_initialize 0070  
                          ___flmul@grs 002E                      ?_READ_DATA_EEPROM 0070  
                     _motor_initialize 14CE                     ??_READ_DATA_EEPROM 0073  
        Convert_uint32_to_string@F1655 01B0          Convert_uint16_to_string@F1649 00D0  
                       __end_of___bmul 14CE                            vfpfcnvrt@ap 007B  
                          vfpfcnvrt@cp 0022                            vfpfcnvrt@fp 0021  
               __end_of_ecu_initialzie 14FE  __end_of_ADC_Start_Conversion_Blocking 1680  
        _ADC_Start_Conversion_Blocking 1658               lcd_4bits_send_string@lcd 0025  
             lcd_4bits_send_string@ret 0024                         __end_of_memset 1567  
                  start_initialization 07D4                      send_4bits@command 0078  
                          __end_of_abs 1494                            ?_send_4bits 0078  
__end_of_gpio_pin_direction_initialize 0E31          _gpio_pin_direction_initialize 0D59  
          ??_ADC_Get_Conversion_Result 0072          lcd_4bits_send_string_pos@data 0028  
            ?_Convert_uint16_to_string 003D    ADC_Start_Conversion_Blocking@result 0076  
                     ?_motor_turn_left 0070                    READ_DATA_EEPROM@add 0070  
              keypad_read_value@l_rows 0023                keypad_read_value@keypad 0022  
                          ?_set_cursor 0022                            vfprintf@fmt 0028  
                             ??___bmul 0071                             init_fetch0 14A6  
                            __Umul8_16 1631                            __pdataBANK1 00A0  
         Convert_uint8_to_string@F1643 00D6                               ??_memset 0074  
                      ?_ecu_initialzie 0070                             memset@dest 0075  
              lcd_4bits_initialize@lcd 0027                lcd_4bits_initialize@ret 0026  
        __end_of_lcd_4bits_send_string 1776                              ___fldiv@a 003A  
                            ___fldiv@b 003E                              ___flmul@a 0024  
                            ___flmul@b 0020                              ___latbits 0002  
                        __pcstackBANK0 0020                 ??_lcd_4bits_initialize 0022  
                          ADC_INIT@adc 0075                            ADC_INIT@ret 0074  
               _apllication_initilaize 0004                   motor_turn_left@motor 0079  
           ?_lcd_4bits_send_string_pos 0026                       _motor_turn_right 1531  
                       _motor_turn_off 14FE              _ADC_Get_Conversion_Result 1776  
                        _Result_Format 15E9                               ?___fldiv 003A  
                             ?___awdiv 0070                               ?___awmod 0070  
                             ?___flmul 0020               ??_lcd_4bits_send_command 007D  
                             ?___fltol 0054                             ?__Umul8_16 0070  
            gpio_pin_write_logic@logic 0070                              __pstrings 0800  
                             _ADC_INIT 1680              lcd_4bits_send_string@data 0022  
       ?_ADC_Start_Conversion_Blocking 0075                   _EXT_RB4_HIGH_HANDLER 006B  
                             ?_sprintf 002C            keypad_initialize@l_coloumns 0022  
                  motor_initialize@ret 007C                 __end_of_motor_turn_off 1517  
                            clear_ram0 146C                     _send_enable_signal 15C8  
                       ?_Result_Format 0070                    _lcd_4bits_send_char 17B8  
     gpio_pin_direction_initialize@pin 0075                    ?_send_enable_signal 0070  
                            _vfpfcnvrt 0F11                             _ADCON0bits 001F  
                          __stringbase 080F                             _ADCON1bits 009F  
                        set_cursor@Row 0022                          set_cursor@lcd 0025  
                        set_cursor@ret 0024               __end_of_motor_initialize 14E5  
               gpio_pin_initialize@pin 007B                 gpio_pin_initialize@ret 007A  
                 ?_lcd_4bits_send_char 007C                             vfpfcnvrt@c 0027  
              gpio_pin_write_logic@pin 0077                gpio_pin_write_logic@ret 0076  
                 ??_send_enable_signal 0078                      _keypad_initialize 170C  
                             _Max_Temp 006D                      _keypad_read_value 0A4E  
                    ??_mcal_initialize 0076                     ?_keypad_initialize 0070  
               gpio_pin_read_logic@pin 0077                 gpio_pin_read_logic@ret 0076  
                   ?_keypad_read_value 0078                  send_enable_signal@lcd 007A  
                send_enable_signal@ret 0079                        ?_motor_turn_off 0070  
                           _EECON1bits 018C                WRITE_DATA_EEPROM@status 0073  
                           vfprintf@ap 0029                             vfprintf@fp 002A  
                  ??_keypad_initialize 007C                    ??_keypad_read_value 0079  
                          ??__Umul8_16 0072                             ?_vfpfcnvrt 007A  
     __end_of_Convert_uint16_to_string 08EE                     __end_of__stringtab 0810  
          __end_of_gpio_pin_initialize 00A2                     __end_of_btn_values 081C  
          __end_of_gpio_pin_read_logic 0BEB                             sprintf@fmt 002C  
                  motor_turn_off@motor 0079                               ___xxtofl 0CA1  
                ??_lcd_4bits_send_char 007D                   _EXT_RB5_HIGH_HANDLER 0069  
            __end_of_keypad_initialize 1741                               __ptext10 14B9  
                             __ptext11 0004                               __ptext20 08EE  
                             __ptext12 1465                               __ptext21 170C  
                             __ptext13 1680                               __ptext30 15A7  
                             __ptext22 000F                               __ptext14 15E9  
                             __ptext31 1494                               __ptext23 0E31  
                             __ptext15 14E5                               __ptext40 09E7  
                             __ptext32 08A4                               __ptext24 0D59  
                             __ptext16 14CE                               __ptext41 154B  
                             __ptext33 1567                               __ptext25 0CA1  
                             __ptext17 0BEB                               __ptext42 1658  
                             __ptext34 1586                               __ptext26 0AC4  
                             __ptext18 085D                           ??_send_4bits 0079  
                             __ptext43 1474                               __ptext35 0F11  
                             __ptext27 048F                               __ptext19 15C8  
                             __ptext44 1776                               __ptext36 0938  
                             __ptext28 1631                               __ptext37 0003  
                             __ptext29 00A2                               __ptext38 1483  
                             __ptext39 098E              __end_of_keypad_read_value 0AC4  
                             _lcd_show 00E8        Convert_uint16_to_string@counter 0047  
                      ??_Result_Format 0070                    motor_turn_right@ret 0078  
                         ??_set_cursor 007E                       ??_ecu_initialzie 007E  
                             _vfprintf 1586                     __end_of_send_4bits 0938  
                motor_initialize@motor 007D                             _INTCONbits 000B  
             __end_of_motor_turn_right 154B                               init_ram0 14AA  
         __end_of_gpio_pin_write_logic 0F11                       Result_Format@adc 0072  
               _lcd_4bits_send_command 085D                ?_apllication_initilaize 0070  
                   __end_of_set_cursor 16DC                              sprintf@ap 0030  
                   motor_turn_left@ret 0078                      _WRITE_DATA_EEPROM 15A7  
                   ?_WRITE_DATA_EEPROM 0070            ??_lcd_4bits_send_string_pos 007E  
                            stringcode 080A           __end_of_ADC_Start_Conversion 1483  
                  ??_WRITE_DATA_EEPROM 0073                            ??_vfpfcnvrt 007C  
               __Umul8_16@multiplicand 0070                               sprintf@f 0032  
                    motor_turn_off@ret 0078                               sprintf@s 0031  
     lcd_4bits_send_string_pos@coloumn 0027                         _port_registers 00A0  
             _Convert_uint16_to_string 08A4                  _lcd_4bits_send_string 1741  
                             stringdir 080A                               stringtab 0800  
       __end_of_apllication_initilaize 000F                   _EXT_RB6_HIGH_HANDLER 0067  
            __end_of_WRITE_DATA_EEPROM 15C8        ADC_Get_Conversion_Result@result 0070  
                 __Umul8_16@multiplier 0078           lcd_4bits_send_string_pos@Row 0026  
         lcd_4bits_send_string_pos@lcd 002B           lcd_4bits_send_string_pos@ret 002A  
                    __Umul8_16@product 0074  
