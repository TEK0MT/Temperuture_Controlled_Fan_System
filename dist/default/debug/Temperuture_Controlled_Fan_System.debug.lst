

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Aug 16 15:34:44 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2,group=3
    51                           	psect	text34,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text35,local,class=CODE,merge=1,delta=2,group=1
    53                           	psect	text36,local,class=CODE,merge=1,delta=2,group=3
    54                           	psect	text37,local,class=CODE,merge=1,delta=2,group=3
    55                           	psect	text38,local,class=CODE,merge=1,delta=2,group=3
    56                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2,group=3
    59                           	psect	text42,local,class=CODE,merge=1,delta=2
    60                           	psect	text43,local,class=CODE,merge=1,delta=2
    61                           	psect	text44,local,class=CODE,merge=1,delta=2
    62                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    63                           	dabs	1,0x7E,2
    64     0000                     
    65                           ; Generated 12/10/2023 GMT
    66                           ; 
    67                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution. Publication is not required when
    81                           ;        this file is used in an embedded application.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC16F877A Definitions
    97                           ; 
    98                           ; SFR Addresses
    99     0000                     	;# 
   100     0001                     	;# 
   101     0002                     	;# 
   102     0003                     	;# 
   103     0004                     	;# 
   104     0005                     	;# 
   105     0006                     	;# 
   106     0007                     	;# 
   107     0008                     	;# 
   108     0009                     	;# 
   109     000A                     	;# 
   110     000B                     	;# 
   111     000C                     	;# 
   112     000D                     	;# 
   113     000E                     	;# 
   114     000E                     	;# 
   115     000F                     	;# 
   116     0010                     	;# 
   117     0011                     	;# 
   118     0012                     	;# 
   119     0013                     	;# 
   120     0014                     	;# 
   121     0015                     	;# 
   122     0015                     	;# 
   123     0016                     	;# 
   124     0017                     	;# 
   125     0018                     	;# 
   126     0019                     	;# 
   127     001A                     	;# 
   128     001B                     	;# 
   129     001B                     	;# 
   130     001C                     	;# 
   131     001D                     	;# 
   132     001E                     	;# 
   133     001F                     	;# 
   134     0081                     	;# 
   135     0085                     	;# 
   136     0086                     	;# 
   137     0087                     	;# 
   138     0088                     	;# 
   139     0089                     	;# 
   140     008C                     	;# 
   141     008D                     	;# 
   142     008E                     	;# 
   143     0091                     	;# 
   144     0092                     	;# 
   145     0093                     	;# 
   146     0094                     	;# 
   147     0098                     	;# 
   148     0099                     	;# 
   149     009C                     	;# 
   150     009D                     	;# 
   151     009E                     	;# 
   152     009F                     	;# 
   153     010C                     	;# 
   154     010D                     	;# 
   155     010E                     	;# 
   156     010F                     	;# 
   157     018C                     	;# 
   158     018D                     	;# 
   159     0000                     	;# 
   160     0001                     	;# 
   161     0002                     	;# 
   162     0003                     	;# 
   163     0004                     	;# 
   164     0005                     	;# 
   165     0006                     	;# 
   166     0007                     	;# 
   167     0008                     	;# 
   168     0009                     	;# 
   169     000A                     	;# 
   170     000B                     	;# 
   171     000C                     	;# 
   172     000D                     	;# 
   173     000E                     	;# 
   174     000E                     	;# 
   175     000F                     	;# 
   176     0010                     	;# 
   177     0011                     	;# 
   178     0012                     	;# 
   179     0013                     	;# 
   180     0014                     	;# 
   181     0015                     	;# 
   182     0015                     	;# 
   183     0016                     	;# 
   184     0017                     	;# 
   185     0018                     	;# 
   186     0019                     	;# 
   187     001A                     	;# 
   188     001B                     	;# 
   189     001B                     	;# 
   190     001C                     	;# 
   191     001D                     	;# 
   192     001E                     	;# 
   193     001F                     	;# 
   194     0081                     	;# 
   195     0085                     	;# 
   196     0086                     	;# 
   197     0087                     	;# 
   198     0088                     	;# 
   199     0089                     	;# 
   200     008C                     	;# 
   201     008D                     	;# 
   202     008E                     	;# 
   203     0091                     	;# 
   204     0092                     	;# 
   205     0093                     	;# 
   206     0094                     	;# 
   207     0098                     	;# 
   208     0099                     	;# 
   209     009C                     	;# 
   210     009D                     	;# 
   211     009E                     	;# 
   212     009F                     	;# 
   213     010C                     	;# 
   214     010D                     	;# 
   215     010E                     	;# 
   216     010F                     	;# 
   217     018C                     	;# 
   218     018D                     	;# 
   219     0000                     	;# 
   220     0001                     	;# 
   221     0002                     	;# 
   222     0003                     	;# 
   223     0004                     	;# 
   224     0005                     	;# 
   225     0006                     	;# 
   226     0007                     	;# 
   227     0008                     	;# 
   228     0009                     	;# 
   229     000A                     	;# 
   230     000B                     	;# 
   231     000C                     	;# 
   232     000D                     	;# 
   233     000E                     	;# 
   234     000E                     	;# 
   235     000F                     	;# 
   236     0010                     	;# 
   237     0011                     	;# 
   238     0012                     	;# 
   239     0013                     	;# 
   240     0014                     	;# 
   241     0015                     	;# 
   242     0015                     	;# 
   243     0016                     	;# 
   244     0017                     	;# 
   245     0018                     	;# 
   246     0019                     	;# 
   247     001A                     	;# 
   248     001B                     	;# 
   249     001B                     	;# 
   250     001C                     	;# 
   251     001D                     	;# 
   252     001E                     	;# 
   253     001F                     	;# 
   254     0081                     	;# 
   255     0085                     	;# 
   256     0086                     	;# 
   257     0087                     	;# 
   258     0088                     	;# 
   259     0089                     	;# 
   260     008C                     	;# 
   261     008D                     	;# 
   262     008E                     	;# 
   263     0091                     	;# 
   264     0092                     	;# 
   265     0093                     	;# 
   266     0094                     	;# 
   267     0098                     	;# 
   268     0099                     	;# 
   269     009C                     	;# 
   270     009D                     	;# 
   271     009E                     	;# 
   272     009F                     	;# 
   273     010C                     	;# 
   274     010D                     	;# 
   275     010E                     	;# 
   276     010F                     	;# 
   277     018C                     	;# 
   278     018D                     	;# 
   279     0000                     	;# 
   280     0001                     	;# 
   281     0002                     	;# 
   282     0003                     	;# 
   283     0004                     	;# 
   284     0005                     	;# 
   285     0006                     	;# 
   286     0007                     	;# 
   287     0008                     	;# 
   288     0009                     	;# 
   289     000A                     	;# 
   290     000B                     	;# 
   291     000C                     	;# 
   292     000D                     	;# 
   293     000E                     	;# 
   294     000E                     	;# 
   295     000F                     	;# 
   296     0010                     	;# 
   297     0011                     	;# 
   298     0012                     	;# 
   299     0013                     	;# 
   300     0014                     	;# 
   301     0015                     	;# 
   302     0015                     	;# 
   303     0016                     	;# 
   304     0017                     	;# 
   305     0018                     	;# 
   306     0019                     	;# 
   307     001A                     	;# 
   308     001B                     	;# 
   309     001B                     	;# 
   310     001C                     	;# 
   311     001D                     	;# 
   312     001E                     	;# 
   313     001F                     	;# 
   314     0081                     	;# 
   315     0085                     	;# 
   316     0086                     	;# 
   317     0087                     	;# 
   318     0088                     	;# 
   319     0089                     	;# 
   320     008C                     	;# 
   321     008D                     	;# 
   322     008E                     	;# 
   323     0091                     	;# 
   324     0092                     	;# 
   325     0093                     	;# 
   326     0094                     	;# 
   327     0098                     	;# 
   328     0099                     	;# 
   329     009C                     	;# 
   330     009D                     	;# 
   331     009E                     	;# 
   332     009F                     	;# 
   333     010C                     	;# 
   334     010D                     	;# 
   335     010E                     	;# 
   336     010F                     	;# 
   337     018C                     	;# 
   338     018D                     	;# 
   339     0000                     	;# 
   340     0001                     	;# 
   341     0002                     	;# 
   342     0003                     	;# 
   343     0004                     	;# 
   344     0005                     	;# 
   345     0006                     	;# 
   346     0007                     	;# 
   347     0008                     	;# 
   348     0009                     	;# 
   349     000A                     	;# 
   350     000B                     	;# 
   351     000C                     	;# 
   352     000D                     	;# 
   353     000E                     	;# 
   354     000E                     	;# 
   355     000F                     	;# 
   356     0010                     	;# 
   357     0011                     	;# 
   358     0012                     	;# 
   359     0013                     	;# 
   360     0014                     	;# 
   361     0015                     	;# 
   362     0015                     	;# 
   363     0016                     	;# 
   364     0017                     	;# 
   365     0018                     	;# 
   366     0019                     	;# 
   367     001A                     	;# 
   368     001B                     	;# 
   369     001B                     	;# 
   370     001C                     	;# 
   371     001D                     	;# 
   372     001E                     	;# 
   373     001F                     	;# 
   374     0081                     	;# 
   375     0085                     	;# 
   376     0086                     	;# 
   377     0087                     	;# 
   378     0088                     	;# 
   379     0089                     	;# 
   380     008C                     	;# 
   381     008D                     	;# 
   382     008E                     	;# 
   383     0091                     	;# 
   384     0092                     	;# 
   385     0093                     	;# 
   386     0094                     	;# 
   387     0098                     	;# 
   388     0099                     	;# 
   389     009C                     	;# 
   390     009D                     	;# 
   391     009E                     	;# 
   392     009F                     	;# 
   393     010C                     	;# 
   394     010D                     	;# 
   395     010E                     	;# 
   396     010F                     	;# 
   397     018C                     	;# 
   398     018D                     	;# 
   399     0000                     	;# 
   400     0001                     	;# 
   401     0002                     	;# 
   402     0003                     	;# 
   403     0004                     	;# 
   404     0005                     	;# 
   405     0006                     	;# 
   406     0007                     	;# 
   407     0008                     	;# 
   408     0009                     	;# 
   409     000A                     	;# 
   410     000B                     	;# 
   411     000C                     	;# 
   412     000D                     	;# 
   413     000E                     	;# 
   414     000E                     	;# 
   415     000F                     	;# 
   416     0010                     	;# 
   417     0011                     	;# 
   418     0012                     	;# 
   419     0013                     	;# 
   420     0014                     	;# 
   421     0015                     	;# 
   422     0015                     	;# 
   423     0016                     	;# 
   424     0017                     	;# 
   425     0018                     	;# 
   426     0019                     	;# 
   427     001A                     	;# 
   428     001B                     	;# 
   429     001B                     	;# 
   430     001C                     	;# 
   431     001D                     	;# 
   432     001E                     	;# 
   433     001F                     	;# 
   434     0081                     	;# 
   435     0085                     	;# 
   436     0086                     	;# 
   437     0087                     	;# 
   438     0088                     	;# 
   439     0089                     	;# 
   440     008C                     	;# 
   441     008D                     	;# 
   442     008E                     	;# 
   443     0091                     	;# 
   444     0092                     	;# 
   445     0093                     	;# 
   446     0094                     	;# 
   447     0098                     	;# 
   448     0099                     	;# 
   449     009C                     	;# 
   450     009D                     	;# 
   451     009E                     	;# 
   452     009F                     	;# 
   453     010C                     	;# 
   454     010D                     	;# 
   455     010E                     	;# 
   456     010F                     	;# 
   457     018C                     	;# 
   458     018D                     	;# 
   459     0000                     	;# 
   460     0001                     	;# 
   461     0002                     	;# 
   462     0003                     	;# 
   463     0004                     	;# 
   464     0005                     	;# 
   465     0006                     	;# 
   466     0007                     	;# 
   467     0008                     	;# 
   468     0009                     	;# 
   469     000A                     	;# 
   470     000B                     	;# 
   471     000C                     	;# 
   472     000D                     	;# 
   473     000E                     	;# 
   474     000E                     	;# 
   475     000F                     	;# 
   476     0010                     	;# 
   477     0011                     	;# 
   478     0012                     	;# 
   479     0013                     	;# 
   480     0014                     	;# 
   481     0015                     	;# 
   482     0015                     	;# 
   483     0016                     	;# 
   484     0017                     	;# 
   485     0018                     	;# 
   486     0019                     	;# 
   487     001A                     	;# 
   488     001B                     	;# 
   489     001B                     	;# 
   490     001C                     	;# 
   491     001D                     	;# 
   492     001E                     	;# 
   493     001F                     	;# 
   494     0081                     	;# 
   495     0085                     	;# 
   496     0086                     	;# 
   497     0087                     	;# 
   498     0088                     	;# 
   499     0089                     	;# 
   500     008C                     	;# 
   501     008D                     	;# 
   502     008E                     	;# 
   503     0091                     	;# 
   504     0092                     	;# 
   505     0093                     	;# 
   506     0094                     	;# 
   507     0098                     	;# 
   508     0099                     	;# 
   509     009C                     	;# 
   510     009D                     	;# 
   511     009E                     	;# 
   512     009F                     	;# 
   513     010C                     	;# 
   514     010D                     	;# 
   515     010E                     	;# 
   516     010F                     	;# 
   517     018C                     	;# 
   518     018D                     	;# 
   519     0000                     	;# 
   520     0001                     	;# 
   521     0002                     	;# 
   522     0003                     	;# 
   523     0004                     	;# 
   524     0005                     	;# 
   525     0006                     	;# 
   526     0007                     	;# 
   527     0008                     	;# 
   528     0009                     	;# 
   529     000A                     	;# 
   530     000B                     	;# 
   531     000C                     	;# 
   532     000D                     	;# 
   533     000E                     	;# 
   534     000E                     	;# 
   535     000F                     	;# 
   536     0010                     	;# 
   537     0011                     	;# 
   538     0012                     	;# 
   539     0013                     	;# 
   540     0014                     	;# 
   541     0015                     	;# 
   542     0015                     	;# 
   543     0016                     	;# 
   544     0017                     	;# 
   545     0018                     	;# 
   546     0019                     	;# 
   547     001A                     	;# 
   548     001B                     	;# 
   549     001B                     	;# 
   550     001C                     	;# 
   551     001D                     	;# 
   552     001E                     	;# 
   553     001F                     	;# 
   554     0081                     	;# 
   555     0085                     	;# 
   556     0086                     	;# 
   557     0087                     	;# 
   558     0088                     	;# 
   559     0089                     	;# 
   560     008C                     	;# 
   561     008D                     	;# 
   562     008E                     	;# 
   563     0091                     	;# 
   564     0092                     	;# 
   565     0093                     	;# 
   566     0094                     	;# 
   567     0098                     	;# 
   568     0099                     	;# 
   569     009C                     	;# 
   570     009D                     	;# 
   571     009E                     	;# 
   572     009F                     	;# 
   573     010C                     	;# 
   574     010D                     	;# 
   575     010E                     	;# 
   576     010F                     	;# 
   577     018C                     	;# 
   578     018D                     	;# 
   579     0000                     	;# 
   580     0001                     	;# 
   581     0002                     	;# 
   582     0003                     	;# 
   583     0004                     	;# 
   584     0005                     	;# 
   585     0006                     	;# 
   586     0007                     	;# 
   587     0008                     	;# 
   588     0009                     	;# 
   589     000A                     	;# 
   590     000B                     	;# 
   591     000C                     	;# 
   592     000D                     	;# 
   593     000E                     	;# 
   594     000E                     	;# 
   595     000F                     	;# 
   596     0010                     	;# 
   597     0011                     	;# 
   598     0012                     	;# 
   599     0013                     	;# 
   600     0014                     	;# 
   601     0015                     	;# 
   602     0015                     	;# 
   603     0016                     	;# 
   604     0017                     	;# 
   605     0018                     	;# 
   606     0019                     	;# 
   607     001A                     	;# 
   608     001B                     	;# 
   609     001B                     	;# 
   610     001C                     	;# 
   611     001D                     	;# 
   612     001E                     	;# 
   613     001F                     	;# 
   614     0081                     	;# 
   615     0085                     	;# 
   616     0086                     	;# 
   617     0087                     	;# 
   618     0088                     	;# 
   619     0089                     	;# 
   620     008C                     	;# 
   621     008D                     	;# 
   622     008E                     	;# 
   623     0091                     	;# 
   624     0092                     	;# 
   625     0093                     	;# 
   626     0094                     	;# 
   627     0098                     	;# 
   628     0099                     	;# 
   629     009C                     	;# 
   630     009D                     	;# 
   631     009E                     	;# 
   632     009F                     	;# 
   633     010C                     	;# 
   634     010D                     	;# 
   635     010E                     	;# 
   636     010F                     	;# 
   637     018C                     	;# 
   638     018D                     	;# 
   639     0000                     	;# 
   640     0001                     	;# 
   641     0002                     	;# 
   642     0003                     	;# 
   643     0004                     	;# 
   644     0005                     	;# 
   645     0006                     	;# 
   646     0007                     	;# 
   647     0008                     	;# 
   648     0009                     	;# 
   649     000A                     	;# 
   650     000B                     	;# 
   651     000C                     	;# 
   652     000D                     	;# 
   653     000E                     	;# 
   654     000E                     	;# 
   655     000F                     	;# 
   656     0010                     	;# 
   657     0011                     	;# 
   658     0012                     	;# 
   659     0013                     	;# 
   660     0014                     	;# 
   661     0015                     	;# 
   662     0015                     	;# 
   663     0016                     	;# 
   664     0017                     	;# 
   665     0018                     	;# 
   666     0019                     	;# 
   667     001A                     	;# 
   668     001B                     	;# 
   669     001B                     	;# 
   670     001C                     	;# 
   671     001D                     	;# 
   672     001E                     	;# 
   673     001F                     	;# 
   674     0081                     	;# 
   675     0085                     	;# 
   676     0086                     	;# 
   677     0087                     	;# 
   678     0088                     	;# 
   679     0089                     	;# 
   680     008C                     	;# 
   681     008D                     	;# 
   682     008E                     	;# 
   683     0091                     	;# 
   684     0092                     	;# 
   685     0093                     	;# 
   686     0094                     	;# 
   687     0098                     	;# 
   688     0099                     	;# 
   689     009C                     	;# 
   690     009D                     	;# 
   691     009E                     	;# 
   692     009F                     	;# 
   693     010C                     	;# 
   694     010D                     	;# 
   695     010E                     	;# 
   696     010F                     	;# 
   697     018C                     	;# 
   698     018D                     	;# 
   699     0000                     	;# 
   700     0001                     	;# 
   701     0002                     	;# 
   702     0003                     	;# 
   703     0004                     	;# 
   704     0005                     	;# 
   705     0006                     	;# 
   706     0007                     	;# 
   707     0008                     	;# 
   708     0009                     	;# 
   709     000A                     	;# 
   710     000B                     	;# 
   711     000C                     	;# 
   712     000D                     	;# 
   713     000E                     	;# 
   714     000E                     	;# 
   715     000F                     	;# 
   716     0010                     	;# 
   717     0011                     	;# 
   718     0012                     	;# 
   719     0013                     	;# 
   720     0014                     	;# 
   721     0015                     	;# 
   722     0015                     	;# 
   723     0016                     	;# 
   724     0017                     	;# 
   725     0018                     	;# 
   726     0019                     	;# 
   727     001A                     	;# 
   728     001B                     	;# 
   729     001B                     	;# 
   730     001C                     	;# 
   731     001D                     	;# 
   732     001E                     	;# 
   733     001F                     	;# 
   734     0081                     	;# 
   735     0085                     	;# 
   736     0086                     	;# 
   737     0087                     	;# 
   738     0088                     	;# 
   739     0089                     	;# 
   740     008C                     	;# 
   741     008D                     	;# 
   742     008E                     	;# 
   743     0091                     	;# 
   744     0092                     	;# 
   745     0093                     	;# 
   746     0094                     	;# 
   747     0098                     	;# 
   748     0099                     	;# 
   749     009C                     	;# 
   750     009D                     	;# 
   751     009E                     	;# 
   752     009F                     	;# 
   753     010C                     	;# 
   754     010D                     	;# 
   755     010E                     	;# 
   756     010F                     	;# 
   757     018C                     	;# 
   758     018D                     	;# 
   759     0000                     	;# 
   760     0001                     	;# 
   761     0002                     	;# 
   762     0003                     	;# 
   763     0004                     	;# 
   764     0005                     	;# 
   765     0006                     	;# 
   766     0007                     	;# 
   767     0008                     	;# 
   768     0009                     	;# 
   769     000A                     	;# 
   770     000B                     	;# 
   771     000C                     	;# 
   772     000D                     	;# 
   773     000E                     	;# 
   774     000E                     	;# 
   775     000F                     	;# 
   776     0010                     	;# 
   777     0011                     	;# 
   778     0012                     	;# 
   779     0013                     	;# 
   780     0014                     	;# 
   781     0015                     	;# 
   782     0015                     	;# 
   783     0016                     	;# 
   784     0017                     	;# 
   785     0018                     	;# 
   786     0019                     	;# 
   787     001A                     	;# 
   788     001B                     	;# 
   789     001B                     	;# 
   790     001C                     	;# 
   791     001D                     	;# 
   792     001E                     	;# 
   793     001F                     	;# 
   794     0081                     	;# 
   795     0085                     	;# 
   796     0086                     	;# 
   797     0087                     	;# 
   798     0088                     	;# 
   799     0089                     	;# 
   800     008C                     	;# 
   801     008D                     	;# 
   802     008E                     	;# 
   803     0091                     	;# 
   804     0092                     	;# 
   805     0093                     	;# 
   806     0094                     	;# 
   807     0098                     	;# 
   808     0099                     	;# 
   809     009C                     	;# 
   810     009D                     	;# 
   811     009E                     	;# 
   812     009F                     	;# 
   813     010C                     	;# 
   814     010D                     	;# 
   815     010E                     	;# 
   816     010F                     	;# 
   817     018C                     	;# 
   818     018D                     	;# 
   819     0000                     	;# 
   820     0001                     	;# 
   821     0002                     	;# 
   822     0003                     	;# 
   823     0004                     	;# 
   824     0005                     	;# 
   825     0006                     	;# 
   826     0007                     	;# 
   827     0008                     	;# 
   828     0009                     	;# 
   829     000A                     	;# 
   830     000B                     	;# 
   831     000C                     	;# 
   832     000D                     	;# 
   833     000E                     	;# 
   834     000E                     	;# 
   835     000F                     	;# 
   836     0010                     	;# 
   837     0011                     	;# 
   838     0012                     	;# 
   839     0013                     	;# 
   840     0014                     	;# 
   841     0015                     	;# 
   842     0015                     	;# 
   843     0016                     	;# 
   844     0017                     	;# 
   845     0018                     	;# 
   846     0019                     	;# 
   847     001A                     	;# 
   848     001B                     	;# 
   849     001B                     	;# 
   850     001C                     	;# 
   851     001D                     	;# 
   852     001E                     	;# 
   853     001F                     	;# 
   854     0081                     	;# 
   855     0085                     	;# 
   856     0086                     	;# 
   857     0087                     	;# 
   858     0088                     	;# 
   859     0089                     	;# 
   860     008C                     	;# 
   861     008D                     	;# 
   862     008E                     	;# 
   863     0091                     	;# 
   864     0092                     	;# 
   865     0093                     	;# 
   866     0094                     	;# 
   867     0098                     	;# 
   868     0099                     	;# 
   869     009C                     	;# 
   870     009D                     	;# 
   871     009E                     	;# 
   872     009F                     	;# 
   873     010C                     	;# 
   874     010D                     	;# 
   875     010E                     	;# 
   876     010F                     	;# 
   877     018C                     	;# 
   878     018D                     	;# 
   879                           
   880                           	psect	idataBANK0
   881     0003                     __pidataBANK0:
   882                           
   883                           ;initializer for _buzzer
   884     0003  343B               	retlw	59
   885                           
   886                           	psect	idataBANK1
   887     1695                     __pidataBANK1:
   888                           
   889                           ;initializer for _port_registers
   890     1695  3405               	retlw	5
   891     1696  3400               	retlw	0
   892     1697  3406               	retlw	6
   893     1698  3400               	retlw	0
   894     1699  3407               	retlw	7
   895     169A  3400               	retlw	0
   896     169B  3408               	retlw	8
   897     169C  3400               	retlw	0
   898     169D  3409               	retlw	9
   899     169E  3400               	retlw	0
   900                           
   901                           ;initializer for _tris_registers
   902     169F  3485               	retlw	133
   903     16A0  3400               	retlw	0
   904     16A1  3486               	retlw	134
   905     16A2  3400               	retlw	0
   906     16A3  3487               	retlw	135
   907     16A4  3400               	retlw	0
   908     16A5  3488               	retlw	136
   909     16A6  3400               	retlw	0
   910     16A7  3489               	retlw	137
   911     16A8  3400               	retlw	0
   912                           
   913                           ;initializer for _pass
   914     16A9  3435               	retlw	53
   915     16AA  3434               	retlw	52
   916     16AB  3438               	retlw	56
   917     16AC  3439               	retlw	57
   918                           
   919                           ;initializer for _keypad
   920     16AD  3401               	retlw	1
   921     16AE  3409               	retlw	9
   922     16AF  3411               	retlw	17
   923     16B0  3419               	retlw	25
   924     16B1  34A1               	retlw	161
   925     16B2  34A9               	retlw	169
   926     16B3  34B1               	retlw	177
   927                           
   928                           ;initializer for _lcd
   929     16B4  3402               	retlw	2
   930     16B5  340A               	retlw	10
   931     16B6  3412               	retlw	18
   932     16B7  341A               	retlw	26
   933     16B8  3422               	retlw	34
   934     16B9  342A               	retlw	42
   935                           
   936                           ;initializer for _temp
   937     16BA  342E               	retlw	46
   938     16BB  342E               	retlw	46
   939     16BC  342E               	retlw	46
   940     16BD  342E               	retlw	46
   941                           
   942                           ;initializer for _adc
   943     16BE  3400               	retlw	0
   944     16BF  3404               	retlw	4
   945     16C0  3400               	retlw	0
   946                           
   947                           ;initializer for _motor2
   948     16C1  3413               	retlw	19
   949     16C2  341B               	retlw	27
   950                           
   951                           ;initializer for _motor1
   952     16C3  3403               	retlw	3
   953     16C4  340B               	retlw	11
   954                           
   955                           	psect	strings
   956     0800                     __pstrings:
   957     0800                     stringtab:
   958     0800                     __stringtab:
   959                           
   960                           ;	String table - string pointers are 1 byte each
   961     0800  1BFF               	btfsc	btemp+1,7
   962     0801  280A               	ljmp	stringcode
   963     0802  1383               	bcf	3,7
   964     0803  187F               	btfsc	btemp+1,0
   965     0804  1783               	bsf	3,7
   966     0805  0800               	movf	0,w
   967     0806  0A84               	incf	4,f
   968     0807  1903               	skipnz
   969     0808  0AFF               	incf	btemp+1,f
   970     0809  0008               	return
   971     080A                     stringcode:
   972     080A                     stringdir:
   973     080A  3008               	movlw	high stringdir
   974     080B  008A               	movwf	10
   975     080C  0804               	movf	4,w
   976     080D  0A84               	incf	4,f
   977     080E  0782               	addwf	2,f
   978     080F                     __stringbase:
   979     080F  3400               	retlw	0
   980     0810                     __end_of__stringtab:
   981     0810                     _btn_values:
   982     0810  3431               	retlw	49
   983     0811  3432               	retlw	50
   984     0812  3433               	retlw	51
   985     0813  3434               	retlw	52
   986     0814  3435               	retlw	53
   987     0815  3436               	retlw	54
   988     0816  3437               	retlw	55
   989     0817  3438               	retlw	56
   990     0818  3439               	retlw	57
   991     0819  342A               	retlw	42
   992     081A  3430               	retlw	48
   993     081B  3423               	retlw	35
   994     081C                     __end_of_btn_values:
   995     000B                     _INTCONbits	set	11
   996     001E                     _ADRESH	set	30
   997     001F                     _ADCON0bits	set	31
   998     0009                     _PORTE	set	9
   999     0008                     _PORTD	set	8
  1000     0007                     _PORTC	set	7
  1001     0006                     _PORTB	set	6
  1002     0005                     _PORTA	set	5
  1003     009E                     _ADRESL	set	158
  1004     009F                     _ADCON1bits	set	159
  1005     0089                     _TRISE	set	137
  1006     0088                     _TRISD	set	136
  1007     0087                     _TRISC	set	135
  1008     0086                     _TRISB	set	134
  1009     0085                     _TRISA	set	133
  1010     010C                     _EEDATA	set	268
  1011     010D                     _EEADR	set	269
  1012     018D                     _EECON2	set	397
  1013     018C                     _EECON1bits	set	396
  1014     081C                     STR_5:
  1015     081C  3443               	retlw	67	;'C'
  1016     081D  346F               	retlw	111	;'o'
  1017     081E  3472               	retlw	114	;'r'
  1018     081F  3472               	retlw	114	;'r'
  1019     0820  3465               	retlw	101	;'e'
  1020     0821  3463               	retlw	99	;'c'
  1021     0822  3474               	retlw	116	;'t'
  1022     0823  3420               	retlw	32	;' '
  1023     0824  3450               	retlw	80	;'P'
  1024     0825  3461               	retlw	97	;'a'
  1025     0826  3473               	retlw	115	;'s'
  1026     0827  3473               	retlw	115	;'s'
  1027     0828  3477               	retlw	119	;'w'
  1028     0829  346F               	retlw	111	;'o'
  1029     082A  3472               	retlw	114	;'r'
  1030     082B  3464               	retlw	100	;'d'
  1031     082C  3400               	retlw	0
  1032     082D                     STR_7:
  1033     082D  344D               	retlw	77	;'M'
  1034     082E  3461               	retlw	97	;'a'
  1035     082F  3478               	retlw	120	;'x'
  1036     0830  3420               	retlw	32	;' '
  1037     0831  3454               	retlw	84	;'T'
  1038     0832  3465               	retlw	101	;'e'
  1039     0833  346D               	retlw	109	;'m'
  1040     0834  3470               	retlw	112	;'p'
  1041     0835  3420               	retlw	32	;' '
  1042     0836  3469               	retlw	105	;'i'
  1043     0837  3473               	retlw	115	;'s'
  1044     0838  3420               	retlw	32	;' '
  1045     0839  343A               	retlw	58	;':'
  1046     083A  3420               	retlw	32	;' '
  1047     083B  3400               	retlw	0
  1048     083C                     STR_4:
  1049     083C  3457               	retlw	87	;'W'
  1050     083D  3472               	retlw	114	;'r'
  1051     083E  346F               	retlw	111	;'o'
  1052     083F  346E               	retlw	110	;'n'
  1053     0840  3467               	retlw	103	;'g'
  1054     0841  3420               	retlw	32	;' '
  1055     0842  3450               	retlw	80	;'P'
  1056     0843  3461               	retlw	97	;'a'
  1057     0844  3473               	retlw	115	;'s'
  1058     0845  3473               	retlw	115	;'s'
  1059     0846  3477               	retlw	119	;'w'
  1060     0847  346F               	retlw	111	;'o'
  1061     0848  3472               	retlw	114	;'r'
  1062     0849  3464               	retlw	100	;'d'
  1063     084A  3400               	retlw	0
  1064     084B                     STR_8:
  1065     084B  3445               	retlw	69	;'E'
  1066     084C  346E               	retlw	110	;'n'
  1067     084D  3474               	retlw	116	;'t'
  1068     084E  3465               	retlw	101	;'e'
  1069     084F  3472               	retlw	114	;'r'
  1070     0850  3420               	retlw	32	;' '
  1071     0851  3470               	retlw	112	;'p'
  1072     0852  3461               	retlw	97	;'a'
  1073     0853  3473               	retlw	115	;'s'
  1074     0854  3473               	retlw	115	;'s'
  1075     0855  3477               	retlw	119	;'w'
  1076     0856  346F               	retlw	111	;'o'
  1077     0857  3472               	retlw	114	;'r'
  1078     0858  3464               	retlw	100	;'d'
  1079     0859  3400               	retlw	0
  1080     085A                     STR_1:
  1081     085A  3425               	retlw	37	;'%'
  1082     085B  3469               	retlw	105	;'i'
  1083     085C  3400               	retlw	0
  1084     0831                     
  1085                           	psect	cinit
  1086     07CE                     start_initialization:	
  1087                           ; #config settings
  1088                           
  1089     07CE                     __initialization:
  1090                           
  1091                           ; Initialize objects allocated to BANK1
  1092     07CE  1383               	bcf	3,7	;select IRP bank0
  1093     07CF  30D0               	movlw	low (__pdataBANK1+48)
  1094     07D0  00FD               	movwf	btemp+-1
  1095     07D1  3016               	movlw	high __pidataBANK1
  1096     07D2  00FE               	movwf	btemp
  1097     07D3  3095               	movlw	low __pidataBANK1
  1098     07D4  00FF               	movwf	btemp+1
  1099     07D5  30A0               	movlw	low __pdataBANK1
  1100     07D6  0084               	movwf	4
  1101     07D7  160A  118A  2489  120A  118A  	fcall	init_ram0
  1102                           
  1103                           ; Initialize objects allocated to BANK0
  1104     07DC  120A  118A  2003  120A  118A  	fcall	__pidataBANK0	;fetch initializer
  1105     07E1  00EF               	movwf	__pdataBANK0& (0+127)
  1106                           
  1107                           ; Clear objects allocated to BANK3
  1108     07E2  1783               	bsf	3,7	;select IRP bank2
  1109     07E3  3090               	movlw	low __pbssBANK3
  1110     07E4  0084               	movwf	4
  1111     07E5  30C1               	movlw	low (__pbssBANK3+49)
  1112     07E6  160A  118A  244B  120A  118A  	fcall	clear_ram0
  1113                           
  1114                           ; Clear objects allocated to BANK1
  1115     07EB  1383               	bcf	3,7	;select IRP bank0
  1116     07EC  30D0               	movlw	low __pbssBANK1
  1117     07ED  0084               	movwf	4
  1118     07EE  30EB               	movlw	low (__pbssBANK1+27)
  1119     07EF  160A  118A  244B  120A  118A  	fcall	clear_ram0
  1120                           
  1121                           ; Clear objects allocated to BANK0
  1122     07F4  3063               	movlw	low __pbssBANK0
  1123     07F5  0084               	movwf	4
  1124     07F6  306F               	movlw	low (__pbssBANK0+12)
  1125     07F7  160A  118A  244B  120A  118A  	fcall	clear_ram0
  1126     07FC                     end_of_initialization:	
  1127                           ;End of C runtime variable initialization code
  1128                           
  1129     07FC                     __end_of__initialization:
  1130     07FC  0183               	clrf	3
  1131     07FD  120A  118A  2A56   	ljmp	_main	;jump to C main() function
  1132                           
  1133                           	psect	bssBANK0
  1134     0063                     __pbssBANK0:
  1135     0063                     _Temp:
  1136     0063                     	ds	2
  1137     0065                     _flag:
  1138     0065                     	ds	1
  1139     0066                     _EXT_RB6_HIGH_HANDLER:
  1140     0066                     	ds	1
  1141     0067                     _EXT_RB5_LOW_HANDLER:
  1142     0067                     	ds	1
  1143     0068                     _EXT_RB5_HIGH_HANDLER:
  1144     0068                     	ds	1
  1145     0069                     _EXT_RB4_LOW_HANDLER:
  1146     0069                     	ds	1
  1147     006A                     _EXT_RB4_HIGH_HANDLER:
  1148     006A                     	ds	1
  1149     006B                     _EXT_INTX_HANDLER:
  1150     006B                     	ds	1
  1151     006C                     _Max_Temp:
  1152     006C                     	ds	2
  1153     006E                     _val:
  1154     006E                     	ds	1
  1155                           
  1156                           	psect	dataBANK0
  1157     006F                     __pdataBANK0:
  1158     006F                     _buzzer:
  1159     006F                     	ds	1
  1160                           
  1161                           	psect	bssBANK1
  1162     00D0                     __pbssBANK1:
  1163     00D0                     Convert_uint8_to_string@F1643:
  1164     00D0                     	ds	4
  1165     00D4                     _width:
  1166     00D4                     	ds	2
  1167     00D6                     _prec:
  1168     00D6                     	ds	2
  1169     00D8                     _flags:
  1170     00D8                     	ds	1
  1171     00D9                     _counter:
  1172     00D9                     	ds	1
  1173     00DA                     _EXT_RB7_LOW_HANDLER:
  1174     00DA                     	ds	1
  1175     00DB                     _EXT_RB7_HIGH_HANDLER:
  1176     00DB                     	ds	1
  1177     00DC                     _EXT_RB6_LOW_HANDLER:
  1178     00DC                     	ds	1
  1179     00DD                     _lcd_show_max:
  1180     00DD                     	ds	6
  1181     00E3                     _lcd_show:
  1182     00E3                     	ds	6
  1183     00E9                     _adc_res:
  1184     00E9                     	ds	2
  1185                           
  1186                           	psect	dataBANK1
  1187     00A0                     __pdataBANK1:
  1188     00A0                     _port_registers:
  1189     00A0                     	ds	10
  1190     00AA                     _tris_registers:
  1191     00AA                     	ds	10
  1192     00B4                     _pass:
  1193     00B4                     	ds	4
  1194     00B8                     _keypad:
  1195     00B8                     	ds	7
  1196     00BF                     _lcd:
  1197     00BF                     	ds	6
  1198     00C5                     _temp:
  1199     00C5                     	ds	4
  1200     00C9                     _adc:
  1201     00C9                     	ds	3
  1202     00CC                     _motor2:
  1203     00CC                     	ds	2
  1204     00CE                     _motor1:
  1205     00CE                     	ds	2
  1206                           
  1207                           	psect	bssBANK3
  1208     0190                     __pbssBANK3:
  1209     0190                     _dbuf:
  1210     0190                     	ds	32
  1211     01B0                     Convert_uint32_to_string@F1655:
  1212     01B0                     	ds	11
  1213     01BB                     Convert_uint16_to_string@F1649:
  1214     01BB                     	ds	6
  1215                           
  1216                           	psect	inittext
  1217     1485                     init_fetch0:	
  1218                           ;	Called with low address in FSR and high address in W
  1219                           
  1220     1485  087E               	movf	btemp,w
  1221     1486  008A               	movwf	10
  1222     1487  087F               	movf	btemp+1,w
  1223     1488  0082               	movwf	2
  1224     1489                     init_ram0:	
  1225                           ;Called with:
  1226                           ;	high address of idata address in btemp 
  1227                           ;	low address of idata address in btemp+1 
  1228                           ;	low address of data in FSR
  1229                           ;	high address + 1 of data in btemp-1
  1230                           
  1231     1489  160A  118A  2485  160A  118A  	fcall	init_fetch0
  1232     148E  0080               	movwf	0
  1233     148F  0A84               	incf	4,f
  1234     1490  0804               	movf	4,w
  1235     1491  067D               	xorwf	btemp+-1,w
  1236     1492  1903               	btfsc	3,2
  1237     1493  3400               	retlw	0
  1238     1494  0AFF               	incf	btemp+1,f
  1239     1495  1903               	btfsc	3,2
  1240     1496  0AFE               	incf	btemp,f
  1241     1497  2C89               	goto	init_ram0
  1242                           
  1243                           	psect	clrtext
  1244     144B                     clear_ram0:	
  1245                           ;	Called with FSR containing the base address, and
  1246                           ;	W with the last address+1
  1247                           
  1248     144B  0064               	clrwdt	;clear the watchdog before getting into this loop
  1249     144C                     clrloop0:
  1250     144C  0180               	clrf	0	;clear RAM location pointed to by FSR
  1251     144D  0A84               	incf	4,f	;increment pointer
  1252     144E  0604               	xorwf	4,w	;XOR with final address
  1253     144F  1903               	btfsc	3,2	;have we reached the end yet?
  1254     1450  3400               	retlw	0	;all done for this memory range, return
  1255     1451  0604               	xorwf	4,w	;XOR again to restore value
  1256     1452  2C4C               	goto	clrloop0	;do the next byte
  1257                           
  1258                           	psect	cstackCOMMON
  1259     0070                     __pcstackCOMMON:
  1260     0070                     ?_gpio_pin_initialize:
  1261     0070                     ?_gpio_pin_write_logic:	
  1262                           ; 1 bytes @ 0x0
  1263                           
  1264     0070                     ?_gpio_pin_read_logic:	
  1265                           ; 1 bytes @ 0x0
  1266                           
  1267     0070                     ?_send_enable_signal:	
  1268                           ; 1 bytes @ 0x0
  1269                           
  1270     0070                     ?_memset:	
  1271                           ; 1 bytes @ 0x0
  1272                           
  1273     0070                     ?_Result_Format:	
  1274                           ; 1 bytes @ 0x0
  1275                           
  1276     0070                     ??_Result_Format:	
  1277                           ; 1 bytes @ 0x0
  1278                           
  1279     0070                     ?_apllication_initilaize:	
  1280                           ; 1 bytes @ 0x0
  1281                           
  1282     0070                     ?_putch:	
  1283                           ; 1 bytes @ 0x0
  1284                           
  1285     0070                     ??_putch:	
  1286                           ; 1 bytes @ 0x0
  1287                           
  1288     0070                     ?_keypad_initialize:	
  1289                           ; 1 bytes @ 0x0
  1290                           
  1291     0070                     ?_lcd_4bits_initialize:	
  1292                           ; 1 bytes @ 0x0
  1293                           
  1294     0070                     ?_motor_initialize:	
  1295                           ; 1 bytes @ 0x0
  1296                           
  1297     0070                     ?_motor_turn_right:	
  1298                           ; 1 bytes @ 0x0
  1299                           
  1300     0070                     ?_motor_turn_left:	
  1301                           ; 1 bytes @ 0x0
  1302                           
  1303     0070                     ?_motor_turn_off:	
  1304                           ; 1 bytes @ 0x0
  1305                           
  1306     0070                     ?_ecu_initialzie:	
  1307                           ; 1 bytes @ 0x0
  1308                           
  1309     0070                     ?_ADC_INIT:	
  1310                           ; 1 bytes @ 0x0
  1311                           
  1312     0070                     ?_ADC_Start_Conversion:	
  1313                           ; 1 bytes @ 0x0
  1314                           
  1315     0070                     ??_ADC_Start_Conversion:	
  1316                           ; 1 bytes @ 0x0
  1317                           
  1318     0070                     ?_ADC_Get_Conversion_Result:	
  1319                           ; 1 bytes @ 0x0
  1320                           
  1321     0070                     ?_WRITE_DATA_EEPROM:	
  1322                           ; 1 bytes @ 0x0
  1323                           
  1324     0070                     ?_READ_DATA_EEPROM:	
  1325                           ; 1 bytes @ 0x0
  1326                           
  1327     0070                     ?_gpio_pin_direction_initialize:	
  1328                           ; 1 bytes @ 0x0
  1329                           
  1330     0070                     ??_gpio_pin_direction_initialize:	
  1331                           ; 1 bytes @ 0x0
  1332                           
  1333     0070                     ?_mcal_initialize:	
  1334                           ; 1 bytes @ 0x0
  1335                           
  1336     0070                     ?___bmul:	
  1337                           ; 1 bytes @ 0x0
  1338                           
  1339     0070                     ?__Umul8_16:	
  1340                           ; 1 bytes @ 0x0
  1341                           
  1342     0070                     ?_fputc:	
  1343                           ; 2 bytes @ 0x0
  1344                           
  1345     0070                     ?_main:	
  1346                           ; 2 bytes @ 0x0
  1347                           
  1348     0070                     ?___awdiv:	
  1349                           ; 2 bytes @ 0x0
  1350                           
  1351     0070                     ?___awmod:	
  1352                           ; 2 bytes @ 0x0
  1353                           
  1354     0070                     ?___xxtofl:	
  1355                           ; 2 bytes @ 0x0
  1356                           
  1357     0070                     ADC_Start_Conversion@adc:	
  1358                           ; 4 bytes @ 0x0
  1359                           
  1360     0070                     gpio_pin_write_logic@logic:	
  1361                           ; 1 bytes @ 0x0
  1362                           
  1363     0070                     gpio_pin_read_logic@logic:	
  1364                           ; 1 bytes @ 0x0
  1365                           
  1366     0070                     ___bmul@multiplicand:	
  1367                           ; 1 bytes @ 0x0
  1368                           
  1369     0070                     __Umul8_16@multiplicand:	
  1370                           ; 1 bytes @ 0x0
  1371                           
  1372     0070                     putch@c:	
  1373                           ; 1 bytes @ 0x0
  1374                           
  1375     0070                     ADC_Get_Conversion_Result@result:	
  1376                           ; 1 bytes @ 0x0
  1377                           
  1378     0070                     WRITE_DATA_EEPROM@add:	
  1379                           ; 2 bytes @ 0x0
  1380                           
  1381     0070                     READ_DATA_EEPROM@add:	
  1382                           ; 2 bytes @ 0x0
  1383                           
  1384     0070                     ___awdiv@divisor:	
  1385                           ; 2 bytes @ 0x0
  1386                           
  1387     0070                     ___awmod@divisor:	
  1388                           ; 2 bytes @ 0x0
  1389                           
  1390     0070                     memset@c:	
  1391                           ; 2 bytes @ 0x0
  1392                           
  1393     0070                     fputc@c:	
  1394                           ; 2 bytes @ 0x0
  1395                           
  1396     0070                     ___xxtofl@val:	
  1397                           ; 2 bytes @ 0x0
  1398                           
  1399                           
  1400                           ; 4 bytes @ 0x0
  1401     0070                     	ds	1
  1402     0071                     ??_gpio_pin_write_logic:
  1403     0071                     ??_gpio_pin_read_logic:	
  1404                           ; 1 bytes @ 0x1
  1405                           
  1406     0071                     ??___bmul:	
  1407                           ; 1 bytes @ 0x1
  1408                           
  1409     0071                     ___bmul@product:	
  1410                           ; 1 bytes @ 0x1
  1411                           
  1412                           
  1413                           ; 1 bytes @ 0x1
  1414     0071                     	ds	1
  1415     0072                     ??__Umul8_16:
  1416     0072                     ??_ADC_Get_Conversion_Result:	
  1417                           ; 1 bytes @ 0x2
  1418                           
  1419     0072                     Result_Format@adc:	
  1420                           ; 1 bytes @ 0x2
  1421                           
  1422     0072                     WRITE_DATA_EEPROM@data:	
  1423                           ; 1 bytes @ 0x2
  1424                           
  1425     0072                     READ_DATA_EEPROM@data:	
  1426                           ; 1 bytes @ 0x2
  1427                           
  1428     0072                     ___bmul@multiplier:	
  1429                           ; 1 bytes @ 0x2
  1430                           
  1431     0072                     fputc@fp:	
  1432                           ; 1 bytes @ 0x2
  1433                           
  1434     0072                     ___awdiv@dividend:	
  1435                           ; 1 bytes @ 0x2
  1436                           
  1437     0072                     ___awmod@dividend:	
  1438                           ; 2 bytes @ 0x2
  1439                           
  1440     0072                     memset@n:	
  1441                           ; 2 bytes @ 0x2
  1442                           
  1443                           
  1444                           ; 2 bytes @ 0x2
  1445     0072                     	ds	1
  1446     0073                     ??_fputc:
  1447     0073                     ??_ADC_INIT:	
  1448                           ; 1 bytes @ 0x3
  1449                           
  1450     0073                     ??_WRITE_DATA_EEPROM:	
  1451                           ; 1 bytes @ 0x3
  1452                           
  1453     0073                     ??_READ_DATA_EEPROM:	
  1454                           ; 1 bytes @ 0x3
  1455                           
  1456     0073                     WRITE_DATA_EEPROM@status:	
  1457                           ; 1 bytes @ 0x3
  1458                           
  1459                           
  1460                           ; 1 bytes @ 0x3
  1461     0073                     	ds	1
  1462     0074                     ??_memset:
  1463     0074                     ??___awdiv:	
  1464                           ; 1 bytes @ 0x4
  1465                           
  1466     0074                     ??___awmod:	
  1467                           ; 1 bytes @ 0x4
  1468                           
  1469     0074                     ??___xxtofl:	
  1470                           ; 1 bytes @ 0x4
  1471                           
  1472     0074                     ADC_INIT@ret:	
  1473                           ; 1 bytes @ 0x4
  1474                           
  1475     0074                     ADC_Get_Conversion_Result@adc:	
  1476                           ; 1 bytes @ 0x4
  1477                           
  1478     0074                     ___awdiv@counter:	
  1479                           ; 1 bytes @ 0x4
  1480                           
  1481     0074                     ___awmod@counter:	
  1482                           ; 1 bytes @ 0x4
  1483                           
  1484     0074                     memset@p:	
  1485                           ; 1 bytes @ 0x4
  1486                           
  1487     0074                     __Umul8_16@product:	
  1488                           ; 1 bytes @ 0x4
  1489                           
  1490                           
  1491                           ; 2 bytes @ 0x4
  1492     0074                     	ds	1
  1493     0075                     ?_ADC_Start_Conversion_Blocking:
  1494     0075                     ADC_INIT@adc:	
  1495                           ; 1 bytes @ 0x5
  1496                           
  1497     0075                     ADC_Start_Conversion_Blocking@channel:	
  1498                           ; 1 bytes @ 0x5
  1499                           
  1500     0075                     gpio_pin_direction_initialize@pin:	
  1501                           ; 1 bytes @ 0x5
  1502                           
  1503     0075                     ___awdiv@sign:	
  1504                           ; 1 bytes @ 0x5
  1505                           
  1506     0075                     ___awmod@sign:	
  1507                           ; 1 bytes @ 0x5
  1508                           
  1509     0075                     memset@dest:	
  1510                           ; 1 bytes @ 0x5
  1511                           
  1512                           
  1513                           ; 1 bytes @ 0x5
  1514     0075                     	ds	1
  1515     0076                     ??_mcal_initialize:
  1516     0076                     ?_abs:	
  1517                           ; 1 bytes @ 0x6
  1518                           
  1519     0076                     gpio_pin_write_logic@ret:	
  1520                           ; 2 bytes @ 0x6
  1521                           
  1522     0076                     gpio_pin_read_logic@ret:	
  1523                           ; 1 bytes @ 0x6
  1524                           
  1525     0076                     ADC_Start_Conversion_Blocking@result:	
  1526                           ; 1 bytes @ 0x6
  1527                           
  1528     0076                     ___awdiv@quotient:	
  1529                           ; 2 bytes @ 0x6
  1530                           
  1531     0076                     __Umul8_16@word_mpld:	
  1532                           ; 2 bytes @ 0x6
  1533                           
  1534     0076                     abs@a:	
  1535                           ; 2 bytes @ 0x6
  1536                           
  1537                           
  1538                           ; 2 bytes @ 0x6
  1539     0076                     	ds	1
  1540     0077                     gpio_pin_write_logic@pin:
  1541     0077                     gpio_pin_read_logic@pin:	
  1542                           ; 1 bytes @ 0x7
  1543                           
  1544                           
  1545                           ; 1 bytes @ 0x7
  1546     0077                     	ds	1
  1547     0078                     ??_gpio_pin_initialize:
  1548     0078                     ?_send_4bits:	
  1549                           ; 1 bytes @ 0x8
  1550                           
  1551     0078                     ??_send_enable_signal:	
  1552                           ; 1 bytes @ 0x8
  1553                           
  1554     0078                     ??_abs:	
  1555                           ; 1 bytes @ 0x8
  1556                           
  1557     0078                     ?_keypad_read_value:	
  1558                           ; 1 bytes @ 0x8
  1559                           
  1560     0078                     ??_motor_turn_right:	
  1561                           ; 1 bytes @ 0x8
  1562                           
  1563     0078                     ??_motor_turn_left:	
  1564                           ; 1 bytes @ 0x8
  1565                           
  1566     0078                     ??_motor_turn_off:	
  1567                           ; 1 bytes @ 0x8
  1568                           
  1569     0078                     ??_ADC_Start_Conversion_Blocking:	
  1570                           ; 1 bytes @ 0x8
  1571                           
  1572     0078                     keypad_read_value@value:	
  1573                           ; 1 bytes @ 0x8
  1574                           
  1575     0078                     send_4bits@command:	
  1576                           ; 1 bytes @ 0x8
  1577                           
  1578     0078                     motor_turn_right@ret:	
  1579                           ; 1 bytes @ 0x8
  1580                           
  1581     0078                     motor_turn_left@ret:	
  1582                           ; 1 bytes @ 0x8
  1583                           
  1584     0078                     motor_turn_off@ret:	
  1585                           ; 1 bytes @ 0x8
  1586                           
  1587     0078                     __Umul8_16@multiplier:	
  1588                           ; 1 bytes @ 0x8
  1589                           
  1590     0078                     ___xxtofl@sign:	
  1591                           ; 1 bytes @ 0x8
  1592                           
  1593                           
  1594                           ; 1 bytes @ 0x8
  1595     0078                     	ds	1
  1596     0079                     ??_send_4bits:
  1597     0079                     ??_keypad_read_value:	
  1598                           ; 1 bytes @ 0x9
  1599                           
  1600     0079                     send_enable_signal@ret:	
  1601                           ; 1 bytes @ 0x9
  1602                           
  1603     0079                     motor_turn_right@motor:	
  1604                           ; 1 bytes @ 0x9
  1605                           
  1606     0079                     motor_turn_left@motor:	
  1607                           ; 1 bytes @ 0x9
  1608                           
  1609     0079                     motor_turn_off@motor:	
  1610                           ; 1 bytes @ 0x9
  1611                           
  1612     0079                     ADC_Start_Conversion_Blocking@adc:	
  1613                           ; 1 bytes @ 0x9
  1614                           
  1615     0079                     ___xxtofl@exp:	
  1616                           ; 1 bytes @ 0x9
  1617                           
  1618                           
  1619                           ; 1 bytes @ 0x9
  1620     0079                     	ds	1
  1621     007A                     ?_vfpfcnvrt:
  1622     007A                     send_4bits@ret:	
  1623                           ; 1 bytes @ 0xA
  1624                           
  1625     007A                     send_enable_signal@lcd:	
  1626                           ; 1 bytes @ 0xA
  1627                           
  1628     007A                     gpio_pin_initialize@ret:	
  1629                           ; 1 bytes @ 0xA
  1630                           
  1631     007A                     vfpfcnvrt@fmt:	
  1632                           ; 1 bytes @ 0xA
  1633                           
  1634     007A                     ___xxtofl@arg:	
  1635                           ; 1 bytes @ 0xA
  1636                           
  1637                           
  1638                           ; 4 bytes @ 0xA
  1639     007A                     	ds	1
  1640     007B                     send_4bits@lcd:
  1641     007B                     gpio_pin_initialize@pin:	
  1642                           ; 1 bytes @ 0xB
  1643                           
  1644     007B                     vfpfcnvrt@ap:	
  1645                           ; 1 bytes @ 0xB
  1646                           
  1647                           
  1648                           ; 1 bytes @ 0xB
  1649     007B                     	ds	1
  1650     007C                     ?_lcd_4bits_send_command:
  1651     007C                     ??_keypad_initialize:	
  1652                           ; 1 bytes @ 0xC
  1653                           
  1654     007C                     ?_lcd_4bits_send_char:	
  1655                           ; 1 bytes @ 0xC
  1656                           
  1657     007C                     ??_motor_initialize:	
  1658                           ; 1 bytes @ 0xC
  1659                           
  1660     007C                     ??_vfpfcnvrt:	
  1661                           ; 1 bytes @ 0xC
  1662                           
  1663     007C                     lcd_4bits_send_command@command:	
  1664                           ; 1 bytes @ 0xC
  1665                           
  1666     007C                     lcd_4bits_send_char@data:	
  1667                           ; 1 bytes @ 0xC
  1668                           
  1669     007C                     motor_initialize@ret:	
  1670                           ; 1 bytes @ 0xC
  1671                           
  1672                           
  1673                           ; 1 bytes @ 0xC
  1674     007C                     	ds	1
  1675     007D                     ??_lcd_4bits_send_command:
  1676     007D                     ??_lcd_4bits_send_char:	
  1677                           ; 1 bytes @ 0xD
  1678                           
  1679     007D                     motor_initialize@motor:	
  1680                           ; 1 bytes @ 0xD
  1681                           
  1682                           
  1683                           ; 1 bytes @ 0xD
  1684     007D                     	ds	1
  1685     007E                     ??_set_cursor:
  1686     007E                     ??_apllication_initilaize:	
  1687                           ; 1 bytes @ 0xE
  1688                           
  1689     007E                     ??_vfprintf:	
  1690                           ; 1 bytes @ 0xE
  1691                           
  1692     007E                     ??_lcd_4bits_send_string:	
  1693                           ; 1 bytes @ 0xE
  1694                           
  1695     007E                     ??_lcd_4bits_send_string_pos:	
  1696                           ; 1 bytes @ 0xE
  1697                           
  1698     007E                     ??_ecu_initialzie:	
  1699                           ; 1 bytes @ 0xE
  1700                           
  1701                           
  1702                           	psect	cstackBANK0
  1703     0020                     __pcstackBANK0:	
  1704                           ; 1 bytes @ 0xE
  1705                           
  1706     0020                     ?___flmul:
  1707     0020                     keypad_initialize@keypad:	
  1708                           ; 4 bytes @ 0x0
  1709                           
  1710     0020                     keypad_read_value@val:	
  1711                           ; 1 bytes @ 0x0
  1712                           
  1713     0020                     lcd_4bits_send_command@ret:	
  1714                           ; 1 bytes @ 0x0
  1715                           
  1716     0020                     lcd_4bits_send_char@ret:	
  1717                           ; 1 bytes @ 0x0
  1718                           
  1719     0020                     vfpfcnvrt@done:	
  1720                           ; 1 bytes @ 0x0
  1721                           
  1722     0020                     ___flmul@b:	
  1723                           ; 1 bytes @ 0x0
  1724                           
  1725                           
  1726                           ; 4 bytes @ 0x0
  1727     0020                     	ds	1
  1728     0021                     keypad_initialize@l_rows:
  1729     0021                     keypad_read_value@counter:	
  1730                           ; 1 bytes @ 0x1
  1731                           
  1732     0021                     lcd_4bits_send_command@lcd:	
  1733                           ; 1 bytes @ 0x1
  1734                           
  1735     0021                     lcd_4bits_send_char@lcd:	
  1736                           ; 1 bytes @ 0x1
  1737                           
  1738     0021                     vfpfcnvrt@fp:	
  1739                           ; 1 bytes @ 0x1
  1740                           
  1741                           
  1742                           ; 1 bytes @ 0x1
  1743     0021                     	ds	1
  1744     0022                     ?_set_cursor:
  1745     0022                     ??_lcd_4bits_initialize:	
  1746                           ; 1 bytes @ 0x2
  1747                           
  1748     0022                     ?_lcd_4bits_send_string:	
  1749                           ; 1 bytes @ 0x2
  1750                           
  1751     0022                     keypad_initialize@l_coloumns:	
  1752                           ; 1 bytes @ 0x2
  1753                           
  1754     0022                     keypad_read_value@keypad:	
  1755                           ; 1 bytes @ 0x2
  1756                           
  1757     0022                     set_cursor@Row:	
  1758                           ; 1 bytes @ 0x2
  1759                           
  1760     0022                     vfpfcnvrt@cp:	
  1761                           ; 1 bytes @ 0x2
  1762                           
  1763     0022                     lcd_4bits_send_string@data:	
  1764                           ; 1 bytes @ 0x2
  1765                           
  1766                           
  1767                           ; 2 bytes @ 0x2
  1768     0022                     	ds	1
  1769     0023                     keypad_read_value@l_rows:
  1770     0023                     set_cursor@coloumn:	
  1771                           ; 1 bytes @ 0x3
  1772                           
  1773     0023                     vfpfcnvrt@convarg:	
  1774                           ; 1 bytes @ 0x3
  1775                           
  1776                           
  1777                           ; 4 bytes @ 0x3
  1778     0023                     	ds	1
  1779     0024                     keypad_read_value@l_coloumns:
  1780     0024                     lcd_4bits_send_string@ret:	
  1781                           ; 1 bytes @ 0x4
  1782                           
  1783     0024                     set_cursor@ret:	
  1784                           ; 1 bytes @ 0x4
  1785                           
  1786     0024                     ___flmul@a:	
  1787                           ; 1 bytes @ 0x4
  1788                           
  1789                           
  1790                           ; 4 bytes @ 0x4
  1791     0024                     	ds	1
  1792     0025                     lcd_4bits_initialize@counter:
  1793     0025                     lcd_4bits_send_string@lcd:	
  1794                           ; 1 bytes @ 0x5
  1795                           
  1796     0025                     set_cursor@lcd:	
  1797                           ; 1 bytes @ 0x5
  1798                           
  1799                           
  1800                           ; 1 bytes @ 0x5
  1801     0025                     	ds	1
  1802     0026                     ?_lcd_4bits_send_string_pos:
  1803     0026                     lcd_4bits_initialize@ret:	
  1804                           ; 1 bytes @ 0x6
  1805                           
  1806     0026                     lcd_4bits_send_string_pos@Row:	
  1807                           ; 1 bytes @ 0x6
  1808                           
  1809                           
  1810                           ; 1 bytes @ 0x6
  1811     0026                     	ds	1
  1812     0027                     lcd_4bits_initialize@lcd:
  1813     0027                     lcd_4bits_send_string_pos@coloumn:	
  1814                           ; 1 bytes @ 0x7
  1815                           
  1816     0027                     vfpfcnvrt@c:	
  1817                           ; 1 bytes @ 0x7
  1818                           
  1819                           
  1820                           ; 1 bytes @ 0x7
  1821     0027                     	ds	1
  1822     0028                     ??___flmul:
  1823     0028                     ?_vfprintf:	
  1824                           ; 1 bytes @ 0x8
  1825                           
  1826     0028                     vfprintf@fmt:	
  1827                           ; 2 bytes @ 0x8
  1828                           
  1829     0028                     lcd_4bits_send_string_pos@data:	
  1830                           ; 1 bytes @ 0x8
  1831                           
  1832                           
  1833                           ; 2 bytes @ 0x8
  1834     0028                     	ds	1
  1835     0029                     vfprintf@ap:
  1836                           
  1837                           ; 1 bytes @ 0x9
  1838     0029                     	ds	1
  1839     002A                     lcd_4bits_send_string_pos@ret:
  1840     002A                     vfprintf@fp:	
  1841                           ; 1 bytes @ 0xA
  1842                           
  1843                           
  1844                           ; 1 bytes @ 0xA
  1845     002A                     	ds	1
  1846     002B                     lcd_4bits_send_string_pos@lcd:
  1847     002B                     vfprintf@cfmt:	
  1848                           ; 1 bytes @ 0xB
  1849                           
  1850                           
  1851                           ; 1 bytes @ 0xB
  1852     002B                     	ds	1
  1853     002C                     ?_sprintf:
  1854     002C                     sprintf@fmt:	
  1855                           ; 2 bytes @ 0xC
  1856                           
  1857                           
  1858                           ; 1 bytes @ 0xC
  1859     002C                     	ds	1
  1860     002D                     ___flmul@sign:
  1861                           
  1862                           ; 1 bytes @ 0xD
  1863     002D                     	ds	1
  1864     002E                     ___flmul@grs:
  1865                           
  1866                           ; 4 bytes @ 0xE
  1867     002E                     	ds	1
  1868     002F                     ??_sprintf:
  1869                           
  1870                           ; 1 bytes @ 0xF
  1871     002F                     	ds	1
  1872     0030                     sprintf@ap:
  1873                           
  1874                           ; 1 bytes @ 0x10
  1875     0030                     	ds	1
  1876     0031                     sprintf@s:
  1877                           
  1878                           ; 1 bytes @ 0x11
  1879     0031                     	ds	1
  1880     0032                     ___flmul@aexp:
  1881     0032                     sprintf@f:	
  1882                           ; 1 bytes @ 0x12
  1883                           
  1884                           
  1885                           ; 11 bytes @ 0x12
  1886     0032                     	ds	1
  1887     0033                     ___flmul@bexp:
  1888                           
  1889                           ; 1 bytes @ 0x13
  1890     0033                     	ds	1
  1891     0034                     ___flmul@prod:
  1892                           
  1893                           ; 4 bytes @ 0x14
  1894     0034                     	ds	4
  1895     0038                     ___flmul@temp:
  1896                           
  1897                           ; 2 bytes @ 0x18
  1898     0038                     	ds	2
  1899     003A                     ?___fldiv:
  1900     003A                     ___fldiv@a:	
  1901                           ; 4 bytes @ 0x1A
  1902                           
  1903                           
  1904                           ; 4 bytes @ 0x1A
  1905     003A                     	ds	3
  1906     003D                     ?_Convert_uint16_to_string:
  1907     003D                     Convert_uint16_to_string@data:	
  1908                           ; 1 bytes @ 0x1D
  1909                           
  1910                           
  1911                           ; 2 bytes @ 0x1D
  1912     003D                     	ds	1
  1913     003E                     ___fldiv@b:
  1914                           
  1915                           ; 4 bytes @ 0x1E
  1916     003E                     	ds	1
  1917     003F                     Convert_uint16_to_string@str:
  1918                           
  1919                           ; 1 bytes @ 0x1F
  1920     003F                     	ds	1
  1921     0040                     ??_Convert_uint16_to_string:
  1922                           
  1923                           ; 1 bytes @ 0x20
  1924     0040                     	ds	1
  1925     0041                     Convert_uint16_to_string@temp:
  1926                           
  1927                           ; 6 bytes @ 0x21
  1928     0041                     	ds	1
  1929     0042                     ??___fldiv:
  1930                           
  1931                           ; 1 bytes @ 0x22
  1932     0042                     	ds	5
  1933     0047                     Convert_uint16_to_string@counter:
  1934     0047                     ___fldiv@rem:	
  1935                           ; 1 bytes @ 0x27
  1936                           
  1937                           
  1938                           ; 4 bytes @ 0x27
  1939     0047                     	ds	4
  1940     004B                     ___fldiv@sign:
  1941                           
  1942                           ; 1 bytes @ 0x2B
  1943     004B                     	ds	1
  1944     004C                     ___fldiv@new_exp:
  1945                           
  1946                           ; 2 bytes @ 0x2C
  1947     004C                     	ds	2
  1948     004E                     ___fldiv@grs:
  1949                           
  1950                           ; 4 bytes @ 0x2E
  1951     004E                     	ds	4
  1952     0052                     ___fldiv@bexp:
  1953                           
  1954                           ; 1 bytes @ 0x32
  1955     0052                     	ds	1
  1956     0053                     ___fldiv@aexp:
  1957                           
  1958                           ; 1 bytes @ 0x33
  1959     0053                     	ds	1
  1960     0054                     ?___fltol:
  1961     0054                     ___fltol@f1:	
  1962                           ; 4 bytes @ 0x34
  1963                           
  1964                           
  1965                           ; 4 bytes @ 0x34
  1966     0054                     	ds	4
  1967     0058                     ??___fltol:
  1968                           
  1969                           ; 1 bytes @ 0x38
  1970     0058                     	ds	4
  1971     005C                     ___fltol@sign1:
  1972                           
  1973                           ; 1 bytes @ 0x3C
  1974     005C                     	ds	1
  1975     005D                     ___fltol@exp1:
  1976                           
  1977                           ; 1 bytes @ 0x3D
  1978     005D                     	ds	1
  1979     005E                     ??_main:
  1980                           
  1981                           ; 1 bytes @ 0x3E
  1982     005E                     	ds	3
  1983     0061                     main@counter:
  1984                           
  1985                           ; 1 bytes @ 0x41
  1986     0061                     	ds	1
  1987     0062                     main@i:
  1988                           
  1989                           ; 1 bytes @ 0x42
  1990     0062                     	ds	1
  1991                           
  1992                           	psect	maintext
  1993     0256                     __pmaintext:	
  1994 ;;
  1995 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1996 ;;
  1997 ;; *************** function _main *****************
  1998 ;; Defined at:
  1999 ;;		line 21 in file "Temperature_Controlled_Fan_System.c"
  2000 ;; Parameters:    Size  Location     Type
  2001 ;;		None
  2002 ;; Auto vars:     Size  Location     Type
  2003 ;;  i               1   66[BANK0 ] unsigned char 
  2004 ;;  counter         1   65[BANK0 ] unsigned char 
  2005 ;; Return value:  Size  Location     Type
  2006 ;;                  2  523[None  ] int 
  2007 ;; Registers used:
  2008 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2009 ;; Tracked objects:
  2010 ;;		On entry : B00/0
  2011 ;;		On exit  : 0/0
  2012 ;;		Unchanged: 0/0
  2013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2014 ;;      Params:         0       0       0       0       0
  2015 ;;      Locals:         0       2       0       0       0
  2016 ;;      Temps:          0       3       0       0       0
  2017 ;;      Totals:         0       5       0       0       0
  2018 ;;Total ram usage:        5 bytes
  2019 ;; Hardware stack levels required when called: 6
  2020 ;; This function calls:
  2021 ;;		_ADC_Start_Conversion_Blocking
  2022 ;;		_Convert_uint16_to_string
  2023 ;;		_READ_DATA_EEPROM
  2024 ;;		_WRITE_DATA_EEPROM
  2025 ;;		___fldiv
  2026 ;;		___flmul
  2027 ;;		___fltol
  2028 ;;		___xxtofl
  2029 ;;		_apllication_initilaize
  2030 ;;		_gpio_pin_write_logic
  2031 ;;		_keypad_read_value
  2032 ;;		_lcd_4bits_send_command
  2033 ;;		_lcd_4bits_send_string
  2034 ;;		_lcd_4bits_send_string_pos
  2035 ;;		_motor_turn_left
  2036 ;;		_motor_turn_off
  2037 ;;		_motor_turn_right
  2038 ;; This function is called by:
  2039 ;;		Startup code after reset
  2040 ;; This function uses a non-reentrant model
  2041 ;;
  2042                           
  2043     0256                     _main:	
  2044                           ;psect for function _main
  2045                           
  2046     0256                     l3943:	
  2047                           ;incstack = 0
  2048                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2049                           
  2050                           
  2051                           ;Temperature_Controlled_Fan_System.c: 22:     apllication_initilaize();
  2052     0256  120A  118A  2004  120A  118A  	fcall	_apllication_initilaize
  2053     025B                     l3945:
  2054                           
  2055                           ;Temperature_Controlled_Fan_System.c: 23:     READ_DATA_EEPROM(0xFF,&Max_Temp);
  2056     025B  30FF               	movlw	255
  2057     025C  00F0               	movwf	READ_DATA_EEPROM@add
  2058     025D  3000               	movlw	0
  2059     025E  00F1               	movwf	READ_DATA_EEPROM@add+1
  2060     025F  306C               	movlw	(low (_Max_Temp| 0))& (0+255)
  2061     0260  00F2               	movwf	READ_DATA_EEPROM@data
  2062     0261  160A  118A  2473  120A  118A  	fcall	_READ_DATA_EEPROM
  2063     0266                     l3947:
  2064                           
  2065                           ;Temperature_Controlled_Fan_System.c: 27:     ADC_Start_Conversion_Blocking(&adc,CHANNEL
      +                          0,&adc_res);
  2066     0266  01F5               	clrf	ADC_Start_Conversion_Blocking@channel
  2067     0267  30E9               	movlw	low (_adc_res| 0)
  2068     0268  00F6               	movwf	ADC_Start_Conversion_Blocking@result
  2069     0269  3000               	movlw	high (_adc_res| 0)
  2070     026A  00F7               	movwf	ADC_Start_Conversion_Blocking@result+1
  2071     026B  30C9               	movlw	(low (_adc| 0))& (0+255)
  2072     026C  160A  118A  263D  120A  118A  	fcall	_ADC_Start_Conversion_Blocking
  2073     0271                     l3949:
  2074                           
  2075                           ;Temperature_Controlled_Fan_System.c: 30:     Temp = adc_res * 4.8828125f / 10;
  2076     0271  1683               	bsf	3,5	;RP0=1, select bank1
  2077     0272  1303               	bcf	3,6	;RP1=0, select bank1
  2078     0273  0869               	movf	_adc_res^(0+128),w
  2079     0274  00F0               	movwf	___xxtofl@val
  2080     0275  086A               	movf	(_adc_res+1)^(0+128),w
  2081     0276  00F1               	movwf	___xxtofl@val+1
  2082     0277  01F2               	clrf	___xxtofl@val+2
  2083     0278  01F3               	clrf	___xxtofl@val+3
  2084     0279  3000               	movlw	0
  2085     027A  120A  158A  24A1  120A  118A  	fcall	___xxtofl
  2086     027F  0873               	movf	?___xxtofl+3,w
  2087     0280  1283               	bcf	3,5	;RP0=0, select bank0
  2088     0281  1303               	bcf	3,6	;RP1=0, select bank0
  2089     0282  00A7               	movwf	___flmul@a+3
  2090     0283  0872               	movf	?___xxtofl+2,w
  2091     0284  00A6               	movwf	___flmul@a+2
  2092     0285  0871               	movf	?___xxtofl+1,w
  2093     0286  00A5               	movwf	___flmul@a+1
  2094     0287  0870               	movf	?___xxtofl,w
  2095     0288  00A4               	movwf	___flmul@a
  2096     0289  3040               	movlw	64
  2097     028A  00A3               	movwf	___flmul@b+3
  2098     028B  309C               	movlw	156
  2099     028C  00A2               	movwf	___flmul@b+2
  2100     028D  3040               	movlw	64
  2101     028E  00A1               	movwf	___flmul@b+1
  2102     028F  3000               	movlw	0
  2103     0290  00A0               	movwf	___flmul@b
  2104     0291  120A  118A  2489  120A  118A  	fcall	___flmul
  2105     0296  1283               	bcf	3,5	;RP0=0, select bank0
  2106     0297  1303               	bcf	3,6	;RP1=0, select bank0
  2107     0298  0823               	movf	?___flmul+3,w
  2108     0299  00C1               	movwf	___fldiv@b+3
  2109     029A  0822               	movf	?___flmul+2,w
  2110     029B  00C0               	movwf	___fldiv@b+2
  2111     029C  0821               	movf	?___flmul+1,w
  2112     029D  00BF               	movwf	___fldiv@b+1
  2113     029E  0820               	movf	?___flmul,w
  2114     029F  00BE               	movwf	___fldiv@b
  2115     02A0  3041               	movlw	65
  2116     02A1  00BD               	movwf	___fldiv@a+3
  2117     02A2  3020               	movlw	32
  2118     02A3  00BC               	movwf	___fldiv@a+2
  2119     02A4  3000               	movlw	0
  2120     02A5  00BB               	movwf	___fldiv@a+1
  2121     02A6  3000               	movlw	0
  2122     02A7  00BA               	movwf	___fldiv@a
  2123     02A8  120A  118A  2087  120A  118A  	fcall	___fldiv
  2124     02AD  1283               	bcf	3,5	;RP0=0, select bank0
  2125     02AE  1303               	bcf	3,6	;RP1=0, select bank0
  2126     02AF  083D               	movf	?___fldiv+3,w
  2127     02B0  00D7               	movwf	___fltol@f1+3
  2128     02B1  083C               	movf	?___fldiv+2,w
  2129     02B2  00D6               	movwf	___fltol@f1+2
  2130     02B3  083B               	movf	?___fldiv+1,w
  2131     02B4  00D5               	movwf	___fltol@f1+1
  2132     02B5  083A               	movf	?___fldiv,w
  2133     02B6  00D4               	movwf	___fltol@f1
  2134     02B7  120A  118A  200F  120A  118A  	fcall	___fltol
  2135     02BC  1283               	bcf	3,5	;RP0=0, select bank0
  2136     02BD  1303               	bcf	3,6	;RP1=0, select bank0
  2137     02BE  0855               	movf	?___fltol+1,w
  2138     02BF  00E4               	movwf	_Temp+1
  2139     02C0  0854               	movf	?___fltol,w
  2140     02C1  00E3               	movwf	_Temp
  2141     02C2                     l3951:
  2142                           
  2143                           ;Temperature_Controlled_Fan_System.c: 32:     Convert_uint16_to_string(Temp,lcd_show);
  2144     02C2  0864               	movf	_Temp+1,w
  2145     02C3  00BE               	movwf	Convert_uint16_to_string@data+1
  2146     02C4  0863               	movf	_Temp,w
  2147     02C5  00BD               	movwf	Convert_uint16_to_string@data
  2148     02C6  30E3               	movlw	(low (_lcd_show| 0))& (0+255)
  2149     02C7  00BF               	movwf	Convert_uint16_to_string@str
  2150     02C8  120A  158A  2089  120A  118A  	fcall	_Convert_uint16_to_string
  2151     02CD                     l3953:
  2152                           
  2153                           ;Temperature_Controlled_Fan_System.c: 33:     keypad_read_value(&keypad,&val);
  2154     02CD  306E               	movlw	(low (_val| 0))& (0+255)
  2155     02CE  00F8               	movwf	keypad_read_value@value
  2156     02CF  30B8               	movlw	(low (_keypad| 0))& (0+255)
  2157     02D0  120A  158A  2233  120A  118A  	fcall	_keypad_read_value
  2158     02D5                     l3955:
  2159                           
  2160                           ;Temperature_Controlled_Fan_System.c: 34:     if(val == '*' && flag == 0){
  2161     02D5  302A               	movlw	42
  2162     02D6  1283               	bcf	3,5	;RP0=0, select bank0
  2163     02D7  1303               	bcf	3,6	;RP1=0, select bank0
  2164     02D8  066E               	xorwf	_val,w
  2165     02D9  1D03               	btfss	3,2
  2166     02DA  2ADC               	goto	u5271
  2167     02DB  2ADD               	goto	u5270
  2168     02DC                     u5271:
  2169     02DC  2BB1               	goto	l4009
  2170     02DD                     u5270:
  2171     02DD                     l3957:
  2172     02DD  0865               	movf	_flag,w
  2173     02DE  1D03               	btfss	3,2
  2174     02DF  2AE1               	goto	u5281
  2175     02E0  2AE2               	goto	u5280
  2176     02E1                     u5281:
  2177     02E1  2BB1               	goto	l4009
  2178     02E2                     u5280:
  2179     02E2                     l3959:
  2180                           
  2181                           ;Temperature_Controlled_Fan_System.c: 35:         _delay((unsigned long)((400)*(8000000U
      +                          L/4000.0)));
  2182     02E2  3005               	movlw	5
  2183     02E3  1283               	bcf	3,5	;RP0=0, select bank0
  2184     02E4  1303               	bcf	3,6	;RP1=0, select bank0
  2185     02E5  00E0               	movwf	??_main+2
  2186     02E6  300F               	movlw	15
  2187     02E7  00DF               	movwf	??_main+1
  2188     02E8  30F0               	movlw	240
  2189     02E9  00DE               	movwf	??_main
  2190     02EA                     u5397:
  2191     02EA  0BDE               	decfsz	??_main,f
  2192     02EB  2AEA               	goto	u5397
  2193     02EC  0BDF               	decfsz	??_main+1,f
  2194     02ED  2AEA               	goto	u5397
  2195     02EE  0BE0               	decfsz	??_main+2,f
  2196     02EF  2AEA               	goto	u5397
  2197     02F0  0000               	nop
  2198                           
  2199                           ;Temperature_Controlled_Fan_System.c: 36:         temp[0] = '.';
  2200     02F1  302E               	movlw	46
  2201     02F2  1683               	bsf	3,5	;RP0=1, select bank1
  2202     02F3  1303               	bcf	3,6	;RP1=0, select bank1
  2203     02F4  00C5               	movwf	_temp^(0+128)
  2204                           
  2205                           ;Temperature_Controlled_Fan_System.c: 37:         temp[1] = '.';
  2206     02F5  302E               	movlw	46
  2207     02F6  00C6               	movwf	(_temp^(0+128)+1)
  2208                           
  2209                           ;Temperature_Controlled_Fan_System.c: 38:         temp[2] = '.';
  2210     02F7  302E               	movlw	46
  2211     02F8  00C7               	movwf	(_temp^(0+128)+2)
  2212                           
  2213                           ;Temperature_Controlled_Fan_System.c: 39:         temp[3] = '.';
  2214     02F9  302E               	movlw	46
  2215     02FA  00C8               	movwf	(_temp^(0+128)+3)
  2216     02FB                     l3961:
  2217                           
  2218                           ;Temperature_Controlled_Fan_System.c: 40:         for(uint8 counter = 0;counter < 4;coun
      +                          ter++){
  2219     02FB  1283               	bcf	3,5	;RP0=0, select bank0
  2220     02FC  1303               	bcf	3,6	;RP1=0, select bank0
  2221     02FD  01E1               	clrf	main@counter
  2222     02FE  2B08               	goto	l3969
  2223     02FF                     l3967:
  2224                           
  2225                           ;Temperature_Controlled_Fan_System.c: 42:         keypad_read_value(&keypad,&(temp[count
      +                          er]));
  2226     02FF  0861               	movf	main@counter,w
  2227     0300  3EC5               	addlw	(low (_temp| 0))& (0+255)
  2228     0301  00F8               	movwf	keypad_read_value@value
  2229     0302  30B8               	movlw	(low (_keypad| 0))& (0+255)
  2230     0303  120A  158A  2233  120A  118A  	fcall	_keypad_read_value
  2231     0308                     l3969:
  2232                           
  2233                           ;Temperature_Controlled_Fan_System.c: 41:         while(temp[counter] == '.'){
  2234     0308  1283               	bcf	3,5	;RP0=0, select bank0
  2235     0309  1303               	bcf	3,6	;RP1=0, select bank0
  2236     030A  0861               	movf	main@counter,w
  2237     030B  3EC5               	addlw	(low (_temp| 0))& (0+255)
  2238     030C  0084               	movwf	4
  2239     030D  302E               	movlw	46
  2240     030E  1383               	bcf	3,7	;select IRP bank1
  2241     030F  0600               	xorwf	0,w
  2242     0310  1903               	btfsc	3,2
  2243     0311  2B13               	goto	u5291
  2244     0312  2B14               	goto	u5290
  2245     0313                     u5291:
  2246     0313  2AFF               	goto	l3967
  2247     0314                     u5290:
  2248     0314                     l3971:
  2249                           
  2250                           ;Temperature_Controlled_Fan_System.c: 45:         _delay((unsigned long)((400)*(8000000U
      +                          L/4000.0)));
  2251     0314  3005               	movlw	5
  2252     0315  1283               	bcf	3,5	;RP0=0, select bank0
  2253     0316  1303               	bcf	3,6	;RP1=0, select bank0
  2254     0317  00E0               	movwf	??_main+2
  2255     0318  300F               	movlw	15
  2256     0319  00DF               	movwf	??_main+1
  2257     031A  30F0               	movlw	240
  2258     031B  00DE               	movwf	??_main
  2259     031C                     u5407:
  2260     031C  0BDE               	decfsz	??_main,f
  2261     031D  2B1C               	goto	u5407
  2262     031E  0BDF               	decfsz	??_main+1,f
  2263     031F  2B1C               	goto	u5407
  2264     0320  0BE0               	decfsz	??_main+2,f
  2265     0321  2B1C               	goto	u5407
  2266     0322  0000               	nop
  2267     0323                     l3973:
  2268                           
  2269                           ;Temperature_Controlled_Fan_System.c: 46:     }
  2270     0323  3001               	movlw	1
  2271     0324  00FF               	movwf	btemp+1
  2272     0325  087F               	movf	btemp+1,w
  2273     0326  1283               	bcf	3,5	;RP0=0, select bank0
  2274     0327  1303               	bcf	3,6	;RP1=0, select bank0
  2275     0328  07E1               	addwf	main@counter,f
  2276     0329                     l3975:
  2277     0329  3004               	movlw	4
  2278     032A  0261               	subwf	main@counter,w
  2279     032B  1C03               	skipc
  2280     032C  2B2E               	goto	u5301
  2281     032D  2B2F               	goto	u5300
  2282     032E                     u5301:
  2283     032E  2B08               	goto	l3969
  2284     032F                     u5300:
  2285     032F                     l527:
  2286                           
  2287                           ;Temperature_Controlled_Fan_System.c: 47:         flag = 1;
  2288     032F  01E5               	clrf	_flag
  2289     0330  0AE5               	incf	_flag,f
  2290     0331                     l3977:
  2291                           
  2292                           ;Temperature_Controlled_Fan_System.c: 48:         for(uint8 i = 0;i < 4;i++){
  2293     0331  01E2               	clrf	main@i
  2294     0332                     l3983:
  2295                           
  2296                           ;Temperature_Controlled_Fan_System.c: 49:             if(temp[i] != pass[i]){
  2297     0332  0862               	movf	main@i,w
  2298     0333  3EB4               	addlw	(low (_pass| 0))& (0+255)
  2299     0334  0084               	movwf	4
  2300     0335  1383               	bcf	3,7	;select IRP bank1
  2301     0336  0800               	movf	0,w
  2302     0337  00DE               	movwf	??_main
  2303     0338  0862               	movf	main@i,w
  2304     0339  3EC5               	addlw	(low (_temp| 0))& (0+255)
  2305     033A  0084               	movwf	4
  2306     033B  0800               	movf	0,w
  2307     033C  065E               	xorwf	??_main,w
  2308     033D  1903               	skipnz
  2309     033E  2B40               	goto	u5311
  2310     033F  2B41               	goto	u5310
  2311     0340                     u5311:
  2312     0340  2B71               	goto	l3997
  2313     0341                     u5310:
  2314     0341                     l3985:
  2315                           
  2316                           ;Temperature_Controlled_Fan_System.c: 50:                 flag = 0;
  2317     0341  01E5               	clrf	_flag
  2318     0342                     l3987:
  2319                           
  2320                           ;Temperature_Controlled_Fan_System.c: 51:                 lcd_4bits_send_command(&lcd,0x
      +                          01);
  2321     0342  01FC               	clrf	lcd_4bits_send_command@command
  2322     0343  0AFC               	incf	lcd_4bits_send_command@command,f
  2323     0344  30BF               	movlw	(low (_lcd| 0))& (0+255)
  2324     0345  160A  118A  2771  120A  118A  	fcall	_lcd_4bits_send_command
  2325     034A                     l3989:
  2326                           
  2327                           ;Temperature_Controlled_Fan_System.c: 52:                 lcd_4bits_send_string_pos(&lcd
      +                          ,1,1,"Wrong Password");
  2328     034A  1283               	bcf	3,5	;RP0=0, select bank0
  2329     034B  1303               	bcf	3,6	;RP1=0, select bank0
  2330     034C  01A6               	clrf	lcd_4bits_send_string_pos@Row
  2331     034D  0AA6               	incf	lcd_4bits_send_string_pos@Row,f
  2332     034E  01A7               	clrf	lcd_4bits_send_string_pos@coloumn
  2333     034F  0AA7               	incf	lcd_4bits_send_string_pos@coloumn,f
  2334     0350  302D               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2335     0351  00A8               	movwf	lcd_4bits_send_string_pos@data
  2336     0352  3080               	movlw	128
  2337     0353  00A9               	movwf	lcd_4bits_send_string_pos@data+1
  2338     0354  30BF               	movlw	(low (_lcd| 0))& (0+255)
  2339     0355  160A  118A  25F2  120A  118A  	fcall	_lcd_4bits_send_string_pos
  2340     035A                     l3991:
  2341                           
  2342                           ;Temperature_Controlled_Fan_System.c: 53:                 _delay((unsigned long)((1000)*
      +                          (8000000UL/4000.0)));
  2343     035A  300B               	movlw	11
  2344     035B  1283               	bcf	3,5	;RP0=0, select bank0
  2345     035C  1303               	bcf	3,6	;RP1=0, select bank0
  2346     035D  00E0               	movwf	??_main+2
  2347     035E  3026               	movlw	38
  2348     035F  00DF               	movwf	??_main+1
  2349     0360  305D               	movlw	93
  2350     0361  00DE               	movwf	??_main
  2351     0362                     u5417:
  2352     0362  0BDE               	decfsz	??_main,f
  2353     0363  2B62               	goto	u5417
  2354     0364  0BDF               	decfsz	??_main+1,f
  2355     0365  2B62               	goto	u5417
  2356     0366  0BE0               	decfsz	??_main+2,f
  2357     0367  2B62               	goto	u5417
  2358     0368                     l3993:
  2359                           
  2360                           ;Temperature_Controlled_Fan_System.c: 54:                 lcd_4bits_send_command(&lcd,0x
      +                          01);
  2361     0368  01FC               	clrf	lcd_4bits_send_command@command
  2362     0369  0AFC               	incf	lcd_4bits_send_command@command,f
  2363     036A  30BF               	movlw	(low (_lcd| 0))& (0+255)
  2364     036B  160A  118A  2771  120A  118A  	fcall	_lcd_4bits_send_command
  2365                           
  2366                           ;Temperature_Controlled_Fan_System.c: 55:                 break;
  2367     0370  2BB1               	goto	l4009
  2368     0371                     l3997:
  2369                           
  2370                           ;Temperature_Controlled_Fan_System.c: 59:                 lcd_4bits_send_command(&lcd,0x
      +                          01);
  2371     0371  01FC               	clrf	lcd_4bits_send_command@command
  2372     0372  0AFC               	incf	lcd_4bits_send_command@command,f
  2373     0373  30BF               	movlw	(low (_lcd| 0))& (0+255)
  2374     0374  160A  118A  2771  120A  118A  	fcall	_lcd_4bits_send_command
  2375     0379                     l3999:
  2376                           
  2377                           ;Temperature_Controlled_Fan_System.c: 60:                 _delay((unsigned long)((50)*(8
      +                          000000UL/4000.0)));
  2378     0379  3082               	movlw	130
  2379     037A  1283               	bcf	3,5	;RP0=0, select bank0
  2380     037B  1303               	bcf	3,6	;RP1=0, select bank0
  2381     037C  00DF               	movwf	??_main+1
  2382     037D  30DD               	movlw	221
  2383     037E  00DE               	movwf	??_main
  2384     037F                     u5427:
  2385     037F  0BDE               	decfsz	??_main,f
  2386     0380  2B7F               	goto	u5427
  2387     0381  0BDF               	decfsz	??_main+1,f
  2388     0382  2B7F               	goto	u5427
  2389     0383                     l4001:
  2390                           
  2391                           ;Temperature_Controlled_Fan_System.c: 61:                 lcd_4bits_send_string(&lcd,"Co
      +                          rrect Password");
  2392     0383  300D               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2393     0384  1283               	bcf	3,5	;RP0=0, select bank0
  2394     0385  1303               	bcf	3,6	;RP1=0, select bank0
  2395     0386  00A2               	movwf	lcd_4bits_send_string@data
  2396     0387  3080               	movlw	128
  2397     0388  00A3               	movwf	lcd_4bits_send_string@data+1
  2398     0389  30BF               	movlw	(low (_lcd| 0))& (0+255)
  2399     038A  160A  118A  26FA  120A  118A  	fcall	_lcd_4bits_send_string
  2400                           
  2401                           ;Temperature_Controlled_Fan_System.c: 62:                 _delay((unsigned long)((500)*(
      +                          8000000UL/4000.0)));
  2402     038F  3006               	movlw	6
  2403     0390  1283               	bcf	3,5	;RP0=0, select bank0
  2404     0391  1303               	bcf	3,6	;RP1=0, select bank0
  2405     0392  00E0               	movwf	??_main+2
  2406     0393  3013               	movlw	19
  2407     0394  00DF               	movwf	??_main+1
  2408     0395  30AD               	movlw	173
  2409     0396  00DE               	movwf	??_main
  2410     0397                     u5437:
  2411     0397  0BDE               	decfsz	??_main,f
  2412     0398  2B97               	goto	u5437
  2413     0399  0BDF               	decfsz	??_main+1,f
  2414     039A  2B97               	goto	u5437
  2415     039B  0BE0               	decfsz	??_main+2,f
  2416     039C  2B97               	goto	u5437
  2417     039D                     l4003:
  2418                           
  2419                           ;Temperature_Controlled_Fan_System.c: 63:             lcd_4bits_send_command(&lcd,0x01);
  2420     039D  01FC               	clrf	lcd_4bits_send_command@command
  2421     039E  0AFC               	incf	lcd_4bits_send_command@command,f
  2422     039F  30BF               	movlw	(low (_lcd| 0))& (0+255)
  2423     03A0  160A  118A  2771  120A  118A  	fcall	_lcd_4bits_send_command
  2424     03A5                     l4005:
  2425                           
  2426                           ;Temperature_Controlled_Fan_System.c: 65:         }
  2427     03A5  3001               	movlw	1
  2428     03A6  00FF               	movwf	btemp+1
  2429     03A7  087F               	movf	btemp+1,w
  2430     03A8  1283               	bcf	3,5	;RP0=0, select bank0
  2431     03A9  1303               	bcf	3,6	;RP1=0, select bank0
  2432     03AA  07E2               	addwf	main@i,f
  2433     03AB                     l4007:
  2434     03AB  3004               	movlw	4
  2435     03AC  0262               	subwf	main@i,w
  2436     03AD  1C03               	skipc
  2437     03AE  2BB0               	goto	u5321
  2438     03AF  2BB1               	goto	u5320
  2439     03B0                     u5321:
  2440     03B0  2B32               	goto	l3983
  2441     03B1                     u5320:
  2442     03B1                     l4009:
  2443                           
  2444                           ;Temperature_Controlled_Fan_System.c: 71:     val = '\0';
  2445     03B1  1283               	bcf	3,5	;RP0=0, select bank0
  2446     03B2  1303               	bcf	3,6	;RP1=0, select bank0
  2447     03B3  01EE               	clrf	_val
  2448     03B4                     l4011:
  2449                           
  2450                           ;Temperature_Controlled_Fan_System.c: 72:     Convert_uint16_to_string(Max_Temp,lcd_show
      +                          _max);
  2451     03B4  086D               	movf	_Max_Temp+1,w
  2452     03B5  00BE               	movwf	Convert_uint16_to_string@data+1
  2453     03B6  086C               	movf	_Max_Temp,w
  2454     03B7  00BD               	movwf	Convert_uint16_to_string@data
  2455     03B8  30DD               	movlw	(low (_lcd_show_max| 0))& (0+255)
  2456     03B9  00BF               	movwf	Convert_uint16_to_string@str
  2457     03BA  120A  158A  2089  120A  118A  	fcall	_Convert_uint16_to_string
  2458     03BF                     l4013:
  2459                           
  2460                           ;Temperature_Controlled_Fan_System.c: 73:     if(flag == 1){
  2461     03BF  1283               	bcf	3,5	;RP0=0, select bank0
  2462     03C0  1303               	bcf	3,6	;RP1=0, select bank0
  2463     03C1  0365               	decf	_flag,w
  2464     03C2  1D03               	btfss	3,2
  2465     03C3  2BC5               	goto	u5331
  2466     03C4  2BC6               	goto	u5330
  2467     03C5                     u5331:
  2468     03C5  2C05               	goto	l4017
  2469     03C6                     u5330:
  2470     03C6                     l4015:
  2471                           
  2472                           ;Temperature_Controlled_Fan_System.c: 74:     lcd_4bits_send_string_pos(&lcd,1,1,"Temp i
      +                          s : ");
  2473     03C6  01A6               	clrf	lcd_4bits_send_string_pos@Row
  2474     03C7  0AA6               	incf	lcd_4bits_send_string_pos@Row,f
  2475     03C8  01A7               	clrf	lcd_4bits_send_string_pos@coloumn
  2476     03C9  0AA7               	incf	lcd_4bits_send_string_pos@coloumn,f
  2477     03CA  3022               	movlw	(low (((STR_7+4)-__stringbase)| (0+32768)))& (0+255)
  2478     03CB  00A8               	movwf	lcd_4bits_send_string_pos@data
  2479     03CC  3080               	movlw	128
  2480     03CD  00A9               	movwf	lcd_4bits_send_string_pos@data+1
  2481     03CE  30BF               	movlw	(low (_lcd| 0))& (0+255)
  2482     03CF  160A  118A  25F2  120A  118A  	fcall	_lcd_4bits_send_string_pos
  2483                           
  2484                           ;Temperature_Controlled_Fan_System.c: 75:     lcd_4bits_send_string_pos(&lcd,1,10,lcd_sh
      +                          ow);
  2485     03D4  1283               	bcf	3,5	;RP0=0, select bank0
  2486     03D5  1303               	bcf	3,6	;RP1=0, select bank0
  2487     03D6  01A6               	clrf	lcd_4bits_send_string_pos@Row
  2488     03D7  0AA6               	incf	lcd_4bits_send_string_pos@Row,f
  2489     03D8  300A               	movlw	10
  2490     03D9  00A7               	movwf	lcd_4bits_send_string_pos@coloumn
  2491     03DA  30E3               	movlw	(low (_lcd_show| 0))& (0+255)
  2492     03DB  00A8               	movwf	lcd_4bits_send_string_pos@data
  2493     03DC  3000               	movlw	0
  2494     03DD  00A9               	movwf	lcd_4bits_send_string_pos@data+1
  2495     03DE  30BF               	movlw	(low (_lcd| 0))& (0+255)
  2496     03DF  160A  118A  25F2  120A  118A  	fcall	_lcd_4bits_send_string_pos
  2497                           
  2498                           ;Temperature_Controlled_Fan_System.c: 76:     lcd_4bits_send_string_pos(&lcd,2,1,"Max Te
      +                          mp is : ");
  2499     03E4  3002               	movlw	2
  2500     03E5  1283               	bcf	3,5	;RP0=0, select bank0
  2501     03E6  1303               	bcf	3,6	;RP1=0, select bank0
  2502     03E7  00A6               	movwf	lcd_4bits_send_string_pos@Row
  2503     03E8  01A7               	clrf	lcd_4bits_send_string_pos@coloumn
  2504     03E9  0AA7               	incf	lcd_4bits_send_string_pos@coloumn,f
  2505     03EA  301E               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2506     03EB  00A8               	movwf	lcd_4bits_send_string_pos@data
  2507     03EC  3080               	movlw	128
  2508     03ED  00A9               	movwf	lcd_4bits_send_string_pos@data+1
  2509     03EE  30BF               	movlw	(low (_lcd| 0))& (0+255)
  2510     03EF  160A  118A  25F2  120A  118A  	fcall	_lcd_4bits_send_string_pos
  2511                           
  2512                           ;Temperature_Controlled_Fan_System.c: 77:     lcd_4bits_send_string_pos(&lcd,2,14,lcd_sh
      +                          ow_max);
  2513     03F4  3002               	movlw	2
  2514     03F5  1283               	bcf	3,5	;RP0=0, select bank0
  2515     03F6  1303               	bcf	3,6	;RP1=0, select bank0
  2516     03F7  00A6               	movwf	lcd_4bits_send_string_pos@Row
  2517     03F8  300E               	movlw	14
  2518     03F9  00A7               	movwf	lcd_4bits_send_string_pos@coloumn
  2519     03FA  30DD               	movlw	(low (_lcd_show_max| 0))& (0+255)
  2520     03FB  00A8               	movwf	lcd_4bits_send_string_pos@data
  2521     03FC  3000               	movlw	0
  2522     03FD  00A9               	movwf	lcd_4bits_send_string_pos@data+1
  2523     03FE  30BF               	movlw	(low (_lcd| 0))& (0+255)
  2524     03FF  160A  118A  25F2  120A  118A  	fcall	_lcd_4bits_send_string_pos
  2525                           
  2526                           ;Temperature_Controlled_Fan_System.c: 78:     }
  2527     0404  2C18               	goto	l4021
  2528     0405                     l4017:
  2529     0405  0865               	movf	_flag,w
  2530     0406  1D03               	btfss	3,2
  2531     0407  2C09               	goto	u5341
  2532     0408  2C0A               	goto	u5340
  2533     0409                     u5341:
  2534     0409  2C18               	goto	l4021
  2535     040A                     u5340:
  2536     040A                     l4019:
  2537                           
  2538                           ;Temperature_Controlled_Fan_System.c: 80:         lcd_4bits_send_string_pos(&lcd,1,1,"En
      +                          ter password");
  2539     040A  01A6               	clrf	lcd_4bits_send_string_pos@Row
  2540     040B  0AA6               	incf	lcd_4bits_send_string_pos@Row,f
  2541     040C  01A7               	clrf	lcd_4bits_send_string_pos@coloumn
  2542     040D  0AA7               	incf	lcd_4bits_send_string_pos@coloumn,f
  2543     040E  303C               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2544     040F  00A8               	movwf	lcd_4bits_send_string_pos@data
  2545     0410  3080               	movlw	128
  2546     0411  00A9               	movwf	lcd_4bits_send_string_pos@data+1
  2547     0412  30BF               	movlw	(low (_lcd| 0))& (0+255)
  2548     0413  160A  118A  25F2  120A  118A  	fcall	_lcd_4bits_send_string_pos
  2549     0418                     l4021:	
  2550                           ;Temperature_Controlled_Fan_System.c: 81:     }
  2551                           
  2552                           
  2553                           ;Temperature_Controlled_Fan_System.c: 84:     if((Temp >= 50) && (Temp < 60)){
  2554     0418  3000               	movlw	0
  2555     0419  1283               	bcf	3,5	;RP0=0, select bank0
  2556     041A  1303               	bcf	3,6	;RP1=0, select bank0
  2557     041B  0264               	subwf	_Temp+1,w
  2558     041C  3032               	movlw	50
  2559     041D  1903               	skipnz
  2560     041E  0263               	subwf	_Temp,w
  2561     041F  1C03               	skipc
  2562     0420  2C22               	goto	u5351
  2563     0421  2C23               	goto	u5350
  2564     0422                     u5351:
  2565     0422  2C39               	goto	l4027
  2566     0423                     u5350:
  2567     0423                     l4023:
  2568     0423  3000               	movlw	0
  2569     0424  0264               	subwf	_Temp+1,w
  2570     0425  303C               	movlw	60
  2571     0426  1903               	skipnz
  2572     0427  0263               	subwf	_Temp,w
  2573     0428  1803               	skipnc
  2574     0429  2C2B               	goto	u5361
  2575     042A  2C2C               	goto	u5360
  2576     042B                     u5361:
  2577     042B  2C39               	goto	l4027
  2578     042C                     u5360:
  2579     042C                     l4025:
  2580                           
  2581                           ;Temperature_Controlled_Fan_System.c: 85:         motor_turn_right(&motor1);
  2582     042C  30CE               	movlw	(low (_motor1| 0))& (0+255)
  2583     042D  160A  118A  24F7  120A  118A  	fcall	_motor_turn_right
  2584                           
  2585                           ;Temperature_Controlled_Fan_System.c: 86:         motor_turn_off(&motor2);
  2586     0432  30CC               	movlw	(low (_motor2| 0))& (0+255)
  2587     0433  160A  118A  24C4  120A  118A  	fcall	_motor_turn_off
  2588                           
  2589                           ;Temperature_Controlled_Fan_System.c: 87:     }
  2590     0438  2C6A               	goto	l4033
  2591     0439                     l4027:
  2592     0439  3000               	movlw	0
  2593     043A  0264               	subwf	_Temp+1,w
  2594     043B  303C               	movlw	60
  2595     043C  1903               	skipnz
  2596     043D  0263               	subwf	_Temp,w
  2597     043E  1C03               	skipc
  2598     043F  2C41               	goto	u5371
  2599     0440  2C42               	goto	u5370
  2600     0441                     u5371:
  2601     0441  2C57               	goto	l4031
  2602     0442                     u5370:
  2603     0442                     l4029:
  2604                           
  2605                           ;Temperature_Controlled_Fan_System.c: 89:         motor_turn_right(&motor1);
  2606     0442  30CE               	movlw	(low (_motor1| 0))& (0+255)
  2607     0443  160A  118A  24F7  120A  118A  	fcall	_motor_turn_right
  2608                           
  2609                           ;Temperature_Controlled_Fan_System.c: 90:         motor_turn_left(&motor2);
  2610     0448  30CC               	movlw	(low (_motor2| 0))& (0+255)
  2611     0449  160A  118A  24DD  120A  118A  	fcall	_motor_turn_left
  2612                           
  2613                           ;Temperature_Controlled_Fan_System.c: 91:         gpio_pin_write_logic(&buzzer,GPIO_HIGH
      +                          );
  2614     044E  01F0               	clrf	gpio_pin_write_logic@logic
  2615     044F  0AF0               	incf	gpio_pin_write_logic@logic,f
  2616     0450  306F               	movlw	(low (_buzzer| 0))& (0+255)
  2617     0451  120A  158A  2631  120A  118A  	fcall	_gpio_pin_write_logic
  2618                           
  2619                           ;Temperature_Controlled_Fan_System.c: 92:     }
  2620     0456  2C6A               	goto	l4033
  2621     0457                     l4031:
  2622                           
  2623                           ;Temperature_Controlled_Fan_System.c: 94:         motor_turn_off(&motor1);
  2624     0457  30CE               	movlw	(low (_motor1| 0))& (0+255)
  2625     0458  160A  118A  24C4  120A  118A  	fcall	_motor_turn_off
  2626                           
  2627                           ;Temperature_Controlled_Fan_System.c: 95:         motor_turn_off(&motor2);
  2628     045D  30CC               	movlw	(low (_motor2| 0))& (0+255)
  2629     045E  160A  118A  24C4  120A  118A  	fcall	_motor_turn_off
  2630                           
  2631                           ;Temperature_Controlled_Fan_System.c: 96:         gpio_pin_write_logic(&buzzer,GPIO_LOW)
      +                          ;
  2632     0463  01F0               	clrf	gpio_pin_write_logic@logic
  2633     0464  306F               	movlw	(low (_buzzer| 0))& (0+255)
  2634     0465  120A  158A  2631  120A  118A  	fcall	_gpio_pin_write_logic
  2635     046A                     l4033:
  2636                           
  2637                           ;Temperature_Controlled_Fan_System.c: 98:     if(Temp > Max_Temp){
  2638     046A  1283               	bcf	3,5	;RP0=0, select bank0
  2639     046B  1303               	bcf	3,6	;RP1=0, select bank0
  2640     046C  0864               	movf	_Temp+1,w
  2641     046D  026D               	subwf	_Max_Temp+1,w
  2642     046E  1D03               	skipz
  2643     046F  2C72               	goto	u5385
  2644     0470  0863               	movf	_Temp,w
  2645     0471  026C               	subwf	_Max_Temp,w
  2646     0472                     u5385:
  2647     0472  1803               	skipnc
  2648     0473  2C75               	goto	u5381
  2649     0474  2C76               	goto	u5380
  2650     0475                     u5381:
  2651     0475  2A66               	goto	l3947
  2652     0476                     u5380:
  2653     0476                     l4035:
  2654                           
  2655                           ;Temperature_Controlled_Fan_System.c: 99:         Max_Temp = Temp;
  2656     0476  0864               	movf	_Temp+1,w
  2657     0477  00ED               	movwf	_Max_Temp+1
  2658     0478  0863               	movf	_Temp,w
  2659     0479  00EC               	movwf	_Max_Temp
  2660     047A                     l4037:
  2661                           
  2662                           ;Temperature_Controlled_Fan_System.c: 100:         WRITE_DATA_EEPROM(0xFF,Max_Temp);
  2663     047A  30FF               	movlw	255
  2664     047B  00F0               	movwf	WRITE_DATA_EEPROM@add
  2665     047C  3000               	movlw	0
  2666     047D  00F1               	movwf	WRITE_DATA_EEPROM@add+1
  2667     047E  086C               	movf	_Max_Temp,w
  2668     047F  00F2               	movwf	WRITE_DATA_EEPROM@data
  2669     0480  160A  118A  258C  120A  118A  	fcall	_WRITE_DATA_EEPROM
  2670     0485  2A66               	goto	l3947
  2671     0486  120A  118A  2800   	ljmp	start
  2672     0489                     __end_of_main:
  2673                           
  2674                           	psect	text1
  2675     14F7                     __ptext1:	
  2676 ;; *************** function _motor_turn_right *****************
  2677 ;; Defined at:
  2678 ;;		line 19 in file "ECU_LAYER/Motor/ecu_motor_driver.c"
  2679 ;; Parameters:    Size  Location     Type
  2680 ;;  motor           1    wreg     PTR const struct .
  2681 ;;		 -> motor1(2), 
  2682 ;; Auto vars:     Size  Location     Type
  2683 ;;  motor           1    9[COMMON] PTR const struct .
  2684 ;;		 -> motor1(2), 
  2685 ;;  ret             1    8[COMMON] unsigned char 
  2686 ;; Return value:  Size  Location     Type
  2687 ;;                  1    wreg      unsigned char 
  2688 ;; Registers used:
  2689 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2690 ;; Tracked objects:
  2691 ;;		On entry : 0/0
  2692 ;;		On exit  : 0/0
  2693 ;;		Unchanged: 0/0
  2694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2695 ;;      Params:         0       0       0       0       0
  2696 ;;      Locals:         2       0       0       0       0
  2697 ;;      Temps:          0       0       0       0       0
  2698 ;;      Totals:         2       0       0       0       0
  2699 ;;Total ram usage:        2 bytes
  2700 ;; Hardware stack levels used: 1
  2701 ;; Hardware stack levels required when called: 1
  2702 ;; This function calls:
  2703 ;;		_gpio_pin_write_logic
  2704 ;; This function is called by:
  2705 ;;		_main
  2706 ;; This function uses a non-reentrant model
  2707 ;;
  2708                           
  2709     14F7                     _motor_turn_right:	
  2710                           ;psect for function _motor_turn_right
  2711                           
  2712                           
  2713                           ;incstack = 0
  2714                           ; Regs used in _motor_turn_right: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2715                           ;motor_turn_right@motor stored from wreg
  2716     14F7  00F9               	movwf	motor_turn_right@motor
  2717     14F8                     l3311:
  2718     14F8                     l3313:
  2719                           
  2720                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 21:     if(motor == ((void*)0)){
  2721     14F8  0879               	movf	motor_turn_right@motor,w
  2722     14F9  1D03               	btfss	3,2
  2723     14FA  2CFC               	goto	u3961
  2724     14FB  2CFD               	goto	u3960
  2725     14FC                     u3961:
  2726     14FC  2CFE               	goto	l3317
  2727     14FD                     u3960:
  2728     14FD                     l3315:
  2729                           
  2730                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 23:     }
  2731     14FD  2D10               	goto	l150
  2732     14FE                     l3317:
  2733                           
  2734                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 25:         ret = gpio_pin_write_logic(&(motor->pin
      +                          s[0]),GPIO_HIGH);
  2735     14FE  01F0               	clrf	gpio_pin_write_logic@logic
  2736     14FF  0AF0               	incf	gpio_pin_write_logic@logic,f
  2737     1500  0879               	movf	motor_turn_right@motor,w
  2738     1501  120A  158A  2631  160A  118A  	fcall	_gpio_pin_write_logic
  2739     1506  00F8               	movwf	motor_turn_right@ret
  2740                           
  2741                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 26:         ret = gpio_pin_write_logic(&(motor->pin
      +                          s[1]),GPIO_LOW);
  2742     1507  01F0               	clrf	gpio_pin_write_logic@logic
  2743     1508  0879               	movf	motor_turn_right@motor,w
  2744     1509  3E01               	addlw	1
  2745     150A  120A  158A  2631  160A  118A  	fcall	_gpio_pin_write_logic
  2746     150F  00F8               	movwf	motor_turn_right@ret
  2747     1510                     l150:
  2748     1510  0008               	return
  2749     1511                     __end_of_motor_turn_right:
  2750                           
  2751                           	psect	text2
  2752     14C4                     __ptext2:	
  2753 ;; *************** function _motor_turn_off *****************
  2754 ;; Defined at:
  2755 ;;		line 41 in file "ECU_LAYER/Motor/ecu_motor_driver.c"
  2756 ;; Parameters:    Size  Location     Type
  2757 ;;  motor           1    wreg     PTR const struct .
  2758 ;;		 -> motor2(2), motor1(2), 
  2759 ;; Auto vars:     Size  Location     Type
  2760 ;;  motor           1    9[COMMON] PTR const struct .
  2761 ;;		 -> motor2(2), motor1(2), 
  2762 ;;  ret             1    8[COMMON] unsigned char 
  2763 ;; Return value:  Size  Location     Type
  2764 ;;                  1    wreg      unsigned char 
  2765 ;; Registers used:
  2766 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2767 ;; Tracked objects:
  2768 ;;		On entry : 0/0
  2769 ;;		On exit  : 0/0
  2770 ;;		Unchanged: 0/0
  2771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2772 ;;      Params:         0       0       0       0       0
  2773 ;;      Locals:         2       0       0       0       0
  2774 ;;      Temps:          0       0       0       0       0
  2775 ;;      Totals:         2       0       0       0       0
  2776 ;;Total ram usage:        2 bytes
  2777 ;; Hardware stack levels used: 1
  2778 ;; Hardware stack levels required when called: 1
  2779 ;; This function calls:
  2780 ;;		_gpio_pin_write_logic
  2781 ;; This function is called by:
  2782 ;;		_main
  2783 ;; This function uses a non-reentrant model
  2784 ;;
  2785                           
  2786     14C4                     _motor_turn_off:	
  2787                           ;psect for function _motor_turn_off
  2788                           
  2789                           
  2790                           ;incstack = 0
  2791                           ; Regs used in _motor_turn_off: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2792                           ;motor_turn_off@motor stored from wreg
  2793     14C4  00F9               	movwf	motor_turn_off@motor
  2794     14C5                     l3331:
  2795     14C5                     l3333:
  2796                           
  2797                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 43:     if(motor == ((void*)0)){
  2798     14C5  0879               	movf	motor_turn_off@motor,w
  2799     14C6  1D03               	btfss	3,2
  2800     14C7  2CC9               	goto	u3981
  2801     14C8  2CCA               	goto	u3980
  2802     14C9                     u3981:
  2803     14C9  2CCB               	goto	l3337
  2804     14CA                     u3980:
  2805     14CA                     l3335:
  2806                           
  2807                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 45:     }
  2808     14CA  2CDC               	goto	l160
  2809     14CB                     l3337:
  2810                           
  2811                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 47:         ret = gpio_pin_write_logic(&(motor->pin
      +                          s[0]),GPIO_LOW);
  2812     14CB  01F0               	clrf	gpio_pin_write_logic@logic
  2813     14CC  0879               	movf	motor_turn_off@motor,w
  2814     14CD  120A  158A  2631  160A  118A  	fcall	_gpio_pin_write_logic
  2815     14D2  00F8               	movwf	motor_turn_off@ret
  2816                           
  2817                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 48:         ret = gpio_pin_write_logic(&(motor->pin
      +                          s[1]),GPIO_LOW);
  2818     14D3  01F0               	clrf	gpio_pin_write_logic@logic
  2819     14D4  0879               	movf	motor_turn_off@motor,w
  2820     14D5  3E01               	addlw	1
  2821     14D6  120A  158A  2631  160A  118A  	fcall	_gpio_pin_write_logic
  2822     14DB  00F8               	movwf	motor_turn_off@ret
  2823     14DC                     l160:
  2824     14DC  0008               	return
  2825     14DD                     __end_of_motor_turn_off:
  2826                           
  2827                           	psect	text3
  2828     14DD                     __ptext3:	
  2829 ;; *************** function _motor_turn_left *****************
  2830 ;; Defined at:
  2831 ;;		line 30 in file "ECU_LAYER/Motor/ecu_motor_driver.c"
  2832 ;; Parameters:    Size  Location     Type
  2833 ;;  motor           1    wreg     PTR const struct .
  2834 ;;		 -> motor2(2), 
  2835 ;; Auto vars:     Size  Location     Type
  2836 ;;  motor           1    9[COMMON] PTR const struct .
  2837 ;;		 -> motor2(2), 
  2838 ;;  ret             1    8[COMMON] unsigned char 
  2839 ;; Return value:  Size  Location     Type
  2840 ;;                  1    wreg      unsigned char 
  2841 ;; Registers used:
  2842 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2843 ;; Tracked objects:
  2844 ;;		On entry : 0/0
  2845 ;;		On exit  : 0/0
  2846 ;;		Unchanged: 0/0
  2847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2848 ;;      Params:         0       0       0       0       0
  2849 ;;      Locals:         2       0       0       0       0
  2850 ;;      Temps:          0       0       0       0       0
  2851 ;;      Totals:         2       0       0       0       0
  2852 ;;Total ram usage:        2 bytes
  2853 ;; Hardware stack levels used: 1
  2854 ;; Hardware stack levels required when called: 1
  2855 ;; This function calls:
  2856 ;;		_gpio_pin_write_logic
  2857 ;; This function is called by:
  2858 ;;		_main
  2859 ;; This function uses a non-reentrant model
  2860 ;;
  2861                           
  2862     14DD                     _motor_turn_left:	
  2863                           ;psect for function _motor_turn_left
  2864                           
  2865                           
  2866                           ;incstack = 0
  2867                           ; Regs used in _motor_turn_left: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2868                           ;motor_turn_left@motor stored from wreg
  2869     14DD  00F9               	movwf	motor_turn_left@motor
  2870     14DE                     l3321:
  2871     14DE                     l3323:
  2872                           
  2873                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 32:     if(motor == ((void*)0)){
  2874     14DE  0879               	movf	motor_turn_left@motor,w
  2875     14DF  1D03               	btfss	3,2
  2876     14E0  2CE2               	goto	u3971
  2877     14E1  2CE3               	goto	u3970
  2878     14E2                     u3971:
  2879     14E2  2CE4               	goto	l3327
  2880     14E3                     u3970:
  2881     14E3                     l3325:
  2882                           
  2883                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 34:     }
  2884     14E3  2CF6               	goto	l155
  2885     14E4                     l3327:
  2886                           
  2887                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 36:         ret = gpio_pin_write_logic(&(motor->pin
      +                          s[0]),GPIO_LOW);
  2888     14E4  01F0               	clrf	gpio_pin_write_logic@logic
  2889     14E5  0879               	movf	motor_turn_left@motor,w
  2890     14E6  120A  158A  2631  160A  118A  	fcall	_gpio_pin_write_logic
  2891     14EB  00F8               	movwf	motor_turn_left@ret
  2892                           
  2893                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 37:         ret = gpio_pin_write_logic(&(motor->pin
      +                          s[1]),GPIO_HIGH);
  2894     14EC  01F0               	clrf	gpio_pin_write_logic@logic
  2895     14ED  0AF0               	incf	gpio_pin_write_logic@logic,f
  2896     14EE  0879               	movf	motor_turn_left@motor,w
  2897     14EF  3E01               	addlw	1
  2898     14F0  120A  158A  2631  160A  118A  	fcall	_gpio_pin_write_logic
  2899     14F5  00F8               	movwf	motor_turn_left@ret
  2900     14F6                     l155:
  2901     14F6  0008               	return
  2902     14F7                     __end_of_motor_turn_left:
  2903                           
  2904                           	psect	text4
  2905     15F2                     __ptext4:	
  2906 ;; *************** function _lcd_4bits_send_string_pos *****************
  2907 ;; Defined at:
  2908 ;;		line 94 in file "ECU_LAYER/LCD/ecu_lcd.c"
  2909 ;; Parameters:    Size  Location     Type
  2910 ;;  lcd             1    wreg     PTR const struct .
  2911 ;;		 -> lcd(6), 
  2912 ;;  Row             1    6[BANK0 ] unsigned char 
  2913 ;;  coloumn         1    7[BANK0 ] unsigned char 
  2914 ;;  data            2    8[BANK0 ] PTR unsigned char 
  2915 ;;		 -> STR_8(15), STR_7(15), STR_6(11), lcd_show_max(6), 
  2916 ;;		 -> STR_4(15), lcd_show(6), 
  2917 ;; Auto vars:     Size  Location     Type
  2918 ;;  lcd             1   11[BANK0 ] PTR const struct .
  2919 ;;		 -> lcd(6), 
  2920 ;;  ret             1   10[BANK0 ] unsigned char 
  2921 ;; Return value:  Size  Location     Type
  2922 ;;                  1    wreg      unsigned char 
  2923 ;; Registers used:
  2924 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2925 ;; Tracked objects:
  2926 ;;		On entry : 0/0
  2927 ;;		On exit  : 0/0
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2930 ;;      Params:         0       4       0       0       0
  2931 ;;      Locals:         0       2       0       0       0
  2932 ;;      Temps:          0       0       0       0       0
  2933 ;;      Totals:         0       6       0       0       0
  2934 ;;Total ram usage:        6 bytes
  2935 ;; Hardware stack levels used: 1
  2936 ;; Hardware stack levels required when called: 4
  2937 ;; This function calls:
  2938 ;;		_lcd_4bits_send_string
  2939 ;;		_set_cursor
  2940 ;; This function is called by:
  2941 ;;		_main
  2942 ;; This function uses a non-reentrant model
  2943 ;;
  2944                           
  2945     15F2                     _lcd_4bits_send_string_pos:	
  2946                           ;psect for function _lcd_4bits_send_string_pos
  2947                           
  2948                           
  2949                           ;incstack = 0
  2950                           ; Regs used in _lcd_4bits_send_string_pos: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+
      +                          cstack]
  2951                           ;lcd_4bits_send_string_pos@lcd stored from wreg
  2952     15F2  1283               	bcf	3,5	;RP0=0, select bank0
  2953     15F3  1303               	bcf	3,6	;RP1=0, select bank0
  2954     15F4  00AB               	movwf	lcd_4bits_send_string_pos@lcd
  2955     15F5                     l3285:
  2956     15F5                     l3287:
  2957                           
  2958                           ;ECU_LAYER/LCD/ecu_lcd.c: 96:     if(lcd == ((void*)0)){
  2959     15F5  082B               	movf	lcd_4bits_send_string_pos@lcd,w
  2960     15F6  1D03               	btfss	3,2
  2961     15F7  2DF9               	goto	u3931
  2962     15F8  2DFA               	goto	u3930
  2963     15F9                     u3931:
  2964     15F9  2DFB               	goto	l3291
  2965     15FA                     u3930:
  2966     15FA                     l3289:
  2967                           
  2968                           ;ECU_LAYER/LCD/ecu_lcd.c: 98:     }
  2969     15FA  2E15               	goto	l85
  2970     15FB                     l3291:
  2971                           
  2972                           ;ECU_LAYER/LCD/ecu_lcd.c: 100:         ret = set_cursor(lcd,Row,coloumn);
  2973     15FB  0826               	movf	lcd_4bits_send_string_pos@Row,w
  2974     15FC  00A2               	movwf	set_cursor@Row
  2975     15FD  0827               	movf	lcd_4bits_send_string_pos@coloumn,w
  2976     15FE  00A3               	movwf	set_cursor@coloumn
  2977     15FF  082B               	movf	lcd_4bits_send_string_pos@lcd,w
  2978     1600  160A  118A  2665  160A  118A  	fcall	_set_cursor
  2979     1605  1283               	bcf	3,5	;RP0=0, select bank0
  2980     1606  1303               	bcf	3,6	;RP1=0, select bank0
  2981     1607  00AA               	movwf	lcd_4bits_send_string_pos@ret
  2982                           
  2983                           ;ECU_LAYER/LCD/ecu_lcd.c: 101:         ret = lcd_4bits_send_string(lcd,data);
  2984     1608  0828               	movf	lcd_4bits_send_string_pos@data,w
  2985     1609  00A2               	movwf	lcd_4bits_send_string@data
  2986     160A  0829               	movf	lcd_4bits_send_string_pos@data+1,w
  2987     160B  00A3               	movwf	lcd_4bits_send_string@data+1
  2988     160C  082B               	movf	lcd_4bits_send_string_pos@lcd,w
  2989     160D  160A  118A  26FA  160A  118A  	fcall	_lcd_4bits_send_string
  2990     1612  1283               	bcf	3,5	;RP0=0, select bank0
  2991     1613  1303               	bcf	3,6	;RP1=0, select bank0
  2992     1614  00AA               	movwf	lcd_4bits_send_string_pos@ret
  2993     1615                     l85:
  2994     1615  0008               	return
  2995     1616                     __end_of_lcd_4bits_send_string_pos:
  2996                           
  2997                           	psect	text5
  2998     1665                     __ptext5:	
  2999 ;; *************** function _set_cursor *****************
  3000 ;; Defined at:
  3001 ;;		line 183 in file "ECU_LAYER/LCD/ecu_lcd.c"
  3002 ;; Parameters:    Size  Location     Type
  3003 ;;  lcd             1    wreg     PTR const struct .
  3004 ;;		 -> lcd(6), 
  3005 ;;  Row             1    2[BANK0 ] unsigned char 
  3006 ;;  coloumn         1    3[BANK0 ] unsigned char 
  3007 ;; Auto vars:     Size  Location     Type
  3008 ;;  lcd             1    5[BANK0 ] PTR const struct .
  3009 ;;		 -> lcd(6), 
  3010 ;;  ret             1    4[BANK0 ] unsigned char 
  3011 ;; Return value:  Size  Location     Type
  3012 ;;                  1    wreg      unsigned char 
  3013 ;; Registers used:
  3014 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3015 ;; Tracked objects:
  3016 ;;		On entry : 0/0
  3017 ;;		On exit  : 0/0
  3018 ;;		Unchanged: 0/0
  3019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3020 ;;      Params:         0       2       0       0       0
  3021 ;;      Locals:         0       2       0       0       0
  3022 ;;      Temps:          0       0       0       0       0
  3023 ;;      Totals:         0       4       0       0       0
  3024 ;;Total ram usage:        4 bytes
  3025 ;; Hardware stack levels used: 1
  3026 ;; Hardware stack levels required when called: 3
  3027 ;; This function calls:
  3028 ;;		_lcd_4bits_send_command
  3029 ;; This function is called by:
  3030 ;;		_lcd_4bits_send_string_pos
  3031 ;;		_lcd_4bits_send_char_pos
  3032 ;; This function uses a non-reentrant model
  3033 ;;
  3034                           
  3035     1665                     _set_cursor:	
  3036                           ;psect for function _set_cursor
  3037                           
  3038                           
  3039                           ;incstack = 0
  3040                           ; Regs used in _set_cursor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3041                           ;set_cursor@lcd stored from wreg
  3042     1665  1283               	bcf	3,5	;RP0=0, select bank0
  3043     1666  1303               	bcf	3,6	;RP1=0, select bank0
  3044     1667  00A5               	movwf	set_cursor@lcd
  3045     1668                     l3113:
  3046                           
  3047                           ;ECU_LAYER/LCD/ecu_lcd.c: 184:     uint8 ret = 0x00;
  3048     1668  01A4               	clrf	set_cursor@ret
  3049     1669                     l3115:
  3050                           
  3051                           ;ECU_LAYER/LCD/ecu_lcd.c: 185:     if(lcd == ((void*)0)){
  3052     1669  0825               	movf	set_cursor@lcd,w
  3053     166A  1D03               	btfss	3,2
  3054     166B  2E6D               	goto	u3721
  3055     166C  2E6E               	goto	u3720
  3056     166D                     u3721:
  3057     166D  2E8B               	goto	l3125
  3058     166E                     u3720:
  3059     166E                     l3117:
  3060                           
  3061                           ;ECU_LAYER/LCD/ecu_lcd.c: 186:         ret = 0x01;
  3062     166E  01A4               	clrf	set_cursor@ret
  3063     166F  0AA4               	incf	set_cursor@ret,f
  3064                           
  3065                           ;ECU_LAYER/LCD/ecu_lcd.c: 187:     }
  3066     1670  2E93               	goto	l3127
  3067     1671                     l3119:
  3068                           
  3069                           ;ECU_LAYER/LCD/ecu_lcd.c: 191:                 ret = lcd_4bits_send_command(lcd,(0x80 + 
      +                          coloumn));
  3070     1671  0823               	movf	set_cursor@coloumn,w
  3071     1672  3E80               	addlw	128
  3072     1673  00FC               	movwf	lcd_4bits_send_command@command
  3073     1674  0825               	movf	set_cursor@lcd,w
  3074     1675  160A  118A  2771  160A  118A  	fcall	_lcd_4bits_send_command
  3075     167A  1283               	bcf	3,5	;RP0=0, select bank0
  3076     167B  1303               	bcf	3,6	;RP1=0, select bank0
  3077     167C  00A4               	movwf	set_cursor@ret
  3078                           
  3079                           ;ECU_LAYER/LCD/ecu_lcd.c: 192:                 break;
  3080     167D  2E93               	goto	l3127
  3081     167E                     l3121:
  3082                           
  3083                           ;ECU_LAYER/LCD/ecu_lcd.c: 194:                 ret = lcd_4bits_send_command(lcd,(0xC0 + 
      +                          coloumn));
  3084     167E  0823               	movf	set_cursor@coloumn,w
  3085     167F  3EC0               	addlw	192
  3086     1680  00FC               	movwf	lcd_4bits_send_command@command
  3087     1681  0825               	movf	set_cursor@lcd,w
  3088     1682  160A  118A  2771  160A  118A  	fcall	_lcd_4bits_send_command
  3089     1687  1283               	bcf	3,5	;RP0=0, select bank0
  3090     1688  1303               	bcf	3,6	;RP1=0, select bank0
  3091     1689  00A4               	movwf	set_cursor@ret
  3092                           
  3093                           ;ECU_LAYER/LCD/ecu_lcd.c: 195:                 break;
  3094     168A  2E93               	goto	l3127
  3095     168B                     l3125:
  3096     168B  0822               	movf	set_cursor@Row,w
  3097                           
  3098                           ; Switch size 1, requested type "simple"
  3099                           ; Number of cases is 2, Range of values is 1 to 2
  3100                           ; switch strategies available:
  3101                           ; Name         Instructions Cycles
  3102                           ; simple_byte            7     4 (average)
  3103                           ; direct_byte           17    11 (fixed)
  3104                           ; jumptable            263     9 (fixed)
  3105                           ;	Chosen strategy is simple_byte
  3106     168C  3A01               	xorlw	1	; case 1
  3107     168D  1903               	skipnz
  3108     168E  2E71               	goto	l3119
  3109     168F  3A03               	xorlw	3	; case 2
  3110     1690  1903               	skipnz
  3111     1691  2E7E               	goto	l3121
  3112     1692  2E93               	goto	l3127
  3113     1693                     l3127:
  3114                           
  3115                           ;ECU_LAYER/LCD/ecu_lcd.c: 200:     return ret;
  3116     1693  0824               	movf	set_cursor@ret,w
  3117     1694                     l136:
  3118     1694  0008               	return
  3119     1695                     __end_of_set_cursor:
  3120                           
  3121                           	psect	text6
  3122     16FA                     __ptext6:	
  3123 ;; *************** function _lcd_4bits_send_string *****************
  3124 ;; Defined at:
  3125 ;;		line 82 in file "ECU_LAYER/LCD/ecu_lcd.c"
  3126 ;; Parameters:    Size  Location     Type
  3127 ;;  lcd             1    wreg     PTR const struct .
  3128 ;;		 -> lcd(6), 
  3129 ;;  data            2    2[BANK0 ] PTR unsigned char 
  3130 ;;		 -> STR_8(15), STR_7(15), STR_6(11), lcd_show_max(6), 
  3131 ;;		 -> STR_5(17), STR_4(15), lcd_show(6), 
  3132 ;; Auto vars:     Size  Location     Type
  3133 ;;  lcd             1    5[BANK0 ] PTR const struct .
  3134 ;;		 -> lcd(6), 
  3135 ;;  ret             1    4[BANK0 ] unsigned char 
  3136 ;; Return value:  Size  Location     Type
  3137 ;;                  1    wreg      unsigned char 
  3138 ;; Registers used:
  3139 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3140 ;; Tracked objects:
  3141 ;;		On entry : 0/0
  3142 ;;		On exit  : 0/0
  3143 ;;		Unchanged: 0/0
  3144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3145 ;;      Params:         0       2       0       0       0
  3146 ;;      Locals:         0       2       0       0       0
  3147 ;;      Temps:          0       0       0       0       0
  3148 ;;      Totals:         0       4       0       0       0
  3149 ;;Total ram usage:        4 bytes
  3150 ;; Hardware stack levels used: 1
  3151 ;; Hardware stack levels required when called: 3
  3152 ;; This function calls:
  3153 ;;		_lcd_4bits_send_char
  3154 ;; This function is called by:
  3155 ;;		_lcd_4bits_send_string_pos
  3156 ;;		_main
  3157 ;; This function uses a non-reentrant model
  3158 ;;
  3159                           
  3160     16FA                     _lcd_4bits_send_string:	
  3161                           ;psect for function _lcd_4bits_send_string
  3162                           
  3163                           
  3164                           ;incstack = 0
  3165                           ; Regs used in _lcd_4bits_send_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  3166                           ;lcd_4bits_send_string@lcd stored from wreg
  3167     16FA  1283               	bcf	3,5	;RP0=0, select bank0
  3168     16FB  1303               	bcf	3,6	;RP1=0, select bank0
  3169     16FC  00A5               	movwf	lcd_4bits_send_string@lcd
  3170     16FD                     l3131:
  3171                           
  3172                           ;ECU_LAYER/LCD/ecu_lcd.c: 83:     uint8 ret = 0x00;
  3173     16FD  01A4               	clrf	lcd_4bits_send_string@ret
  3174     16FE                     l3133:
  3175                           
  3176                           ;ECU_LAYER/LCD/ecu_lcd.c: 84:     if(lcd == ((void*)0)){
  3177     16FE  0825               	movf	lcd_4bits_send_string@lcd,w
  3178     16FF  1D03               	btfss	3,2
  3179     1700  2F02               	goto	u3731
  3180     1701  2F03               	goto	u3730
  3181     1702                     u3731:
  3182     1702  2F1F               	goto	l3141
  3183     1703                     u3730:
  3184     1703                     l3135:
  3185                           
  3186                           ;ECU_LAYER/LCD/ecu_lcd.c: 85:         ret = 0x01;
  3187     1703  01A4               	clrf	lcd_4bits_send_string@ret
  3188     1704  0AA4               	incf	lcd_4bits_send_string@ret,f
  3189                           
  3190                           ;ECU_LAYER/LCD/ecu_lcd.c: 86:     }
  3191     1705  2F2D               	goto	l3143
  3192     1706                     l3137:
  3193                           
  3194                           ;ECU_LAYER/LCD/ecu_lcd.c: 89:             ret = lcd_4bits_send_char(lcd,*data++);
  3195     1706  0823               	movf	lcd_4bits_send_string@data+1,w
  3196     1707  00FF               	movwf	btemp+1
  3197     1708  0822               	movf	lcd_4bits_send_string@data,w
  3198     1709  0084               	movwf	4
  3199     170A  120A  158A  2000  160A  118A  	fcall	stringtab
  3200     170F  00FC               	movwf	lcd_4bits_send_char@data
  3201     1710  0825               	movf	lcd_4bits_send_string@lcd,w
  3202     1711  160A  118A  27B8  160A  118A  	fcall	_lcd_4bits_send_char
  3203     1716  1283               	bcf	3,5	;RP0=0, select bank0
  3204     1717  1303               	bcf	3,6	;RP1=0, select bank0
  3205     1718  00A4               	movwf	lcd_4bits_send_string@ret
  3206     1719                     l3139:
  3207     1719  3001               	movlw	1
  3208     171A  07A2               	addwf	lcd_4bits_send_string@data,f
  3209     171B  1803               	skipnc
  3210     171C  0AA3               	incf	lcd_4bits_send_string@data+1,f
  3211     171D  3000               	movlw	0
  3212     171E  07A3               	addwf	lcd_4bits_send_string@data+1,f
  3213     171F                     l3141:
  3214                           
  3215                           ;ECU_LAYER/LCD/ecu_lcd.c: 88:         while(*data){
  3216     171F  0823               	movf	lcd_4bits_send_string@data+1,w
  3217     1720  00FF               	movwf	btemp+1
  3218     1721  0822               	movf	lcd_4bits_send_string@data,w
  3219     1722  0084               	movwf	4
  3220     1723  120A  158A  2000  160A  118A  	fcall	stringtab
  3221     1728  3A00               	xorlw	0
  3222     1729  1D03               	skipz
  3223     172A  2F2C               	goto	u3741
  3224     172B  2F2D               	goto	u3740
  3225     172C                     u3741:
  3226     172C  2F06               	goto	l3137
  3227     172D                     u3740:
  3228     172D                     l3143:
  3229                           
  3230                           ;ECU_LAYER/LCD/ecu_lcd.c: 92:     return ret;
  3231     172D  0824               	movf	lcd_4bits_send_string@ret,w
  3232     172E                     l80:
  3233     172E  0008               	return
  3234     172F                     __end_of_lcd_4bits_send_string:
  3235                           
  3236                           	psect	text7
  3237     17B8                     __ptext7:	
  3238 ;; *************** function _lcd_4bits_send_char *****************
  3239 ;; Defined at:
  3240 ;;		line 57 in file "ECU_LAYER/LCD/ecu_lcd.c"
  3241 ;; Parameters:    Size  Location     Type
  3242 ;;  lcd             1    wreg     PTR const struct .
  3243 ;;		 -> lcd(6), 
  3244 ;;  data            1   12[COMMON] unsigned char 
  3245 ;; Auto vars:     Size  Location     Type
  3246 ;;  lcd             1    1[BANK0 ] PTR const struct .
  3247 ;;		 -> lcd(6), 
  3248 ;;  ret             1    0[BANK0 ] unsigned char 
  3249 ;; Return value:  Size  Location     Type
  3250 ;;                  1    wreg      unsigned char 
  3251 ;; Registers used:
  3252 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3253 ;; Tracked objects:
  3254 ;;		On entry : 0/0
  3255 ;;		On exit  : 0/0
  3256 ;;		Unchanged: 0/0
  3257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3258 ;;      Params:         1       0       0       0       0
  3259 ;;      Locals:         0       2       0       0       0
  3260 ;;      Temps:          1       0       0       0       0
  3261 ;;      Totals:         2       2       0       0       0
  3262 ;;Total ram usage:        4 bytes
  3263 ;; Hardware stack levels used: 1
  3264 ;; Hardware stack levels required when called: 2
  3265 ;; This function calls:
  3266 ;;		_gpio_pin_write_logic
  3267 ;;		_send_4bits
  3268 ;;		_send_enable_signal
  3269 ;; This function is called by:
  3270 ;;		_lcd_4bits_send_string
  3271 ;;		_lcd_4bits_send_char_pos
  3272 ;;		_lcd_4bit_custom_character
  3273 ;; This function uses a non-reentrant model
  3274 ;;
  3275                           
  3276     17B8                     _lcd_4bits_send_char:	
  3277                           ;psect for function _lcd_4bits_send_char
  3278                           
  3279                           
  3280                           ;incstack = 0
  3281                           ; Regs used in _lcd_4bits_send_char: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  3282                           ;lcd_4bits_send_char@lcd stored from wreg
  3283     17B8  1283               	bcf	3,5	;RP0=0, select bank0
  3284     17B9  1303               	bcf	3,6	;RP1=0, select bank0
  3285     17BA  00A1               	movwf	lcd_4bits_send_char@lcd
  3286     17BB                     l3031:
  3287     17BB                     l3033:
  3288                           
  3289                           ;ECU_LAYER/LCD/ecu_lcd.c: 59:     if(lcd == ((void*)0)){
  3290     17BB  0821               	movf	lcd_4bits_send_char@lcd,w
  3291     17BC  1D03               	btfss	3,2
  3292     17BD  2FBF               	goto	u3541
  3293     17BE  2FC0               	goto	u3540
  3294     17BF                     u3541:
  3295     17BF  2FC3               	goto	l3037
  3296     17C0                     u3540:
  3297     17C0                     l3035:
  3298                           
  3299                           ;ECU_LAYER/LCD/ecu_lcd.c: 60:         ret = 0x01;
  3300     17C0  01A0               	clrf	lcd_4bits_send_char@ret
  3301     17C1  0AA0               	incf	lcd_4bits_send_char@ret,f
  3302                           
  3303                           ;ECU_LAYER/LCD/ecu_lcd.c: 61:     }
  3304     17C2  2FFE               	goto	l3039
  3305     17C3                     l3037:
  3306                           
  3307                           ;ECU_LAYER/LCD/ecu_lcd.c: 63:         ret = gpio_pin_write_logic(&(lcd->rs),GPIO_HIGH);
  3308     17C3  01F0               	clrf	gpio_pin_write_logic@logic
  3309     17C4  0AF0               	incf	gpio_pin_write_logic@logic,f
  3310     17C5  0821               	movf	lcd_4bits_send_char@lcd,w
  3311     17C6  120A  158A  2631  160A  118A  	fcall	_gpio_pin_write_logic
  3312     17CB  1283               	bcf	3,5	;RP0=0, select bank0
  3313     17CC  1303               	bcf	3,6	;RP1=0, select bank0
  3314     17CD  00A0               	movwf	lcd_4bits_send_char@ret
  3315                           
  3316                           ;ECU_LAYER/LCD/ecu_lcd.c: 64:         ret = send_4bits(lcd,(data >> 4));
  3317     17CE  087C               	movf	lcd_4bits_send_char@data,w
  3318     17CF  00FD               	movwf	??_lcd_4bits_send_char
  3319     17D0  3004               	movlw	4
  3320     17D1                     u3555:
  3321     17D1  1003               	clrc
  3322     17D2  0CFD               	rrf	??_lcd_4bits_send_char,f
  3323     17D3  3EFF               	addlw	-1
  3324     17D4  1D03               	skipz
  3325     17D5  2FD1               	goto	u3555
  3326     17D6  087D               	movf	??_lcd_4bits_send_char,w
  3327     17D7  00F8               	movwf	send_4bits@command
  3328     17D8  0821               	movf	lcd_4bits_send_char@lcd,w
  3329     17D9  120A  158A  20D3  160A  118A  	fcall	_send_4bits
  3330     17DE  1283               	bcf	3,5	;RP0=0, select bank0
  3331     17DF  1303               	bcf	3,6	;RP1=0, select bank0
  3332     17E0  00A0               	movwf	lcd_4bits_send_char@ret
  3333                           
  3334                           ;ECU_LAYER/LCD/ecu_lcd.c: 65:          ret = send_enable_signal(lcd);
  3335     17E1  0821               	movf	lcd_4bits_send_char@lcd,w
  3336     17E2  160A  118A  25AD  160A  118A  	fcall	_send_enable_signal
  3337     17E7  1283               	bcf	3,5	;RP0=0, select bank0
  3338     17E8  1303               	bcf	3,6	;RP1=0, select bank0
  3339     17E9  00A0               	movwf	lcd_4bits_send_char@ret
  3340                           
  3341                           ;ECU_LAYER/LCD/ecu_lcd.c: 66:         ret = send_4bits(lcd,data);
  3342     17EA  087C               	movf	lcd_4bits_send_char@data,w
  3343     17EB  00F8               	movwf	send_4bits@command
  3344     17EC  0821               	movf	lcd_4bits_send_char@lcd,w
  3345     17ED  120A  158A  20D3  160A  118A  	fcall	_send_4bits
  3346     17F2  1283               	bcf	3,5	;RP0=0, select bank0
  3347     17F3  1303               	bcf	3,6	;RP1=0, select bank0
  3348     17F4  00A0               	movwf	lcd_4bits_send_char@ret
  3349                           
  3350                           ;ECU_LAYER/LCD/ecu_lcd.c: 67:         ret = send_enable_signal(lcd);
  3351     17F5  0821               	movf	lcd_4bits_send_char@lcd,w
  3352     17F6  160A  118A  25AD  160A  118A  	fcall	_send_enable_signal
  3353     17FB  1283               	bcf	3,5	;RP0=0, select bank0
  3354     17FC  1303               	bcf	3,6	;RP1=0, select bank0
  3355     17FD  00A0               	movwf	lcd_4bits_send_char@ret
  3356     17FE                     l3039:
  3357                           
  3358                           ;ECU_LAYER/LCD/ecu_lcd.c: 69:     return ret;
  3359     17FE  0820               	movf	lcd_4bits_send_char@ret,w
  3360     17FF                     l67:
  3361     17FF  0008               	return
  3362     1800                     __end_of_lcd_4bits_send_char:
  3363                           
  3364                           	psect	text8
  3365     0A33                     __ptext8:	
  3366 ;; *************** function _keypad_read_value *****************
  3367 ;; Defined at:
  3368 ;;		line 35 in file "ECU_LAYER/KEYPAD/ecu_keypad.c"
  3369 ;; Parameters:    Size  Location     Type
  3370 ;;  keypad          1    wreg     PTR const struct .
  3371 ;;		 -> keypad(7), 
  3372 ;;  value           1    8[COMMON] PTR unsigned char 
  3373 ;;		 -> temp(4), val(1), 
  3374 ;; Auto vars:     Size  Location     Type
  3375 ;;  keypad          1    2[BANK0 ] PTR const struct .
  3376 ;;		 -> keypad(7), 
  3377 ;;  l_coloumns      1    4[BANK0 ] unsigned char 
  3378 ;;  l_rows          1    3[BANK0 ] unsigned char 
  3379 ;;  counter         1    1[BANK0 ] unsigned char 
  3380 ;;  val             1    0[BANK0 ] unsigned char 
  3381 ;;  ret             1    0        unsigned char 
  3382 ;; Return value:  Size  Location     Type
  3383 ;;                  1    wreg      unsigned char 
  3384 ;; Registers used:
  3385 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3386 ;; Tracked objects:
  3387 ;;		On entry : 0/0
  3388 ;;		On exit  : 0/0
  3389 ;;		Unchanged: 0/0
  3390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3391 ;;      Params:         1       0       0       0       0
  3392 ;;      Locals:         0       5       0       0       0
  3393 ;;      Temps:          2       0       0       0       0
  3394 ;;      Totals:         3       5       0       0       0
  3395 ;;Total ram usage:        8 bytes
  3396 ;; Hardware stack levels used: 1
  3397 ;; Hardware stack levels required when called: 1
  3398 ;; This function calls:
  3399 ;;		___bmul
  3400 ;;		_gpio_pin_read_logic
  3401 ;;		_gpio_pin_write_logic
  3402 ;; This function is called by:
  3403 ;;		_main
  3404 ;; This function uses a non-reentrant model
  3405 ;;
  3406                           
  3407     0A33                     _keypad_read_value:	
  3408                           ;psect for function _keypad_read_value
  3409                           
  3410                           
  3411                           ;incstack = 0
  3412                           ; Regs used in _keypad_read_value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3413                           ;keypad_read_value@keypad stored from wreg
  3414     0A33  1283               	bcf	3,5	;RP0=0, select bank0
  3415     0A34  1303               	bcf	3,6	;RP1=0, select bank0
  3416     0A35  00A2               	movwf	keypad_read_value@keypad
  3417     0A36                     l3225:
  3418                           
  3419                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 37:     uint8 l_rows = 0x00;
  3420     0A36  01A3               	clrf	keypad_read_value@l_rows
  3421                           
  3422                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 38:     uint8 l_coloumns = 0x00;
  3423     0A37  01A4               	clrf	keypad_read_value@l_coloumns
  3424                           
  3425                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 39:     uint8 counter = 0x00;
  3426     0A38  01A1               	clrf	keypad_read_value@counter
  3427                           
  3428                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 40:     uint8 val = 0x00;
  3429     0A39  01A0               	clrf	keypad_read_value@val
  3430     0A3A                     l3227:
  3431                           
  3432                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 41:     if(keypad == ((void*)0)){
  3433     0A3A  0822               	movf	keypad_read_value@keypad,w
  3434     0A3B  1D03               	btfss	3,2
  3435     0A3C  2A3E               	goto	u3871
  3436     0A3D  2A3F               	goto	u3870
  3437     0A3E                     u3871:
  3438     0A3E  2A40               	goto	l3231
  3439     0A3F                     u3870:
  3440     0A3F                     l3229:
  3441                           
  3442                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 43:     }
  3443     0A3F  2AA8               	goto	l32
  3444     0A40                     l3231:
  3445                           
  3446                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 45:         for(l_rows = 0x00;l_rows < 4;l_rows++){
  3447     0A40  01A3               	clrf	keypad_read_value@l_rows
  3448     0A41                     l3237:
  3449                           
  3450                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 46:             for(counter = 0x00;counter < 4;counter++
      +                          ){
  3451     0A41  01A1               	clrf	keypad_read_value@counter
  3452     0A42                     l3243:
  3453     0A42  01F0               	clrf	gpio_pin_write_logic@logic
  3454     0A43  0821               	movf	keypad_read_value@counter,w
  3455     0A44  0722               	addwf	keypad_read_value@keypad,w
  3456     0A45  120A  158A  2631  120A  158A  	fcall	_gpio_pin_write_logic
  3457     0A4A                     l3245:
  3458                           
  3459                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 48:             }
  3460     0A4A  3001               	movlw	1
  3461     0A4B  00FF               	movwf	btemp+1
  3462     0A4C  087F               	movf	btemp+1,w
  3463     0A4D  1283               	bcf	3,5	;RP0=0, select bank0
  3464     0A4E  1303               	bcf	3,6	;RP1=0, select bank0
  3465     0A4F  07A1               	addwf	keypad_read_value@counter,f
  3466     0A50                     l3247:
  3467     0A50  3004               	movlw	4
  3468     0A51  0221               	subwf	keypad_read_value@counter,w
  3469     0A52  1C03               	skipc
  3470     0A53  2A55               	goto	u3881
  3471     0A54  2A56               	goto	u3880
  3472     0A55                     u3881:
  3473     0A55  2A42               	goto	l3243
  3474     0A56                     u3880:
  3475     0A56                     l3249:
  3476     0A56  01F0               	clrf	gpio_pin_write_logic@logic
  3477     0A57  0AF0               	incf	gpio_pin_write_logic@logic,f
  3478     0A58  0823               	movf	keypad_read_value@l_rows,w
  3479     0A59  0722               	addwf	keypad_read_value@keypad,w
  3480     0A5A  120A  158A  2631  120A  158A  	fcall	_gpio_pin_write_logic
  3481     0A5F                     l3251:
  3482                           
  3483                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 50:             _delay((unsigned long)((10)*(8000000UL/4
      +                          000.0)));
  3484     0A5F  301A               	movlw	26
  3485     0A60  00FA               	movwf	??_keypad_read_value+1
  3486     0A61  30F8               	movlw	248
  3487     0A62  00F9               	movwf	??_keypad_read_value
  3488     0A63                     u5447:
  3489     0A63  0BF9               	decfsz	??_keypad_read_value,f
  3490     0A64  2A63               	goto	u5447
  3491     0A65  0BFA               	decfsz	??_keypad_read_value+1,f
  3492     0A66  2A63               	goto	u5447
  3493     0A67  0000               	nop
  3494     0A68                     l3253:
  3495                           
  3496                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 51:             for(l_coloumns = 0x00;l_coloumns < 3;l_c
      +                          oloumns++){
  3497     0A68  1283               	bcf	3,5	;RP0=0, select bank0
  3498     0A69  1303               	bcf	3,6	;RP1=0, select bank0
  3499     0A6A  01A4               	clrf	keypad_read_value@l_coloumns
  3500     0A6B                     l3259:
  3501     0A6B  3020               	movlw	(low (keypad_read_value@val| 0))& (0+255)
  3502     0A6C  00F0               	movwf	gpio_pin_read_logic@logic
  3503     0A6D  0824               	movf	keypad_read_value@l_coloumns,w
  3504     0A6E  0722               	addwf	keypad_read_value@keypad,w
  3505     0A6F  3E04               	addlw	4
  3506     0A70  120A  158A  233C  120A  158A  	fcall	_gpio_pin_read_logic
  3507     0A75                     l3261:
  3508                           
  3509                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 53:                 if(val == GPIO_HIGH){
  3510     0A75  1283               	bcf	3,5	;RP0=0, select bank0
  3511     0A76  1303               	bcf	3,6	;RP1=0, select bank0
  3512     0A77  0320               	decf	keypad_read_value@val,w
  3513     0A78  1D03               	btfss	3,2
  3514     0A79  2A7B               	goto	u3891
  3515     0A7A  2A7C               	goto	u3890
  3516     0A7B                     u3891:
  3517     0A7B  2A94               	goto	l3265
  3518     0A7C                     u3890:
  3519     0A7C                     l3263:
  3520                           
  3521                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 54:                     *value = btn_values[l_rows][l_co
      +                          loumns];
  3522     0A7C  3003               	movlw	3
  3523     0A7D  00F0               	movwf	___bmul@multiplicand
  3524     0A7E  0823               	movf	keypad_read_value@l_rows,w
  3525     0A7F  160A  118A  2498  120A  158A  	fcall	___bmul
  3526     0A84  3E01               	addlw	low ((_btn_values-__stringbase)| (0+32768))
  3527     0A85  1283               	bcf	3,5	;RP0=0, select bank0
  3528     0A86  1303               	bcf	3,6	;RP1=0, select bank0
  3529     0A87  0724               	addwf	keypad_read_value@l_coloumns,w
  3530     0A88  0084               	movwf	4
  3531     0A89  120A  158A  200A  120A  158A  	fcall	stringdir
  3532     0A8E  00FF               	movwf	btemp+1
  3533     0A8F  0878               	movf	keypad_read_value@value,w
  3534     0A90  0084               	movwf	4
  3535     0A91  087F               	movf	btemp+1,w
  3536     0A92  1383               	bcf	3,7	;select IRP bank0
  3537     0A93  0080               	movwf	0
  3538     0A94                     l3265:	
  3539                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 55:                 }
  3540                           
  3541                           
  3542                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 57:             }
  3543     0A94  3001               	movlw	1
  3544     0A95  00FF               	movwf	btemp+1
  3545     0A96  087F               	movf	btemp+1,w
  3546     0A97  07A4               	addwf	keypad_read_value@l_coloumns,f
  3547     0A98                     l3267:
  3548     0A98  3003               	movlw	3
  3549     0A99  0224               	subwf	keypad_read_value@l_coloumns,w
  3550     0A9A  1C03               	skipc
  3551     0A9B  2A9D               	goto	u3901
  3552     0A9C  2A9E               	goto	u3900
  3553     0A9D                     u3901:
  3554     0A9D  2A6B               	goto	l3259
  3555     0A9E                     u3900:
  3556     0A9E                     l3269:
  3557                           
  3558                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 58:         }
  3559     0A9E  3001               	movlw	1
  3560     0A9F  00FF               	movwf	btemp+1
  3561     0AA0  087F               	movf	btemp+1,w
  3562     0AA1  07A3               	addwf	keypad_read_value@l_rows,f
  3563     0AA2                     l3271:
  3564     0AA2  3004               	movlw	4
  3565     0AA3  0223               	subwf	keypad_read_value@l_rows,w
  3566     0AA4  1C03               	skipc
  3567     0AA5  2AA7               	goto	u3911
  3568     0AA6  2AA8               	goto	u3910
  3569     0AA7                     u3911:
  3570     0AA7  2A41               	goto	l3237
  3571     0AA8                     u3910:
  3572     0AA8                     l32:
  3573     0AA8  0008               	return
  3574     0AA9                     __end_of_keypad_read_value:
  3575                           
  3576                           	psect	text9
  3577     0B3C                     __ptext9:	
  3578 ;; *************** function _gpio_pin_read_logic *****************
  3579 ;; Defined at:
  3580 ;;		line 73 in file "MCAL_LAYER/GPIO/mcal_gpio.c"
  3581 ;; Parameters:    Size  Location     Type
  3582 ;;  pin             1    wreg     PTR const struct .
  3583 ;;		 -> keypad$COLOUMNS_PIN(3), keypad(7), 
  3584 ;;  logic           1    0[COMMON] PTR enum E1519
  3585 ;;		 -> keypad_read_value@val(1), 
  3586 ;; Auto vars:     Size  Location     Type
  3587 ;;  pin             1    7[COMMON] PTR const struct .
  3588 ;;		 -> keypad$COLOUMNS_PIN(3), keypad(7), 
  3589 ;;  ret             1    6[COMMON] unsigned char 
  3590 ;; Return value:  Size  Location     Type
  3591 ;;                  1    wreg      unsigned char 
  3592 ;; Registers used:
  3593 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3594 ;; Tracked objects:
  3595 ;;		On entry : 0/0
  3596 ;;		On exit  : 0/0
  3597 ;;		Unchanged: 0/0
  3598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3599 ;;      Params:         1       0       0       0       0
  3600 ;;      Locals:         2       0       0       0       0
  3601 ;;      Temps:          5       0       0       0       0
  3602 ;;      Totals:         8       0       0       0       0
  3603 ;;Total ram usage:        8 bytes
  3604 ;; Hardware stack levels used: 1
  3605 ;; This function calls:
  3606 ;;		Nothing
  3607 ;; This function is called by:
  3608 ;;		_keypad_read_value
  3609 ;; This function uses a non-reentrant model
  3610 ;;
  3611                           
  3612     0B3C                     _gpio_pin_read_logic:	
  3613                           ;psect for function _gpio_pin_read_logic
  3614                           
  3615                           
  3616                           ;incstack = 0
  3617                           ; Regs used in _gpio_pin_read_logic: [wreg-fsr0h+status,2+status,0+btemp+1]
  3618                           ;gpio_pin_read_logic@pin stored from wreg
  3619     0B3C  00F7               	movwf	gpio_pin_read_logic@pin
  3620     0B3D                     l3081:
  3621                           
  3622                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 74:     uint8 ret = 0x00;
  3623     0B3D  01F6               	clrf	gpio_pin_read_logic@ret
  3624     0B3E                     l3083:
  3625                           
  3626                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 75:     if (pin == ((void*)0) || logic == ((void*)0)) {
  3627     0B3E  0877               	movf	gpio_pin_read_logic@pin,w
  3628     0B3F  1903               	btfsc	3,2
  3629     0B40  2B42               	goto	u3591
  3630     0B41  2B43               	goto	u3590
  3631     0B42                     u3591:
  3632     0B42  2B48               	goto	l347
  3633     0B43                     u3590:
  3634     0B43                     l3085:
  3635     0B43  0870               	movf	gpio_pin_read_logic@logic,w
  3636     0B44  1D03               	btfss	3,2
  3637     0B45  2B47               	goto	u3601
  3638     0B46  2B48               	goto	u3600
  3639     0B47                     u3601:
  3640     0B47  2B4B               	goto	l3087
  3641     0B48                     u3600:
  3642     0B48                     l347:
  3643                           
  3644                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 76:         ret = 0x01;
  3645     0B48  01F6               	clrf	gpio_pin_read_logic@ret
  3646     0B49  0AF6               	incf	gpio_pin_read_logic@ret,f
  3647                           
  3648                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 77:     } else {
  3649     0B4A  2BE9               	goto	l3109
  3650     0B4B                     l3087:
  3651                           
  3652                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 78:         if ((pin->port == PORTA_INDEX && pin->pin < 6)
      +                           || (pin->port == PORTB_INDEX && pin->pin < 8) || (pin->port == PORTC_INDEX && pin->pin 
      +                          < 8) ||
  3653     0B4B  0877               	movf	gpio_pin_read_logic@pin,w
  3654     0B4C  0084               	movwf	4
  3655     0B4D  1383               	bcf	3,7	;select IRP bank0
  3656     0B4E  0800               	movf	0,w
  3657     0B4F  3907               	andlw	7
  3658     0B50  3A00               	xorlw	0
  3659     0B51  1D03               	skipz
  3660     0B52  2B54               	goto	u3611
  3661     0B53  2B55               	goto	u3610
  3662     0B54                     u3611:
  3663     0B54  2B63               	goto	l3091
  3664     0B55                     u3610:
  3665     0B55                     l3089:
  3666     0B55  0877               	movf	gpio_pin_read_logic@pin,w
  3667     0B56  0084               	movwf	4
  3668     0B57  0C00               	rrf	0,w
  3669     0B58  00F1               	movwf	??_gpio_pin_read_logic
  3670     0B59  0CF1               	rrf	??_gpio_pin_read_logic,f
  3671     0B5A  0C71               	rrf	??_gpio_pin_read_logic,w
  3672     0B5B  3907               	andlw	7
  3673     0B5C  00F2               	movwf	??_gpio_pin_read_logic+1
  3674     0B5D  3006               	movlw	6
  3675     0B5E  0272               	subwf	??_gpio_pin_read_logic+1,w
  3676     0B5F  1C03               	skipc
  3677     0B60  2B62               	goto	u3621
  3678     0B61  2B63               	goto	u3620
  3679     0B62                     u3621:
  3680     0B62  2BBF               	goto	l3107
  3681     0B63                     u3620:
  3682     0B63                     l3091:
  3683     0B63  0877               	movf	gpio_pin_read_logic@pin,w
  3684     0B64  0084               	movwf	4
  3685     0B65  0800               	movf	0,w
  3686     0B66  3907               	andlw	7
  3687     0B67  3A01               	xorlw	1
  3688     0B68  1D03               	skipz
  3689     0B69  2B6B               	goto	u3631
  3690     0B6A  2B6C               	goto	u3630
  3691     0B6B                     u3631:
  3692     0B6B  2B7A               	goto	l3095
  3693     0B6C                     u3630:
  3694     0B6C                     l3093:
  3695     0B6C  0877               	movf	gpio_pin_read_logic@pin,w
  3696     0B6D  0084               	movwf	4
  3697     0B6E  0C00               	rrf	0,w
  3698     0B6F  00F1               	movwf	??_gpio_pin_read_logic
  3699     0B70  0CF1               	rrf	??_gpio_pin_read_logic,f
  3700     0B71  0C71               	rrf	??_gpio_pin_read_logic,w
  3701     0B72  3907               	andlw	7
  3702     0B73  00F2               	movwf	??_gpio_pin_read_logic+1
  3703     0B74  3008               	movlw	8
  3704     0B75  0272               	subwf	??_gpio_pin_read_logic+1,w
  3705     0B76  1C03               	skipc
  3706     0B77  2B79               	goto	u3641
  3707     0B78  2B7A               	goto	u3640
  3708     0B79                     u3641:
  3709     0B79  2BBF               	goto	l3107
  3710     0B7A                     u3640:
  3711     0B7A                     l3095:
  3712     0B7A  0877               	movf	gpio_pin_read_logic@pin,w
  3713     0B7B  0084               	movwf	4
  3714     0B7C  0800               	movf	0,w
  3715     0B7D  3907               	andlw	7
  3716     0B7E  3A02               	xorlw	2
  3717     0B7F  1D03               	skipz
  3718     0B80  2B82               	goto	u3651
  3719     0B81  2B83               	goto	u3650
  3720     0B82                     u3651:
  3721     0B82  2B91               	goto	l3099
  3722     0B83                     u3650:
  3723     0B83                     l3097:
  3724     0B83  0877               	movf	gpio_pin_read_logic@pin,w
  3725     0B84  0084               	movwf	4
  3726     0B85  0C00               	rrf	0,w
  3727     0B86  00F1               	movwf	??_gpio_pin_read_logic
  3728     0B87  0CF1               	rrf	??_gpio_pin_read_logic,f
  3729     0B88  0C71               	rrf	??_gpio_pin_read_logic,w
  3730     0B89  3907               	andlw	7
  3731     0B8A  00F2               	movwf	??_gpio_pin_read_logic+1
  3732     0B8B  3008               	movlw	8
  3733     0B8C  0272               	subwf	??_gpio_pin_read_logic+1,w
  3734     0B8D  1C03               	skipc
  3735     0B8E  2B90               	goto	u3661
  3736     0B8F  2B91               	goto	u3660
  3737     0B90                     u3661:
  3738     0B90  2BBF               	goto	l3107
  3739     0B91                     u3660:
  3740     0B91                     l3099:
  3741     0B91  0877               	movf	gpio_pin_read_logic@pin,w
  3742     0B92  0084               	movwf	4
  3743     0B93  0800               	movf	0,w
  3744     0B94  3907               	andlw	7
  3745     0B95  3A03               	xorlw	3
  3746     0B96  1D03               	skipz
  3747     0B97  2B99               	goto	u3671
  3748     0B98  2B9A               	goto	u3670
  3749     0B99                     u3671:
  3750     0B99  2BA8               	goto	l3103
  3751     0B9A                     u3670:
  3752     0B9A                     l3101:
  3753     0B9A  0877               	movf	gpio_pin_read_logic@pin,w
  3754     0B9B  0084               	movwf	4
  3755     0B9C  0C00               	rrf	0,w
  3756     0B9D  00F1               	movwf	??_gpio_pin_read_logic
  3757     0B9E  0CF1               	rrf	??_gpio_pin_read_logic,f
  3758     0B9F  0C71               	rrf	??_gpio_pin_read_logic,w
  3759     0BA0  3907               	andlw	7
  3760     0BA1  00F2               	movwf	??_gpio_pin_read_logic+1
  3761     0BA2  3008               	movlw	8
  3762     0BA3  0272               	subwf	??_gpio_pin_read_logic+1,w
  3763     0BA4  1C03               	skipc
  3764     0BA5  2BA7               	goto	u3681
  3765     0BA6  2BA8               	goto	u3680
  3766     0BA7                     u3681:
  3767     0BA7  2BBF               	goto	l3107
  3768     0BA8                     u3680:
  3769     0BA8                     l3103:
  3770     0BA8  0877               	movf	gpio_pin_read_logic@pin,w
  3771     0BA9  0084               	movwf	4
  3772     0BAA  0800               	movf	0,w
  3773     0BAB  3907               	andlw	7
  3774     0BAC  3A04               	xorlw	4
  3775     0BAD  1D03               	skipz
  3776     0BAE  2BB0               	goto	u3691
  3777     0BAF  2BB1               	goto	u3690
  3778     0BB0                     u3691:
  3779     0BB0  2B48               	goto	l347
  3780     0BB1                     u3690:
  3781     0BB1                     l3105:
  3782     0BB1  0877               	movf	gpio_pin_read_logic@pin,w
  3783     0BB2  0084               	movwf	4
  3784     0BB3  0C00               	rrf	0,w
  3785     0BB4  00F1               	movwf	??_gpio_pin_read_logic
  3786     0BB5  0CF1               	rrf	??_gpio_pin_read_logic,f
  3787     0BB6  0C71               	rrf	??_gpio_pin_read_logic,w
  3788     0BB7  3907               	andlw	7
  3789     0BB8  00F2               	movwf	??_gpio_pin_read_logic+1
  3790     0BB9  3003               	movlw	3
  3791     0BBA  0272               	subwf	??_gpio_pin_read_logic+1,w
  3792     0BBB  1803               	skipnc
  3793     0BBC  2BBE               	goto	u3701
  3794     0BBD  2BBF               	goto	u3700
  3795     0BBE                     u3701:
  3796     0BBE  2B48               	goto	l347
  3797     0BBF                     u3700:
  3798     0BBF                     l3107:
  3799                           
  3800                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 79:                 (pin->port == PORTD_INDEX && pin->pin 
      +                          < 8) || (pin->port == PORTE_INDEX && pin->pin < 3)) {;MCAL_LAYER/GPIO/mcal_gpio.c: 80:  
      +                                     *logic = ((*port_registers[pin->port] >> pin->pin) & 0x01);
  3801     0BBF  0877               	movf	gpio_pin_read_logic@pin,w
  3802     0BC0  0084               	movwf	4
  3803     0BC1  0800               	movf	0,w
  3804     0BC2  3907               	andlw	7
  3805     0BC3  00F1               	movwf	??_gpio_pin_read_logic
  3806     0BC4  0771               	addwf	??_gpio_pin_read_logic,w
  3807     0BC5  3EA0               	addlw	(low (_port_registers| 0))& (0+255)
  3808     0BC6  0084               	movwf	4
  3809     0BC7  0800               	movf	0,w
  3810     0BC8  00F2               	movwf	??_gpio_pin_read_logic+1
  3811     0BC9  0A84               	incf	4,f
  3812     0BCA  0800               	movf	0,w
  3813     0BCB  00F3               	movwf	??_gpio_pin_read_logic+2
  3814     0BCC  0872               	movf	??_gpio_pin_read_logic+1,w
  3815     0BCD  0084               	movwf	4
  3816     0BCE  1783               	bsf	3,7
  3817     0BCF  1C73               	btfss	??_gpio_pin_read_logic+2,0
  3818     0BD0  1383               	bcf	3,7
  3819     0BD1  0800               	movf	0,w
  3820     0BD2  00F4               	movwf	??_gpio_pin_read_logic+3
  3821     0BD3  0877               	movf	gpio_pin_read_logic@pin,w
  3822     0BD4  0084               	movwf	4
  3823     0BD5  1383               	bcf	3,7	;select IRP bank0
  3824     0BD6  0C00               	rrf	0,w
  3825     0BD7  00F5               	movwf	??_gpio_pin_read_logic+4
  3826     0BD8  0CF5               	rrf	??_gpio_pin_read_logic+4,f
  3827     0BD9  0C75               	rrf	??_gpio_pin_read_logic+4,w
  3828     0BDA  3907               	andlw	7
  3829     0BDB  3E01               	addlw	1
  3830     0BDC  2BDF               	goto	u3714
  3831     0BDD                     u3715:
  3832     0BDD  1003               	clrc
  3833     0BDE  0CF4               	rrf	??_gpio_pin_read_logic+3,f
  3834     0BDF                     u3714:
  3835     0BDF  3EFF               	addlw	-1
  3836     0BE0  1D03               	skipz
  3837     0BE1  2BDD               	goto	u3715
  3838     0BE2  0874               	movf	??_gpio_pin_read_logic+3,w
  3839     0BE3  3901               	andlw	1
  3840     0BE4  00FF               	movwf	btemp+1
  3841     0BE5  0870               	movf	gpio_pin_read_logic@logic,w
  3842     0BE6  0084               	movwf	4
  3843     0BE7  087F               	movf	btemp+1,w
  3844     0BE8  0080               	movwf	0
  3845     0BE9                     l3109:	
  3846                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 81:         } else {
  3847                           
  3848                           
  3849                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 85:     return ret;
  3850     0BE9  0876               	movf	gpio_pin_read_logic@ret,w
  3851     0BEA                     l361:
  3852     0BEA  0008               	return
  3853     0BEB                     __end_of_gpio_pin_read_logic:
  3854                           
  3855                           	psect	text10
  3856     1498                     __ptext10:	
  3857 ;; *************** function ___bmul *****************
  3858 ;; Defined at:
  3859 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul8.c"
  3860 ;; Parameters:    Size  Location     Type
  3861 ;;  multiplier      1    wreg     unsigned char 
  3862 ;;  multiplicand    1    0[COMMON] unsigned char 
  3863 ;; Auto vars:     Size  Location     Type
  3864 ;;  multiplier      1    2[COMMON] unsigned char 
  3865 ;;  product         1    1[COMMON] unsigned char 
  3866 ;; Return value:  Size  Location     Type
  3867 ;;                  1    wreg      unsigned char 
  3868 ;; Registers used:
  3869 ;;		wreg, status,2, status,0, btemp+1
  3870 ;; Tracked objects:
  3871 ;;		On entry : 0/0
  3872 ;;		On exit  : 0/0
  3873 ;;		Unchanged: 0/0
  3874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3875 ;;      Params:         1       0       0       0       0
  3876 ;;      Locals:         2       0       0       0       0
  3877 ;;      Temps:          0       0       0       0       0
  3878 ;;      Totals:         3       0       0       0       0
  3879 ;;Total ram usage:        3 bytes
  3880 ;; Hardware stack levels used: 1
  3881 ;; This function calls:
  3882 ;;		Nothing
  3883 ;; This function is called by:
  3884 ;;		_keypad_read_value
  3885 ;; This function uses a non-reentrant model
  3886 ;;
  3887                           
  3888     1498                     ___bmul:	
  3889                           ;psect for function ___bmul
  3890                           
  3891                           
  3892                           ;incstack = 0
  3893                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  3894                           ;___bmul@multiplier stored from wreg
  3895     1498  00F2               	movwf	___bmul@multiplier
  3896     1499                     l3195:
  3897     1499  01F1               	clrf	___bmul@product
  3898     149A                     l3197:
  3899     149A  1C72               	btfss	___bmul@multiplier,0
  3900     149B  2C9D               	goto	u3821
  3901     149C  2C9E               	goto	u3820
  3902     149D                     u3821:
  3903     149D  2CA2               	goto	l3201
  3904     149E                     u3820:
  3905     149E                     l3199:
  3906     149E  0870               	movf	___bmul@multiplicand,w
  3907     149F  00FF               	movwf	btemp+1
  3908     14A0  087F               	movf	btemp+1,w
  3909     14A1  07F1               	addwf	___bmul@product,f
  3910     14A2                     l3201:
  3911     14A2  1003               	clrc
  3912     14A3  0DF0               	rlf	___bmul@multiplicand,f
  3913     14A4                     l3203:
  3914     14A4  1003               	clrc
  3915     14A5  0CF2               	rrf	___bmul@multiplier,f
  3916     14A6                     l3205:
  3917     14A6  0872               	movf	___bmul@multiplier,w
  3918     14A7  1D03               	btfss	3,2
  3919     14A8  2CAA               	goto	u3831
  3920     14A9  2CAB               	goto	u3830
  3921     14AA                     u3831:
  3922     14AA  2C9A               	goto	l3197
  3923     14AB                     u3830:
  3924     14AB                     l3207:
  3925     14AB  0871               	movf	___bmul@product,w
  3926     14AC                     l662:
  3927     14AC  0008               	return
  3928     14AD                     __end_of___bmul:
  3929                           
  3930                           	psect	text11
  3931     0004                     __ptext11:	
  3932 ;; *************** function _apllication_initilaize *****************
  3933 ;; Defined at:
  3934 ;;		line 106 in file "Temperature_Controlled_Fan_System.c"
  3935 ;; Parameters:    Size  Location     Type
  3936 ;;		None
  3937 ;; Auto vars:     Size  Location     Type
  3938 ;;		None
  3939 ;; Return value:  Size  Location     Type
  3940 ;;                  1    wreg      void 
  3941 ;; Registers used:
  3942 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3943 ;; Tracked objects:
  3944 ;;		On entry : 0/0
  3945 ;;		On exit  : 0/0
  3946 ;;		Unchanged: 0/0
  3947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3948 ;;      Params:         0       0       0       0       0
  3949 ;;      Locals:         0       0       0       0       0
  3950 ;;      Temps:          0       0       0       0       0
  3951 ;;      Totals:         0       0       0       0       0
  3952 ;;Total ram usage:        0 bytes
  3953 ;; Hardware stack levels used: 1
  3954 ;; Hardware stack levels required when called: 5
  3955 ;; This function calls:
  3956 ;;		_ecu_initialzie
  3957 ;;		_mcal_initialize
  3958 ;; This function is called by:
  3959 ;;		_main
  3960 ;; This function uses a non-reentrant model
  3961 ;;
  3962                           
  3963     0004                     _apllication_initilaize:	
  3964                           ;psect for function _apllication_initilaize
  3965                           
  3966     0004                     l3387:	
  3967                           ;incstack = 0
  3968                           ; Regs used in _apllication_initilaize: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  3969                           
  3970                           
  3971                           ;Temperature_Controlled_Fan_System.c: 107:     ecu_initialzie();
  3972     0004  160A  118A  254C  120A  118A  	fcall	_ecu_initialzie
  3973     0009                     l3389:
  3974                           
  3975                           ;Temperature_Controlled_Fan_System.c: 108:     mcal_initialize();
  3976     0009  160A  118A  2444  120A  118A  	fcall	_mcal_initialize
  3977     000E                     l550:
  3978     000E  0008               	return
  3979     000F                     __end_of_apllication_initilaize:
  3980                           
  3981                           	psect	text12
  3982     1444                     __ptext12:	
  3983 ;; *************** function _mcal_initialize *****************
  3984 ;; Defined at:
  3985 ;;		line 12 in file "MCAL_LAYER/MCAL_LAYER.c"
  3986 ;; Parameters:    Size  Location     Type
  3987 ;;		None
  3988 ;; Auto vars:     Size  Location     Type
  3989 ;;  ret             1    0        unsigned char 
  3990 ;; Return value:  Size  Location     Type
  3991 ;;                  1    wreg      unsigned char 
  3992 ;; Registers used:
  3993 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3994 ;; Tracked objects:
  3995 ;;		On entry : 0/0
  3996 ;;		On exit  : 0/0
  3997 ;;		Unchanged: 0/0
  3998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3999 ;;      Params:         0       0       0       0       0
  4000 ;;      Locals:         0       0       0       0       0
  4001 ;;      Temps:          0       0       0       0       0
  4002 ;;      Totals:         0       0       0       0       0
  4003 ;;Total ram usage:        0 bytes
  4004 ;; Hardware stack levels used: 1
  4005 ;; Hardware stack levels required when called: 2
  4006 ;; This function calls:
  4007 ;;		_ADC_INIT
  4008 ;; This function is called by:
  4009 ;;		_apllication_initilaize
  4010 ;; This function uses a non-reentrant model
  4011 ;;
  4012                           
  4013     1444                     _mcal_initialize:	
  4014                           ;psect for function _mcal_initialize
  4015                           
  4016     1444                     l3191:	
  4017                           ;incstack = 0
  4018                           ; Regs used in _mcal_initialize: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4019                           
  4020     1444                     l3193:
  4021     1444  30C9               	movlw	(low (_adc| 0))& (0+255)
  4022     1445  120A  158A  205D  160A  118A  	fcall	_ADC_INIT
  4023     144A                     l457:
  4024     144A  0008               	return
  4025     144B                     __end_of_mcal_initialize:
  4026                           
  4027                           	psect	text13
  4028     085D                     __ptext13:	
  4029 ;; *************** function _ADC_INIT *****************
  4030 ;; Defined at:
  4031 ;;		line 12 in file "MCAL_LAYER/ADC/hal_adc.c"
  4032 ;; Parameters:    Size  Location     Type
  4033 ;;  adc             1    wreg     PTR const struct .
  4034 ;;		 -> adc(3), 
  4035 ;; Auto vars:     Size  Location     Type
  4036 ;;  adc             1    5[COMMON] PTR const struct .
  4037 ;;		 -> adc(3), 
  4038 ;;  ret             1    4[COMMON] unsigned char 
  4039 ;; Return value:  Size  Location     Type
  4040 ;;                  1    wreg      unsigned char 
  4041 ;; Registers used:
  4042 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4043 ;; Tracked objects:
  4044 ;;		On entry : 0/0
  4045 ;;		On exit  : 0/0
  4046 ;;		Unchanged: 0/0
  4047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4048 ;;      Params:         0       0       0       0       0
  4049 ;;      Locals:         2       0       0       0       0
  4050 ;;      Temps:          1       0       0       0       0
  4051 ;;      Totals:         3       0       0       0       0
  4052 ;;Total ram usage:        3 bytes
  4053 ;; Hardware stack levels used: 1
  4054 ;; Hardware stack levels required when called: 1
  4055 ;; This function calls:
  4056 ;;		_Result_Format
  4057 ;; This function is called by:
  4058 ;;		_mcal_initialize
  4059 ;; This function uses a non-reentrant model
  4060 ;;
  4061                           
  4062     085D                     _ADC_INIT:	
  4063                           ;psect for function _ADC_INIT
  4064                           
  4065                           
  4066                           ;incstack = 0
  4067                           ; Regs used in _ADC_INIT: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4068                           ;ADC_INIT@adc stored from wreg
  4069     085D  00F5               	movwf	ADC_INIT@adc
  4070     085E                     l3053:
  4071                           
  4072                           ;MCAL_LAYER/ADC/hal_adc.c: 13:     uint8 ret = 0x00;
  4073     085E  01F4               	clrf	ADC_INIT@ret
  4074     085F                     l3055:
  4075                           
  4076                           ;MCAL_LAYER/ADC/hal_adc.c: 14:     if(adc == ((void*)0)){
  4077     085F  0875               	movf	ADC_INIT@adc,w
  4078     0860  1D03               	btfss	3,2
  4079     0861  2863               	goto	u3571
  4080     0862  2864               	goto	u3570
  4081     0863                     u3571:
  4082     0863  2867               	goto	l194
  4083     0864                     u3570:
  4084     0864                     l3057:
  4085                           
  4086                           ;MCAL_LAYER/ADC/hal_adc.c: 15:         ret = 0x01;
  4087     0864  01F4               	clrf	ADC_INIT@ret
  4088     0865  0AF4               	incf	ADC_INIT@ret,f
  4089                           
  4090                           ;MCAL_LAYER/ADC/hal_adc.c: 16:     }
  4091     0866  2887               	goto	l3067
  4092     0867                     l194:	
  4093                           ;MCAL_LAYER/ADC/hal_adc.c: 17:     else{
  4094                           
  4095                           
  4096                           ;MCAL_LAYER/ADC/hal_adc.c: 18:         (ADCON0bits.ADON = 0);
  4097     0867  1283               	bcf	3,5	;RP0=0, select bank0
  4098     0868  1303               	bcf	3,6	;RP1=0, select bank0
  4099     0869  101F               	bcf	31,0	;volatile
  4100                           
  4101                           ;MCAL_LAYER/ADC/hal_adc.c: 19:         (ADCON0bits.GO_nDONE = 0);
  4102     086A  111F               	bcf	31,2	;volatile
  4103     086B                     l3059:
  4104                           
  4105                           ;MCAL_LAYER/ADC/hal_adc.c: 20:         (ADCON0bits.CHS = adc->channel);
  4106     086B  0875               	movf	ADC_INIT@adc,w
  4107     086C  0084               	movwf	4
  4108     086D  1383               	bcf	3,7	;select IRP bank0
  4109     086E  0800               	movf	0,w
  4110     086F  00F3               	movwf	??_ADC_INIT
  4111     0870  0DF3               	rlf	??_ADC_INIT,f
  4112     0871  0DF3               	rlf	??_ADC_INIT,f
  4113     0872  0DF3               	rlf	??_ADC_INIT,f
  4114     0873  081F               	movf	31,w	;volatile
  4115     0874  0673               	xorwf	??_ADC_INIT,w
  4116     0875  39C7               	andlw	-57
  4117     0876  0673               	xorwf	??_ADC_INIT,w
  4118     0877  009F               	movwf	31	;volatile
  4119     0878                     l3061:
  4120                           
  4121                           ;MCAL_LAYER/ADC/hal_adc.c: 21:         Result_Format(adc);
  4122     0878  0875               	movf	ADC_INIT@adc,w
  4123     0879  160A  118A  25CE  120A  158A  	fcall	_Result_Format
  4124     087E                     l3063:
  4125                           
  4126                           ;MCAL_LAYER/ADC/hal_adc.c: 22:         (ADCON1bits.PCFG = 0x04);
  4127     087E  1683               	bsf	3,5	;RP0=1, select bank1
  4128     087F  1303               	bcf	3,6	;RP1=0, select bank1
  4129     0880  081F               	movf	31,w	;volatile
  4130     0881  39F0               	andlw	-16
  4131     0882  3804               	iorlw	4
  4132     0883  009F               	movwf	31	;volatile
  4133     0884                     l3065:
  4134                           
  4135                           ;MCAL_LAYER/ADC/hal_adc.c: 23:         (ADCON0bits.ADON = 1);
  4136     0884  1283               	bcf	3,5	;RP0=0, select bank0
  4137     0885  1303               	bcf	3,6	;RP1=0, select bank0
  4138     0886  141F               	bsf	31,0	;volatile
  4139     0887                     l3067:
  4140                           
  4141                           ;MCAL_LAYER/ADC/hal_adc.c: 25:     return ret;
  4142     0887  0874               	movf	ADC_INIT@ret,w
  4143     0888                     l196:
  4144     0888  0008               	return
  4145     0889                     __end_of_ADC_INIT:
  4146                           
  4147                           	psect	text14
  4148     15CE                     __ptext14:	
  4149 ;; *************** function _Result_Format *****************
  4150 ;; Defined at:
  4151 ;;		line 92 in file "MCAL_LAYER/ADC/hal_adc.c"
  4152 ;; Parameters:    Size  Location     Type
  4153 ;;  adc             1    wreg     PTR const struct .
  4154 ;;		 -> adc(3), 
  4155 ;; Auto vars:     Size  Location     Type
  4156 ;;  adc             1    2[COMMON] PTR const struct .
  4157 ;;		 -> adc(3), 
  4158 ;;  ret             1    0        unsigned char 
  4159 ;; Return value:  Size  Location     Type
  4160 ;;                  1    wreg      unsigned char 
  4161 ;; Registers used:
  4162 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4163 ;; Tracked objects:
  4164 ;;		On entry : 0/0
  4165 ;;		On exit  : 0/0
  4166 ;;		Unchanged: 0/0
  4167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4168 ;;      Params:         0       0       0       0       0
  4169 ;;      Locals:         1       0       0       0       0
  4170 ;;      Temps:          2       0       0       0       0
  4171 ;;      Totals:         3       0       0       0       0
  4172 ;;Total ram usage:        3 bytes
  4173 ;; Hardware stack levels used: 1
  4174 ;; This function calls:
  4175 ;;		Nothing
  4176 ;; This function is called by:
  4177 ;;		_ADC_INIT
  4178 ;; This function uses a non-reentrant model
  4179 ;;
  4180                           
  4181     15CE                     _Result_Format:	
  4182                           ;psect for function _Result_Format
  4183                           
  4184                           
  4185                           ;incstack = 0
  4186                           ; Regs used in _Result_Format: [wreg-fsr0h+status,2+status,0]
  4187                           ;Result_Format@adc stored from wreg
  4188     15CE  00F2               	movwf	Result_Format@adc
  4189     15CF                     l2887:
  4190     15CF                     l2889:
  4191                           
  4192                           ;MCAL_LAYER/ADC/hal_adc.c: 94:     if(adc == ((void*)0)){
  4193     15CF  0872               	movf	Result_Format@adc,w
  4194     15D0  1D03               	btfss	3,2
  4195     15D1  2DD3               	goto	u3381
  4196     15D2  2DD4               	goto	u3380
  4197     15D3                     u3381:
  4198     15D3  2DDD               	goto	l2895
  4199     15D4                     u3380:
  4200     15D4                     l2891:
  4201                           
  4202                           ;MCAL_LAYER/ADC/hal_adc.c: 96:     }
  4203     15D4  2DF1               	goto	l236
  4204     15D5                     l233:	
  4205                           ;MCAL_LAYER/ADC/hal_adc.c: 99:             case RIGHT_JUSTIFIED :
  4206                           
  4207                           
  4208                           ;MCAL_LAYER/ADC/hal_adc.c: 100:                 ADCON1bits.ADFM = 1;
  4209     15D5  1683               	bsf	3,5	;RP0=1, select bank1
  4210     15D6  1303               	bcf	3,6	;RP1=0, select bank1
  4211     15D7  179F               	bsf	31,7	;volatile
  4212                           
  4213                           ;MCAL_LAYER/ADC/hal_adc.c: 101:             break;
  4214     15D8  2DF1               	goto	l236
  4215     15D9                     l235:	
  4216                           ;MCAL_LAYER/ADC/hal_adc.c: 102:             case LEFT_JUSTIFIED :
  4217                           
  4218                           
  4219                           ;MCAL_LAYER/ADC/hal_adc.c: 103:                 ADCON1bits.ADFM = 0;
  4220     15D9  1683               	bsf	3,5	;RP0=1, select bank1
  4221     15DA  1303               	bcf	3,6	;RP1=0, select bank1
  4222     15DB  139F               	bcf	31,7	;volatile
  4223                           
  4224                           ;MCAL_LAYER/ADC/hal_adc.c: 104:             break;
  4225     15DC  2DF1               	goto	l236
  4226     15DD                     l2895:
  4227     15DD  0872               	movf	Result_Format@adc,w
  4228     15DE  3E02               	addlw	2
  4229     15DF  0084               	movwf	4
  4230     15E0  1383               	bcf	3,7	;select IRP bank0
  4231     15E1  0800               	movf	0,w
  4232     15E2  00F0               	movwf	??_Result_Format
  4233     15E3  01F1               	clrf	??_Result_Format+1
  4234                           
  4235                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4236                           ; Switch size 1, requested type "simple"
  4237                           ; Number of cases is 1, Range of values is 0 to 0
  4238                           ; switch strategies available:
  4239                           ; Name         Instructions Cycles
  4240                           ; simple_byte            4     3 (average)
  4241                           ; direct_byte           11     8 (fixed)
  4242                           ; jumptable            260     6 (fixed)
  4243                           ;	Chosen strategy is simple_byte
  4244     15E4  0871               	movf	??_Result_Format+1,w
  4245     15E5  3A00               	xorlw	0	; case 0
  4246     15E6  1903               	skipnz
  4247     15E7  2DE9               	goto	l4089
  4248     15E8  2DF1               	goto	l236
  4249     15E9                     l4089:
  4250                           
  4251                           ; Switch size 1, requested type "simple"
  4252                           ; Number of cases is 2, Range of values is 0 to 1
  4253                           ; switch strategies available:
  4254                           ; Name         Instructions Cycles
  4255                           ; simple_byte            7     4 (average)
  4256                           ; direct_byte           14     8 (fixed)
  4257                           ; jumptable            260     6 (fixed)
  4258                           ;	Chosen strategy is simple_byte
  4259     15E9  0870               	movf	??_Result_Format,w
  4260     15EA  3A00               	xorlw	0	; case 0
  4261     15EB  1903               	skipnz
  4262     15EC  2DD5               	goto	l233
  4263     15ED  3A01               	xorlw	1	; case 1
  4264     15EE  1903               	skipnz
  4265     15EF  2DD9               	goto	l235
  4266     15F0  2DF1               	goto	l236
  4267     15F1                     l236:
  4268     15F1  0008               	return
  4269     15F2                     __end_of_Result_Format:
  4270                           
  4271                           	psect	text15
  4272     154C                     __ptext15:	
  4273 ;; *************** function _ecu_initialzie *****************
  4274 ;; Defined at:
  4275 ;;		line 33 in file "ECU_LAYER/ECU_LAYER.c"
  4276 ;; Parameters:    Size  Location     Type
  4277 ;;		None
  4278 ;; Auto vars:     Size  Location     Type
  4279 ;;		None
  4280 ;; Return value:  Size  Location     Type
  4281 ;;                  1    wreg      void 
  4282 ;; Registers used:
  4283 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4284 ;; Tracked objects:
  4285 ;;		On entry : 0/0
  4286 ;;		On exit  : 0/0
  4287 ;;		Unchanged: 0/0
  4288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4289 ;;      Params:         0       0       0       0       0
  4290 ;;      Locals:         0       0       0       0       0
  4291 ;;      Temps:          0       0       0       0       0
  4292 ;;      Totals:         0       0       0       0       0
  4293 ;;Total ram usage:        0 bytes
  4294 ;; Hardware stack levels used: 1
  4295 ;; Hardware stack levels required when called: 4
  4296 ;; This function calls:
  4297 ;;		_gpio_pin_initialize
  4298 ;;		_keypad_initialize
  4299 ;;		_lcd_4bits_initialize
  4300 ;;		_motor_initialize
  4301 ;; This function is called by:
  4302 ;;		_apllication_initilaize
  4303 ;; This function uses a non-reentrant model
  4304 ;;
  4305                           
  4306     154C                     _ecu_initialzie:	
  4307                           ;psect for function _ecu_initialzie
  4308                           
  4309     154C                     l3167:	
  4310                           ;incstack = 0
  4311                           ; Regs used in _ecu_initialzie: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4312                           
  4313                           
  4314                           ;ECU_LAYER/ECU_LAYER.c: 34:     motor_initialize(&motor1);
  4315     154C  30CE               	movlw	(low (_motor1| 0))& (0+255)
  4316     154D  160A  118A  24AD  160A  118A  	fcall	_motor_initialize
  4317                           
  4318                           ;ECU_LAYER/ECU_LAYER.c: 35:     motor_initialize(&motor2);
  4319     1552  30CC               	movlw	(low (_motor2| 0))& (0+255)
  4320     1553  160A  118A  24AD  160A  118A  	fcall	_motor_initialize
  4321                           
  4322                           ;ECU_LAYER/ECU_LAYER.c: 36:     keypad_initialize(&keypad);
  4323     1558  30B8               	movlw	(low (_keypad| 0))& (0+255)
  4324     1559  160A  118A  26C5  160A  118A  	fcall	_keypad_initialize
  4325                           
  4326                           ;ECU_LAYER/ECU_LAYER.c: 37:     gpio_pin_initialize(&buzzer);
  4327     155E  306F               	movlw	(low (_buzzer| 0))& (0+255)
  4328     155F  120A  158A  22A9  160A  118A  	fcall	_gpio_pin_initialize
  4329                           
  4330                           ;ECU_LAYER/ECU_LAYER.c: 38:     lcd_4bits_initialize(&lcd);
  4331     1564  30BF               	movlw	(low (_lcd| 0))& (0+255)
  4332     1565  120A  158A  23EB  160A  118A  	fcall	_lcd_4bits_initialize
  4333     156A                     l181:
  4334     156A  0008               	return
  4335     156B                     __end_of_ecu_initialzie:
  4336                           
  4337                           	psect	text16
  4338     14AD                     __ptext16:	
  4339 ;; *************** function _motor_initialize *****************
  4340 ;; Defined at:
  4341 ;;		line 8 in file "ECU_LAYER/Motor/ecu_motor_driver.c"
  4342 ;; Parameters:    Size  Location     Type
  4343 ;;  motor           1    wreg     PTR const struct .
  4344 ;;		 -> motor2(2), motor1(2), 
  4345 ;; Auto vars:     Size  Location     Type
  4346 ;;  motor           1   13[COMMON] PTR const struct .
  4347 ;;		 -> motor2(2), motor1(2), 
  4348 ;;  ret             1   12[COMMON] unsigned char 
  4349 ;; Return value:  Size  Location     Type
  4350 ;;                  1    wreg      unsigned char 
  4351 ;; Registers used:
  4352 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4353 ;; Tracked objects:
  4354 ;;		On entry : 0/0
  4355 ;;		On exit  : 0/0
  4356 ;;		Unchanged: 0/0
  4357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4358 ;;      Params:         0       0       0       0       0
  4359 ;;      Locals:         2       0       0       0       0
  4360 ;;      Temps:          0       0       0       0       0
  4361 ;;      Totals:         2       0       0       0       0
  4362 ;;Total ram usage:        2 bytes
  4363 ;; Hardware stack levels used: 1
  4364 ;; Hardware stack levels required when called: 2
  4365 ;; This function calls:
  4366 ;;		_gpio_pin_initialize
  4367 ;; This function is called by:
  4368 ;;		_ecu_initialzie
  4369 ;; This function uses a non-reentrant model
  4370 ;;
  4371                           
  4372     14AD                     _motor_initialize:	
  4373                           ;psect for function _motor_initialize
  4374                           
  4375                           
  4376                           ;incstack = 0
  4377                           ; Regs used in _motor_initialize: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4378                           ;motor_initialize@motor stored from wreg
  4379     14AD  00FD               	movwf	motor_initialize@motor
  4380     14AE                     l3043:
  4381     14AE                     l3045:
  4382                           
  4383                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 10:     if(motor == ((void*)0)){
  4384     14AE  087D               	movf	motor_initialize@motor,w
  4385     14AF  1D03               	btfss	3,2
  4386     14B0  2CB2               	goto	u3561
  4387     14B1  2CB3               	goto	u3560
  4388     14B2                     u3561:
  4389     14B2  2CB4               	goto	l3049
  4390     14B3                     u3560:
  4391     14B3                     l3047:
  4392                           
  4393                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 12:     }
  4394     14B3  2CC3               	goto	l145
  4395     14B4                     l3049:
  4396                           
  4397                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 14:         ret = gpio_pin_initialize(&(motor->pins
      +                          [0]));
  4398     14B4  087D               	movf	motor_initialize@motor,w
  4399     14B5  120A  158A  22A9  160A  118A  	fcall	_gpio_pin_initialize
  4400     14BA  00FC               	movwf	motor_initialize@ret
  4401                           
  4402                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 15:         ret = gpio_pin_initialize(&(motor->pins
      +                          [1]));
  4403     14BB  087D               	movf	motor_initialize@motor,w
  4404     14BC  3E01               	addlw	1
  4405     14BD  120A  158A  22A9  160A  118A  	fcall	_gpio_pin_initialize
  4406     14C2  00FC               	movwf	motor_initialize@ret
  4407     14C3                     l145:
  4408     14C3  0008               	return
  4409     14C4                     __end_of_motor_initialize:
  4410                           
  4411                           	psect	text17
  4412     0BEB                     __ptext17:	
  4413 ;; *************** function _lcd_4bits_initialize *****************
  4414 ;; Defined at:
  4415 ;;		line 14 in file "ECU_LAYER/LCD/ecu_lcd.c"
  4416 ;; Parameters:    Size  Location     Type
  4417 ;;  lcd             1    wreg     PTR const struct .
  4418 ;;		 -> lcd(6), 
  4419 ;; Auto vars:     Size  Location     Type
  4420 ;;  lcd             1    7[BANK0 ] PTR const struct .
  4421 ;;		 -> lcd(6), 
  4422 ;;  ret             1    6[BANK0 ] unsigned char 
  4423 ;;  counter         1    5[BANK0 ] unsigned char 
  4424 ;; Return value:  Size  Location     Type
  4425 ;;                  1    wreg      unsigned char 
  4426 ;; Registers used:
  4427 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4428 ;; Tracked objects:
  4429 ;;		On entry : 0/0
  4430 ;;		On exit  : 0/0
  4431 ;;		Unchanged: 0/0
  4432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4433 ;;      Params:         0       0       0       0       0
  4434 ;;      Locals:         0       3       0       0       0
  4435 ;;      Temps:          0       3       0       0       0
  4436 ;;      Totals:         0       6       0       0       0
  4437 ;;Total ram usage:        6 bytes
  4438 ;; Hardware stack levels used: 1
  4439 ;; Hardware stack levels required when called: 3
  4440 ;; This function calls:
  4441 ;;		_gpio_pin_initialize
  4442 ;;		_lcd_4bits_send_command
  4443 ;; This function is called by:
  4444 ;;		_ecu_initialzie
  4445 ;; This function uses a non-reentrant model
  4446 ;;
  4447                           
  4448     0BEB                     _lcd_4bits_initialize:	
  4449                           ;psect for function _lcd_4bits_initialize
  4450                           
  4451                           
  4452                           ;incstack = 0
  4453                           ; Regs used in _lcd_4bits_initialize: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  4454                           ;lcd_4bits_initialize@lcd stored from wreg
  4455     0BEB  1283               	bcf	3,5	;RP0=0, select bank0
  4456     0BEC  1303               	bcf	3,6	;RP1=0, select bank0
  4457     0BED  00A7               	movwf	lcd_4bits_initialize@lcd
  4458     0BEE                     l2985:
  4459                           
  4460                           ;ECU_LAYER/LCD/ecu_lcd.c: 16:     uint8 counter = 0x00;
  4461     0BEE  01A5               	clrf	lcd_4bits_initialize@counter
  4462     0BEF                     l2987:
  4463                           
  4464                           ;ECU_LAYER/LCD/ecu_lcd.c: 17:     if(lcd == ((void*)0)){
  4465     0BEF  0827               	movf	lcd_4bits_initialize@lcd,w
  4466     0BF0  1D03               	btfss	3,2
  4467     0BF1  2BF3               	goto	u3521
  4468     0BF2  2BF4               	goto	u3520
  4469     0BF3                     u3521:
  4470     0BF3  2BF5               	goto	l2991
  4471     0BF4                     u3520:
  4472     0BF4                     l2989:
  4473                           
  4474                           ;ECU_LAYER/LCD/ecu_lcd.c: 19:     }
  4475     0BF4  2CA0               	goto	l57
  4476     0BF5                     l2991:
  4477                           
  4478                           ;ECU_LAYER/LCD/ecu_lcd.c: 21:         ret = gpio_pin_initialize(&(lcd->rs));
  4479     0BF5  0827               	movf	lcd_4bits_initialize@lcd,w
  4480     0BF6  120A  158A  22A9  120A  158A  	fcall	_gpio_pin_initialize
  4481     0BFB  1283               	bcf	3,5	;RP0=0, select bank0
  4482     0BFC  1303               	bcf	3,6	;RP1=0, select bank0
  4483     0BFD  00A6               	movwf	lcd_4bits_initialize@ret
  4484                           
  4485                           ;ECU_LAYER/LCD/ecu_lcd.c: 22:         ret = gpio_pin_initialize(&(lcd->en));
  4486     0BFE  0827               	movf	lcd_4bits_initialize@lcd,w
  4487     0BFF  3E01               	addlw	1
  4488     0C00  120A  158A  22A9  120A  158A  	fcall	_gpio_pin_initialize
  4489     0C05  1283               	bcf	3,5	;RP0=0, select bank0
  4490     0C06  1303               	bcf	3,6	;RP1=0, select bank0
  4491     0C07  00A6               	movwf	lcd_4bits_initialize@ret
  4492     0C08                     l2993:
  4493                           
  4494                           ;ECU_LAYER/LCD/ecu_lcd.c: 23:         for(counter = 0x00;counter < 4;counter++){
  4495     0C08  01A5               	clrf	lcd_4bits_initialize@counter
  4496     0C09                     l2999:
  4497     0C09  0825               	movf	lcd_4bits_initialize@counter,w
  4498     0C0A  0727               	addwf	lcd_4bits_initialize@lcd,w
  4499     0C0B  3E02               	addlw	2
  4500     0C0C  120A  158A  22A9  120A  158A  	fcall	_gpio_pin_initialize
  4501     0C11                     l3001:
  4502                           
  4503                           ;ECU_LAYER/LCD/ecu_lcd.c: 25:         }
  4504     0C11  3001               	movlw	1
  4505     0C12  00FF               	movwf	btemp+1
  4506     0C13  087F               	movf	btemp+1,w
  4507     0C14  1283               	bcf	3,5	;RP0=0, select bank0
  4508     0C15  1303               	bcf	3,6	;RP1=0, select bank0
  4509     0C16  07A5               	addwf	lcd_4bits_initialize@counter,f
  4510     0C17                     l3003:
  4511     0C17  3004               	movlw	4
  4512     0C18  0225               	subwf	lcd_4bits_initialize@counter,w
  4513     0C19  1C03               	skipc
  4514     0C1A  2C1C               	goto	u3531
  4515     0C1B  2C1D               	goto	u3530
  4516     0C1C                     u3531:
  4517     0C1C  2C09               	goto	l2999
  4518     0C1D                     u3530:
  4519     0C1D                     l3005:
  4520                           
  4521                           ;ECU_LAYER/LCD/ecu_lcd.c: 26:         _delay((unsigned long)((150)*(8000000UL/4000.0)));
  4522     0C1D  3002               	movlw	2
  4523     0C1E  1283               	bcf	3,5	;RP0=0, select bank0
  4524     0C1F  1303               	bcf	3,6	;RP1=0, select bank0
  4525     0C20  00A4               	movwf	??_lcd_4bits_initialize+2
  4526     0C21  3086               	movlw	134
  4527     0C22  00A3               	movwf	??_lcd_4bits_initialize+1
  4528     0C23  3098               	movlw	152
  4529     0C24  00A2               	movwf	??_lcd_4bits_initialize
  4530     0C25                     u5457:
  4531     0C25  0BA2               	decfsz	??_lcd_4bits_initialize,f
  4532     0C26  2C25               	goto	u5457
  4533     0C27  0BA3               	decfsz	??_lcd_4bits_initialize+1,f
  4534     0C28  2C25               	goto	u5457
  4535     0C29  0BA4               	decfsz	??_lcd_4bits_initialize+2,f
  4536     0C2A  2C25               	goto	u5457
  4537     0C2B  0000               	nop
  4538     0C2C                     l3007:
  4539     0C2C  3038               	movlw	56
  4540     0C2D  00FC               	movwf	lcd_4bits_send_command@command
  4541     0C2E  1283               	bcf	3,5	;RP0=0, select bank0
  4542     0C2F  1303               	bcf	3,6	;RP1=0, select bank0
  4543     0C30  0827               	movf	lcd_4bits_initialize@lcd,w
  4544     0C31  160A  118A  2771  120A  158A  	fcall	_lcd_4bits_send_command
  4545     0C36                     l3009:
  4546                           
  4547                           ;ECU_LAYER/LCD/ecu_lcd.c: 28:         _delay((unsigned long)((50)*(8000000UL/4000.0)));
  4548     0C36  3082               	movlw	130
  4549     0C37  1283               	bcf	3,5	;RP0=0, select bank0
  4550     0C38  1303               	bcf	3,6	;RP1=0, select bank0
  4551     0C39  00A3               	movwf	??_lcd_4bits_initialize+1
  4552     0C3A  30DD               	movlw	221
  4553     0C3B  00A2               	movwf	??_lcd_4bits_initialize
  4554     0C3C                     u5467:
  4555     0C3C  0BA2               	decfsz	??_lcd_4bits_initialize,f
  4556     0C3D  2C3C               	goto	u5467
  4557     0C3E  0BA3               	decfsz	??_lcd_4bits_initialize+1,f
  4558     0C3F  2C3C               	goto	u5467
  4559     0C40  3038               	movlw	56
  4560     0C41  00FC               	movwf	lcd_4bits_send_command@command
  4561     0C42  1283               	bcf	3,5	;RP0=0, select bank0
  4562     0C43  1303               	bcf	3,6	;RP1=0, select bank0
  4563     0C44  0827               	movf	lcd_4bits_initialize@lcd,w
  4564     0C45  160A  118A  2771  120A  158A  	fcall	_lcd_4bits_send_command
  4565     0C4A                     l3011:
  4566                           
  4567                           ;ECU_LAYER/LCD/ecu_lcd.c: 30:         _delay((unsigned long)((150)*(8000000UL/4000000.0)
      +                          ));
  4568     0C4A  3063               	movlw	99
  4569     0C4B  1283               	bcf	3,5	;RP0=0, select bank0
  4570     0C4C  1303               	bcf	3,6	;RP1=0, select bank0
  4571     0C4D  00A2               	movwf	??_lcd_4bits_initialize
  4572     0C4E                     u5477:
  4573     0C4E  0BA2               	decfsz	??_lcd_4bits_initialize,f
  4574     0C4F  2C4E               	goto	u5477
  4575     0C50                     l3013:
  4576     0C50  3038               	movlw	56
  4577     0C51  00FC               	movwf	lcd_4bits_send_command@command
  4578     0C52  1283               	bcf	3,5	;RP0=0, select bank0
  4579     0C53  1303               	bcf	3,6	;RP1=0, select bank0
  4580     0C54  0827               	movf	lcd_4bits_initialize@lcd,w
  4581     0C55  160A  118A  2771  120A  158A  	fcall	_lcd_4bits_send_command
  4582     0C5A                     l3015:
  4583     0C5A  01FC               	clrf	lcd_4bits_send_command@command
  4584     0C5B  0AFC               	incf	lcd_4bits_send_command@command,f
  4585     0C5C  1283               	bcf	3,5	;RP0=0, select bank0
  4586     0C5D  1303               	bcf	3,6	;RP1=0, select bank0
  4587     0C5E  0827               	movf	lcd_4bits_initialize@lcd,w
  4588     0C5F  160A  118A  2771  120A  158A  	fcall	_lcd_4bits_send_command
  4589     0C64                     l3017:
  4590     0C64  3002               	movlw	2
  4591     0C65  00FC               	movwf	lcd_4bits_send_command@command
  4592     0C66  1283               	bcf	3,5	;RP0=0, select bank0
  4593     0C67  1303               	bcf	3,6	;RP1=0, select bank0
  4594     0C68  0827               	movf	lcd_4bits_initialize@lcd,w
  4595     0C69  160A  118A  2771  120A  158A  	fcall	_lcd_4bits_send_command
  4596     0C6E                     l3019:
  4597     0C6E  3006               	movlw	6
  4598     0C6F  00FC               	movwf	lcd_4bits_send_command@command
  4599     0C70  1283               	bcf	3,5	;RP0=0, select bank0
  4600     0C71  1303               	bcf	3,6	;RP1=0, select bank0
  4601     0C72  0827               	movf	lcd_4bits_initialize@lcd,w
  4602     0C73  160A  118A  2771  120A  158A  	fcall	_lcd_4bits_send_command
  4603     0C78                     l3021:
  4604     0C78  300C               	movlw	12
  4605     0C79  00FC               	movwf	lcd_4bits_send_command@command
  4606     0C7A  1283               	bcf	3,5	;RP0=0, select bank0
  4607     0C7B  1303               	bcf	3,6	;RP1=0, select bank0
  4608     0C7C  0827               	movf	lcd_4bits_initialize@lcd,w
  4609     0C7D  160A  118A  2771  120A  158A  	fcall	_lcd_4bits_send_command
  4610     0C82                     l3023:
  4611     0C82  3010               	movlw	16
  4612     0C83  00FC               	movwf	lcd_4bits_send_command@command
  4613     0C84  1283               	bcf	3,5	;RP0=0, select bank0
  4614     0C85  1303               	bcf	3,6	;RP1=0, select bank0
  4615     0C86  0827               	movf	lcd_4bits_initialize@lcd,w
  4616     0C87  160A  118A  2771  120A  158A  	fcall	_lcd_4bits_send_command
  4617     0C8C                     l3025:
  4618     0C8C  3028               	movlw	40
  4619     0C8D  00FC               	movwf	lcd_4bits_send_command@command
  4620     0C8E  1283               	bcf	3,5	;RP0=0, select bank0
  4621     0C8F  1303               	bcf	3,6	;RP1=0, select bank0
  4622     0C90  0827               	movf	lcd_4bits_initialize@lcd,w
  4623     0C91  160A  118A  2771  120A  158A  	fcall	_lcd_4bits_send_command
  4624     0C96                     l3027:
  4625     0C96  3080               	movlw	128
  4626     0C97  00FC               	movwf	lcd_4bits_send_command@command
  4627     0C98  1283               	bcf	3,5	;RP0=0, select bank0
  4628     0C99  1303               	bcf	3,6	;RP1=0, select bank0
  4629     0C9A  0827               	movf	lcd_4bits_initialize@lcd,w
  4630     0C9B  160A  118A  2771  120A  158A  	fcall	_lcd_4bits_send_command
  4631     0CA0                     l57:
  4632     0CA0  0008               	return
  4633     0CA1                     __end_of_lcd_4bits_initialize:
  4634                           
  4635                           	psect	text18
  4636     1771                     __ptext18:	
  4637 ;; *************** function _lcd_4bits_send_command *****************
  4638 ;; Defined at:
  4639 ;;		line 43 in file "ECU_LAYER/LCD/ecu_lcd.c"
  4640 ;; Parameters:    Size  Location     Type
  4641 ;;  lcd             1    wreg     PTR const struct .
  4642 ;;		 -> lcd(6), 
  4643 ;;  command         1   12[COMMON] unsigned char 
  4644 ;; Auto vars:     Size  Location     Type
  4645 ;;  lcd             1    1[BANK0 ] PTR const struct .
  4646 ;;		 -> lcd(6), 
  4647 ;;  ret             1    0[BANK0 ] unsigned char 
  4648 ;; Return value:  Size  Location     Type
  4649 ;;                  1    wreg      unsigned char 
  4650 ;; Registers used:
  4651 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4652 ;; Tracked objects:
  4653 ;;		On entry : 0/0
  4654 ;;		On exit  : 0/0
  4655 ;;		Unchanged: 0/0
  4656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4657 ;;      Params:         1       0       0       0       0
  4658 ;;      Locals:         0       2       0       0       0
  4659 ;;      Temps:          1       0       0       0       0
  4660 ;;      Totals:         2       2       0       0       0
  4661 ;;Total ram usage:        4 bytes
  4662 ;; Hardware stack levels used: 1
  4663 ;; Hardware stack levels required when called: 2
  4664 ;; This function calls:
  4665 ;;		_gpio_pin_write_logic
  4666 ;;		_send_4bits
  4667 ;;		_send_enable_signal
  4668 ;; This function is called by:
  4669 ;;		_lcd_4bits_initialize
  4670 ;;		_set_cursor
  4671 ;;		_main
  4672 ;;		_lcd_4bit_custom_character
  4673 ;; This function uses a non-reentrant model
  4674 ;;
  4675                           
  4676     1771                     _lcd_4bits_send_command:	
  4677                           ;psect for function _lcd_4bits_send_command
  4678                           
  4679                           
  4680                           ;incstack = 0
  4681                           ; Regs used in _lcd_4bits_send_command: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  4682                           ;lcd_4bits_send_command@lcd stored from wreg
  4683     1771  1283               	bcf	3,5	;RP0=0, select bank0
  4684     1772  1303               	bcf	3,6	;RP1=0, select bank0
  4685     1773  00A1               	movwf	lcd_4bits_send_command@lcd
  4686     1774                     l2875:
  4687     1774                     l2877:
  4688                           
  4689                           ;ECU_LAYER/LCD/ecu_lcd.c: 45:     if(lcd == ((void*)0)){
  4690     1774  0821               	movf	lcd_4bits_send_command@lcd,w
  4691     1775  1D03               	btfss	3,2
  4692     1776  2F78               	goto	u3361
  4693     1777  2F79               	goto	u3360
  4694     1778                     u3361:
  4695     1778  2F7C               	goto	l2881
  4696     1779                     u3360:
  4697     1779                     l2879:
  4698                           
  4699                           ;ECU_LAYER/LCD/ecu_lcd.c: 46:         ret = 0x01;
  4700     1779  01A0               	clrf	lcd_4bits_send_command@ret
  4701     177A  0AA0               	incf	lcd_4bits_send_command@ret,f
  4702                           
  4703                           ;ECU_LAYER/LCD/ecu_lcd.c: 47:     }
  4704     177B  2FB6               	goto	l2883
  4705     177C                     l2881:
  4706                           
  4707                           ;ECU_LAYER/LCD/ecu_lcd.c: 49:         ret = gpio_pin_write_logic(&(lcd->rs),GPIO_LOW);
  4708     177C  01F0               	clrf	gpio_pin_write_logic@logic
  4709     177D  0821               	movf	lcd_4bits_send_command@lcd,w
  4710     177E  120A  158A  2631  160A  118A  	fcall	_gpio_pin_write_logic
  4711     1783  1283               	bcf	3,5	;RP0=0, select bank0
  4712     1784  1303               	bcf	3,6	;RP1=0, select bank0
  4713     1785  00A0               	movwf	lcd_4bits_send_command@ret
  4714                           
  4715                           ;ECU_LAYER/LCD/ecu_lcd.c: 50:         ret = send_4bits(lcd,(command >> 4));
  4716     1786  087C               	movf	lcd_4bits_send_command@command,w
  4717     1787  00FD               	movwf	??_lcd_4bits_send_command
  4718     1788  3004               	movlw	4
  4719     1789                     u3375:
  4720     1789  1003               	clrc
  4721     178A  0CFD               	rrf	??_lcd_4bits_send_command,f
  4722     178B  3EFF               	addlw	-1
  4723     178C  1D03               	skipz
  4724     178D  2F89               	goto	u3375
  4725     178E  087D               	movf	??_lcd_4bits_send_command,w
  4726     178F  00F8               	movwf	send_4bits@command
  4727     1790  0821               	movf	lcd_4bits_send_command@lcd,w
  4728     1791  120A  158A  20D3  160A  118A  	fcall	_send_4bits
  4729     1796  1283               	bcf	3,5	;RP0=0, select bank0
  4730     1797  1303               	bcf	3,6	;RP1=0, select bank0
  4731     1798  00A0               	movwf	lcd_4bits_send_command@ret
  4732                           
  4733                           ;ECU_LAYER/LCD/ecu_lcd.c: 51:         ret = send_enable_signal(lcd);
  4734     1799  0821               	movf	lcd_4bits_send_command@lcd,w
  4735     179A  160A  118A  25AD  160A  118A  	fcall	_send_enable_signal
  4736     179F  1283               	bcf	3,5	;RP0=0, select bank0
  4737     17A0  1303               	bcf	3,6	;RP1=0, select bank0
  4738     17A1  00A0               	movwf	lcd_4bits_send_command@ret
  4739                           
  4740                           ;ECU_LAYER/LCD/ecu_lcd.c: 52:         ret = send_4bits(lcd,command);
  4741     17A2  087C               	movf	lcd_4bits_send_command@command,w
  4742     17A3  00F8               	movwf	send_4bits@command
  4743     17A4  0821               	movf	lcd_4bits_send_command@lcd,w
  4744     17A5  120A  158A  20D3  160A  118A  	fcall	_send_4bits
  4745     17AA  1283               	bcf	3,5	;RP0=0, select bank0
  4746     17AB  1303               	bcf	3,6	;RP1=0, select bank0
  4747     17AC  00A0               	movwf	lcd_4bits_send_command@ret
  4748                           
  4749                           ;ECU_LAYER/LCD/ecu_lcd.c: 53:         ret = send_enable_signal(lcd);
  4750     17AD  0821               	movf	lcd_4bits_send_command@lcd,w
  4751     17AE  160A  118A  25AD  160A  118A  	fcall	_send_enable_signal
  4752     17B3  1283               	bcf	3,5	;RP0=0, select bank0
  4753     17B4  1303               	bcf	3,6	;RP1=0, select bank0
  4754     17B5  00A0               	movwf	lcd_4bits_send_command@ret
  4755     17B6                     l2883:
  4756                           
  4757                           ;ECU_LAYER/LCD/ecu_lcd.c: 55:     return ret;
  4758     17B6  0820               	movf	lcd_4bits_send_command@ret,w
  4759     17B7                     l62:
  4760     17B7  0008               	return
  4761     17B8                     __end_of_lcd_4bits_send_command:
  4762                           
  4763                           	psect	text19
  4764     15AD                     __ptext19:	
  4765 ;; *************** function _send_enable_signal *****************
  4766 ;; Defined at:
  4767 ;;		line 171 in file "ECU_LAYER/LCD/ecu_lcd.c"
  4768 ;; Parameters:    Size  Location     Type
  4769 ;;  lcd             1    wreg     PTR const struct .
  4770 ;;		 -> lcd(6), 
  4771 ;; Auto vars:     Size  Location     Type
  4772 ;;  lcd             1   10[COMMON] PTR const struct .
  4773 ;;		 -> lcd(6), 
  4774 ;;  ret             1    9[COMMON] unsigned char 
  4775 ;; Return value:  Size  Location     Type
  4776 ;;                  1    wreg      unsigned char 
  4777 ;; Registers used:
  4778 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4779 ;; Tracked objects:
  4780 ;;		On entry : 0/0
  4781 ;;		On exit  : 0/0
  4782 ;;		Unchanged: 0/0
  4783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4784 ;;      Params:         0       0       0       0       0
  4785 ;;      Locals:         2       0       0       0       0
  4786 ;;      Temps:          1       0       0       0       0
  4787 ;;      Totals:         3       0       0       0       0
  4788 ;;Total ram usage:        3 bytes
  4789 ;; Hardware stack levels used: 1
  4790 ;; Hardware stack levels required when called: 1
  4791 ;; This function calls:
  4792 ;;		_gpio_pin_write_logic
  4793 ;; This function is called by:
  4794 ;;		_lcd_4bits_send_command
  4795 ;;		_lcd_4bits_send_char
  4796 ;; This function uses a non-reentrant model
  4797 ;;
  4798                           
  4799     15AD                     _send_enable_signal:	
  4800                           ;psect for function _send_enable_signal
  4801                           
  4802                           
  4803                           ;incstack = 0
  4804                           ; Regs used in _send_enable_signal: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4805                           ;send_enable_signal@lcd stored from wreg
  4806     15AD  00FA               	movwf	send_enable_signal@lcd
  4807     15AE                     l2691:
  4808     15AE                     l2693:
  4809                           
  4810                           ;ECU_LAYER/LCD/ecu_lcd.c: 173:     if(lcd == ((void*)0)){
  4811     15AE  087A               	movf	send_enable_signal@lcd,w
  4812     15AF  1D03               	btfss	3,2
  4813     15B0  2DB2               	goto	u2871
  4814     15B1  2DB3               	goto	u2870
  4815     15B2                     u2871:
  4816     15B2  2DB6               	goto	l2697
  4817     15B3                     u2870:
  4818     15B3                     l2695:
  4819                           
  4820                           ;ECU_LAYER/LCD/ecu_lcd.c: 174:         ret = 0x01;
  4821     15B3  01F9               	clrf	send_enable_signal@ret
  4822     15B4  0AF9               	incf	send_enable_signal@ret,f
  4823                           
  4824                           ;ECU_LAYER/LCD/ecu_lcd.c: 175:     }
  4825     15B5  2DCC               	goto	l125
  4826     15B6                     l2697:
  4827     15B6  01F0               	clrf	gpio_pin_write_logic@logic
  4828     15B7  0AF0               	incf	gpio_pin_write_logic@logic,f
  4829     15B8  087A               	movf	send_enable_signal@lcd,w
  4830     15B9  3E01               	addlw	1
  4831     15BA  120A  158A  2631  160A  118A  	fcall	_gpio_pin_write_logic
  4832     15BF                     l2699:
  4833                           
  4834                           ;ECU_LAYER/LCD/ecu_lcd.c: 178:         _delay((unsigned long)((5)*(8000000UL/4000000.0))
      +                          );
  4835     15BF  3003               	movlw	3
  4836     15C0  00F8               	movwf	??_send_enable_signal
  4837     15C1                     u5487:
  4838     15C1  0BF8               	decfsz	??_send_enable_signal,f
  4839     15C2  2DC1               	goto	u5487
  4840     15C3                     l2701:
  4841                           
  4842                           ;ECU_LAYER/LCD/ecu_lcd.c: 179:         ret = gpio_pin_write_logic(&(lcd->en),GPIO_LOW);
  4843     15C3  01F0               	clrf	gpio_pin_write_logic@logic
  4844     15C4  087A               	movf	send_enable_signal@lcd,w
  4845     15C5  3E01               	addlw	1
  4846     15C6  120A  158A  2631  160A  118A  	fcall	_gpio_pin_write_logic
  4847     15CB  00F9               	movwf	send_enable_signal@ret
  4848     15CC                     l125:	
  4849                           ;ECU_LAYER/LCD/ecu_lcd.c: 180:     }
  4850                           
  4851                           
  4852                           ;ECU_LAYER/LCD/ecu_lcd.c: 181:     return ret;
  4853     15CC  0879               	movf	send_enable_signal@ret,w
  4854     15CD                     l126:
  4855     15CD  0008               	return
  4856     15CE                     __end_of_send_enable_signal:
  4857                           
  4858                           	psect	text20
  4859     08D3                     __ptext20:	
  4860 ;; *************** function _send_4bits *****************
  4861 ;; Defined at:
  4862 ;;		line 157 in file "ECU_LAYER/LCD/ecu_lcd.c"
  4863 ;; Parameters:    Size  Location     Type
  4864 ;;  lcd             1    wreg     PTR struct .
  4865 ;;		 -> lcd(6), 
  4866 ;;  command         1    8[COMMON] unsigned char 
  4867 ;; Auto vars:     Size  Location     Type
  4868 ;;  lcd             1   11[COMMON] PTR struct .
  4869 ;;		 -> lcd(6), 
  4870 ;;  ret             1   10[COMMON] unsigned char 
  4871 ;; Return value:  Size  Location     Type
  4872 ;;                  1    wreg      unsigned char 
  4873 ;; Registers used:
  4874 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4875 ;; Tracked objects:
  4876 ;;		On entry : 0/0
  4877 ;;		On exit  : 0/0
  4878 ;;		Unchanged: 0/0
  4879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4880 ;;      Params:         1       0       0       0       0
  4881 ;;      Locals:         2       0       0       0       0
  4882 ;;      Temps:          1       0       0       0       0
  4883 ;;      Totals:         4       0       0       0       0
  4884 ;;Total ram usage:        4 bytes
  4885 ;; Hardware stack levels used: 1
  4886 ;; Hardware stack levels required when called: 1
  4887 ;; This function calls:
  4888 ;;		_gpio_pin_write_logic
  4889 ;; This function is called by:
  4890 ;;		_lcd_4bits_send_command
  4891 ;;		_lcd_4bits_send_char
  4892 ;; This function uses a non-reentrant model
  4893 ;;
  4894                           
  4895     08D3                     _send_4bits:	
  4896                           ;psect for function _send_4bits
  4897                           
  4898                           
  4899                           ;incstack = 0
  4900                           ; Regs used in _send_4bits: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4901                           ;send_4bits@lcd stored from wreg
  4902     08D3  00FB               	movwf	send_4bits@lcd
  4903     08D4                     l2679:
  4904     08D4                     l2681:
  4905                           
  4906                           ;ECU_LAYER/LCD/ecu_lcd.c: 159:     if(lcd == ((void*)0)){
  4907     08D4  087B               	movf	send_4bits@lcd,w
  4908     08D5  1D03               	btfss	3,2
  4909     08D6  28D8               	goto	u2841
  4910     08D7  28D9               	goto	u2840
  4911     08D8                     u2841:
  4912     08D8  28DC               	goto	l2685
  4913     08D9                     u2840:
  4914     08D9                     l2683:
  4915                           
  4916                           ;ECU_LAYER/LCD/ecu_lcd.c: 160:         ret = 0x01;
  4917     08D9  01FA               	clrf	send_4bits@ret
  4918     08DA  0AFA               	incf	send_4bits@ret,f
  4919                           
  4920                           ;ECU_LAYER/LCD/ecu_lcd.c: 161:     }
  4921     08DB  291B               	goto	l2687
  4922     08DC                     l2685:
  4923                           
  4924                           ;ECU_LAYER/LCD/ecu_lcd.c: 163:         ret = gpio_pin_write_logic(&(lcd->pins[0]),((comm
      +                          and >> 0) & 0x01));
  4925     08DC  0878               	movf	send_4bits@command,w
  4926     08DD  3901               	andlw	1
  4927     08DE  00F0               	movwf	gpio_pin_write_logic@logic
  4928     08DF  087B               	movf	send_4bits@lcd,w
  4929     08E0  3E02               	addlw	2
  4930     08E1  120A  158A  2631  120A  158A  	fcall	_gpio_pin_write_logic
  4931     08E6  00FA               	movwf	send_4bits@ret
  4932                           
  4933                           ;ECU_LAYER/LCD/ecu_lcd.c: 164:         ret = gpio_pin_write_logic(&(lcd->pins[1]),((comm
      +                          and >> 1) & 0x01));
  4934     08E7  0878               	movf	send_4bits@command,w
  4935     08E8  00F9               	movwf	??_send_4bits
  4936     08E9  1003               	clrc
  4937     08EA  0C79               	rrf	??_send_4bits,w
  4938     08EB  3901               	andlw	1
  4939     08EC  00F0               	movwf	gpio_pin_write_logic@logic
  4940     08ED  087B               	movf	send_4bits@lcd,w
  4941     08EE  3E03               	addlw	3
  4942     08EF  120A  158A  2631  120A  158A  	fcall	_gpio_pin_write_logic
  4943     08F4  00FA               	movwf	send_4bits@ret
  4944                           
  4945                           ;ECU_LAYER/LCD/ecu_lcd.c: 165:         ret = gpio_pin_write_logic(&(lcd->pins[2]),((comm
      +                          and >> 2) & 0x01));
  4946     08F5  0878               	movf	send_4bits@command,w
  4947     08F6  00F9               	movwf	??_send_4bits
  4948     08F7  3002               	movlw	2
  4949     08F8                     u2855:
  4950     08F8  1003               	clrc
  4951     08F9  0CF9               	rrf	??_send_4bits,f
  4952     08FA  3EFF               	addlw	-1
  4953     08FB  1D03               	skipz
  4954     08FC  28F8               	goto	u2855
  4955     08FD  0879               	movf	??_send_4bits,w
  4956     08FE  3901               	andlw	1
  4957     08FF  00F0               	movwf	gpio_pin_write_logic@logic
  4958     0900  087B               	movf	send_4bits@lcd,w
  4959     0901  3E04               	addlw	4
  4960     0902  120A  158A  2631  120A  158A  	fcall	_gpio_pin_write_logic
  4961     0907  00FA               	movwf	send_4bits@ret
  4962                           
  4963                           ;ECU_LAYER/LCD/ecu_lcd.c: 166:         ret = gpio_pin_write_logic(&(lcd->pins[3]),((comm
      +                          and >> 3) & 0x01));
  4964     0908  0878               	movf	send_4bits@command,w
  4965     0909  00F9               	movwf	??_send_4bits
  4966     090A  3003               	movlw	3
  4967     090B                     u2865:
  4968     090B  1003               	clrc
  4969     090C  0CF9               	rrf	??_send_4bits,f
  4970     090D  3EFF               	addlw	-1
  4971     090E  1D03               	skipz
  4972     090F  290B               	goto	u2865
  4973     0910  0879               	movf	??_send_4bits,w
  4974     0911  3901               	andlw	1
  4975     0912  00F0               	movwf	gpio_pin_write_logic@logic
  4976     0913  087B               	movf	send_4bits@lcd,w
  4977     0914  3E05               	addlw	5
  4978     0915  120A  158A  2631  120A  158A  	fcall	_gpio_pin_write_logic
  4979     091A  00FA               	movwf	send_4bits@ret
  4980     091B                     l2687:
  4981                           
  4982                           ;ECU_LAYER/LCD/ecu_lcd.c: 168:     return ret;
  4983     091B  087A               	movf	send_4bits@ret,w
  4984     091C                     l121:
  4985     091C  0008               	return
  4986     091D                     __end_of_send_4bits:
  4987                           
  4988                           	psect	text21
  4989     16C5                     __ptext21:	
  4990 ;; *************** function _keypad_initialize *****************
  4991 ;; Defined at:
  4992 ;;		line 17 in file "ECU_LAYER/KEYPAD/ecu_keypad.c"
  4993 ;; Parameters:    Size  Location     Type
  4994 ;;  keypad          1    wreg     PTR const struct .
  4995 ;;		 -> keypad(7), 
  4996 ;; Auto vars:     Size  Location     Type
  4997 ;;  keypad          1    0[BANK0 ] PTR const struct .
  4998 ;;		 -> keypad(7), 
  4999 ;;  l_coloumns      1    2[BANK0 ] unsigned char 
  5000 ;;  l_rows          1    1[BANK0 ] unsigned char 
  5001 ;;  ret             1    0        unsigned char 
  5002 ;; Return value:  Size  Location     Type
  5003 ;;                  1    wreg      unsigned char 
  5004 ;; Registers used:
  5005 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5006 ;; Tracked objects:
  5007 ;;		On entry : 0/0
  5008 ;;		On exit  : 0/0
  5009 ;;		Unchanged: 0/0
  5010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5011 ;;      Params:         0       0       0       0       0
  5012 ;;      Locals:         0       3       0       0       0
  5013 ;;      Temps:          0       0       0       0       0
  5014 ;;      Totals:         0       3       0       0       0
  5015 ;;Total ram usage:        3 bytes
  5016 ;; Hardware stack levels used: 1
  5017 ;; Hardware stack levels required when called: 2
  5018 ;; This function calls:
  5019 ;;		_gpio_pin_initialize
  5020 ;; This function is called by:
  5021 ;;		_ecu_initialzie
  5022 ;; This function uses a non-reentrant model
  5023 ;;
  5024                           
  5025     16C5                     _keypad_initialize:	
  5026                           ;psect for function _keypad_initialize
  5027                           
  5028                           
  5029                           ;incstack = 0
  5030                           ; Regs used in _keypad_initialize: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5031                           ;keypad_initialize@keypad stored from wreg
  5032     16C5  1283               	bcf	3,5	;RP0=0, select bank0
  5033     16C6  1303               	bcf	3,6	;RP1=0, select bank0
  5034     16C7  00A0               	movwf	keypad_initialize@keypad
  5035     16C8                     l2955:
  5036                           
  5037                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 19:     uint8 l_rows = 0x00;
  5038     16C8  01A1               	clrf	keypad_initialize@l_rows
  5039                           
  5040                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 20:     uint8 l_coloumns = 0x00;
  5041     16C9  01A2               	clrf	keypad_initialize@l_coloumns
  5042     16CA                     l2957:
  5043                           
  5044                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 21:     if(keypad == ((void*)0)){
  5045     16CA  0820               	movf	keypad_initialize@keypad,w
  5046     16CB  1D03               	btfss	3,2
  5047     16CC  2ECE               	goto	u3491
  5048     16CD  2ECF               	goto	u3490
  5049     16CE                     u3491:
  5050     16CE  2ED0               	goto	l2961
  5051     16CF                     u3490:
  5052     16CF                     l2959:
  5053                           
  5054                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 23:     }
  5055     16CF  2EF9               	goto	l19
  5056     16D0                     l2961:
  5057                           
  5058                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 25:         for(l_rows = 0x00;l_rows < 4;l_rows++){
  5059     16D0  01A1               	clrf	keypad_initialize@l_rows
  5060     16D1                     l2967:
  5061     16D1  0821               	movf	keypad_initialize@l_rows,w
  5062     16D2  0720               	addwf	keypad_initialize@keypad,w
  5063     16D3  120A  158A  22A9  160A  118A  	fcall	_gpio_pin_initialize
  5064     16D8                     l2969:
  5065                           
  5066                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 27:         }
  5067     16D8  3001               	movlw	1
  5068     16D9  00FF               	movwf	btemp+1
  5069     16DA  087F               	movf	btemp+1,w
  5070     16DB  1283               	bcf	3,5	;RP0=0, select bank0
  5071     16DC  1303               	bcf	3,6	;RP1=0, select bank0
  5072     16DD  07A1               	addwf	keypad_initialize@l_rows,f
  5073     16DE                     l2971:
  5074     16DE  3004               	movlw	4
  5075     16DF  0221               	subwf	keypad_initialize@l_rows,w
  5076     16E0  1C03               	skipc
  5077     16E1  2EE3               	goto	u3501
  5078     16E2  2EE4               	goto	u3500
  5079     16E3                     u3501:
  5080     16E3  2ED1               	goto	l2967
  5081     16E4                     u3500:
  5082     16E4                     l2973:
  5083                           
  5084                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 29:         for(l_coloumns = 0x00;l_coloumns < 3;l_colou
      +                          mns++){
  5085     16E4  01A2               	clrf	keypad_initialize@l_coloumns
  5086     16E5                     l2979:
  5087     16E5  0822               	movf	keypad_initialize@l_coloumns,w
  5088     16E6  0720               	addwf	keypad_initialize@keypad,w
  5089     16E7  3E04               	addlw	4
  5090     16E8  120A  158A  22A9  160A  118A  	fcall	_gpio_pin_initialize
  5091     16ED                     l2981:
  5092                           
  5093                           ;ECU_LAYER/KEYPAD/ecu_keypad.c: 31:         }
  5094     16ED  3001               	movlw	1
  5095     16EE  00FF               	movwf	btemp+1
  5096     16EF  087F               	movf	btemp+1,w
  5097     16F0  1283               	bcf	3,5	;RP0=0, select bank0
  5098     16F1  1303               	bcf	3,6	;RP1=0, select bank0
  5099     16F2  07A2               	addwf	keypad_initialize@l_coloumns,f
  5100     16F3                     l2983:
  5101     16F3  3003               	movlw	3
  5102     16F4  0222               	subwf	keypad_initialize@l_coloumns,w
  5103     16F5  1C03               	skipc
  5104     16F6  2EF8               	goto	u3511
  5105     16F7  2EF9               	goto	u3510
  5106     16F8                     u3511:
  5107     16F8  2EE5               	goto	l2979
  5108     16F9                     u3510:
  5109     16F9                     l19:
  5110     16F9  0008               	return
  5111     16FA                     __end_of_keypad_initialize:
  5112                           
  5113                           	psect	text22
  5114     0AA9                     __ptext22:	
  5115 ;; *************** function _gpio_pin_initialize *****************
  5116 ;; Defined at:
  5117 ;;		line 103 in file "MCAL_LAYER/GPIO/mcal_gpio.c"
  5118 ;; Parameters:    Size  Location     Type
  5119 ;;  pin             1    wreg     PTR const struct .
  5120 ;;		 -> buzzer(1), lcd$pins(4), lcd(6), motor2$pins(2), 
  5121 ;;		 -> motor2(2), motor1$pins(2), motor1(2), keypad$COLOUMNS_PIN(3), 
  5122 ;;		 -> keypad$ROWS_PIN(4), keypad(7), 
  5123 ;; Auto vars:     Size  Location     Type
  5124 ;;  pin             1   11[COMMON] PTR const struct .
  5125 ;;		 -> buzzer(1), lcd$pins(4), lcd(6), motor2$pins(2), 
  5126 ;;		 -> motor2(2), motor1$pins(2), motor1(2), keypad$COLOUMNS_PIN(3), 
  5127 ;;		 -> keypad$ROWS_PIN(4), keypad(7), 
  5128 ;;  ret             1   10[COMMON] unsigned char 
  5129 ;; Return value:  Size  Location     Type
  5130 ;;                  1    wreg      unsigned char 
  5131 ;; Registers used:
  5132 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5133 ;; Tracked objects:
  5134 ;;		On entry : 0/0
  5135 ;;		On exit  : 0/0
  5136 ;;		Unchanged: 0/0
  5137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5138 ;;      Params:         0       0       0       0       0
  5139 ;;      Locals:         2       0       0       0       0
  5140 ;;      Temps:          2       0       0       0       0
  5141 ;;      Totals:         4       0       0       0       0
  5142 ;;Total ram usage:        4 bytes
  5143 ;; Hardware stack levels used: 1
  5144 ;; Hardware stack levels required when called: 1
  5145 ;; This function calls:
  5146 ;;		_gpio_pin_direction_initialize
  5147 ;;		_gpio_pin_write_logic
  5148 ;; This function is called by:
  5149 ;;		_keypad_initialize
  5150 ;;		_lcd_4bits_initialize
  5151 ;;		_motor_initialize
  5152 ;;		_ecu_initialzie
  5153 ;; This function uses a non-reentrant model
  5154 ;;
  5155                           
  5156     0AA9                     _gpio_pin_initialize:	
  5157                           ;psect for function _gpio_pin_initialize
  5158                           
  5159                           
  5160                           ;incstack = 0
  5161                           ; Regs used in _gpio_pin_initialize: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  5162                           ;gpio_pin_initialize@pin stored from wreg
  5163     0AA9  00FB               	movwf	gpio_pin_initialize@pin
  5164     0AAA                     l2843:
  5165                           
  5166                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 104:     uint8 ret = 0x00;
  5167     0AAA  01FA               	clrf	gpio_pin_initialize@ret
  5168     0AAB                     l2845:
  5169                           
  5170                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 105:     if (pin == ((void*)0)) {
  5171     0AAB  087B               	movf	gpio_pin_initialize@pin,w
  5172     0AAC  1D03               	btfss	3,2
  5173     0AAD  2AAF               	goto	u3251
  5174     0AAE  2AB0               	goto	u3250
  5175     0AAF                     u3251:
  5176     0AAF  2AB3               	goto	l2849
  5177     0AB0                     u3250:
  5178     0AB0                     l2847:
  5179                           
  5180                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 106:         ret = 0x01;
  5181     0AB0  01FA               	clrf	gpio_pin_initialize@ret
  5182     0AB1  0AFA               	incf	gpio_pin_initialize@ret,f
  5183                           
  5184                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 107:     } else {
  5185     0AB2  2B3A               	goto	l2871
  5186     0AB3                     l2849:
  5187                           
  5188                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 108:         if ((pin->port == PORTA_INDEX && pin->pin < 6
      +                          ) || (pin->port == PORTB_INDEX && pin->pin < 8) || (pin->port == PORTC_INDEX && pin->pin
      +                           < 8) ||
  5189     0AB3  087B               	movf	gpio_pin_initialize@pin,w
  5190     0AB4  0084               	movwf	4
  5191     0AB5  1383               	bcf	3,7	;select IRP bank0
  5192     0AB6  0800               	movf	0,w
  5193     0AB7  3907               	andlw	7
  5194     0AB8  3A00               	xorlw	0
  5195     0AB9  1D03               	skipz
  5196     0ABA  2ABC               	goto	u3261
  5197     0ABB  2ABD               	goto	u3260
  5198     0ABC                     u3261:
  5199     0ABC  2ACB               	goto	l2853
  5200     0ABD                     u3260:
  5201     0ABD                     l2851:
  5202     0ABD  087B               	movf	gpio_pin_initialize@pin,w
  5203     0ABE  0084               	movwf	4
  5204     0ABF  0C00               	rrf	0,w
  5205     0AC0  00F8               	movwf	??_gpio_pin_initialize
  5206     0AC1  0CF8               	rrf	??_gpio_pin_initialize,f
  5207     0AC2  0C78               	rrf	??_gpio_pin_initialize,w
  5208     0AC3  3907               	andlw	7
  5209     0AC4  00F9               	movwf	??_gpio_pin_initialize+1
  5210     0AC5  3006               	movlw	6
  5211     0AC6  0279               	subwf	??_gpio_pin_initialize+1,w
  5212     0AC7  1C03               	skipc
  5213     0AC8  2ACA               	goto	u3271
  5214     0AC9  2ACB               	goto	u3270
  5215     0ACA                     u3271:
  5216     0ACA  2B27               	goto	l2869
  5217     0ACB                     u3270:
  5218     0ACB                     l2853:
  5219     0ACB  087B               	movf	gpio_pin_initialize@pin,w
  5220     0ACC  0084               	movwf	4
  5221     0ACD  0800               	movf	0,w
  5222     0ACE  3907               	andlw	7
  5223     0ACF  3A01               	xorlw	1
  5224     0AD0  1D03               	skipz
  5225     0AD1  2AD3               	goto	u3281
  5226     0AD2  2AD4               	goto	u3280
  5227     0AD3                     u3281:
  5228     0AD3  2AE2               	goto	l2857
  5229     0AD4                     u3280:
  5230     0AD4                     l2855:
  5231     0AD4  087B               	movf	gpio_pin_initialize@pin,w
  5232     0AD5  0084               	movwf	4
  5233     0AD6  0C00               	rrf	0,w
  5234     0AD7  00F8               	movwf	??_gpio_pin_initialize
  5235     0AD8  0CF8               	rrf	??_gpio_pin_initialize,f
  5236     0AD9  0C78               	rrf	??_gpio_pin_initialize,w
  5237     0ADA  3907               	andlw	7
  5238     0ADB  00F9               	movwf	??_gpio_pin_initialize+1
  5239     0ADC  3008               	movlw	8
  5240     0ADD  0279               	subwf	??_gpio_pin_initialize+1,w
  5241     0ADE  1C03               	skipc
  5242     0ADF  2AE1               	goto	u3291
  5243     0AE0  2AE2               	goto	u3290
  5244     0AE1                     u3291:
  5245     0AE1  2B27               	goto	l2869
  5246     0AE2                     u3290:
  5247     0AE2                     l2857:
  5248     0AE2  087B               	movf	gpio_pin_initialize@pin,w
  5249     0AE3  0084               	movwf	4
  5250     0AE4  0800               	movf	0,w
  5251     0AE5  3907               	andlw	7
  5252     0AE6  3A02               	xorlw	2
  5253     0AE7  1D03               	skipz
  5254     0AE8  2AEA               	goto	u3301
  5255     0AE9  2AEB               	goto	u3300
  5256     0AEA                     u3301:
  5257     0AEA  2AF9               	goto	l2861
  5258     0AEB                     u3300:
  5259     0AEB                     l2859:
  5260     0AEB  087B               	movf	gpio_pin_initialize@pin,w
  5261     0AEC  0084               	movwf	4
  5262     0AED  0C00               	rrf	0,w
  5263     0AEE  00F8               	movwf	??_gpio_pin_initialize
  5264     0AEF  0CF8               	rrf	??_gpio_pin_initialize,f
  5265     0AF0  0C78               	rrf	??_gpio_pin_initialize,w
  5266     0AF1  3907               	andlw	7
  5267     0AF2  00F9               	movwf	??_gpio_pin_initialize+1
  5268     0AF3  3008               	movlw	8
  5269     0AF4  0279               	subwf	??_gpio_pin_initialize+1,w
  5270     0AF5  1C03               	skipc
  5271     0AF6  2AF8               	goto	u3311
  5272     0AF7  2AF9               	goto	u3310
  5273     0AF8                     u3311:
  5274     0AF8  2B27               	goto	l2869
  5275     0AF9                     u3310:
  5276     0AF9                     l2861:
  5277     0AF9  087B               	movf	gpio_pin_initialize@pin,w
  5278     0AFA  0084               	movwf	4
  5279     0AFB  0800               	movf	0,w
  5280     0AFC  3907               	andlw	7
  5281     0AFD  3A03               	xorlw	3
  5282     0AFE  1D03               	skipz
  5283     0AFF  2B01               	goto	u3321
  5284     0B00  2B02               	goto	u3320
  5285     0B01                     u3321:
  5286     0B01  2B10               	goto	l2865
  5287     0B02                     u3320:
  5288     0B02                     l2863:
  5289     0B02  087B               	movf	gpio_pin_initialize@pin,w
  5290     0B03  0084               	movwf	4
  5291     0B04  0C00               	rrf	0,w
  5292     0B05  00F8               	movwf	??_gpio_pin_initialize
  5293     0B06  0CF8               	rrf	??_gpio_pin_initialize,f
  5294     0B07  0C78               	rrf	??_gpio_pin_initialize,w
  5295     0B08  3907               	andlw	7
  5296     0B09  00F9               	movwf	??_gpio_pin_initialize+1
  5297     0B0A  3008               	movlw	8
  5298     0B0B  0279               	subwf	??_gpio_pin_initialize+1,w
  5299     0B0C  1C03               	skipc
  5300     0B0D  2B0F               	goto	u3331
  5301     0B0E  2B10               	goto	u3330
  5302     0B0F                     u3331:
  5303     0B0F  2B27               	goto	l2869
  5304     0B10                     u3330:
  5305     0B10                     l2865:
  5306     0B10  087B               	movf	gpio_pin_initialize@pin,w
  5307     0B11  0084               	movwf	4
  5308     0B12  0800               	movf	0,w
  5309     0B13  3907               	andlw	7
  5310     0B14  3A04               	xorlw	4
  5311     0B15  1D03               	skipz
  5312     0B16  2B18               	goto	u3341
  5313     0B17  2B19               	goto	u3340
  5314     0B18                     u3341:
  5315     0B18  2AB0               	goto	l2847
  5316     0B19                     u3340:
  5317     0B19                     l2867:
  5318     0B19  087B               	movf	gpio_pin_initialize@pin,w
  5319     0B1A  0084               	movwf	4
  5320     0B1B  0C00               	rrf	0,w
  5321     0B1C  00F8               	movwf	??_gpio_pin_initialize
  5322     0B1D  0CF8               	rrf	??_gpio_pin_initialize,f
  5323     0B1E  0C78               	rrf	??_gpio_pin_initialize,w
  5324     0B1F  3907               	andlw	7
  5325     0B20  00F9               	movwf	??_gpio_pin_initialize+1
  5326     0B21  3003               	movlw	3
  5327     0B22  0279               	subwf	??_gpio_pin_initialize+1,w
  5328     0B23  1803               	skipnc
  5329     0B24  2B26               	goto	u3351
  5330     0B25  2B27               	goto	u3350
  5331     0B26                     u3351:
  5332     0B26  2AB0               	goto	l2847
  5333     0B27                     u3350:
  5334     0B27                     l2869:
  5335                           
  5336                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 109:                 (pin->port == PORTD_INDEX && pin->pin
      +                           < 8) || (pin->port == PORTE_INDEX && pin->pin < 3)) {;MCAL_LAYER/GPIO/mcal_gpio.c: 110:
      +                                       gpio_pin_direction_initialize(pin);
  5337     0B27  087B               	movf	gpio_pin_initialize@pin,w
  5338     0B28  120A  158A  2559  120A  158A  	fcall	_gpio_pin_direction_initialize
  5339                           
  5340                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 111:             gpio_pin_write_logic(pin, pin->logic);
  5341     0B2D  087B               	movf	gpio_pin_initialize@pin,w
  5342     0B2E  0084               	movwf	4
  5343     0B2F  3000               	movlw	0
  5344     0B30  1383               	bcf	3,7	;select IRP bank0
  5345     0B31  1B00               	btfsc	0,6
  5346     0B32  3001               	movlw	1
  5347     0B33  00F0               	movwf	gpio_pin_write_logic@logic
  5348     0B34  087B               	movf	gpio_pin_initialize@pin,w
  5349     0B35  120A  158A  2631  120A  158A  	fcall	_gpio_pin_write_logic
  5350     0B3A                     l2871:	
  5351                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 112:         } else {
  5352                           
  5353                           
  5354                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 116:     return ret;
  5355     0B3A  087A               	movf	gpio_pin_initialize@ret,w
  5356     0B3B                     l395:
  5357     0B3B  0008               	return
  5358     0B3C                     __end_of_gpio_pin_initialize:
  5359                           
  5360                           	psect	text23
  5361     0E31                     __ptext23:	
  5362 ;; *************** function _gpio_pin_write_logic *****************
  5363 ;; Defined at:
  5364 ;;		line 50 in file "MCAL_LAYER/GPIO/mcal_gpio.c"
  5365 ;; Parameters:    Size  Location     Type
  5366 ;;  pin             1    wreg     PTR const struct .
  5367 ;;		 -> buzzer(1), lcd$pins(4), lcd(6), motor2$pins(2), 
  5368 ;;		 -> motor2(2), motor1$pins(2), motor1(2), keypad$COLOUMNS_PIN(3), 
  5369 ;;		 -> keypad$ROWS_PIN(4), keypad(7), 
  5370 ;;  logic           1    0[COMMON] enum E1519
  5371 ;; Auto vars:     Size  Location     Type
  5372 ;;  pin             1    7[COMMON] PTR const struct .
  5373 ;;		 -> buzzer(1), lcd$pins(4), lcd(6), motor2$pins(2), 
  5374 ;;		 -> motor2(2), motor1$pins(2), motor1(2), keypad$COLOUMNS_PIN(3), 
  5375 ;;		 -> keypad$ROWS_PIN(4), keypad(7), 
  5376 ;;  ret             1    6[COMMON] unsigned char 
  5377 ;; Return value:  Size  Location     Type
  5378 ;;                  1    wreg      unsigned char 
  5379 ;; Registers used:
  5380 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  5381 ;; Tracked objects:
  5382 ;;		On entry : 0/0
  5383 ;;		On exit  : 0/0
  5384 ;;		Unchanged: 0/0
  5385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5386 ;;      Params:         1       0       0       0       0
  5387 ;;      Locals:         2       0       0       0       0
  5388 ;;      Temps:          5       0       0       0       0
  5389 ;;      Totals:         8       0       0       0       0
  5390 ;;Total ram usage:        8 bytes
  5391 ;; Hardware stack levels used: 1
  5392 ;; This function calls:
  5393 ;;		Nothing
  5394 ;; This function is called by:
  5395 ;;		_keypad_read_value
  5396 ;;		_lcd_4bits_send_command
  5397 ;;		_lcd_4bits_send_char
  5398 ;;		_send_4bits
  5399 ;;		_send_enable_signal
  5400 ;;		_motor_turn_right
  5401 ;;		_motor_turn_left
  5402 ;;		_motor_turn_off
  5403 ;;		_gpio_pin_initialize
  5404 ;;		_main
  5405 ;; This function uses a non-reentrant model
  5406 ;;
  5407                           
  5408     0E31                     _gpio_pin_write_logic:	
  5409                           ;psect for function _gpio_pin_write_logic
  5410                           
  5411                           
  5412                           ;incstack = 0
  5413                           ; Regs used in _gpio_pin_write_logic: [wreg-fsr0h+status,2+status,0+btemp+1]
  5414                           ;gpio_pin_write_logic@pin stored from wreg
  5415     0E31  00F7               	movwf	gpio_pin_write_logic@pin
  5416     0E32                     l2637:
  5417                           
  5418                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 51:     uint8 ret = 0x00;
  5419     0E32  01F6               	clrf	gpio_pin_write_logic@ret
  5420     0E33                     l2639:
  5421                           
  5422                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 52:     if (pin == ((void*)0)) {
  5423     0E33  0877               	movf	gpio_pin_write_logic@pin,w
  5424     0E34  1D03               	btfss	3,2
  5425     0E35  2E37               	goto	u2711
  5426     0E36  2E38               	goto	u2710
  5427     0E37                     u2711:
  5428     0E37  2E3B               	goto	l2643
  5429     0E38                     u2710:
  5430     0E38                     l2641:
  5431                           
  5432                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 53:         ret = 0x01;
  5433     0E38  01F6               	clrf	gpio_pin_write_logic@ret
  5434     0E39  0AF6               	incf	gpio_pin_write_logic@ret,f
  5435                           
  5436                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 54:     } else {
  5437     0E3A  2F0F               	goto	l2671
  5438     0E3B                     l2643:
  5439                           
  5440                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 55:         if ((pin->port == PORTA_INDEX && pin->pin < 6)
      +                           || (pin->port == PORTB_INDEX && pin->pin < 8) || (pin->port == PORTC_INDEX && pin->pin 
      +                          < 8) ||
  5441     0E3B  0877               	movf	gpio_pin_write_logic@pin,w
  5442     0E3C  0084               	movwf	4
  5443     0E3D  1383               	bcf	3,7	;select IRP bank0
  5444     0E3E  0800               	movf	0,w
  5445     0E3F  3907               	andlw	7
  5446     0E40  3A00               	xorlw	0
  5447     0E41  1D03               	skipz
  5448     0E42  2E44               	goto	u2721
  5449     0E43  2E45               	goto	u2720
  5450     0E44                     u2721:
  5451     0E44  2E53               	goto	l2647
  5452     0E45                     u2720:
  5453     0E45                     l2645:
  5454     0E45  0877               	movf	gpio_pin_write_logic@pin,w
  5455     0E46  0084               	movwf	4
  5456     0E47  0C00               	rrf	0,w
  5457     0E48  00F1               	movwf	??_gpio_pin_write_logic
  5458     0E49  0CF1               	rrf	??_gpio_pin_write_logic,f
  5459     0E4A  0C71               	rrf	??_gpio_pin_write_logic,w
  5460     0E4B  3907               	andlw	7
  5461     0E4C  00F2               	movwf	??_gpio_pin_write_logic+1
  5462     0E4D  3006               	movlw	6
  5463     0E4E  0272               	subwf	??_gpio_pin_write_logic+1,w
  5464     0E4F  1C03               	skipc
  5465     0E50  2E52               	goto	u2731
  5466     0E51  2E53               	goto	u2730
  5467     0E52                     u2731:
  5468     0E52  2EFF               	goto	l2669
  5469     0E53                     u2730:
  5470     0E53                     l2647:
  5471     0E53  0877               	movf	gpio_pin_write_logic@pin,w
  5472     0E54  0084               	movwf	4
  5473     0E55  0800               	movf	0,w
  5474     0E56  3907               	andlw	7
  5475     0E57  3A01               	xorlw	1
  5476     0E58  1D03               	skipz
  5477     0E59  2E5B               	goto	u2741
  5478     0E5A  2E5C               	goto	u2740
  5479     0E5B                     u2741:
  5480     0E5B  2E6A               	goto	l2651
  5481     0E5C                     u2740:
  5482     0E5C                     l2649:
  5483     0E5C  0877               	movf	gpio_pin_write_logic@pin,w
  5484     0E5D  0084               	movwf	4
  5485     0E5E  0C00               	rrf	0,w
  5486     0E5F  00F1               	movwf	??_gpio_pin_write_logic
  5487     0E60  0CF1               	rrf	??_gpio_pin_write_logic,f
  5488     0E61  0C71               	rrf	??_gpio_pin_write_logic,w
  5489     0E62  3907               	andlw	7
  5490     0E63  00F2               	movwf	??_gpio_pin_write_logic+1
  5491     0E64  3008               	movlw	8
  5492     0E65  0272               	subwf	??_gpio_pin_write_logic+1,w
  5493     0E66  1C03               	skipc
  5494     0E67  2E69               	goto	u2751
  5495     0E68  2E6A               	goto	u2750
  5496     0E69                     u2751:
  5497     0E69  2EFF               	goto	l2669
  5498     0E6A                     u2750:
  5499     0E6A                     l2651:
  5500     0E6A  0877               	movf	gpio_pin_write_logic@pin,w
  5501     0E6B  0084               	movwf	4
  5502     0E6C  0800               	movf	0,w
  5503     0E6D  3907               	andlw	7
  5504     0E6E  3A02               	xorlw	2
  5505     0E6F  1D03               	skipz
  5506     0E70  2E72               	goto	u2761
  5507     0E71  2E73               	goto	u2760
  5508     0E72                     u2761:
  5509     0E72  2E81               	goto	l2655
  5510     0E73                     u2760:
  5511     0E73                     l2653:
  5512     0E73  0877               	movf	gpio_pin_write_logic@pin,w
  5513     0E74  0084               	movwf	4
  5514     0E75  0C00               	rrf	0,w
  5515     0E76  00F1               	movwf	??_gpio_pin_write_logic
  5516     0E77  0CF1               	rrf	??_gpio_pin_write_logic,f
  5517     0E78  0C71               	rrf	??_gpio_pin_write_logic,w
  5518     0E79  3907               	andlw	7
  5519     0E7A  00F2               	movwf	??_gpio_pin_write_logic+1
  5520     0E7B  3008               	movlw	8
  5521     0E7C  0272               	subwf	??_gpio_pin_write_logic+1,w
  5522     0E7D  1C03               	skipc
  5523     0E7E  2E80               	goto	u2771
  5524     0E7F  2E81               	goto	u2770
  5525     0E80                     u2771:
  5526     0E80  2EFF               	goto	l2669
  5527     0E81                     u2770:
  5528     0E81                     l2655:
  5529     0E81  0877               	movf	gpio_pin_write_logic@pin,w
  5530     0E82  0084               	movwf	4
  5531     0E83  0800               	movf	0,w
  5532     0E84  3907               	andlw	7
  5533     0E85  3A03               	xorlw	3
  5534     0E86  1D03               	skipz
  5535     0E87  2E89               	goto	u2781
  5536     0E88  2E8A               	goto	u2780
  5537     0E89                     u2781:
  5538     0E89  2E98               	goto	l2659
  5539     0E8A                     u2780:
  5540     0E8A                     l2657:
  5541     0E8A  0877               	movf	gpio_pin_write_logic@pin,w
  5542     0E8B  0084               	movwf	4
  5543     0E8C  0C00               	rrf	0,w
  5544     0E8D  00F1               	movwf	??_gpio_pin_write_logic
  5545     0E8E  0CF1               	rrf	??_gpio_pin_write_logic,f
  5546     0E8F  0C71               	rrf	??_gpio_pin_write_logic,w
  5547     0E90  3907               	andlw	7
  5548     0E91  00F2               	movwf	??_gpio_pin_write_logic+1
  5549     0E92  3008               	movlw	8
  5550     0E93  0272               	subwf	??_gpio_pin_write_logic+1,w
  5551     0E94  1C03               	skipc
  5552     0E95  2E97               	goto	u2791
  5553     0E96  2E98               	goto	u2790
  5554     0E97                     u2791:
  5555     0E97  2EFF               	goto	l2669
  5556     0E98                     u2790:
  5557     0E98                     l2659:
  5558     0E98  0877               	movf	gpio_pin_write_logic@pin,w
  5559     0E99  0084               	movwf	4
  5560     0E9A  0800               	movf	0,w
  5561     0E9B  3907               	andlw	7
  5562     0E9C  3A04               	xorlw	4
  5563     0E9D  1D03               	skipz
  5564     0E9E  2EA0               	goto	u2801
  5565     0E9F  2EA1               	goto	u2800
  5566     0EA0                     u2801:
  5567     0EA0  2E38               	goto	l2641
  5568     0EA1                     u2800:
  5569     0EA1                     l2661:
  5570     0EA1  0877               	movf	gpio_pin_write_logic@pin,w
  5571     0EA2  0084               	movwf	4
  5572     0EA3  0C00               	rrf	0,w
  5573     0EA4  00F1               	movwf	??_gpio_pin_write_logic
  5574     0EA5  0CF1               	rrf	??_gpio_pin_write_logic,f
  5575     0EA6  0C71               	rrf	??_gpio_pin_write_logic,w
  5576     0EA7  3907               	andlw	7
  5577     0EA8  00F2               	movwf	??_gpio_pin_write_logic+1
  5578     0EA9  3003               	movlw	3
  5579     0EAA  0272               	subwf	??_gpio_pin_write_logic+1,w
  5580     0EAB  1803               	skipnc
  5581     0EAC  2EAE               	goto	u2811
  5582     0EAD  2EAF               	goto	u2810
  5583     0EAE                     u2811:
  5584     0EAE  2E38               	goto	l2641
  5585     0EAF                     u2810:
  5586     0EAF  2EFF               	goto	l2669
  5587     0EB0                     l2663:
  5588                           
  5589                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 60:                     (*port_registers[pin->port] |= (0x
      +                          01 << pin->pin));
  5590     0EB0  3001               	movlw	1
  5591     0EB1  00F1               	movwf	??_gpio_pin_write_logic
  5592     0EB2  0877               	movf	gpio_pin_write_logic@pin,w
  5593     0EB3  0084               	movwf	4
  5594     0EB4  0C00               	rrf	0,w
  5595     0EB5  00F2               	movwf	??_gpio_pin_write_logic+1
  5596     0EB6  0CF2               	rrf	??_gpio_pin_write_logic+1,f
  5597     0EB7  0C72               	rrf	??_gpio_pin_write_logic+1,w
  5598     0EB8  3907               	andlw	7
  5599     0EB9  3E01               	addlw	1
  5600     0EBA  2EBD               	goto	u2824
  5601     0EBB                     u2825:
  5602     0EBB  1003               	clrc
  5603     0EBC  0DF1               	rlf	??_gpio_pin_write_logic,f
  5604     0EBD                     u2824:
  5605     0EBD  3EFF               	addlw	-1
  5606     0EBE  1D03               	skipz
  5607     0EBF  2EBB               	goto	u2825
  5608     0EC0  0871               	movf	??_gpio_pin_write_logic,w
  5609     0EC1  00FF               	movwf	btemp+1
  5610     0EC2  0877               	movf	gpio_pin_write_logic@pin,w
  5611     0EC3  0084               	movwf	4
  5612     0EC4  0800               	movf	0,w
  5613     0EC5  3907               	andlw	7
  5614     0EC6  00F3               	movwf	??_gpio_pin_write_logic+2
  5615     0EC7  0773               	addwf	??_gpio_pin_write_logic+2,w
  5616     0EC8  3EA0               	addlw	(low (_port_registers| 0))& (0+255)
  5617     0EC9  0084               	movwf	4
  5618     0ECA  0800               	movf	0,w
  5619     0ECB  00F4               	movwf	??_gpio_pin_write_logic+3
  5620     0ECC  0A84               	incf	4,f
  5621     0ECD  0800               	movf	0,w
  5622     0ECE  00F5               	movwf	??_gpio_pin_write_logic+4
  5623     0ECF  0874               	movf	??_gpio_pin_write_logic+3,w
  5624     0ED0  0084               	movwf	4
  5625     0ED1  1783               	bsf	3,7
  5626     0ED2  1C75               	btfss	??_gpio_pin_write_logic+4,0
  5627     0ED3  1383               	bcf	3,7
  5628     0ED4  087F               	movf	btemp+1,w
  5629     0ED5  0480               	iorwf	0,f
  5630                           
  5631                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 61:                     break;
  5632     0ED6  2F0F               	goto	l2671
  5633     0ED7                     l2665:
  5634                           
  5635                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 63:                     (*port_registers[pin->port] &= ~(0
      +                          x01 << pin->pin));
  5636     0ED7  3001               	movlw	1
  5637     0ED8  00F1               	movwf	??_gpio_pin_write_logic
  5638     0ED9  0877               	movf	gpio_pin_write_logic@pin,w
  5639     0EDA  0084               	movwf	4
  5640     0EDB  0C00               	rrf	0,w
  5641     0EDC  00F2               	movwf	??_gpio_pin_write_logic+1
  5642     0EDD  0CF2               	rrf	??_gpio_pin_write_logic+1,f
  5643     0EDE  0C72               	rrf	??_gpio_pin_write_logic+1,w
  5644     0EDF  3907               	andlw	7
  5645     0EE0  3E01               	addlw	1
  5646     0EE1  2EE4               	goto	u2834
  5647     0EE2                     u2835:
  5648     0EE2  1003               	clrc
  5649     0EE3  0DF1               	rlf	??_gpio_pin_write_logic,f
  5650     0EE4                     u2834:
  5651     0EE4  3EFF               	addlw	-1
  5652     0EE5  1D03               	skipz
  5653     0EE6  2EE2               	goto	u2835
  5654     0EE7  0871               	movf	??_gpio_pin_write_logic,w
  5655     0EE8  3AFF               	xorlw	255
  5656     0EE9  00FF               	movwf	btemp+1
  5657     0EEA  0877               	movf	gpio_pin_write_logic@pin,w
  5658     0EEB  0084               	movwf	4
  5659     0EEC  0800               	movf	0,w
  5660     0EED  3907               	andlw	7
  5661     0EEE  00F3               	movwf	??_gpio_pin_write_logic+2
  5662     0EEF  0773               	addwf	??_gpio_pin_write_logic+2,w
  5663     0EF0  3EA0               	addlw	(low (_port_registers| 0))& (0+255)
  5664     0EF1  0084               	movwf	4
  5665     0EF2  0800               	movf	0,w
  5666     0EF3  00F4               	movwf	??_gpio_pin_write_logic+3
  5667     0EF4  0A84               	incf	4,f
  5668     0EF5  0800               	movf	0,w
  5669     0EF6  00F5               	movwf	??_gpio_pin_write_logic+4
  5670     0EF7  0874               	movf	??_gpio_pin_write_logic+3,w
  5671     0EF8  0084               	movwf	4
  5672     0EF9  1783               	bsf	3,7
  5673     0EFA  1C75               	btfss	??_gpio_pin_write_logic+4,0
  5674     0EFB  1383               	bcf	3,7
  5675     0EFC  087F               	movf	btemp+1,w
  5676     0EFD  0580               	andwf	0,f
  5677                           
  5678                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 64:                     break;
  5679     0EFE  2F0F               	goto	l2671
  5680     0EFF                     l2669:
  5681     0EFF  0870               	movf	gpio_pin_write_logic@logic,w
  5682     0F00  00F1               	movwf	??_gpio_pin_write_logic
  5683     0F01  01F2               	clrf	??_gpio_pin_write_logic+1
  5684                           
  5685                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5686                           ; Switch size 1, requested type "simple"
  5687                           ; Number of cases is 1, Range of values is 0 to 0
  5688                           ; switch strategies available:
  5689                           ; Name         Instructions Cycles
  5690                           ; simple_byte            4     3 (average)
  5691                           ; direct_byte           11     8 (fixed)
  5692                           ; jumptable            260     6 (fixed)
  5693                           ;	Chosen strategy is simple_byte
  5694     0F02  0872               	movf	??_gpio_pin_write_logic+1,w
  5695     0F03  3A00               	xorlw	0	; case 0
  5696     0F04  1903               	skipnz
  5697     0F05  2F07               	goto	l4091
  5698     0F06  2F0F               	goto	l2671
  5699     0F07                     l4091:
  5700                           
  5701                           ; Switch size 1, requested type "simple"
  5702                           ; Number of cases is 2, Range of values is 0 to 1
  5703                           ; switch strategies available:
  5704                           ; Name         Instructions Cycles
  5705                           ; simple_byte            7     4 (average)
  5706                           ; direct_byte           14     8 (fixed)
  5707                           ; jumptable            260     6 (fixed)
  5708                           ;	Chosen strategy is simple_byte
  5709     0F07  0871               	movf	??_gpio_pin_write_logic,w
  5710     0F08  3A00               	xorlw	0	; case 0
  5711     0F09  1903               	skipnz
  5712     0F0A  2ED7               	goto	l2665
  5713     0F0B  3A01               	xorlw	1	; case 1
  5714     0F0C  1903               	skipnz
  5715     0F0D  2EB0               	goto	l2663
  5716     0F0E  2F0F               	goto	l2671
  5717     0F0F                     l2671:
  5718                           
  5719                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 70:     return ret;
  5720     0F0F  0876               	movf	gpio_pin_write_logic@ret,w
  5721     0F10                     l342:
  5722     0F10  0008               	return
  5723     0F11                     __end_of_gpio_pin_write_logic:
  5724                           
  5725                           	psect	text24
  5726     0D59                     __ptext24:	
  5727 ;; *************** function _gpio_pin_direction_initialize *****************
  5728 ;; Defined at:
  5729 ;;		line 12 in file "MCAL_LAYER/GPIO/mcal_gpio.c"
  5730 ;; Parameters:    Size  Location     Type
  5731 ;;  pin             1    wreg     PTR const struct .
  5732 ;;		 -> buzzer(1), lcd$pins(4), lcd(6), motor2$pins(2), 
  5733 ;;		 -> motor2(2), motor1$pins(2), motor1(2), keypad$COLOUMNS_PIN(3), 
  5734 ;;		 -> keypad$ROWS_PIN(4), keypad(7), 
  5735 ;; Auto vars:     Size  Location     Type
  5736 ;;  pin             1    5[COMMON] PTR const struct .
  5737 ;;		 -> buzzer(1), lcd$pins(4), lcd(6), motor2$pins(2), 
  5738 ;;		 -> motor2(2), motor1$pins(2), motor1(2), keypad$COLOUMNS_PIN(3), 
  5739 ;;		 -> keypad$ROWS_PIN(4), keypad(7), 
  5740 ;;  ret             1    0        unsigned char 
  5741 ;; Return value:  Size  Location     Type
  5742 ;;                  1    wreg      unsigned char 
  5743 ;; Registers used:
  5744 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  5745 ;; Tracked objects:
  5746 ;;		On entry : 0/0
  5747 ;;		On exit  : 0/0
  5748 ;;		Unchanged: 0/0
  5749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5750 ;;      Params:         0       0       0       0       0
  5751 ;;      Locals:         1       0       0       0       0
  5752 ;;      Temps:          5       0       0       0       0
  5753 ;;      Totals:         6       0       0       0       0
  5754 ;;Total ram usage:        6 bytes
  5755 ;; Hardware stack levels used: 1
  5756 ;; This function calls:
  5757 ;;		Nothing
  5758 ;; This function is called by:
  5759 ;;		_gpio_pin_initialize
  5760 ;; This function uses a non-reentrant model
  5761 ;;
  5762                           
  5763     0D59                     _gpio_pin_direction_initialize:	
  5764                           ;psect for function _gpio_pin_direction_initialize
  5765                           
  5766                           
  5767                           ;incstack = 0
  5768                           ; Regs used in _gpio_pin_direction_initialize: [wreg-fsr0h+status,2+status,0+btemp+1]
  5769                           ;gpio_pin_direction_initialize@pin stored from wreg
  5770     0D59  00F5               	movwf	gpio_pin_direction_initialize@pin
  5771     0D5A                     l2705:
  5772     0D5A                     l2707:
  5773                           
  5774                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 14:     if (pin == ((void*)0)) {
  5775     0D5A  0875               	movf	gpio_pin_direction_initialize@pin,w
  5776     0D5B  1D03               	btfss	3,2
  5777     0D5C  2D5E               	goto	u2881
  5778     0D5D  2D5F               	goto	u2880
  5779     0D5E                     u2881:
  5780     0D5E  2D60               	goto	l2711
  5781     0D5F                     u2880:
  5782     0D5F                     l2709:
  5783                           
  5784                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 16:     } else {
  5785     0D5F  2E30               	goto	l302
  5786     0D60                     l2711:
  5787                           
  5788                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 17:         if ((pin->port == PORTA_INDEX && pin->pin < 6)
      +                           || (pin->port == PORTB_INDEX && pin->pin < 8) || (pin->port == PORTC_INDEX && pin->pin 
      +                          < 8) ||
  5789     0D60  0875               	movf	gpio_pin_direction_initialize@pin,w
  5790     0D61  0084               	movwf	4
  5791     0D62  1383               	bcf	3,7	;select IRP bank0
  5792     0D63  0800               	movf	0,w
  5793     0D64  3907               	andlw	7
  5794     0D65  3A00               	xorlw	0
  5795     0D66  1D03               	skipz
  5796     0D67  2D69               	goto	u2891
  5797     0D68  2D6A               	goto	u2890
  5798     0D69                     u2891:
  5799     0D69  2D78               	goto	l2715
  5800     0D6A                     u2890:
  5801     0D6A                     l2713:
  5802     0D6A  0875               	movf	gpio_pin_direction_initialize@pin,w
  5803     0D6B  0084               	movwf	4
  5804     0D6C  0C00               	rrf	0,w
  5805     0D6D  00F0               	movwf	??_gpio_pin_direction_initialize
  5806     0D6E  0CF0               	rrf	??_gpio_pin_direction_initialize,f
  5807     0D6F  0C70               	rrf	??_gpio_pin_direction_initialize,w
  5808     0D70  3907               	andlw	7
  5809     0D71  00F1               	movwf	??_gpio_pin_direction_initialize+1
  5810     0D72  3006               	movlw	6
  5811     0D73  0271               	subwf	??_gpio_pin_direction_initialize+1,w
  5812     0D74  1C03               	skipc
  5813     0D75  2D77               	goto	u2901
  5814     0D76  2D78               	goto	u2900
  5815     0D77                     u2901:
  5816     0D77  2E24               	goto	l2737
  5817     0D78                     u2900:
  5818     0D78                     l2715:
  5819     0D78  0875               	movf	gpio_pin_direction_initialize@pin,w
  5820     0D79  0084               	movwf	4
  5821     0D7A  0800               	movf	0,w
  5822     0D7B  3907               	andlw	7
  5823     0D7C  3A01               	xorlw	1
  5824     0D7D  1D03               	skipz
  5825     0D7E  2D80               	goto	u2911
  5826     0D7F  2D81               	goto	u2910
  5827     0D80                     u2911:
  5828     0D80  2D8F               	goto	l2719
  5829     0D81                     u2910:
  5830     0D81                     l2717:
  5831     0D81  0875               	movf	gpio_pin_direction_initialize@pin,w
  5832     0D82  0084               	movwf	4
  5833     0D83  0C00               	rrf	0,w
  5834     0D84  00F0               	movwf	??_gpio_pin_direction_initialize
  5835     0D85  0CF0               	rrf	??_gpio_pin_direction_initialize,f
  5836     0D86  0C70               	rrf	??_gpio_pin_direction_initialize,w
  5837     0D87  3907               	andlw	7
  5838     0D88  00F1               	movwf	??_gpio_pin_direction_initialize+1
  5839     0D89  3008               	movlw	8
  5840     0D8A  0271               	subwf	??_gpio_pin_direction_initialize+1,w
  5841     0D8B  1C03               	skipc
  5842     0D8C  2D8E               	goto	u2921
  5843     0D8D  2D8F               	goto	u2920
  5844     0D8E                     u2921:
  5845     0D8E  2E24               	goto	l2737
  5846     0D8F                     u2920:
  5847     0D8F                     l2719:
  5848     0D8F  0875               	movf	gpio_pin_direction_initialize@pin,w
  5849     0D90  0084               	movwf	4
  5850     0D91  0800               	movf	0,w
  5851     0D92  3907               	andlw	7
  5852     0D93  3A02               	xorlw	2
  5853     0D94  1D03               	skipz
  5854     0D95  2D97               	goto	u2931
  5855     0D96  2D98               	goto	u2930
  5856     0D97                     u2931:
  5857     0D97  2DA6               	goto	l2723
  5858     0D98                     u2930:
  5859     0D98                     l2721:
  5860     0D98  0875               	movf	gpio_pin_direction_initialize@pin,w
  5861     0D99  0084               	movwf	4
  5862     0D9A  0C00               	rrf	0,w
  5863     0D9B  00F0               	movwf	??_gpio_pin_direction_initialize
  5864     0D9C  0CF0               	rrf	??_gpio_pin_direction_initialize,f
  5865     0D9D  0C70               	rrf	??_gpio_pin_direction_initialize,w
  5866     0D9E  3907               	andlw	7
  5867     0D9F  00F1               	movwf	??_gpio_pin_direction_initialize+1
  5868     0DA0  3008               	movlw	8
  5869     0DA1  0271               	subwf	??_gpio_pin_direction_initialize+1,w
  5870     0DA2  1C03               	skipc
  5871     0DA3  2DA5               	goto	u2941
  5872     0DA4  2DA6               	goto	u2940
  5873     0DA5                     u2941:
  5874     0DA5  2E24               	goto	l2737
  5875     0DA6                     u2940:
  5876     0DA6                     l2723:
  5877     0DA6  0875               	movf	gpio_pin_direction_initialize@pin,w
  5878     0DA7  0084               	movwf	4
  5879     0DA8  0800               	movf	0,w
  5880     0DA9  3907               	andlw	7
  5881     0DAA  3A03               	xorlw	3
  5882     0DAB  1D03               	skipz
  5883     0DAC  2DAE               	goto	u2951
  5884     0DAD  2DAF               	goto	u2950
  5885     0DAE                     u2951:
  5886     0DAE  2DBD               	goto	l2727
  5887     0DAF                     u2950:
  5888     0DAF                     l2725:
  5889     0DAF  0875               	movf	gpio_pin_direction_initialize@pin,w
  5890     0DB0  0084               	movwf	4
  5891     0DB1  0C00               	rrf	0,w
  5892     0DB2  00F0               	movwf	??_gpio_pin_direction_initialize
  5893     0DB3  0CF0               	rrf	??_gpio_pin_direction_initialize,f
  5894     0DB4  0C70               	rrf	??_gpio_pin_direction_initialize,w
  5895     0DB5  3907               	andlw	7
  5896     0DB6  00F1               	movwf	??_gpio_pin_direction_initialize+1
  5897     0DB7  3008               	movlw	8
  5898     0DB8  0271               	subwf	??_gpio_pin_direction_initialize+1,w
  5899     0DB9  1C03               	skipc
  5900     0DBA  2DBC               	goto	u2961
  5901     0DBB  2DBD               	goto	u2960
  5902     0DBC                     u2961:
  5903     0DBC  2E24               	goto	l2737
  5904     0DBD                     u2960:
  5905     0DBD                     l2727:
  5906     0DBD  0875               	movf	gpio_pin_direction_initialize@pin,w
  5907     0DBE  0084               	movwf	4
  5908     0DBF  0800               	movf	0,w
  5909     0DC0  3907               	andlw	7
  5910     0DC1  3A04               	xorlw	4
  5911     0DC2  1D03               	skipz
  5912     0DC3  2DC5               	goto	u2971
  5913     0DC4  2DC6               	goto	u2970
  5914     0DC5                     u2971:
  5915     0DC5  2D5F               	goto	l2709
  5916     0DC6                     u2970:
  5917     0DC6                     l2729:
  5918     0DC6  0875               	movf	gpio_pin_direction_initialize@pin,w
  5919     0DC7  0084               	movwf	4
  5920     0DC8  0C00               	rrf	0,w
  5921     0DC9  00F0               	movwf	??_gpio_pin_direction_initialize
  5922     0DCA  0CF0               	rrf	??_gpio_pin_direction_initialize,f
  5923     0DCB  0C70               	rrf	??_gpio_pin_direction_initialize,w
  5924     0DCC  3907               	andlw	7
  5925     0DCD  00F1               	movwf	??_gpio_pin_direction_initialize+1
  5926     0DCE  3003               	movlw	3
  5927     0DCF  0271               	subwf	??_gpio_pin_direction_initialize+1,w
  5928     0DD0  1803               	skipnc
  5929     0DD1  2DD3               	goto	u2981
  5930     0DD2  2DD4               	goto	u2980
  5931     0DD3                     u2981:
  5932     0DD3  2D5F               	goto	l2709
  5933     0DD4                     u2980:
  5934     0DD4  2E24               	goto	l2737
  5935     0DD5                     l2731:
  5936                           
  5937                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 21:                     (*tris_registers[pin->port] &= ~(0
      +                          x01 << pin->pin));
  5938     0DD5  3001               	movlw	1
  5939     0DD6  00F0               	movwf	??_gpio_pin_direction_initialize
  5940     0DD7  0875               	movf	gpio_pin_direction_initialize@pin,w
  5941     0DD8  0084               	movwf	4
  5942     0DD9  0C00               	rrf	0,w
  5943     0DDA  00F1               	movwf	??_gpio_pin_direction_initialize+1
  5944     0DDB  0CF1               	rrf	??_gpio_pin_direction_initialize+1,f
  5945     0DDC  0C71               	rrf	??_gpio_pin_direction_initialize+1,w
  5946     0DDD  3907               	andlw	7
  5947     0DDE  3E01               	addlw	1
  5948     0DDF  2DE2               	goto	u2994
  5949     0DE0                     u2995:
  5950     0DE0  1003               	clrc
  5951     0DE1  0DF0               	rlf	??_gpio_pin_direction_initialize,f
  5952     0DE2                     u2994:
  5953     0DE2  3EFF               	addlw	-1
  5954     0DE3  1D03               	skipz
  5955     0DE4  2DE0               	goto	u2995
  5956     0DE5  0870               	movf	??_gpio_pin_direction_initialize,w
  5957     0DE6  3AFF               	xorlw	255
  5958     0DE7  00FF               	movwf	btemp+1
  5959     0DE8  0875               	movf	gpio_pin_direction_initialize@pin,w
  5960     0DE9  0084               	movwf	4
  5961     0DEA  0800               	movf	0,w
  5962     0DEB  3907               	andlw	7
  5963     0DEC  00F2               	movwf	??_gpio_pin_direction_initialize+2
  5964     0DED  0772               	addwf	??_gpio_pin_direction_initialize+2,w
  5965     0DEE  3EAA               	addlw	(low (_tris_registers| 0))& (0+255)
  5966     0DEF  0084               	movwf	4
  5967     0DF0  0800               	movf	0,w
  5968     0DF1  00F3               	movwf	??_gpio_pin_direction_initialize+3
  5969     0DF2  0A84               	incf	4,f
  5970     0DF3  0800               	movf	0,w
  5971     0DF4  00F4               	movwf	??_gpio_pin_direction_initialize+4
  5972     0DF5  0873               	movf	??_gpio_pin_direction_initialize+3,w
  5973     0DF6  0084               	movwf	4
  5974     0DF7  1783               	bsf	3,7
  5975     0DF8  1C74               	btfss	??_gpio_pin_direction_initialize+4,0
  5976     0DF9  1383               	bcf	3,7
  5977     0DFA  087F               	movf	btemp+1,w
  5978     0DFB  0580               	andwf	0,f
  5979                           
  5980                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 22:                     break;
  5981     0DFC  2E30               	goto	l302
  5982     0DFD                     l2733:
  5983                           
  5984                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 24:                     (*tris_registers[pin->port] |= (0x
      +                          01 << pin->pin));
  5985     0DFD  3001               	movlw	1
  5986     0DFE  00F0               	movwf	??_gpio_pin_direction_initialize
  5987     0DFF  0875               	movf	gpio_pin_direction_initialize@pin,w
  5988     0E00  0084               	movwf	4
  5989     0E01  0C00               	rrf	0,w
  5990     0E02  00F1               	movwf	??_gpio_pin_direction_initialize+1
  5991     0E03  0CF1               	rrf	??_gpio_pin_direction_initialize+1,f
  5992     0E04  0C71               	rrf	??_gpio_pin_direction_initialize+1,w
  5993     0E05  3907               	andlw	7
  5994     0E06  3E01               	addlw	1
  5995     0E07  2E0A               	goto	u3004
  5996     0E08                     u3005:
  5997     0E08  1003               	clrc
  5998     0E09  0DF0               	rlf	??_gpio_pin_direction_initialize,f
  5999     0E0A                     u3004:
  6000     0E0A  3EFF               	addlw	-1
  6001     0E0B  1D03               	skipz
  6002     0E0C  2E08               	goto	u3005
  6003     0E0D  0870               	movf	??_gpio_pin_direction_initialize,w
  6004     0E0E  00FF               	movwf	btemp+1
  6005     0E0F  0875               	movf	gpio_pin_direction_initialize@pin,w
  6006     0E10  0084               	movwf	4
  6007     0E11  0800               	movf	0,w
  6008     0E12  3907               	andlw	7
  6009     0E13  00F2               	movwf	??_gpio_pin_direction_initialize+2
  6010     0E14  0772               	addwf	??_gpio_pin_direction_initialize+2,w
  6011     0E15  3EAA               	addlw	(low (_tris_registers| 0))& (0+255)
  6012     0E16  0084               	movwf	4
  6013     0E17  0800               	movf	0,w
  6014     0E18  00F3               	movwf	??_gpio_pin_direction_initialize+3
  6015     0E19  0A84               	incf	4,f
  6016     0E1A  0800               	movf	0,w
  6017     0E1B  00F4               	movwf	??_gpio_pin_direction_initialize+4
  6018     0E1C  0873               	movf	??_gpio_pin_direction_initialize+3,w
  6019     0E1D  0084               	movwf	4
  6020     0E1E  1783               	bsf	3,7
  6021     0E1F  1C74               	btfss	??_gpio_pin_direction_initialize+4,0
  6022     0E20  1383               	bcf	3,7
  6023     0E21  087F               	movf	btemp+1,w
  6024     0E22  0480               	iorwf	0,f
  6025                           
  6026                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 25:                     break;
  6027     0E23  2E30               	goto	l302
  6028     0E24                     l2737:
  6029     0E24  0875               	movf	gpio_pin_direction_initialize@pin,w
  6030     0E25  0084               	movwf	4
  6031     0E26  0D00               	rlf	0,w
  6032     0E27  0D00               	rlf	0,w
  6033     0E28  3901               	andlw	1
  6034                           
  6035                           ; Switch size 1, requested type "simple"
  6036                           ; Number of cases is 2, Range of values is 0 to 1
  6037                           ; switch strategies available:
  6038                           ; Name         Instructions Cycles
  6039                           ; simple_byte            7     4 (average)
  6040                           ; direct_byte           14     8 (fixed)
  6041                           ; jumptable            260     6 (fixed)
  6042                           ;	Chosen strategy is simple_byte
  6043     0E29  3A00               	xorlw	0	; case 0
  6044     0E2A  1903               	skipnz
  6045     0E2B  2DD5               	goto	l2731
  6046     0E2C  3A01               	xorlw	1	; case 1
  6047     0E2D  1903               	skipnz
  6048     0E2E  2DFD               	goto	l2733
  6049     0E2F  2E30               	goto	l302
  6050     0E30                     l302:
  6051     0E30  0008               	return
  6052     0E31                     __end_of_gpio_pin_direction_initialize:
  6053                           
  6054                           	psect	text25
  6055     0CA1                     __ptext25:	
  6056 ;; *************** function ___xxtofl *****************
  6057 ;; Defined at:
  6058 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
  6059 ;; Parameters:    Size  Location     Type
  6060 ;;  sign            1    wreg     unsigned char 
  6061 ;;  val             4    0[COMMON] long 
  6062 ;; Auto vars:     Size  Location     Type
  6063 ;;  sign            1    8[COMMON] unsigned char 
  6064 ;;  arg             4   10[COMMON] unsigned long 
  6065 ;;  exp             1    9[COMMON] unsigned char 
  6066 ;; Return value:  Size  Location     Type
  6067 ;;                  4    0[COMMON] unsigned char 
  6068 ;; Registers used:
  6069 ;;		wreg, status,2, status,0, btemp+1
  6070 ;; Tracked objects:
  6071 ;;		On entry : 0/0
  6072 ;;		On exit  : 0/0
  6073 ;;		Unchanged: 0/0
  6074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6075 ;;      Params:         4       0       0       0       0
  6076 ;;      Locals:         6       0       0       0       0
  6077 ;;      Temps:          4       0       0       0       0
  6078 ;;      Totals:        14       0       0       0       0
  6079 ;;Total ram usage:       14 bytes
  6080 ;; Hardware stack levels used: 1
  6081 ;; This function calls:
  6082 ;;		Nothing
  6083 ;; This function is called by:
  6084 ;;		_main
  6085 ;; This function uses a non-reentrant model
  6086 ;;
  6087                           
  6088     0CA1                     ___xxtofl:	
  6089                           ;psect for function ___xxtofl
  6090                           
  6091                           
  6092                           ;incstack = 0
  6093                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  6094                           ;___xxtofl@sign stored from wreg
  6095     0CA1  00F8               	movwf	___xxtofl@sign
  6096     0CA2                     l3717:
  6097     0CA2  0878               	movf	___xxtofl@sign,w
  6098     0CA3  1903               	btfsc	3,2
  6099     0CA4  2CA6               	goto	u4771
  6100     0CA5  2CA7               	goto	u4770
  6101     0CA6                     u4771:
  6102     0CA6  2CBB               	goto	l3723
  6103     0CA7                     u4770:
  6104     0CA7                     l3719:
  6105     0CA7  1FF3               	btfss	___xxtofl@val+3,7
  6106     0CA8  2CAA               	goto	u4781
  6107     0CA9  2CAB               	goto	u4780
  6108     0CAA                     u4781:
  6109     0CAA  2CBB               	goto	l3723
  6110     0CAB                     u4780:
  6111     0CAB                     l3721:
  6112     0CAB  0970               	comf	___xxtofl@val,w
  6113     0CAC  00FA               	movwf	___xxtofl@arg
  6114     0CAD  0971               	comf	___xxtofl@val+1,w
  6115     0CAE  00FB               	movwf	___xxtofl@arg+1
  6116     0CAF  0972               	comf	___xxtofl@val+2,w
  6117     0CB0  00FC               	movwf	___xxtofl@arg+2
  6118     0CB1  0973               	comf	___xxtofl@val+3,w
  6119     0CB2  00FD               	movwf	___xxtofl@arg+3
  6120     0CB3  0AFA               	incf	___xxtofl@arg,f
  6121     0CB4  1903               	skipnz
  6122     0CB5  0AFB               	incf	___xxtofl@arg+1,f
  6123     0CB6  1903               	skipnz
  6124     0CB7  0AFC               	incf	___xxtofl@arg+2,f
  6125     0CB8  1903               	skipnz
  6126     0CB9  0AFD               	incf	___xxtofl@arg+3,f
  6127     0CBA  2CC3               	goto	l1077
  6128     0CBB                     l3723:
  6129     0CBB  0873               	movf	___xxtofl@val+3,w
  6130     0CBC  00FD               	movwf	___xxtofl@arg+3
  6131     0CBD  0872               	movf	___xxtofl@val+2,w
  6132     0CBE  00FC               	movwf	___xxtofl@arg+2
  6133     0CBF  0871               	movf	___xxtofl@val+1,w
  6134     0CC0  00FB               	movwf	___xxtofl@arg+1
  6135     0CC1  0870               	movf	___xxtofl@val,w
  6136     0CC2  00FA               	movwf	___xxtofl@arg
  6137     0CC3                     l1077:
  6138     0CC3  0873               	movf	___xxtofl@val+3,w
  6139     0CC4  0472               	iorwf	___xxtofl@val+2,w
  6140     0CC5  0471               	iorwf	___xxtofl@val+1,w
  6141     0CC6  0470               	iorwf	___xxtofl@val,w
  6142     0CC7  1D03               	skipz
  6143     0CC8  2CCA               	goto	u4791
  6144     0CC9  2CCB               	goto	u4790
  6145     0CCA                     u4791:
  6146     0CCA  2CD4               	goto	l3729
  6147     0CCB                     u4790:
  6148     0CCB                     l3725:
  6149     0CCB  3000               	movlw	0
  6150     0CCC  00F3               	movwf	?___xxtofl+3
  6151     0CCD  3000               	movlw	0
  6152     0CCE  00F2               	movwf	?___xxtofl+2
  6153     0CCF  3000               	movlw	0
  6154     0CD0  00F1               	movwf	?___xxtofl+1
  6155     0CD1  3000               	movlw	0
  6156     0CD2  00F0               	movwf	?___xxtofl
  6157     0CD3  2D58               	goto	l1079
  6158     0CD4                     l3729:
  6159     0CD4  3096               	movlw	150
  6160     0CD5  00F9               	movwf	___xxtofl@exp
  6161     0CD6  2CE4               	goto	l3735
  6162     0CD7                     l3731:
  6163     0CD7  3001               	movlw	1
  6164     0CD8  00FF               	movwf	btemp+1
  6165     0CD9  087F               	movf	btemp+1,w
  6166     0CDA  07F9               	addwf	___xxtofl@exp,f
  6167     0CDB                     l3733:
  6168     0CDB  3001               	movlw	1
  6169     0CDC                     u4805:
  6170     0CDC  1003               	clrc
  6171     0CDD  0CFD               	rrf	___xxtofl@arg+3,f
  6172     0CDE  0CFC               	rrf	___xxtofl@arg+2,f
  6173     0CDF  0CFB               	rrf	___xxtofl@arg+1,f
  6174     0CE0  0CFA               	rrf	___xxtofl@arg,f
  6175     0CE1  3EFF               	addlw	-1
  6176     0CE2  1D03               	skipz
  6177     0CE3  2CDC               	goto	u4805
  6178     0CE4                     l3735:
  6179     0CE4  30FE               	movlw	254
  6180     0CE5  057D               	andwf	___xxtofl@arg+3,w
  6181     0CE6  1D03               	btfss	3,2
  6182     0CE7  2CE9               	goto	u4811
  6183     0CE8  2CEA               	goto	u4810
  6184     0CE9                     u4811:
  6185     0CE9  2CD7               	goto	l3731
  6186     0CEA                     u4810:
  6187     0CEA  2D06               	goto	l3743
  6188     0CEB                     l3737:
  6189     0CEB  3001               	movlw	1
  6190     0CEC  00FF               	movwf	btemp+1
  6191     0CED  087F               	movf	btemp+1,w
  6192     0CEE  07F9               	addwf	___xxtofl@exp,f
  6193     0CEF                     l3739:
  6194     0CEF  3001               	movlw	1
  6195     0CF0  07FA               	addwf	___xxtofl@arg,f
  6196     0CF1  3000               	movlw	0
  6197     0CF2  1803               	skipnc
  6198     0CF3  3001               	movlw	1
  6199     0CF4  07FB               	addwf	___xxtofl@arg+1,f
  6200     0CF5  3000               	movlw	0
  6201     0CF6  1803               	skipnc
  6202     0CF7  3001               	movlw	1
  6203     0CF8  07FC               	addwf	___xxtofl@arg+2,f
  6204     0CF9  3000               	movlw	0
  6205     0CFA  1803               	skipnc
  6206     0CFB  3001               	movlw	1
  6207     0CFC  07FD               	addwf	___xxtofl@arg+3,f
  6208     0CFD                     l3741:
  6209     0CFD  3001               	movlw	1
  6210     0CFE                     u4825:
  6211     0CFE  1003               	clrc
  6212     0CFF  0CFD               	rrf	___xxtofl@arg+3,f
  6213     0D00  0CFC               	rrf	___xxtofl@arg+2,f
  6214     0D01  0CFB               	rrf	___xxtofl@arg+1,f
  6215     0D02  0CFA               	rrf	___xxtofl@arg,f
  6216     0D03  3EFF               	addlw	-1
  6217     0D04  1D03               	skipz
  6218     0D05  2CFE               	goto	u4825
  6219     0D06                     l3743:
  6220     0D06  30FF               	movlw	255
  6221     0D07  057D               	andwf	___xxtofl@arg+3,w
  6222     0D08  1D03               	btfss	3,2
  6223     0D09  2D0B               	goto	u4831
  6224     0D0A  2D0C               	goto	u4830
  6225     0D0B                     u4831:
  6226     0D0B  2CEB               	goto	l3737
  6227     0D0C                     u4830:
  6228     0D0C  2D18               	goto	l3747
  6229     0D0D                     l3745:
  6230     0D0D  3001               	movlw	1
  6231     0D0E  02F9               	subwf	___xxtofl@exp,f
  6232     0D0F  3001               	movlw	1
  6233     0D10  00F4               	movwf	??___xxtofl
  6234     0D11                     u4845:
  6235     0D11  1003               	clrc
  6236     0D12  0DFA               	rlf	___xxtofl@arg,f
  6237     0D13  0DFB               	rlf	___xxtofl@arg+1,f
  6238     0D14  0DFC               	rlf	___xxtofl@arg+2,f
  6239     0D15  0DFD               	rlf	___xxtofl@arg+3,f
  6240     0D16  0BF4               	decfsz	??___xxtofl,f
  6241     0D17  2D11               	goto	u4845
  6242     0D18                     l3747:
  6243     0D18  1BFC               	btfsc	___xxtofl@arg+2,7
  6244     0D19  2D1B               	goto	u4851
  6245     0D1A  2D1C               	goto	u4850
  6246     0D1B                     u4851:
  6247     0D1B  2D22               	goto	l1090
  6248     0D1C                     u4850:
  6249     0D1C                     l3749:
  6250     0D1C  3002               	movlw	2
  6251     0D1D  0279               	subwf	___xxtofl@exp,w
  6252     0D1E  1803               	skipnc
  6253     0D1F  2D21               	goto	u4861
  6254     0D20  2D22               	goto	u4860
  6255     0D21                     u4861:
  6256     0D21  2D0D               	goto	l3745
  6257     0D22                     u4860:
  6258     0D22                     l1090:
  6259     0D22  1879               	btfsc	___xxtofl@exp,0
  6260     0D23  2D25               	goto	u4871
  6261     0D24  2D26               	goto	u4870
  6262     0D25                     u4871:
  6263     0D25  2D2E               	goto	l1091
  6264     0D26                     u4870:
  6265     0D26                     l3751:
  6266     0D26  30FF               	movlw	255
  6267     0D27  05FA               	andwf	___xxtofl@arg,f
  6268     0D28  30FF               	movlw	255
  6269     0D29  05FB               	andwf	___xxtofl@arg+1,f
  6270     0D2A  307F               	movlw	127
  6271     0D2B  05FC               	andwf	___xxtofl@arg+2,f
  6272     0D2C  30FF               	movlw	255
  6273     0D2D  05FD               	andwf	___xxtofl@arg+3,f
  6274     0D2E                     l1091:
  6275     0D2E  1003               	clrc
  6276     0D2F  0CF9               	rrf	___xxtofl@exp,f
  6277     0D30                     l3753:
  6278     0D30  0879               	movf	___xxtofl@exp,w
  6279     0D31  00F4               	movwf	??___xxtofl
  6280     0D32  01F5               	clrf	??___xxtofl+1
  6281     0D33  01F6               	clrf	??___xxtofl+2
  6282     0D34  01F7               	clrf	??___xxtofl+3
  6283     0D35  3018               	movlw	24
  6284     0D36                     u4885:
  6285     0D36  1003               	clrc
  6286     0D37  0DF4               	rlf	??___xxtofl,f
  6287     0D38  0DF5               	rlf	??___xxtofl+1,f
  6288     0D39  0DF6               	rlf	??___xxtofl+2,f
  6289     0D3A  0DF7               	rlf	??___xxtofl+3,f
  6290     0D3B                     u4880:
  6291     0D3B  3EFF               	addlw	-1
  6292     0D3C  1D03               	skipz
  6293     0D3D  2D36               	goto	u4885
  6294     0D3E  0874               	movf	??___xxtofl,w
  6295     0D3F  04FA               	iorwf	___xxtofl@arg,f
  6296     0D40  0875               	movf	??___xxtofl+1,w
  6297     0D41  04FB               	iorwf	___xxtofl@arg+1,f
  6298     0D42  0876               	movf	??___xxtofl+2,w
  6299     0D43  04FC               	iorwf	___xxtofl@arg+2,f
  6300     0D44  0877               	movf	??___xxtofl+3,w
  6301     0D45  04FD               	iorwf	___xxtofl@arg+3,f
  6302     0D46                     l3755:
  6303     0D46  0878               	movf	___xxtofl@sign,w
  6304     0D47  1903               	btfsc	3,2
  6305     0D48  2D4A               	goto	u4891
  6306     0D49  2D4B               	goto	u4890
  6307     0D4A                     u4891:
  6308     0D4A  2D50               	goto	l3761
  6309     0D4B                     u4890:
  6310     0D4B                     l3757:
  6311     0D4B  1FF3               	btfss	___xxtofl@val+3,7
  6312     0D4C  2D4E               	goto	u4901
  6313     0D4D  2D4F               	goto	u4900
  6314     0D4E                     u4901:
  6315     0D4E  2D50               	goto	l3761
  6316     0D4F                     u4900:
  6317     0D4F                     l3759:
  6318     0D4F  17FD               	bsf	___xxtofl@arg+3,7
  6319     0D50                     l3761:
  6320     0D50  087D               	movf	___xxtofl@arg+3,w
  6321     0D51  00F3               	movwf	?___xxtofl+3
  6322     0D52  087C               	movf	___xxtofl@arg+2,w
  6323     0D53  00F2               	movwf	?___xxtofl+2
  6324     0D54  087B               	movf	___xxtofl@arg+1,w
  6325     0D55  00F1               	movwf	?___xxtofl+1
  6326     0D56  087A               	movf	___xxtofl@arg,w
  6327     0D57  00F0               	movwf	?___xxtofl
  6328     0D58                     l1079:
  6329     0D58  0008               	return
  6330     0D59                     __end_of___xxtofl:
  6331                           
  6332                           	psect	text26
  6333     000F                     __ptext26:	
  6334 ;; *************** function ___fltol *****************
  6335 ;; Defined at:
  6336 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  6337 ;; Parameters:    Size  Location     Type
  6338 ;;  f1              4   52[BANK0 ] unsigned char 
  6339 ;; Auto vars:     Size  Location     Type
  6340 ;;  exp1            1   61[BANK0 ] unsigned char 
  6341 ;;  sign1           1   60[BANK0 ] unsigned char 
  6342 ;; Return value:  Size  Location     Type
  6343 ;;                  4   52[BANK0 ] long 
  6344 ;; Registers used:
  6345 ;;		wreg, status,2, status,0, btemp+1
  6346 ;; Tracked objects:
  6347 ;;		On entry : 0/0
  6348 ;;		On exit  : 0/0
  6349 ;;		Unchanged: 0/0
  6350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6351 ;;      Params:         0       4       0       0       0
  6352 ;;      Locals:         0       2       0       0       0
  6353 ;;      Temps:          0       4       0       0       0
  6354 ;;      Totals:         0      10       0       0       0
  6355 ;;Total ram usage:       10 bytes
  6356 ;; Hardware stack levels used: 1
  6357 ;; This function calls:
  6358 ;;		Nothing
  6359 ;; This function is called by:
  6360 ;;		_main
  6361 ;; This function uses a non-reentrant model
  6362 ;;
  6363                           
  6364     000F                     ___fltol:	
  6365                           ;psect for function ___fltol
  6366                           
  6367     000F                     l3391:	
  6368                           ;incstack = 0
  6369                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  6370                           
  6371     000F  1003               	clrc
  6372     0010  1283               	bcf	3,5	;RP0=0, select bank0
  6373     0011  1303               	bcf	3,6	;RP1=0, select bank0
  6374     0012  0D56               	rlf	___fltol@f1+2,w
  6375     0013  0D57               	rlf	___fltol@f1+3,w
  6376     0014  00DD               	movwf	___fltol@exp1
  6377     0015  085D               	movf	___fltol@exp1,w
  6378     0016  1D03               	btfss	3,2
  6379     0017  2819               	goto	u4011
  6380     0018  281A               	goto	u4010
  6381     0019                     u4011:
  6382     0019  2823               	goto	l3397
  6383     001A                     u4010:
  6384     001A                     l3393:
  6385     001A  3000               	movlw	0
  6386     001B  00D7               	movwf	?___fltol+3
  6387     001C  3000               	movlw	0
  6388     001D  00D6               	movwf	?___fltol+2
  6389     001E  3000               	movlw	0
  6390     001F  00D5               	movwf	?___fltol+1
  6391     0020  3000               	movlw	0
  6392     0021  00D4               	movwf	?___fltol
  6393     0022  2886               	goto	l830
  6394     0023                     l3397:
  6395     0023  0854               	movf	___fltol@f1,w
  6396     0024  00D8               	movwf	??___fltol
  6397     0025  0855               	movf	___fltol@f1+1,w
  6398     0026  00D9               	movwf	??___fltol+1
  6399     0027  0856               	movf	___fltol@f1+2,w
  6400     0028  00DA               	movwf	??___fltol+2
  6401     0029  0857               	movf	___fltol@f1+3,w
  6402     002A  00DB               	movwf	??___fltol+3
  6403     002B  301F               	movlw	31
  6404     002C                     u4025:
  6405     002C  1003               	clrc
  6406     002D  0CDB               	rrf	??___fltol+3,f
  6407     002E  0CDA               	rrf	??___fltol+2,f
  6408     002F  0CD9               	rrf	??___fltol+1,f
  6409     0030  0CD8               	rrf	??___fltol,f
  6410     0031                     u4020:
  6411     0031  3EFF               	addlw	-1
  6412     0032  1D03               	skipz
  6413     0033  282C               	goto	u4025
  6414     0034  0858               	movf	??___fltol,w
  6415     0035  00DC               	movwf	___fltol@sign1
  6416     0036                     l3399:
  6417     0036  17D6               	bsf	___fltol@f1+2,7
  6418     0037                     l3401:
  6419     0037  30FF               	movlw	255
  6420     0038  05D4               	andwf	___fltol@f1,f
  6421     0039  30FF               	movlw	255
  6422     003A  05D5               	andwf	___fltol@f1+1,f
  6423     003B  30FF               	movlw	255
  6424     003C  05D6               	andwf	___fltol@f1+2,f
  6425     003D  3000               	movlw	0
  6426     003E  05D7               	andwf	___fltol@f1+3,f
  6427     003F                     l3403:
  6428     003F  3096               	movlw	150
  6429     0040  02DD               	subwf	___fltol@exp1,f
  6430     0041                     l3405:
  6431     0041  1FDD               	btfss	___fltol@exp1,7
  6432     0042  2844               	goto	u4031
  6433     0043  2845               	goto	u4030
  6434     0044                     u4031:
  6435     0044  285F               	goto	l3417
  6436     0045                     u4030:
  6437     0045                     l3407:
  6438     0045  085D               	movf	___fltol@exp1,w
  6439     0046  3A80               	xorlw	128
  6440     0047  3E97               	addlw	151
  6441     0048  1803               	skipnc
  6442     0049  284B               	goto	u4041
  6443     004A  284C               	goto	u4040
  6444     004B                     u4041:
  6445     004B  284D               	goto	l3413
  6446     004C                     u4040:
  6447     004C  281A               	goto	l3393
  6448     004D                     l3413:
  6449     004D  3001               	movlw	1
  6450     004E                     u4055:
  6451     004E  1003               	clrc
  6452     004F  0CD7               	rrf	___fltol@f1+3,f
  6453     0050  0CD6               	rrf	___fltol@f1+2,f
  6454     0051  0CD5               	rrf	___fltol@f1+1,f
  6455     0052  0CD4               	rrf	___fltol@f1,f
  6456     0053  3EFF               	addlw	-1
  6457     0054  1D03               	skipz
  6458     0055  284E               	goto	u4055
  6459     0056                     l3415:
  6460     0056  3001               	movlw	1
  6461     0057  00FF               	movwf	btemp+1
  6462     0058  087F               	movf	btemp+1,w
  6463     0059  07DD               	addwf	___fltol@exp1,f
  6464     005A  1D03               	btfss	3,2
  6465     005B  285D               	goto	u4061
  6466     005C  285E               	goto	u4060
  6467     005D                     u4061:
  6468     005D  284D               	goto	l3413
  6469     005E                     u4060:
  6470     005E  2876               	goto	l3425
  6471     005F                     l3417:
  6472     005F  3020               	movlw	32
  6473     0060  025D               	subwf	___fltol@exp1,w
  6474     0061  1C03               	skipc
  6475     0062  2864               	goto	u4071
  6476     0063  2865               	goto	u4070
  6477     0064                     u4071:
  6478     0064  2871               	goto	l837
  6479     0065                     u4070:
  6480     0065  281A               	goto	l3393
  6481     0066                     l3423:
  6482     0066  3001               	movlw	1
  6483     0067  00D8               	movwf	??___fltol
  6484     0068                     u4085:
  6485     0068  1003               	clrc
  6486     0069  0DD4               	rlf	___fltol@f1,f
  6487     006A  0DD5               	rlf	___fltol@f1+1,f
  6488     006B  0DD6               	rlf	___fltol@f1+2,f
  6489     006C  0DD7               	rlf	___fltol@f1+3,f
  6490     006D  0BD8               	decfsz	??___fltol,f
  6491     006E  2868               	goto	u4085
  6492     006F  3001               	movlw	1
  6493     0070  02DD               	subwf	___fltol@exp1,f
  6494     0071                     l837:
  6495     0071  085D               	movf	___fltol@exp1,w
  6496     0072  1D03               	btfss	3,2
  6497     0073  2875               	goto	u4091
  6498     0074  2876               	goto	u4090
  6499     0075                     u4091:
  6500     0075  2866               	goto	l3423
  6501     0076                     u4090:
  6502     0076                     l3425:
  6503     0076  085C               	movf	___fltol@sign1,w
  6504     0077  1903               	btfsc	3,2
  6505     0078  287A               	goto	u4101
  6506     0079  287B               	goto	u4100
  6507     007A                     u4101:
  6508     007A  2886               	goto	l840
  6509     007B                     u4100:
  6510     007B                     l3427:
  6511     007B  09D4               	comf	___fltol@f1,f
  6512     007C  09D5               	comf	___fltol@f1+1,f
  6513     007D  09D6               	comf	___fltol@f1+2,f
  6514     007E  09D7               	comf	___fltol@f1+3,f
  6515     007F  0AD4               	incf	___fltol@f1,f
  6516     0080  1903               	skipnz
  6517     0081  0AD5               	incf	___fltol@f1+1,f
  6518     0082  1903               	skipnz
  6519     0083  0AD6               	incf	___fltol@f1+2,f
  6520     0084  1903               	skipnz
  6521     0085  0AD7               	incf	___fltol@f1+3,f
  6522     0086                     l840:
  6523     0086                     l830:
  6524     0086  0008               	return
  6525     0087                     __end_of___fltol:
  6526                           
  6527                           	psect	text27
  6528     0489                     __ptext27:	
  6529 ;; *************** function ___flmul *****************
  6530 ;; Defined at:
  6531 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
  6532 ;; Parameters:    Size  Location     Type
  6533 ;;  b               4    0[BANK0 ] long 
  6534 ;;  a               4    4[BANK0 ] long 
  6535 ;; Auto vars:     Size  Location     Type
  6536 ;;  prod            4   20[BANK0 ] struct .
  6537 ;;  grs             4   14[BANK0 ] unsigned long 
  6538 ;;  temp            2   24[BANK0 ] struct .
  6539 ;;  bexp            1   19[BANK0 ] unsigned char 
  6540 ;;  aexp            1   18[BANK0 ] unsigned char 
  6541 ;;  sign            1   13[BANK0 ] unsigned char 
  6542 ;; Return value:  Size  Location     Type
  6543 ;;                  4    0[BANK0 ] unsigned char 
  6544 ;; Registers used:
  6545 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6546 ;; Tracked objects:
  6547 ;;		On entry : 0/0
  6548 ;;		On exit  : 0/0
  6549 ;;		Unchanged: 0/0
  6550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6551 ;;      Params:         0       8       0       0       0
  6552 ;;      Locals:         0      13       0       0       0
  6553 ;;      Temps:          0       5       0       0       0
  6554 ;;      Totals:         0      26       0       0       0
  6555 ;;Total ram usage:       26 bytes
  6556 ;; Hardware stack levels used: 1
  6557 ;; Hardware stack levels required when called: 1
  6558 ;; This function calls:
  6559 ;;		__Umul8_16
  6560 ;; This function is called by:
  6561 ;;		_main
  6562 ;; This function uses a non-reentrant model
  6563 ;;
  6564                           
  6565     0489                     ___flmul:	
  6566                           ;psect for function ___flmul
  6567                           
  6568     0489                     l3575:	
  6569                           ;incstack = 0
  6570                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6571                           
  6572     0489  1283               	bcf	3,5	;RP0=0, select bank0
  6573     048A  1303               	bcf	3,6	;RP1=0, select bank0
  6574     048B  0823               	movf	___flmul@b+3,w
  6575     048C  3980               	andlw	128
  6576     048D  00AD               	movwf	___flmul@sign
  6577     048E                     l3577:
  6578     048E  0823               	movf	___flmul@b+3,w
  6579     048F  00A8               	movwf	??___flmul
  6580     0490  0728               	addwf	??___flmul,w
  6581     0491  00B3               	movwf	___flmul@bexp
  6582     0492                     l3579:
  6583     0492  1FA2               	btfss	___flmul@b+2,7
  6584     0493  2C95               	goto	u4401
  6585     0494  2C96               	goto	u4400
  6586     0495                     u4401:
  6587     0495  2C97               	goto	l3583
  6588     0496                     u4400:
  6589     0496                     l3581:
  6590     0496  1433               	bsf	___flmul@bexp,0
  6591     0497                     l3583:
  6592     0497  0833               	movf	___flmul@bexp,w
  6593     0498  1903               	btfsc	3,2
  6594     0499  2C9B               	goto	u4411
  6595     049A  2C9C               	goto	u4410
  6596     049B                     u4411:
  6597     049B  2CAB               	goto	l3591
  6598     049C                     u4410:
  6599     049C                     l3585:
  6600     049C  0A33               	incf	___flmul@bexp,w
  6601     049D  1D03               	btfss	3,2
  6602     049E  2CA0               	goto	u4421
  6603     049F  2CA1               	goto	u4420
  6604     04A0                     u4421:
  6605     04A0  2CA9               	goto	l3589
  6606     04A1                     u4420:
  6607     04A1                     l3587:
  6608     04A1  3000               	movlw	0
  6609     04A2  00A3               	movwf	___flmul@b+3
  6610     04A3  3000               	movlw	0
  6611     04A4  00A2               	movwf	___flmul@b+2
  6612     04A5  3000               	movlw	0
  6613     04A6  00A1               	movwf	___flmul@b+1
  6614     04A7  3000               	movlw	0
  6615     04A8  00A0               	movwf	___flmul@b
  6616     04A9                     l3589:
  6617     04A9  17A2               	bsf	___flmul@b+2,7
  6618     04AA  2CB3               	goto	l3593
  6619     04AB                     l3591:
  6620     04AB  3000               	movlw	0
  6621     04AC  00A3               	movwf	___flmul@b+3
  6622     04AD  3000               	movlw	0
  6623     04AE  00A2               	movwf	___flmul@b+2
  6624     04AF  3000               	movlw	0
  6625     04B0  00A1               	movwf	___flmul@b+1
  6626     04B1  3000               	movlw	0
  6627     04B2  00A0               	movwf	___flmul@b
  6628     04B3                     l3593:
  6629     04B3  0827               	movf	___flmul@a+3,w
  6630     04B4  3980               	andlw	128
  6631     04B5  00FF               	movwf	btemp+1
  6632     04B6  087F               	movf	btemp+1,w
  6633     04B7  06AD               	xorwf	___flmul@sign,f
  6634     04B8                     l3595:
  6635     04B8  0827               	movf	___flmul@a+3,w
  6636     04B9  00A8               	movwf	??___flmul
  6637     04BA  0728               	addwf	??___flmul,w
  6638     04BB  00B2               	movwf	___flmul@aexp
  6639     04BC                     l3597:
  6640     04BC  1FA6               	btfss	___flmul@a+2,7
  6641     04BD  2CBF               	goto	u4431
  6642     04BE  2CC0               	goto	u4430
  6643     04BF                     u4431:
  6644     04BF  2CC1               	goto	l3601
  6645     04C0                     u4430:
  6646     04C0                     l3599:
  6647     04C0  1432               	bsf	___flmul@aexp,0
  6648     04C1                     l3601:
  6649     04C1  0832               	movf	___flmul@aexp,w
  6650     04C2  1903               	btfsc	3,2
  6651     04C3  2CC5               	goto	u4441
  6652     04C4  2CC6               	goto	u4440
  6653     04C5                     u4441:
  6654     04C5  2CD5               	goto	l3609
  6655     04C6                     u4440:
  6656     04C6                     l3603:
  6657     04C6  0A32               	incf	___flmul@aexp,w
  6658     04C7  1D03               	btfss	3,2
  6659     04C8  2CCA               	goto	u4451
  6660     04C9  2CCB               	goto	u4450
  6661     04CA                     u4451:
  6662     04CA  2CD3               	goto	l3607
  6663     04CB                     u4450:
  6664     04CB                     l3605:
  6665     04CB  3000               	movlw	0
  6666     04CC  00A7               	movwf	___flmul@a+3
  6667     04CD  3000               	movlw	0
  6668     04CE  00A6               	movwf	___flmul@a+2
  6669     04CF  3000               	movlw	0
  6670     04D0  00A5               	movwf	___flmul@a+1
  6671     04D1  3000               	movlw	0
  6672     04D2  00A4               	movwf	___flmul@a
  6673     04D3                     l3607:
  6674     04D3  17A6               	bsf	___flmul@a+2,7
  6675     04D4  2CDD               	goto	l3611
  6676     04D5                     l3609:
  6677     04D5  3000               	movlw	0
  6678     04D6  00A7               	movwf	___flmul@a+3
  6679     04D7  3000               	movlw	0
  6680     04D8  00A6               	movwf	___flmul@a+2
  6681     04D9  3000               	movlw	0
  6682     04DA  00A5               	movwf	___flmul@a+1
  6683     04DB  3000               	movlw	0
  6684     04DC  00A4               	movwf	___flmul@a
  6685     04DD                     l3611:
  6686     04DD  0832               	movf	___flmul@aexp,w
  6687     04DE  1903               	btfsc	3,2
  6688     04DF  2CE1               	goto	u4461
  6689     04E0  2CE2               	goto	u4460
  6690     04E1                     u4461:
  6691     04E1  2CE7               	goto	l3615
  6692     04E2                     u4460:
  6693     04E2                     l3613:
  6694     04E2  0833               	movf	___flmul@bexp,w
  6695     04E3  1D03               	btfss	3,2
  6696     04E4  2CE6               	goto	u4471
  6697     04E5  2CE7               	goto	u4470
  6698     04E6                     u4471:
  6699     04E6  2CF0               	goto	l3619
  6700     04E7                     u4470:
  6701     04E7                     l3615:
  6702     04E7  3000               	movlw	0
  6703     04E8  00A3               	movwf	?___flmul+3
  6704     04E9  3000               	movlw	0
  6705     04EA  00A2               	movwf	?___flmul+2
  6706     04EB  3000               	movlw	0
  6707     04EC  00A1               	movwf	?___flmul+1
  6708     04ED  3000               	movlw	0
  6709     04EE  00A0               	movwf	?___flmul
  6710     04EF  2FCD               	goto	l1033
  6711     04F0                     l3619:
  6712     04F0  0820               	movf	___flmul@b,w
  6713     04F1  00F0               	movwf	__Umul8_16@multiplicand
  6714     04F2  0826               	movf	___flmul@a+2,w
  6715     04F3  160A  118A  2616  120A  118A  	fcall	__Umul8_16
  6716     04F8  0871               	movf	?__Umul8_16+1,w
  6717     04F9  1283               	bcf	3,5	;RP0=0, select bank0
  6718     04FA  1303               	bcf	3,6	;RP1=0, select bank0
  6719     04FB  00B9               	movwf	___flmul@temp+1
  6720     04FC  0870               	movf	?__Umul8_16,w
  6721     04FD  00B8               	movwf	___flmul@temp
  6722     04FE                     l3621:
  6723     04FE  0838               	movf	___flmul@temp,w
  6724     04FF  00A8               	movwf	??___flmul
  6725     0500  01A9               	clrf	??___flmul+1
  6726     0501  01AA               	clrf	??___flmul+2
  6727     0502  01AB               	clrf	??___flmul+3
  6728     0503  082B               	movf	??___flmul+3,w
  6729     0504  00B1               	movwf	___flmul@grs+3
  6730     0505  082A               	movf	??___flmul+2,w
  6731     0506  00B0               	movwf	___flmul@grs+2
  6732     0507  0829               	movf	??___flmul+1,w
  6733     0508  00AF               	movwf	___flmul@grs+1
  6734     0509  0828               	movf	??___flmul,w
  6735     050A  00AE               	movwf	___flmul@grs
  6736     050B                     l3623:
  6737     050B  0839               	movf	___flmul@temp+1,w
  6738     050C  00A8               	movwf	??___flmul
  6739     050D  01A9               	clrf	??___flmul+1
  6740     050E  01AA               	clrf	??___flmul+2
  6741     050F  01AB               	clrf	??___flmul+3
  6742     0510  082B               	movf	??___flmul+3,w
  6743     0511  00B7               	movwf	___flmul@prod+3
  6744     0512  082A               	movf	??___flmul+2,w
  6745     0513  00B6               	movwf	___flmul@prod+2
  6746     0514  0829               	movf	??___flmul+1,w
  6747     0515  00B5               	movwf	___flmul@prod+1
  6748     0516  0828               	movf	??___flmul,w
  6749     0517  00B4               	movwf	___flmul@prod
  6750     0518  0821               	movf	___flmul@b+1,w
  6751     0519  00F0               	movwf	__Umul8_16@multiplicand
  6752     051A  0825               	movf	___flmul@a+1,w
  6753     051B  160A  118A  2616  120A  118A  	fcall	__Umul8_16
  6754     0520  0871               	movf	?__Umul8_16+1,w
  6755     0521  1283               	bcf	3,5	;RP0=0, select bank0
  6756     0522  1303               	bcf	3,6	;RP1=0, select bank0
  6757     0523  00B9               	movwf	___flmul@temp+1
  6758     0524  0870               	movf	?__Umul8_16,w
  6759     0525  00B8               	movwf	___flmul@temp
  6760     0526                     l3625:
  6761     0526  0838               	movf	___flmul@temp,w
  6762     0527  00A8               	movwf	??___flmul
  6763     0528  01A9               	clrf	??___flmul+1
  6764     0529  01AA               	clrf	??___flmul+2
  6765     052A  01AB               	clrf	??___flmul+3
  6766     052B  0828               	movf	??___flmul,w
  6767     052C  07AE               	addwf	___flmul@grs,f
  6768     052D  0829               	movf	??___flmul+1,w
  6769     052E  1103               	clrz
  6770     052F  1803               	skipnc
  6771     0530  3E01               	addlw	1
  6772     0531  1903               	skipnz
  6773     0532  2D34               	goto	u4481
  6774     0533  07AF               	addwf	___flmul@grs+1,f
  6775     0534                     u4481:
  6776     0534  082A               	movf	??___flmul+2,w
  6777     0535  1103               	clrz
  6778     0536  1803               	skipnc
  6779     0537  3E01               	addlw	1
  6780     0538  1903               	skipnz
  6781     0539  2D3B               	goto	u4482
  6782     053A  07B0               	addwf	___flmul@grs+2,f
  6783     053B                     u4482:
  6784     053B  082B               	movf	??___flmul+3,w
  6785     053C  1103               	clrz
  6786     053D  1803               	skipnc
  6787     053E  3E01               	addlw	1
  6788     053F  1903               	skipnz
  6789     0540  2D42               	goto	u4483
  6790     0541  07B1               	addwf	___flmul@grs+3,f
  6791     0542                     u4483:
  6792     0542                     l3627:
  6793     0542  0839               	movf	___flmul@temp+1,w
  6794     0543  00A8               	movwf	??___flmul
  6795     0544  01A9               	clrf	??___flmul+1
  6796     0545  01AA               	clrf	??___flmul+2
  6797     0546  01AB               	clrf	??___flmul+3
  6798     0547  0828               	movf	??___flmul,w
  6799     0548  07B4               	addwf	___flmul@prod,f
  6800     0549  0829               	movf	??___flmul+1,w
  6801     054A  1103               	clrz
  6802     054B  1803               	skipnc
  6803     054C  3E01               	addlw	1
  6804     054D  1903               	skipnz
  6805     054E  2D50               	goto	u4491
  6806     054F  07B5               	addwf	___flmul@prod+1,f
  6807     0550                     u4491:
  6808     0550  082A               	movf	??___flmul+2,w
  6809     0551  1103               	clrz
  6810     0552  1803               	skipnc
  6811     0553  3E01               	addlw	1
  6812     0554  1903               	skipnz
  6813     0555  2D57               	goto	u4492
  6814     0556  07B6               	addwf	___flmul@prod+2,f
  6815     0557                     u4492:
  6816     0557  082B               	movf	??___flmul+3,w
  6817     0558  1103               	clrz
  6818     0559  1803               	skipnc
  6819     055A  3E01               	addlw	1
  6820     055B  1903               	skipnz
  6821     055C  2D5E               	goto	u4493
  6822     055D  07B7               	addwf	___flmul@prod+3,f
  6823     055E                     u4493:
  6824     055E  0822               	movf	___flmul@b+2,w
  6825     055F  00F0               	movwf	__Umul8_16@multiplicand
  6826     0560  0824               	movf	___flmul@a,w
  6827     0561  160A  118A  2616  120A  118A  	fcall	__Umul8_16
  6828     0566  0871               	movf	?__Umul8_16+1,w
  6829     0567  1283               	bcf	3,5	;RP0=0, select bank0
  6830     0568  1303               	bcf	3,6	;RP1=0, select bank0
  6831     0569  00B9               	movwf	___flmul@temp+1
  6832     056A  0870               	movf	?__Umul8_16,w
  6833     056B  00B8               	movwf	___flmul@temp
  6834     056C                     l3629:
  6835     056C  0838               	movf	___flmul@temp,w
  6836     056D  00A8               	movwf	??___flmul
  6837     056E  01A9               	clrf	??___flmul+1
  6838     056F  01AA               	clrf	??___flmul+2
  6839     0570  01AB               	clrf	??___flmul+3
  6840     0571  0828               	movf	??___flmul,w
  6841     0572  07AE               	addwf	___flmul@grs,f
  6842     0573  0829               	movf	??___flmul+1,w
  6843     0574  1103               	clrz
  6844     0575  1803               	skipnc
  6845     0576  3E01               	addlw	1
  6846     0577  1903               	skipnz
  6847     0578  2D7A               	goto	u4501
  6848     0579  07AF               	addwf	___flmul@grs+1,f
  6849     057A                     u4501:
  6850     057A  082A               	movf	??___flmul+2,w
  6851     057B  1103               	clrz
  6852     057C  1803               	skipnc
  6853     057D  3E01               	addlw	1
  6854     057E  1903               	skipnz
  6855     057F  2D81               	goto	u4502
  6856     0580  07B0               	addwf	___flmul@grs+2,f
  6857     0581                     u4502:
  6858     0581  082B               	movf	??___flmul+3,w
  6859     0582  1103               	clrz
  6860     0583  1803               	skipnc
  6861     0584  3E01               	addlw	1
  6862     0585  1903               	skipnz
  6863     0586  2D88               	goto	u4503
  6864     0587  07B1               	addwf	___flmul@grs+3,f
  6865     0588                     u4503:
  6866     0588                     l3631:
  6867     0588  0839               	movf	___flmul@temp+1,w
  6868     0589  00A8               	movwf	??___flmul
  6869     058A  01A9               	clrf	??___flmul+1
  6870     058B  01AA               	clrf	??___flmul+2
  6871     058C  01AB               	clrf	??___flmul+3
  6872     058D  0828               	movf	??___flmul,w
  6873     058E  07B4               	addwf	___flmul@prod,f
  6874     058F  0829               	movf	??___flmul+1,w
  6875     0590  1103               	clrz
  6876     0591  1803               	skipnc
  6877     0592  3E01               	addlw	1
  6878     0593  1903               	skipnz
  6879     0594  2D96               	goto	u4511
  6880     0595  07B5               	addwf	___flmul@prod+1,f
  6881     0596                     u4511:
  6882     0596  082A               	movf	??___flmul+2,w
  6883     0597  1103               	clrz
  6884     0598  1803               	skipnc
  6885     0599  3E01               	addlw	1
  6886     059A  1903               	skipnz
  6887     059B  2D9D               	goto	u4512
  6888     059C  07B6               	addwf	___flmul@prod+2,f
  6889     059D                     u4512:
  6890     059D  082B               	movf	??___flmul+3,w
  6891     059E  1103               	clrz
  6892     059F  1803               	skipnc
  6893     05A0  3E01               	addlw	1
  6894     05A1  1903               	skipnz
  6895     05A2  2DA4               	goto	u4513
  6896     05A3  07B7               	addwf	___flmul@prod+3,f
  6897     05A4                     u4513:
  6898     05A4                     l3633:
  6899     05A4  3008               	movlw	8
  6900     05A5  00A8               	movwf	??___flmul
  6901     05A6                     u4525:
  6902     05A6  1003               	clrc
  6903     05A7  0DAE               	rlf	___flmul@grs,f
  6904     05A8  0DAF               	rlf	___flmul@grs+1,f
  6905     05A9  0DB0               	rlf	___flmul@grs+2,f
  6906     05AA  0DB1               	rlf	___flmul@grs+3,f
  6907     05AB  0BA8               	decfsz	??___flmul,f
  6908     05AC  2DA6               	goto	u4525
  6909     05AD                     l3635:
  6910     05AD  0821               	movf	___flmul@b+1,w
  6911     05AE  00F0               	movwf	__Umul8_16@multiplicand
  6912     05AF  0824               	movf	___flmul@a,w
  6913     05B0  160A  118A  2616  120A  118A  	fcall	__Umul8_16
  6914     05B5  0871               	movf	?__Umul8_16+1,w
  6915     05B6  1283               	bcf	3,5	;RP0=0, select bank0
  6916     05B7  1303               	bcf	3,6	;RP1=0, select bank0
  6917     05B8  00B9               	movwf	___flmul@temp+1
  6918     05B9  0870               	movf	?__Umul8_16,w
  6919     05BA  00B8               	movwf	___flmul@temp
  6920     05BB                     l3637:
  6921     05BB  0838               	movf	___flmul@temp,w
  6922     05BC  00A8               	movwf	??___flmul
  6923     05BD  0839               	movf	___flmul@temp+1,w
  6924     05BE  00A9               	movwf	??___flmul+1
  6925     05BF  01AA               	clrf	??___flmul+2
  6926     05C0  01AB               	clrf	??___flmul+3
  6927     05C1  0828               	movf	??___flmul,w
  6928     05C2  07AE               	addwf	___flmul@grs,f
  6929     05C3  0829               	movf	??___flmul+1,w
  6930     05C4  1103               	clrz
  6931     05C5  1803               	skipnc
  6932     05C6  3E01               	addlw	1
  6933     05C7  1903               	skipnz
  6934     05C8  2DCA               	goto	u4531
  6935     05C9  07AF               	addwf	___flmul@grs+1,f
  6936     05CA                     u4531:
  6937     05CA  082A               	movf	??___flmul+2,w
  6938     05CB  1103               	clrz
  6939     05CC  1803               	skipnc
  6940     05CD  3E01               	addlw	1
  6941     05CE  1903               	skipnz
  6942     05CF  2DD1               	goto	u4532
  6943     05D0  07B0               	addwf	___flmul@grs+2,f
  6944     05D1                     u4532:
  6945     05D1  082B               	movf	??___flmul+3,w
  6946     05D2  1103               	clrz
  6947     05D3  1803               	skipnc
  6948     05D4  3E01               	addlw	1
  6949     05D5  1903               	skipnz
  6950     05D6  2DD8               	goto	u4533
  6951     05D7  07B1               	addwf	___flmul@grs+3,f
  6952     05D8                     u4533:
  6953     05D8                     l3639:
  6954     05D8  0820               	movf	___flmul@b,w
  6955     05D9  00F0               	movwf	__Umul8_16@multiplicand
  6956     05DA  0825               	movf	___flmul@a+1,w
  6957     05DB  160A  118A  2616  120A  118A  	fcall	__Umul8_16
  6958     05E0  0871               	movf	?__Umul8_16+1,w
  6959     05E1  1283               	bcf	3,5	;RP0=0, select bank0
  6960     05E2  1303               	bcf	3,6	;RP1=0, select bank0
  6961     05E3  00B9               	movwf	___flmul@temp+1
  6962     05E4  0870               	movf	?__Umul8_16,w
  6963     05E5  00B8               	movwf	___flmul@temp
  6964     05E6                     l3641:
  6965     05E6  0838               	movf	___flmul@temp,w
  6966     05E7  00A8               	movwf	??___flmul
  6967     05E8  0839               	movf	___flmul@temp+1,w
  6968     05E9  00A9               	movwf	??___flmul+1
  6969     05EA  01AA               	clrf	??___flmul+2
  6970     05EB  01AB               	clrf	??___flmul+3
  6971     05EC  0828               	movf	??___flmul,w
  6972     05ED  07AE               	addwf	___flmul@grs,f
  6973     05EE  0829               	movf	??___flmul+1,w
  6974     05EF  1103               	clrz
  6975     05F0  1803               	skipnc
  6976     05F1  3E01               	addlw	1
  6977     05F2  1903               	skipnz
  6978     05F3  2DF5               	goto	u4541
  6979     05F4  07AF               	addwf	___flmul@grs+1,f
  6980     05F5                     u4541:
  6981     05F5  082A               	movf	??___flmul+2,w
  6982     05F6  1103               	clrz
  6983     05F7  1803               	skipnc
  6984     05F8  3E01               	addlw	1
  6985     05F9  1903               	skipnz
  6986     05FA  2DFC               	goto	u4542
  6987     05FB  07B0               	addwf	___flmul@grs+2,f
  6988     05FC                     u4542:
  6989     05FC  082B               	movf	??___flmul+3,w
  6990     05FD  1103               	clrz
  6991     05FE  1803               	skipnc
  6992     05FF  3E01               	addlw	1
  6993     0600  1903               	skipnz
  6994     0601  2E03               	goto	u4543
  6995     0602  07B1               	addwf	___flmul@grs+3,f
  6996     0603                     u4543:
  6997     0603                     l3643:
  6998     0603  3008               	movlw	8
  6999     0604  00A8               	movwf	??___flmul
  7000     0605                     u4555:
  7001     0605  1003               	clrc
  7002     0606  0DAE               	rlf	___flmul@grs,f
  7003     0607  0DAF               	rlf	___flmul@grs+1,f
  7004     0608  0DB0               	rlf	___flmul@grs+2,f
  7005     0609  0DB1               	rlf	___flmul@grs+3,f
  7006     060A  0BA8               	decfsz	??___flmul,f
  7007     060B  2E05               	goto	u4555
  7008     060C  0820               	movf	___flmul@b,w
  7009     060D  00F0               	movwf	__Umul8_16@multiplicand
  7010     060E  0824               	movf	___flmul@a,w
  7011     060F  160A  118A  2616  120A  118A  	fcall	__Umul8_16
  7012     0614  0871               	movf	?__Umul8_16+1,w
  7013     0615  1283               	bcf	3,5	;RP0=0, select bank0
  7014     0616  1303               	bcf	3,6	;RP1=0, select bank0
  7015     0617  00B9               	movwf	___flmul@temp+1
  7016     0618  0870               	movf	?__Umul8_16,w
  7017     0619  00B8               	movwf	___flmul@temp
  7018     061A                     l3645:
  7019     061A  0838               	movf	___flmul@temp,w
  7020     061B  00A8               	movwf	??___flmul
  7021     061C  0839               	movf	___flmul@temp+1,w
  7022     061D  00A9               	movwf	??___flmul+1
  7023     061E  01AA               	clrf	??___flmul+2
  7024     061F  01AB               	clrf	??___flmul+3
  7025     0620  0828               	movf	??___flmul,w
  7026     0621  07AE               	addwf	___flmul@grs,f
  7027     0622  0829               	movf	??___flmul+1,w
  7028     0623  1103               	clrz
  7029     0624  1803               	skipnc
  7030     0625  3E01               	addlw	1
  7031     0626  1903               	skipnz
  7032     0627  2E29               	goto	u4561
  7033     0628  07AF               	addwf	___flmul@grs+1,f
  7034     0629                     u4561:
  7035     0629  082A               	movf	??___flmul+2,w
  7036     062A  1103               	clrz
  7037     062B  1803               	skipnc
  7038     062C  3E01               	addlw	1
  7039     062D  1903               	skipnz
  7040     062E  2E30               	goto	u4562
  7041     062F  07B0               	addwf	___flmul@grs+2,f
  7042     0630                     u4562:
  7043     0630  082B               	movf	??___flmul+3,w
  7044     0631  1103               	clrz
  7045     0632  1803               	skipnc
  7046     0633  3E01               	addlw	1
  7047     0634  1903               	skipnz
  7048     0635  2E37               	goto	u4563
  7049     0636  07B1               	addwf	___flmul@grs+3,f
  7050     0637                     u4563:
  7051     0637                     l3647:
  7052     0637  0821               	movf	___flmul@b+1,w
  7053     0638  00F0               	movwf	__Umul8_16@multiplicand
  7054     0639  0826               	movf	___flmul@a+2,w
  7055     063A  160A  118A  2616  120A  118A  	fcall	__Umul8_16
  7056     063F  0871               	movf	?__Umul8_16+1,w
  7057     0640  1283               	bcf	3,5	;RP0=0, select bank0
  7058     0641  1303               	bcf	3,6	;RP1=0, select bank0
  7059     0642  00B9               	movwf	___flmul@temp+1
  7060     0643  0870               	movf	?__Umul8_16,w
  7061     0644  00B8               	movwf	___flmul@temp
  7062     0645  0838               	movf	___flmul@temp,w
  7063     0646  00A8               	movwf	??___flmul
  7064     0647  0839               	movf	___flmul@temp+1,w
  7065     0648  00A9               	movwf	??___flmul+1
  7066     0649  01AA               	clrf	??___flmul+2
  7067     064A  01AB               	clrf	??___flmul+3
  7068     064B  0828               	movf	??___flmul,w
  7069     064C  07B4               	addwf	___flmul@prod,f
  7070     064D  0829               	movf	??___flmul+1,w
  7071     064E  1103               	clrz
  7072     064F  1803               	skipnc
  7073     0650  3E01               	addlw	1
  7074     0651  1903               	skipnz
  7075     0652  2E54               	goto	u4571
  7076     0653  07B5               	addwf	___flmul@prod+1,f
  7077     0654                     u4571:
  7078     0654  082A               	movf	??___flmul+2,w
  7079     0655  1103               	clrz
  7080     0656  1803               	skipnc
  7081     0657  3E01               	addlw	1
  7082     0658  1903               	skipnz
  7083     0659  2E5B               	goto	u4572
  7084     065A  07B6               	addwf	___flmul@prod+2,f
  7085     065B                     u4572:
  7086     065B  082B               	movf	??___flmul+3,w
  7087     065C  1103               	clrz
  7088     065D  1803               	skipnc
  7089     065E  3E01               	addlw	1
  7090     065F  1903               	skipnz
  7091     0660  2E62               	goto	u4573
  7092     0661  07B7               	addwf	___flmul@prod+3,f
  7093     0662                     u4573:
  7094     0662                     l3649:
  7095     0662  0822               	movf	___flmul@b+2,w
  7096     0663  00F0               	movwf	__Umul8_16@multiplicand
  7097     0664  0825               	movf	___flmul@a+1,w
  7098     0665  160A  118A  2616  120A  118A  	fcall	__Umul8_16
  7099     066A  0871               	movf	?__Umul8_16+1,w
  7100     066B  1283               	bcf	3,5	;RP0=0, select bank0
  7101     066C  1303               	bcf	3,6	;RP1=0, select bank0
  7102     066D  00B9               	movwf	___flmul@temp+1
  7103     066E  0870               	movf	?__Umul8_16,w
  7104     066F  00B8               	movwf	___flmul@temp
  7105     0670                     l3651:
  7106     0670  0838               	movf	___flmul@temp,w
  7107     0671  00A8               	movwf	??___flmul
  7108     0672  0839               	movf	___flmul@temp+1,w
  7109     0673  00A9               	movwf	??___flmul+1
  7110     0674  01AA               	clrf	??___flmul+2
  7111     0675  01AB               	clrf	??___flmul+3
  7112     0676  0828               	movf	??___flmul,w
  7113     0677  07B4               	addwf	___flmul@prod,f
  7114     0678  0829               	movf	??___flmul+1,w
  7115     0679  1103               	clrz
  7116     067A  1803               	skipnc
  7117     067B  3E01               	addlw	1
  7118     067C  1903               	skipnz
  7119     067D  2E7F               	goto	u4581
  7120     067E  07B5               	addwf	___flmul@prod+1,f
  7121     067F                     u4581:
  7122     067F  082A               	movf	??___flmul+2,w
  7123     0680  1103               	clrz
  7124     0681  1803               	skipnc
  7125     0682  3E01               	addlw	1
  7126     0683  1903               	skipnz
  7127     0684  2E86               	goto	u4582
  7128     0685  07B6               	addwf	___flmul@prod+2,f
  7129     0686                     u4582:
  7130     0686  082B               	movf	??___flmul+3,w
  7131     0687  1103               	clrz
  7132     0688  1803               	skipnc
  7133     0689  3E01               	addlw	1
  7134     068A  1903               	skipnz
  7135     068B  2E8D               	goto	u4583
  7136     068C  07B7               	addwf	___flmul@prod+3,f
  7137     068D                     u4583:
  7138     068D  0822               	movf	___flmul@b+2,w
  7139     068E  00F0               	movwf	__Umul8_16@multiplicand
  7140     068F  0826               	movf	___flmul@a+2,w
  7141     0690  160A  118A  2616  120A  118A  	fcall	__Umul8_16
  7142     0695  0871               	movf	?__Umul8_16+1,w
  7143     0696  1283               	bcf	3,5	;RP0=0, select bank0
  7144     0697  1303               	bcf	3,6	;RP1=0, select bank0
  7145     0698  00B9               	movwf	___flmul@temp+1
  7146     0699  0870               	movf	?__Umul8_16,w
  7147     069A  00B8               	movwf	___flmul@temp
  7148     069B                     l3653:
  7149     069B  0838               	movf	___flmul@temp,w
  7150     069C  00A8               	movwf	??___flmul
  7151     069D  0839               	movf	___flmul@temp+1,w
  7152     069E  00A9               	movwf	??___flmul+1
  7153     069F  01AA               	clrf	??___flmul+2
  7154     06A0  01AB               	clrf	??___flmul+3
  7155     06A1  3008               	movlw	8
  7156     06A2                     u4595:
  7157     06A2  1003               	clrc
  7158     06A3  0DA8               	rlf	??___flmul,f
  7159     06A4  0DA9               	rlf	??___flmul+1,f
  7160     06A5  0DAA               	rlf	??___flmul+2,f
  7161     06A6  0DAB               	rlf	??___flmul+3,f
  7162     06A7                     u4590:
  7163     06A7  3EFF               	addlw	-1
  7164     06A8  1D03               	skipz
  7165     06A9  2EA2               	goto	u4595
  7166     06AA  0828               	movf	??___flmul,w
  7167     06AB  07B4               	addwf	___flmul@prod,f
  7168     06AC  0829               	movf	??___flmul+1,w
  7169     06AD  1103               	clrz
  7170     06AE  1803               	skipnc
  7171     06AF  3E01               	addlw	1
  7172     06B0  1903               	skipnz
  7173     06B1  2EB3               	goto	u4601
  7174     06B2  07B5               	addwf	___flmul@prod+1,f
  7175     06B3                     u4601:
  7176     06B3  082A               	movf	??___flmul+2,w
  7177     06B4  1103               	clrz
  7178     06B5  1803               	skipnc
  7179     06B6  3E01               	addlw	1
  7180     06B7  1903               	skipnz
  7181     06B8  2EBA               	goto	u4602
  7182     06B9  07B6               	addwf	___flmul@prod+2,f
  7183     06BA                     u4602:
  7184     06BA  082B               	movf	??___flmul+3,w
  7185     06BB  1103               	clrz
  7186     06BC  1803               	skipnc
  7187     06BD  3E01               	addlw	1
  7188     06BE  1903               	skipnz
  7189     06BF  2EC1               	goto	u4603
  7190     06C0  07B7               	addwf	___flmul@prod+3,f
  7191     06C1                     u4603:
  7192     06C1                     l3655:
  7193     06C1  082E               	movf	___flmul@grs,w
  7194     06C2  00A8               	movwf	??___flmul
  7195     06C3  082F               	movf	___flmul@grs+1,w
  7196     06C4  00A9               	movwf	??___flmul+1
  7197     06C5  0830               	movf	___flmul@grs+2,w
  7198     06C6  00AA               	movwf	??___flmul+2
  7199     06C7  0831               	movf	___flmul@grs+3,w
  7200     06C8  00AB               	movwf	??___flmul+3
  7201     06C9  3018               	movlw	24
  7202     06CA                     u4615:
  7203     06CA  1003               	clrc
  7204     06CB  0CAB               	rrf	??___flmul+3,f
  7205     06CC  0CAA               	rrf	??___flmul+2,f
  7206     06CD  0CA9               	rrf	??___flmul+1,f
  7207     06CE  0CA8               	rrf	??___flmul,f
  7208     06CF                     u4610:
  7209     06CF  3EFF               	addlw	-1
  7210     06D0  1D03               	skipz
  7211     06D1  2ECA               	goto	u4615
  7212     06D2  0828               	movf	??___flmul,w
  7213     06D3  07B4               	addwf	___flmul@prod,f
  7214     06D4  0829               	movf	??___flmul+1,w
  7215     06D5  1103               	clrz
  7216     06D6  1803               	skipnc
  7217     06D7  3E01               	addlw	1
  7218     06D8  1903               	skipnz
  7219     06D9  2EDB               	goto	u4621
  7220     06DA  07B5               	addwf	___flmul@prod+1,f
  7221     06DB                     u4621:
  7222     06DB  082A               	movf	??___flmul+2,w
  7223     06DC  1103               	clrz
  7224     06DD  1803               	skipnc
  7225     06DE  3E01               	addlw	1
  7226     06DF  1903               	skipnz
  7227     06E0  2EE2               	goto	u4622
  7228     06E1  07B6               	addwf	___flmul@prod+2,f
  7229     06E2                     u4622:
  7230     06E2  082B               	movf	??___flmul+3,w
  7231     06E3  1103               	clrz
  7232     06E4  1803               	skipnc
  7233     06E5  3E01               	addlw	1
  7234     06E6  1903               	skipnz
  7235     06E7  2EE9               	goto	u4623
  7236     06E8  07B7               	addwf	___flmul@prod+3,f
  7237     06E9                     u4623:
  7238     06E9                     l3657:
  7239     06E9  3008               	movlw	8
  7240     06EA  00A8               	movwf	??___flmul
  7241     06EB                     u4635:
  7242     06EB  1003               	clrc
  7243     06EC  0DAE               	rlf	___flmul@grs,f
  7244     06ED  0DAF               	rlf	___flmul@grs+1,f
  7245     06EE  0DB0               	rlf	___flmul@grs+2,f
  7246     06EF  0DB1               	rlf	___flmul@grs+3,f
  7247     06F0  0BA8               	decfsz	??___flmul,f
  7248     06F1  2EEB               	goto	u4635
  7249     06F2                     l3659:
  7250     06F2  0833               	movf	___flmul@bexp,w
  7251     06F3  0732               	addwf	___flmul@aexp,w
  7252     06F4  00A8               	movwf	??___flmul
  7253     06F5  01A9               	clrf	??___flmul+1
  7254     06F6  0DA9               	rlf	??___flmul+1,f
  7255     06F7  0828               	movf	??___flmul,w
  7256     06F8  3E82               	addlw	130
  7257     06F9  00B8               	movwf	___flmul@temp
  7258     06FA  0829               	movf	??___flmul+1,w
  7259     06FB  1803               	skipnc
  7260     06FC  3E01               	addlw	1
  7261     06FD  3EFF               	addlw	255
  7262     06FE  00B9               	movwf	___flmul@temp+1
  7263     06FF  2F1D               	goto	l3671
  7264     0700                     l3661:
  7265     0700  3001               	movlw	1
  7266     0701  00A8               	movwf	??___flmul
  7267     0702                     u4645:
  7268     0702  1003               	clrc
  7269     0703  0DB4               	rlf	___flmul@prod,f
  7270     0704  0DB5               	rlf	___flmul@prod+1,f
  7271     0705  0DB6               	rlf	___flmul@prod+2,f
  7272     0706  0DB7               	rlf	___flmul@prod+3,f
  7273     0707  0BA8               	decfsz	??___flmul,f
  7274     0708  2F02               	goto	u4645
  7275     0709                     l3663:
  7276     0709  1FB1               	btfss	___flmul@grs+3,7
  7277     070A  2F0C               	goto	u4651
  7278     070B  2F0D               	goto	u4650
  7279     070C                     u4651:
  7280     070C  2F0E               	goto	l3667
  7281     070D                     u4650:
  7282     070D                     l3665:
  7283     070D  1434               	bsf	___flmul@prod,0
  7284     070E                     l3667:
  7285     070E  3001               	movlw	1
  7286     070F  00A8               	movwf	??___flmul
  7287     0710                     u4665:
  7288     0710  1003               	clrc
  7289     0711  0DAE               	rlf	___flmul@grs,f
  7290     0712  0DAF               	rlf	___flmul@grs+1,f
  7291     0713  0DB0               	rlf	___flmul@grs+2,f
  7292     0714  0DB1               	rlf	___flmul@grs+3,f
  7293     0715  0BA8               	decfsz	??___flmul,f
  7294     0716  2F10               	goto	u4665
  7295     0717                     l3669:
  7296     0717  30FF               	movlw	255
  7297     0718  07B8               	addwf	___flmul@temp,f
  7298     0719  1803               	skipnc
  7299     071A  0AB9               	incf	___flmul@temp+1,f
  7300     071B  30FF               	movlw	255
  7301     071C  07B9               	addwf	___flmul@temp+1,f
  7302     071D                     l3671:
  7303     071D  1FB6               	btfss	___flmul@prod+2,7
  7304     071E  2F20               	goto	u4671
  7305     071F  2F21               	goto	u4670
  7306     0720                     u4671:
  7307     0720  2F00               	goto	l3661
  7308     0721                     u4670:
  7309     0721                     l3673:
  7310     0721  01B2               	clrf	___flmul@aexp
  7311     0722                     l3675:
  7312     0722  1FB1               	btfss	___flmul@grs+3,7
  7313     0723  2F25               	goto	u4681
  7314     0724  2F26               	goto	u4680
  7315     0725                     u4681:
  7316     0725  2F42               	goto	l3683
  7317     0726                     u4680:
  7318     0726                     l3677:
  7319     0726  30FF               	movlw	255
  7320     0727  052E               	andwf	___flmul@grs,w
  7321     0728  00A8               	movwf	??___flmul
  7322     0729  30FF               	movlw	255
  7323     072A  052F               	andwf	___flmul@grs+1,w
  7324     072B  00A9               	movwf	??___flmul+1
  7325     072C  30FF               	movlw	255
  7326     072D  0530               	andwf	___flmul@grs+2,w
  7327     072E  00AA               	movwf	??___flmul+2
  7328     072F  307F               	movlw	127
  7329     0730  0531               	andwf	___flmul@grs+3,w
  7330     0731  00AB               	movwf	??___flmul+3
  7331     0732  082B               	movf	??___flmul+3,w
  7332     0733  042A               	iorwf	??___flmul+2,w
  7333     0734  0429               	iorwf	??___flmul+1,w
  7334     0735  0428               	iorwf	??___flmul,w
  7335     0736  1903               	skipnz
  7336     0737  2F39               	goto	u4691
  7337     0738  2F3A               	goto	u4690
  7338     0739                     u4691:
  7339     0739  2F3D               	goto	l1039
  7340     073A                     u4690:
  7341     073A                     l3679:
  7342     073A  01B2               	clrf	___flmul@aexp
  7343     073B  0AB2               	incf	___flmul@aexp,f
  7344     073C  2F42               	goto	l3683
  7345     073D                     l1039:
  7346     073D  1C34               	btfss	___flmul@prod,0
  7347     073E  2F40               	goto	u4701
  7348     073F  2F41               	goto	u4700
  7349     0740                     u4701:
  7350     0740  2F42               	goto	l3683
  7351     0741                     u4700:
  7352     0741  2F3A               	goto	l3679
  7353     0742                     l3683:
  7354     0742  0832               	movf	___flmul@aexp,w
  7355     0743  1903               	btfsc	3,2
  7356     0744  2F46               	goto	u4711
  7357     0745  2F47               	goto	u4710
  7358     0746                     u4711:
  7359     0746  2F78               	goto	l3693
  7360     0747                     u4710:
  7361     0747                     l3685:
  7362     0747  3001               	movlw	1
  7363     0748  07B4               	addwf	___flmul@prod,f
  7364     0749  3000               	movlw	0
  7365     074A  1803               	skipnc
  7366     074B  3001               	movlw	1
  7367     074C  07B5               	addwf	___flmul@prod+1,f
  7368     074D  3000               	movlw	0
  7369     074E  1803               	skipnc
  7370     074F  3001               	movlw	1
  7371     0750  07B6               	addwf	___flmul@prod+2,f
  7372     0751  3000               	movlw	0
  7373     0752  1803               	skipnc
  7374     0753  3001               	movlw	1
  7375     0754  07B7               	addwf	___flmul@prod+3,f
  7376     0755                     l3687:
  7377     0755  1C37               	btfss	___flmul@prod+3,0
  7378     0756  2F58               	goto	u4721
  7379     0757  2F59               	goto	u4720
  7380     0758                     u4721:
  7381     0758  2F78               	goto	l3693
  7382     0759                     u4720:
  7383     0759                     l3689:
  7384     0759  0834               	movf	___flmul@prod,w
  7385     075A  00A8               	movwf	??___flmul
  7386     075B  0835               	movf	___flmul@prod+1,w
  7387     075C  00A9               	movwf	??___flmul+1
  7388     075D  0836               	movf	___flmul@prod+2,w
  7389     075E  00AA               	movwf	??___flmul+2
  7390     075F  0837               	movf	___flmul@prod+3,w
  7391     0760  00AB               	movwf	??___flmul+3
  7392     0761  3001               	movlw	1
  7393     0762  00AC               	movwf	??___flmul+4
  7394     0763                     u4735:
  7395     0763  0D2B               	rlf	??___flmul+3,w
  7396     0764  0CAB               	rrf	??___flmul+3,f
  7397     0765  0CAA               	rrf	??___flmul+2,f
  7398     0766  0CA9               	rrf	??___flmul+1,f
  7399     0767  0CA8               	rrf	??___flmul,f
  7400     0768                     u4730:
  7401     0768  0BAC               	decfsz	??___flmul+4,f
  7402     0769  2F63               	goto	u4735
  7403     076A  082B               	movf	??___flmul+3,w
  7404     076B  00B7               	movwf	___flmul@prod+3
  7405     076C  082A               	movf	??___flmul+2,w
  7406     076D  00B6               	movwf	___flmul@prod+2
  7407     076E  0829               	movf	??___flmul+1,w
  7408     076F  00B5               	movwf	___flmul@prod+1
  7409     0770  0828               	movf	??___flmul,w
  7410     0771  00B4               	movwf	___flmul@prod
  7411     0772                     l3691:
  7412     0772  3001               	movlw	1
  7413     0773  07B8               	addwf	___flmul@temp,f
  7414     0774  1803               	skipnc
  7415     0775  0AB9               	incf	___flmul@temp+1,f
  7416     0776  3000               	movlw	0
  7417     0777  07B9               	addwf	___flmul@temp+1,f
  7418     0778                     l3693:
  7419     0778  0839               	movf	___flmul@temp+1,w
  7420     0779  3A80               	xorlw	128
  7421     077A  00FF               	movwf	btemp+1
  7422     077B  3080               	movlw	128
  7423     077C  027F               	subwf	btemp+1,w
  7424     077D  1D03               	skipz
  7425     077E  2F81               	goto	u4745
  7426     077F  30FF               	movlw	255
  7427     0780  0238               	subwf	___flmul@temp,w
  7428     0781                     u4745:
  7429     0781  1C03               	skipc
  7430     0782  2F84               	goto	u4741
  7431     0783  2F85               	goto	u4740
  7432     0784                     u4741:
  7433     0784  2F90               	goto	l3697
  7434     0785                     u4740:
  7435     0785                     l3695:
  7436     0785  307F               	movlw	127
  7437     0786  1283               	bcf	3,5	;RP0=0, select bank0
  7438     0787  1303               	bcf	3,6	;RP1=0, select bank0
  7439     0788  00B7               	movwf	___flmul@prod+3
  7440     0789  3080               	movlw	128
  7441     078A  00B6               	movwf	___flmul@prod+2
  7442     078B  3000               	movlw	0
  7443     078C  00B5               	movwf	___flmul@prod+1
  7444     078D  3000               	movlw	0
  7445     078E  00B4               	movwf	___flmul@prod
  7446     078F  2FC1               	goto	l3711
  7447     0790                     l3697:
  7448     0790  1283               	bcf	3,5	;RP0=0, select bank0
  7449     0791  1303               	bcf	3,6	;RP1=0, select bank0
  7450     0792  0839               	movf	___flmul@temp+1,w
  7451     0793  3A80               	xorlw	128
  7452     0794  00FF               	movwf	btemp+1
  7453     0795  3080               	movlw	128
  7454     0796  027F               	subwf	btemp+1,w
  7455     0797  1D03               	skipz
  7456     0798  2F9B               	goto	u4755
  7457     0799  3001               	movlw	1
  7458     079A  0238               	subwf	___flmul@temp,w
  7459     079B                     u4755:
  7460     079B  1803               	skipnc
  7461     079C  2F9E               	goto	u4751
  7462     079D  2F9F               	goto	u4750
  7463     079E                     u4751:
  7464     079E  2FAB               	goto	l3703
  7465     079F                     u4750:
  7466     079F                     l3699:
  7467     079F  3000               	movlw	0
  7468     07A0  1283               	bcf	3,5	;RP0=0, select bank0
  7469     07A1  1303               	bcf	3,6	;RP1=0, select bank0
  7470     07A2  00B7               	movwf	___flmul@prod+3
  7471     07A3  3000               	movlw	0
  7472     07A4  00B6               	movwf	___flmul@prod+2
  7473     07A5  3000               	movlw	0
  7474     07A6  00B5               	movwf	___flmul@prod+1
  7475     07A7  3000               	movlw	0
  7476     07A8  00B4               	movwf	___flmul@prod
  7477     07A9                     l3701:
  7478     07A9  01AD               	clrf	___flmul@sign
  7479     07AA  2FC1               	goto	l3711
  7480     07AB                     l3703:
  7481     07AB  1283               	bcf	3,5	;RP0=0, select bank0
  7482     07AC  1303               	bcf	3,6	;RP1=0, select bank0
  7483     07AD  0838               	movf	___flmul@temp,w
  7484     07AE  00B3               	movwf	___flmul@bexp
  7485     07AF  30FF               	movlw	255
  7486     07B0  05B4               	andwf	___flmul@prod,f
  7487     07B1  30FF               	movlw	255
  7488     07B2  05B5               	andwf	___flmul@prod+1,f
  7489     07B3  307F               	movlw	127
  7490     07B4  05B6               	andwf	___flmul@prod+2,f
  7491     07B5  3000               	movlw	0
  7492     07B6  05B7               	andwf	___flmul@prod+3,f
  7493     07B7                     l3705:
  7494     07B7  1C33               	btfss	___flmul@bexp,0
  7495     07B8  2FBA               	goto	u4761
  7496     07B9  2FBB               	goto	u4760
  7497     07BA                     u4761:
  7498     07BA  2FBC               	goto	l3709
  7499     07BB                     u4760:
  7500     07BB                     l3707:
  7501     07BB  17B6               	bsf	___flmul@prod+2,7
  7502     07BC                     l3709:
  7503     07BC  0833               	movf	___flmul@bexp,w
  7504     07BD  00A8               	movwf	??___flmul
  7505     07BE  1003               	clrc
  7506     07BF  0C28               	rrf	??___flmul,w
  7507     07C0  00B7               	movwf	___flmul@prod+3
  7508     07C1                     l3711:
  7509     07C1  082D               	movf	___flmul@sign,w
  7510     07C2  00FF               	movwf	btemp+1
  7511     07C3  087F               	movf	btemp+1,w
  7512     07C4  04B7               	iorwf	___flmul@prod+3,f
  7513     07C5                     l3713:
  7514     07C5  0837               	movf	___flmul@prod+3,w
  7515     07C6  00A3               	movwf	?___flmul+3
  7516     07C7  0836               	movf	___flmul@prod+2,w
  7517     07C8  00A2               	movwf	?___flmul+2
  7518     07C9  0835               	movf	___flmul@prod+1,w
  7519     07CA  00A1               	movwf	?___flmul+1
  7520     07CB  0834               	movf	___flmul@prod,w
  7521     07CC  00A0               	movwf	?___flmul
  7522     07CD                     l1033:
  7523     07CD  0008               	return
  7524     07CE                     __end_of___flmul:
  7525                           
  7526                           	psect	text28
  7527     1616                     __ptext28:	
  7528 ;; *************** function __Umul8_16 *****************
  7529 ;; Defined at:
  7530 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul8_16.c"
  7531 ;; Parameters:    Size  Location     Type
  7532 ;;  multiplier      1    wreg     unsigned char 
  7533 ;;  multiplicand    1    0[COMMON] unsigned char 
  7534 ;; Auto vars:     Size  Location     Type
  7535 ;;  multiplier      1    8[COMMON] unsigned char 
  7536 ;;  word_mpld       2    6[COMMON] unsigned short 
  7537 ;;  product         2    4[COMMON] unsigned short 
  7538 ;; Return value:  Size  Location     Type
  7539 ;;                  2    0[COMMON] unsigned int 
  7540 ;; Registers used:
  7541 ;;		wreg, status,2, status,0
  7542 ;; Tracked objects:
  7543 ;;		On entry : 0/0
  7544 ;;		On exit  : 0/0
  7545 ;;		Unchanged: 0/0
  7546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7547 ;;      Params:         2       0       0       0       0
  7548 ;;      Locals:         5       0       0       0       0
  7549 ;;      Temps:          2       0       0       0       0
  7550 ;;      Totals:         9       0       0       0       0
  7551 ;;Total ram usage:        9 bytes
  7552 ;; Hardware stack levels used: 1
  7553 ;; This function calls:
  7554 ;;		Nothing
  7555 ;; This function is called by:
  7556 ;;		___flmul
  7557 ;; This function uses a non-reentrant model
  7558 ;;
  7559                           
  7560     1616                     __Umul8_16:	
  7561                           ;psect for function __Umul8_16
  7562                           
  7563                           
  7564                           ;incstack = 0
  7565                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  7566                           ;__Umul8_16@multiplier stored from wreg
  7567     1616  00F8               	movwf	__Umul8_16@multiplier
  7568     1617                     l3211:
  7569     1617  01F4               	clrf	__Umul8_16@product
  7570     1618  01F5               	clrf	__Umul8_16@product+1
  7571     1619                     l3213:
  7572     1619  0870               	movf	__Umul8_16@multiplicand,w
  7573     161A  00F2               	movwf	??__Umul8_16
  7574     161B  01F3               	clrf	??__Umul8_16+1
  7575     161C  0872               	movf	??__Umul8_16,w
  7576     161D  00F6               	movwf	__Umul8_16@word_mpld
  7577     161E  0873               	movf	??__Umul8_16+1,w
  7578     161F  00F7               	movwf	__Umul8_16@word_mpld+1
  7579     1620                     l3215:
  7580     1620  1C78               	btfss	__Umul8_16@multiplier,0
  7581     1621  2E23               	goto	u3841
  7582     1622  2E24               	goto	u3840
  7583     1623                     u3841:
  7584     1623  2E2A               	goto	l1052
  7585     1624                     u3840:
  7586     1624                     l3217:
  7587     1624  0876               	movf	__Umul8_16@word_mpld,w
  7588     1625  07F4               	addwf	__Umul8_16@product,f
  7589     1626  1803               	skipnc
  7590     1627  0AF5               	incf	__Umul8_16@product+1,f
  7591     1628  0877               	movf	__Umul8_16@word_mpld+1,w
  7592     1629  07F5               	addwf	__Umul8_16@product+1,f
  7593     162A                     l1052:
  7594     162A  3001               	movlw	1
  7595     162B                     u3855:
  7596     162B  1003               	clrc
  7597     162C  0DF6               	rlf	__Umul8_16@word_mpld,f
  7598     162D  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  7599     162E  3EFF               	addlw	-1
  7600     162F  1D03               	skipz
  7601     1630  2E2B               	goto	u3855
  7602     1631  1003               	clrc
  7603     1632  0CF8               	rrf	__Umul8_16@multiplier,f
  7604     1633                     l3219:
  7605     1633  0878               	movf	__Umul8_16@multiplier,w
  7606     1634  1D03               	btfss	3,2
  7607     1635  2E37               	goto	u3861
  7608     1636  2E38               	goto	u3860
  7609     1637                     u3861:
  7610     1637  2E20               	goto	l3215
  7611     1638                     u3860:
  7612     1638                     l3221:
  7613     1638  0875               	movf	__Umul8_16@product+1,w
  7614     1639  00F1               	movwf	?__Umul8_16+1
  7615     163A  0874               	movf	__Umul8_16@product,w
  7616     163B  00F0               	movwf	?__Umul8_16
  7617     163C                     l1054:
  7618     163C  0008               	return
  7619     163D                     __end_of__Umul8_16:
  7620                           
  7621                           	psect	text29
  7622     0087                     __ptext29:	
  7623 ;; *************** function ___fldiv *****************
  7624 ;; Defined at:
  7625 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcdiv.c"
  7626 ;; Parameters:    Size  Location     Type
  7627 ;;  a               4   26[BANK0 ] unsigned int 
  7628 ;;  b               4   30[BANK0 ] unsigned int 
  7629 ;; Auto vars:     Size  Location     Type
  7630 ;;  grs             4   46[BANK0 ] unsigned long 
  7631 ;;  rem             4   39[BANK0 ] unsigned long 
  7632 ;;  new_exp         2   44[BANK0 ] short 
  7633 ;;  aexp            1   51[BANK0 ] unsigned char 
  7634 ;;  bexp            1   50[BANK0 ] unsigned char 
  7635 ;;  sign            1   43[BANK0 ] unsigned char 
  7636 ;; Return value:  Size  Location     Type
  7637 ;;                  4   26[BANK0 ] unsigned char 
  7638 ;; Registers used:
  7639 ;;		wreg, status,2, status,0, btemp+1
  7640 ;; Tracked objects:
  7641 ;;		On entry : 0/0
  7642 ;;		On exit  : 0/0
  7643 ;;		Unchanged: 0/0
  7644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7645 ;;      Params:         0       8       0       0       0
  7646 ;;      Locals:         0      13       0       0       0
  7647 ;;      Temps:          0       5       0       0       0
  7648 ;;      Totals:         0      26       0       0       0
  7649 ;;Total ram usage:       26 bytes
  7650 ;; Hardware stack levels used: 1
  7651 ;; This function calls:
  7652 ;;		Nothing
  7653 ;; This function is called by:
  7654 ;;		_main
  7655 ;; This function uses a non-reentrant model
  7656 ;;
  7657                           
  7658     0087                     ___fldiv:	
  7659                           ;psect for function ___fldiv
  7660                           
  7661     0087                     l3429:	
  7662                           ;incstack = 0
  7663                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  7664                           
  7665     0087  1283               	bcf	3,5	;RP0=0, select bank0
  7666     0088  1303               	bcf	3,6	;RP1=0, select bank0
  7667     0089  0841               	movf	___fldiv@b+3,w
  7668     008A  3980               	andlw	128
  7669     008B  00CB               	movwf	___fldiv@sign
  7670     008C                     l3431:
  7671     008C  0841               	movf	___fldiv@b+3,w
  7672     008D  00C2               	movwf	??___fldiv
  7673     008E  0742               	addwf	??___fldiv,w
  7674     008F  00D2               	movwf	___fldiv@bexp
  7675     0090                     l3433:
  7676     0090  1FC0               	btfss	___fldiv@b+2,7
  7677     0091  2893               	goto	u4111
  7678     0092  2894               	goto	u4110
  7679     0093                     u4111:
  7680     0093  2895               	goto	l3437
  7681     0094                     u4110:
  7682     0094                     l3435:
  7683     0094  1452               	bsf	___fldiv@bexp,0
  7684     0095                     l3437:
  7685     0095  0852               	movf	___fldiv@bexp,w
  7686     0096  1903               	btfsc	3,2
  7687     0097  2899               	goto	u4121
  7688     0098  289A               	goto	u4120
  7689     0099                     u4121:
  7690     0099  28AA               	goto	l3447
  7691     009A                     u4120:
  7692     009A                     l3439:
  7693     009A  0A52               	incf	___fldiv@bexp,w
  7694     009B  1D03               	btfss	3,2
  7695     009C  289E               	goto	u4131
  7696     009D  289F               	goto	u4130
  7697     009E                     u4131:
  7698     009E  28A7               	goto	l3443
  7699     009F                     u4130:
  7700     009F                     l3441:
  7701     009F  3000               	movlw	0
  7702     00A0  00C1               	movwf	___fldiv@b+3
  7703     00A1  3000               	movlw	0
  7704     00A2  00C0               	movwf	___fldiv@b+2
  7705     00A3  3000               	movlw	0
  7706     00A4  00BF               	movwf	___fldiv@b+1
  7707     00A5  3000               	movlw	0
  7708     00A6  00BE               	movwf	___fldiv@b
  7709     00A7                     l3443:
  7710     00A7  17C0               	bsf	___fldiv@b+2,7
  7711     00A8                     l3445:
  7712     00A8  01C1               	clrf	___fldiv@b+3
  7713     00A9  28B2               	goto	l3449
  7714     00AA                     l3447:
  7715     00AA  3000               	movlw	0
  7716     00AB  00C1               	movwf	___fldiv@b+3
  7717     00AC  3000               	movlw	0
  7718     00AD  00C0               	movwf	___fldiv@b+2
  7719     00AE  3000               	movlw	0
  7720     00AF  00BF               	movwf	___fldiv@b+1
  7721     00B0  3000               	movlw	0
  7722     00B1  00BE               	movwf	___fldiv@b
  7723     00B2                     l3449:
  7724     00B2  083D               	movf	___fldiv@a+3,w
  7725     00B3  3980               	andlw	128
  7726     00B4  00FF               	movwf	btemp+1
  7727     00B5  087F               	movf	btemp+1,w
  7728     00B6  06CB               	xorwf	___fldiv@sign,f
  7729     00B7                     l3451:
  7730     00B7  083D               	movf	___fldiv@a+3,w
  7731     00B8  00C2               	movwf	??___fldiv
  7732     00B9  0742               	addwf	??___fldiv,w
  7733     00BA  00D3               	movwf	___fldiv@aexp
  7734     00BB                     l3453:
  7735     00BB  1FBC               	btfss	___fldiv@a+2,7
  7736     00BC  28BE               	goto	u4141
  7737     00BD  28BF               	goto	u4140
  7738     00BE                     u4141:
  7739     00BE  28C0               	goto	l3457
  7740     00BF                     u4140:
  7741     00BF                     l3455:
  7742     00BF  1453               	bsf	___fldiv@aexp,0
  7743     00C0                     l3457:
  7744     00C0  0853               	movf	___fldiv@aexp,w
  7745     00C1  1903               	btfsc	3,2
  7746     00C2  28C4               	goto	u4151
  7747     00C3  28C5               	goto	u4150
  7748     00C4                     u4151:
  7749     00C4  28D5               	goto	l3467
  7750     00C5                     u4150:
  7751     00C5                     l3459:
  7752     00C5  0A53               	incf	___fldiv@aexp,w
  7753     00C6  1D03               	btfss	3,2
  7754     00C7  28C9               	goto	u4161
  7755     00C8  28CA               	goto	u4160
  7756     00C9                     u4161:
  7757     00C9  28D2               	goto	l3463
  7758     00CA                     u4160:
  7759     00CA                     l3461:
  7760     00CA  3000               	movlw	0
  7761     00CB  00BD               	movwf	___fldiv@a+3
  7762     00CC  3000               	movlw	0
  7763     00CD  00BC               	movwf	___fldiv@a+2
  7764     00CE  3000               	movlw	0
  7765     00CF  00BB               	movwf	___fldiv@a+1
  7766     00D0  3000               	movlw	0
  7767     00D1  00BA               	movwf	___fldiv@a
  7768     00D2                     l3463:
  7769     00D2  17BC               	bsf	___fldiv@a+2,7
  7770     00D3                     l3465:
  7771     00D3  01BD               	clrf	___fldiv@a+3
  7772     00D4  28DD               	goto	l993
  7773     00D5                     l3467:
  7774     00D5  3000               	movlw	0
  7775     00D6  00BD               	movwf	___fldiv@a+3
  7776     00D7  3000               	movlw	0
  7777     00D8  00BC               	movwf	___fldiv@a+2
  7778     00D9  3000               	movlw	0
  7779     00DA  00BB               	movwf	___fldiv@a+1
  7780     00DB  3000               	movlw	0
  7781     00DC  00BA               	movwf	___fldiv@a
  7782     00DD                     l993:
  7783     00DD  083D               	movf	___fldiv@a+3,w
  7784     00DE  043C               	iorwf	___fldiv@a+2,w
  7785     00DF  043B               	iorwf	___fldiv@a+1,w
  7786     00E0  043A               	iorwf	___fldiv@a,w
  7787     00E1  1D03               	skipz
  7788     00E2  28E4               	goto	u4171
  7789     00E3  28E5               	goto	u4170
  7790     00E4                     u4171:
  7791     00E4  28FE               	goto	l3477
  7792     00E5                     u4170:
  7793     00E5                     l3469:
  7794     00E5  3000               	movlw	0
  7795     00E6  00C1               	movwf	___fldiv@b+3
  7796     00E7  3000               	movlw	0
  7797     00E8  00C0               	movwf	___fldiv@b+2
  7798     00E9  3000               	movlw	0
  7799     00EA  00BF               	movwf	___fldiv@b+1
  7800     00EB  3000               	movlw	0
  7801     00EC  00BE               	movwf	___fldiv@b
  7802     00ED  3080               	movlw	128
  7803     00EE  04C0               	iorwf	___fldiv@b+2,f
  7804     00EF  307F               	movlw	127
  7805     00F0  04C1               	iorwf	___fldiv@b+3,f
  7806     00F1                     l3471:
  7807     00F1  084B               	movf	___fldiv@sign,w
  7808     00F2  00FF               	movwf	btemp+1
  7809     00F3  087F               	movf	btemp+1,w
  7810     00F4  04C1               	iorwf	___fldiv@b+3,f
  7811     00F5                     l3473:
  7812     00F5  0841               	movf	___fldiv@b+3,w
  7813     00F6  00BD               	movwf	?___fldiv+3
  7814     00F7  0840               	movf	___fldiv@b+2,w
  7815     00F8  00BC               	movwf	?___fldiv+2
  7816     00F9  083F               	movf	___fldiv@b+1,w
  7817     00FA  00BB               	movwf	?___fldiv+1
  7818     00FB  083E               	movf	___fldiv@b,w
  7819     00FC  00BA               	movwf	?___fldiv
  7820     00FD  2A55               	goto	l995
  7821     00FE                     l3477:
  7822     00FE  0852               	movf	___fldiv@bexp,w
  7823     00FF  1D03               	btfss	3,2
  7824     0100  2902               	goto	u4181
  7825     0101  2903               	goto	u4180
  7826     0102                     u4181:
  7827     0102  290C               	goto	l3483
  7828     0103                     u4180:
  7829     0103                     l3479:
  7830     0103  3000               	movlw	0
  7831     0104  00BD               	movwf	?___fldiv+3
  7832     0105  3000               	movlw	0
  7833     0106  00BC               	movwf	?___fldiv+2
  7834     0107  3000               	movlw	0
  7835     0108  00BB               	movwf	?___fldiv+1
  7836     0109  3000               	movlw	0
  7837     010A  00BA               	movwf	?___fldiv
  7838     010B  2A55               	goto	l995
  7839     010C                     l3483:
  7840     010C  0852               	movf	___fldiv@bexp,w
  7841     010D  00C2               	movwf	??___fldiv
  7842     010E  01C3               	clrf	??___fldiv+1
  7843     010F  0843               	movf	??___fldiv+1,w
  7844     0110  00C5               	movwf	??___fldiv+3
  7845     0111  0853               	movf	___fldiv@aexp,w
  7846     0112  0242               	subwf	??___fldiv,w
  7847     0113  00C4               	movwf	??___fldiv+2
  7848     0114  1C03               	skipc
  7849     0115  03C5               	decf	??___fldiv+3,f
  7850     0116  0844               	movf	??___fldiv+2,w
  7851     0117  3E7F               	addlw	127
  7852     0118  00CC               	movwf	___fldiv@new_exp
  7853     0119  0845               	movf	??___fldiv+3,w
  7854     011A  1803               	skipnc
  7855     011B  3E01               	addlw	1
  7856     011C  3E00               	addlw	0
  7857     011D  00CD               	movwf	___fldiv@new_exp+1
  7858     011E                     l3485:
  7859     011E  0841               	movf	___fldiv@b+3,w
  7860     011F  00CA               	movwf	___fldiv@rem+3
  7861     0120  0840               	movf	___fldiv@b+2,w
  7862     0121  00C9               	movwf	___fldiv@rem+2
  7863     0122  083F               	movf	___fldiv@b+1,w
  7864     0123  00C8               	movwf	___fldiv@rem+1
  7865     0124  083E               	movf	___fldiv@b,w
  7866     0125  00C7               	movwf	___fldiv@rem
  7867     0126                     l3487:
  7868     0126  3000               	movlw	0
  7869     0127  00C1               	movwf	___fldiv@b+3
  7870     0128  3000               	movlw	0
  7871     0129  00C0               	movwf	___fldiv@b+2
  7872     012A  3000               	movlw	0
  7873     012B  00BF               	movwf	___fldiv@b+1
  7874     012C  3000               	movlw	0
  7875     012D  00BE               	movwf	___fldiv@b
  7876     012E                     l3489:
  7877     012E  3000               	movlw	0
  7878     012F  00D1               	movwf	___fldiv@grs+3
  7879     0130  3000               	movlw	0
  7880     0131  00D0               	movwf	___fldiv@grs+2
  7881     0132  3000               	movlw	0
  7882     0133  00CF               	movwf	___fldiv@grs+1
  7883     0134  3000               	movlw	0
  7884     0135  00CE               	movwf	___fldiv@grs
  7885     0136                     l3491:
  7886     0136  01D3               	clrf	___fldiv@aexp
  7887     0137  2982               	goto	l3511
  7888     0138                     l3493:
  7889     0138  0853               	movf	___fldiv@aexp,w
  7890     0139  1903               	btfsc	3,2
  7891     013A  293C               	goto	u4191
  7892     013B  293D               	goto	u4190
  7893     013C                     u4191:
  7894     013C  295D               	goto	l3503
  7895     013D                     u4190:
  7896     013D                     l3495:
  7897     013D  3001               	movlw	1
  7898     013E  00C2               	movwf	??___fldiv
  7899     013F                     u4205:
  7900     013F  1003               	clrc
  7901     0140  0DC7               	rlf	___fldiv@rem,f
  7902     0141  0DC8               	rlf	___fldiv@rem+1,f
  7903     0142  0DC9               	rlf	___fldiv@rem+2,f
  7904     0143  0DCA               	rlf	___fldiv@rem+3,f
  7905     0144  0BC2               	decfsz	??___fldiv,f
  7906     0145  293F               	goto	u4205
  7907     0146  3001               	movlw	1
  7908     0147  00C2               	movwf	??___fldiv
  7909     0148                     u4215:
  7910     0148  1003               	clrc
  7911     0149  0DBE               	rlf	___fldiv@b,f
  7912     014A  0DBF               	rlf	___fldiv@b+1,f
  7913     014B  0DC0               	rlf	___fldiv@b+2,f
  7914     014C  0DC1               	rlf	___fldiv@b+3,f
  7915     014D  0BC2               	decfsz	??___fldiv,f
  7916     014E  2948               	goto	u4215
  7917     014F                     l3497:
  7918     014F  1FD1               	btfss	___fldiv@grs+3,7
  7919     0150  2952               	goto	u4221
  7920     0151  2953               	goto	u4220
  7921     0152                     u4221:
  7922     0152  2954               	goto	l3501
  7923     0153                     u4220:
  7924     0153                     l3499:
  7925     0153  143E               	bsf	___fldiv@b,0
  7926     0154                     l3501:
  7927     0154  3001               	movlw	1
  7928     0155  00C2               	movwf	??___fldiv
  7929     0156                     u4235:
  7930     0156  1003               	clrc
  7931     0157  0DCE               	rlf	___fldiv@grs,f
  7932     0158  0DCF               	rlf	___fldiv@grs+1,f
  7933     0159  0DD0               	rlf	___fldiv@grs+2,f
  7934     015A  0DD1               	rlf	___fldiv@grs+3,f
  7935     015B  0BC2               	decfsz	??___fldiv,f
  7936     015C  2956               	goto	u4235
  7937     015D                     l3503:
  7938     015D  083D               	movf	___fldiv@a+3,w
  7939     015E  024A               	subwf	___fldiv@rem+3,w
  7940     015F  1D03               	skipz
  7941     0160  296B               	goto	u4245
  7942     0161  083C               	movf	___fldiv@a+2,w
  7943     0162  0249               	subwf	___fldiv@rem+2,w
  7944     0163  1D03               	skipz
  7945     0164  296B               	goto	u4245
  7946     0165  083B               	movf	___fldiv@a+1,w
  7947     0166  0248               	subwf	___fldiv@rem+1,w
  7948     0167  1D03               	skipz
  7949     0168  296B               	goto	u4245
  7950     0169  083A               	movf	___fldiv@a,w
  7951     016A  0247               	subwf	___fldiv@rem,w
  7952     016B                     u4245:
  7953     016B  1C03               	skipc
  7954     016C  296E               	goto	u4241
  7955     016D  296F               	goto	u4240
  7956     016E                     u4241:
  7957     016E  297E               	goto	l3509
  7958     016F                     u4240:
  7959     016F                     l3505:
  7960     016F  1751               	bsf	___fldiv@grs+3,6
  7961     0170                     l3507:
  7962     0170  083A               	movf	___fldiv@a,w
  7963     0171  02C7               	subwf	___fldiv@rem,f
  7964     0172  083B               	movf	___fldiv@a+1,w
  7965     0173  1C03               	skipc
  7966     0174  0F3B               	incfsz	___fldiv@a+1,w
  7967     0175  02C8               	subwf	___fldiv@rem+1,f
  7968     0176  083C               	movf	___fldiv@a+2,w
  7969     0177  1C03               	skipc
  7970     0178  0F3C               	incfsz	___fldiv@a+2,w
  7971     0179  02C9               	subwf	___fldiv@rem+2,f
  7972     017A  083D               	movf	___fldiv@a+3,w
  7973     017B  1C03               	skipc
  7974     017C  0F3D               	incfsz	___fldiv@a+3,w
  7975     017D  02CA               	subwf	___fldiv@rem+3,f
  7976     017E                     l3509:
  7977     017E  3001               	movlw	1
  7978     017F  00FF               	movwf	btemp+1
  7979     0180  087F               	movf	btemp+1,w
  7980     0181  07D3               	addwf	___fldiv@aexp,f
  7981     0182                     l3511:
  7982     0182  301A               	movlw	26
  7983     0183  0253               	subwf	___fldiv@aexp,w
  7984     0184  1C03               	skipc
  7985     0185  2987               	goto	u4251
  7986     0186  2988               	goto	u4250
  7987     0187                     u4251:
  7988     0187  2938               	goto	l3493
  7989     0188                     u4250:
  7990     0188                     l3513:
  7991     0188  084A               	movf	___fldiv@rem+3,w
  7992     0189  0449               	iorwf	___fldiv@rem+2,w
  7993     018A  0448               	iorwf	___fldiv@rem+1,w
  7994     018B  0447               	iorwf	___fldiv@rem,w
  7995     018C  1903               	skipnz
  7996     018D  298F               	goto	u4261
  7997     018E  2990               	goto	u4260
  7998     018F                     u4261:
  7999     018F  29AF               	goto	l3527
  8000     0190                     u4260:
  8001     0190                     l3515:
  8002     0190  144E               	bsf	___fldiv@grs,0
  8003     0191  29AF               	goto	l3527
  8004     0192                     l3517:
  8005     0192  3001               	movlw	1
  8006     0193  00C2               	movwf	??___fldiv
  8007     0194                     u4275:
  8008     0194  1003               	clrc
  8009     0195  0DBE               	rlf	___fldiv@b,f
  8010     0196  0DBF               	rlf	___fldiv@b+1,f
  8011     0197  0DC0               	rlf	___fldiv@b+2,f
  8012     0198  0DC1               	rlf	___fldiv@b+3,f
  8013     0199  0BC2               	decfsz	??___fldiv,f
  8014     019A  2994               	goto	u4275
  8015     019B                     l3519:
  8016     019B  1FD1               	btfss	___fldiv@grs+3,7
  8017     019C  299E               	goto	u4281
  8018     019D  299F               	goto	u4280
  8019     019E                     u4281:
  8020     019E  29A0               	goto	l3523
  8021     019F                     u4280:
  8022     019F                     l3521:
  8023     019F  143E               	bsf	___fldiv@b,0
  8024     01A0                     l3523:
  8025     01A0  3001               	movlw	1
  8026     01A1  00C2               	movwf	??___fldiv
  8027     01A2                     u4295:
  8028     01A2  1003               	clrc
  8029     01A3  0DCE               	rlf	___fldiv@grs,f
  8030     01A4  0DCF               	rlf	___fldiv@grs+1,f
  8031     01A5  0DD0               	rlf	___fldiv@grs+2,f
  8032     01A6  0DD1               	rlf	___fldiv@grs+3,f
  8033     01A7  0BC2               	decfsz	??___fldiv,f
  8034     01A8  29A2               	goto	u4295
  8035     01A9                     l3525:
  8036     01A9  30FF               	movlw	255
  8037     01AA  07CC               	addwf	___fldiv@new_exp,f
  8038     01AB  1803               	skipnc
  8039     01AC  0ACD               	incf	___fldiv@new_exp+1,f
  8040     01AD  30FF               	movlw	255
  8041     01AE  07CD               	addwf	___fldiv@new_exp+1,f
  8042     01AF                     l3527:
  8043     01AF  1FC0               	btfss	___fldiv@b+2,7
  8044     01B0  29B2               	goto	u4301
  8045     01B1  29B3               	goto	u4300
  8046     01B2                     u4301:
  8047     01B2  2992               	goto	l3517
  8048     01B3                     u4300:
  8049     01B3                     l3529:
  8050     01B3  01D3               	clrf	___fldiv@aexp
  8051     01B4                     l3531:
  8052     01B4  1FD1               	btfss	___fldiv@grs+3,7
  8053     01B5  29B7               	goto	u4311
  8054     01B6  29B8               	goto	u4310
  8055     01B7                     u4311:
  8056     01B7  29D4               	goto	l3539
  8057     01B8                     u4310:
  8058     01B8                     l3533:
  8059     01B8  30FF               	movlw	255
  8060     01B9  054E               	andwf	___fldiv@grs,w
  8061     01BA  00C2               	movwf	??___fldiv
  8062     01BB  30FF               	movlw	255
  8063     01BC  054F               	andwf	___fldiv@grs+1,w
  8064     01BD  00C3               	movwf	??___fldiv+1
  8065     01BE  30FF               	movlw	255
  8066     01BF  0550               	andwf	___fldiv@grs+2,w
  8067     01C0  00C4               	movwf	??___fldiv+2
  8068     01C1  307F               	movlw	127
  8069     01C2  0551               	andwf	___fldiv@grs+3,w
  8070     01C3  00C5               	movwf	??___fldiv+3
  8071     01C4  0845               	movf	??___fldiv+3,w
  8072     01C5  0444               	iorwf	??___fldiv+2,w
  8073     01C6  0443               	iorwf	??___fldiv+1,w
  8074     01C7  0442               	iorwf	??___fldiv,w
  8075     01C8  1903               	skipnz
  8076     01C9  29CB               	goto	u4321
  8077     01CA  29CC               	goto	u4320
  8078     01CB                     u4321:
  8079     01CB  29CF               	goto	l1009
  8080     01CC                     u4320:
  8081     01CC                     l3535:
  8082     01CC  01D3               	clrf	___fldiv@aexp
  8083     01CD  0AD3               	incf	___fldiv@aexp,f
  8084     01CE  29D4               	goto	l3539
  8085     01CF                     l1009:
  8086     01CF  1C3E               	btfss	___fldiv@b,0
  8087     01D0  29D2               	goto	u4331
  8088     01D1  29D3               	goto	u4330
  8089     01D2                     u4331:
  8090     01D2  29D4               	goto	l3539
  8091     01D3                     u4330:
  8092     01D3  29CC               	goto	l3535
  8093     01D4                     l3539:
  8094     01D4  0853               	movf	___fldiv@aexp,w
  8095     01D5  1903               	btfsc	3,2
  8096     01D6  29D8               	goto	u4341
  8097     01D7  29D9               	goto	u4340
  8098     01D8                     u4341:
  8099     01D8  2A0A               	goto	l3549
  8100     01D9                     u4340:
  8101     01D9                     l3541:
  8102     01D9  3001               	movlw	1
  8103     01DA  07BE               	addwf	___fldiv@b,f
  8104     01DB  3000               	movlw	0
  8105     01DC  1803               	skipnc
  8106     01DD  3001               	movlw	1
  8107     01DE  07BF               	addwf	___fldiv@b+1,f
  8108     01DF  3000               	movlw	0
  8109     01E0  1803               	skipnc
  8110     01E1  3001               	movlw	1
  8111     01E2  07C0               	addwf	___fldiv@b+2,f
  8112     01E3  3000               	movlw	0
  8113     01E4  1803               	skipnc
  8114     01E5  3001               	movlw	1
  8115     01E6  07C1               	addwf	___fldiv@b+3,f
  8116     01E7                     l3543:
  8117     01E7  1C41               	btfss	___fldiv@b+3,0
  8118     01E8  29EA               	goto	u4351
  8119     01E9  29EB               	goto	u4350
  8120     01EA                     u4351:
  8121     01EA  2A0A               	goto	l3549
  8122     01EB                     u4350:
  8123     01EB                     l3545:
  8124     01EB  083E               	movf	___fldiv@b,w
  8125     01EC  00C2               	movwf	??___fldiv
  8126     01ED  083F               	movf	___fldiv@b+1,w
  8127     01EE  00C3               	movwf	??___fldiv+1
  8128     01EF  0840               	movf	___fldiv@b+2,w
  8129     01F0  00C4               	movwf	??___fldiv+2
  8130     01F1  0841               	movf	___fldiv@b+3,w
  8131     01F2  00C5               	movwf	??___fldiv+3
  8132     01F3  3001               	movlw	1
  8133     01F4  00C6               	movwf	??___fldiv+4
  8134     01F5                     u4365:
  8135     01F5  0D45               	rlf	??___fldiv+3,w
  8136     01F6  0CC5               	rrf	??___fldiv+3,f
  8137     01F7  0CC4               	rrf	??___fldiv+2,f
  8138     01F8  0CC3               	rrf	??___fldiv+1,f
  8139     01F9  0CC2               	rrf	??___fldiv,f
  8140     01FA                     u4360:
  8141     01FA  0BC6               	decfsz	??___fldiv+4,f
  8142     01FB  29F5               	goto	u4365
  8143     01FC  0845               	movf	??___fldiv+3,w
  8144     01FD  00C1               	movwf	___fldiv@b+3
  8145     01FE  0844               	movf	??___fldiv+2,w
  8146     01FF  00C0               	movwf	___fldiv@b+2
  8147     0200  0843               	movf	??___fldiv+1,w
  8148     0201  00BF               	movwf	___fldiv@b+1
  8149     0202  0842               	movf	??___fldiv,w
  8150     0203  00BE               	movwf	___fldiv@b
  8151     0204                     l3547:
  8152     0204  3001               	movlw	1
  8153     0205  07CC               	addwf	___fldiv@new_exp,f
  8154     0206  1803               	skipnc
  8155     0207  0ACD               	incf	___fldiv@new_exp+1,f
  8156     0208  3000               	movlw	0
  8157     0209  07CD               	addwf	___fldiv@new_exp+1,f
  8158     020A                     l3549:
  8159     020A  084D               	movf	___fldiv@new_exp+1,w
  8160     020B  3A80               	xorlw	128
  8161     020C  00FF               	movwf	btemp+1
  8162     020D  3080               	movlw	128
  8163     020E  027F               	subwf	btemp+1,w
  8164     020F  1D03               	skipz
  8165     0210  2A13               	goto	u4375
  8166     0211  30FF               	movlw	255
  8167     0212  024C               	subwf	___fldiv@new_exp,w
  8168     0213                     u4375:
  8169     0213  1C03               	skipc
  8170     0214  2A16               	goto	u4371
  8171     0215  2A17               	goto	u4370
  8172     0216                     u4371:
  8173     0216  2A25               	goto	l3553
  8174     0217                     u4370:
  8175     0217                     l3551:
  8176     0217  30FF               	movlw	255
  8177     0218  1283               	bcf	3,5	;RP0=0, select bank0
  8178     0219  1303               	bcf	3,6	;RP1=0, select bank0
  8179     021A  00CC               	movwf	___fldiv@new_exp
  8180     021B  3000               	movlw	0
  8181     021C  00CD               	movwf	___fldiv@new_exp+1
  8182     021D  3000               	movlw	0
  8183     021E  00C1               	movwf	___fldiv@b+3
  8184     021F  3000               	movlw	0
  8185     0220  00C0               	movwf	___fldiv@b+2
  8186     0221  3000               	movlw	0
  8187     0222  00BF               	movwf	___fldiv@b+1
  8188     0223  3000               	movlw	0
  8189     0224  00BE               	movwf	___fldiv@b
  8190     0225                     l3553:
  8191     0225  1283               	bcf	3,5	;RP0=0, select bank0
  8192     0226  1303               	bcf	3,6	;RP1=0, select bank0
  8193     0227  084D               	movf	___fldiv@new_exp+1,w
  8194     0228  3A80               	xorlw	128
  8195     0229  00FF               	movwf	btemp+1
  8196     022A  3080               	movlw	128
  8197     022B  027F               	subwf	btemp+1,w
  8198     022C  1D03               	skipz
  8199     022D  2A30               	goto	u4385
  8200     022E  3001               	movlw	1
  8201     022F  024C               	subwf	___fldiv@new_exp,w
  8202     0230                     u4385:
  8203     0230  1803               	skipnc
  8204     0231  2A33               	goto	u4381
  8205     0232  2A34               	goto	u4380
  8206     0233                     u4381:
  8207     0233  2A41               	goto	l1015
  8208     0234                     u4380:
  8209     0234                     l3555:
  8210     0234  1283               	bcf	3,5	;RP0=0, select bank0
  8211     0235  1303               	bcf	3,6	;RP1=0, select bank0
  8212     0236  01CC               	clrf	___fldiv@new_exp
  8213     0237  01CD               	clrf	___fldiv@new_exp+1
  8214     0238                     l3557:
  8215     0238  3000               	movlw	0
  8216     0239  00C1               	movwf	___fldiv@b+3
  8217     023A  3000               	movlw	0
  8218     023B  00C0               	movwf	___fldiv@b+2
  8219     023C  3000               	movlw	0
  8220     023D  00BF               	movwf	___fldiv@b+1
  8221     023E  3000               	movlw	0
  8222     023F  00BE               	movwf	___fldiv@b
  8223     0240                     l3559:
  8224     0240  01CB               	clrf	___fldiv@sign
  8225     0241                     l1015:
  8226     0241  1283               	bcf	3,5	;RP0=0, select bank0
  8227     0242  1303               	bcf	3,6	;RP1=0, select bank0
  8228     0243  084C               	movf	___fldiv@new_exp,w
  8229     0244  00D2               	movwf	___fldiv@bexp
  8230     0245                     l3561:
  8231     0245  1C52               	btfss	___fldiv@bexp,0
  8232     0246  2A48               	goto	u4391
  8233     0247  2A49               	goto	u4390
  8234     0248                     u4391:
  8235     0248  2A4B               	goto	l3565
  8236     0249                     u4390:
  8237     0249                     l3563:
  8238     0249  17C0               	bsf	___fldiv@b+2,7
  8239     024A  2A4F               	goto	l3567
  8240     024B                     l3565:
  8241     024B  307F               	movlw	127
  8242     024C  00FF               	movwf	btemp+1
  8243     024D  087F               	movf	btemp+1,w
  8244     024E  05C0               	andwf	___fldiv@b+2,f
  8245     024F                     l3567:
  8246     024F  0852               	movf	___fldiv@bexp,w
  8247     0250  00C2               	movwf	??___fldiv
  8248     0251  1003               	clrc
  8249     0252  0C42               	rrf	??___fldiv,w
  8250     0253  00C1               	movwf	___fldiv@b+3
  8251     0254  28F1               	goto	l3471
  8252     0255                     l995:
  8253     0255  0008               	return
  8254     0256                     __end_of___fldiv:
  8255                           
  8256                           	psect	text30
  8257     158C                     __ptext30:	
  8258 ;; *************** function _WRITE_DATA_EEPROM *****************
  8259 ;; Defined at:
  8260 ;;		line 10 in file "MCAL_LAYER/EEPROM/eeprom.c"
  8261 ;; Parameters:    Size  Location     Type
  8262 ;;  add             2    0[COMMON] unsigned short 
  8263 ;;  data            1    2[COMMON] unsigned char 
  8264 ;; Auto vars:     Size  Location     Type
  8265 ;;  status          1    3[COMMON] unsigned char 
  8266 ;; Return value:  Size  Location     Type
  8267 ;;                  1    wreg      unsigned char 
  8268 ;; Registers used:
  8269 ;;		wreg, status,2, status,0
  8270 ;; Tracked objects:
  8271 ;;		On entry : 0/0
  8272 ;;		On exit  : 0/0
  8273 ;;		Unchanged: 0/0
  8274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8275 ;;      Params:         3       0       0       0       0
  8276 ;;      Locals:         1       0       0       0       0
  8277 ;;      Temps:          0       0       0       0       0
  8278 ;;      Totals:         4       0       0       0       0
  8279 ;;Total ram usage:        4 bytes
  8280 ;; Hardware stack levels used: 1
  8281 ;; This function calls:
  8282 ;;		Nothing
  8283 ;; This function is called by:
  8284 ;;		_main
  8285 ;; This function uses a non-reentrant model
  8286 ;;
  8287                           
  8288     158C                     _WRITE_DATA_EEPROM:	
  8289                           ;psect for function _WRITE_DATA_EEPROM
  8290                           
  8291     158C                     l3355:	
  8292                           ;incstack = 0
  8293                           ; Regs used in _WRITE_DATA_EEPROM: [wreg+status,2+status,0]
  8294                           
  8295                           
  8296                           ;MCAL_LAYER/EEPROM/eeprom.c: 11:     uint8 status = INTCONbits.GIE;
  8297     158C  3000               	movlw	0
  8298     158D  1B8B               	btfsc	11,7	;volatile
  8299     158E  3001               	movlw	1
  8300     158F  00F3               	movwf	WRITE_DATA_EEPROM@status
  8301     1590                     l3357:
  8302                           
  8303                           ;MCAL_LAYER/EEPROM/eeprom.c: 12:     (EECON1bits.EEPGD = 0);
  8304     1590  1683               	bsf	3,5	;RP0=1, select bank3
  8305     1591  1703               	bsf	3,6	;RP1=1, select bank3
  8306     1592  138C               	bcf	12,7	;volsfr
  8307     1593                     l3359:
  8308                           
  8309                           ;MCAL_LAYER/EEPROM/eeprom.c: 13:     EEADR = (add & 0xFF);
  8310     1593  0870               	movf	WRITE_DATA_EEPROM@add,w
  8311     1594  1283               	bcf	3,5	;RP0=0, select bank2
  8312     1595  1703               	bsf	3,6	;RP1=1, select bank2
  8313     1596  008D               	movwf	13	;volatile
  8314     1597                     l3361:
  8315                           
  8316                           ;MCAL_LAYER/EEPROM/eeprom.c: 14:     EEDATA = data;
  8317     1597  0872               	movf	WRITE_DATA_EEPROM@data,w
  8318     1598  008C               	movwf	12	;volatile
  8319     1599                     l3363:
  8320                           
  8321                           ;MCAL_LAYER/EEPROM/eeprom.c: 15:     (EECON1bits.WREN = 1);
  8322     1599  1683               	bsf	3,5	;RP0=1, select bank3
  8323     159A  1703               	bsf	3,6	;RP1=1, select bank3
  8324     159B  150C               	bsf	12,2	;volsfr
  8325     159C                     l3365:
  8326                           
  8327                           ;MCAL_LAYER/EEPROM/eeprom.c: 16:     (INTCONbits.GIE = 0);
  8328     159C  138B               	bcf	11,7	;volatile
  8329     159D                     l3367:
  8330                           
  8331                           ;MCAL_LAYER/EEPROM/eeprom.c: 18:     EECON2 = 0x55;
  8332     159D  3055               	movlw	85
  8333     159E  008D               	movwf	13	;volsfr
  8334     159F                     l3369:
  8335                           
  8336                           ;MCAL_LAYER/EEPROM/eeprom.c: 19:     EECON2 = 0xAA;
  8337     159F  30AA               	movlw	170
  8338     15A0  008D               	movwf	13	;volsfr
  8339     15A1                     l3371:
  8340                           
  8341                           ;MCAL_LAYER/EEPROM/eeprom.c: 21:     (EECON1bits.WR = 1);
  8342     15A1  148C               	bsf	12,1	;volsfr
  8343     15A2                     l251:	
  8344                           ;MCAL_LAYER/EEPROM/eeprom.c: 22:     while(EECON1bits.WR);
  8345                           
  8346     15A2  188C               	btfsc	12,1	;volsfr
  8347     15A3  2DA5               	goto	u4001
  8348     15A4  2DA6               	goto	u4000
  8349     15A5                     u4001:
  8350     15A5  2DA2               	goto	l251
  8351     15A6                     u4000:
  8352     15A6                     l253:
  8353                           
  8354                           ;MCAL_LAYER/EEPROM/eeprom.c: 23:     (EECON1bits.WREN = 0);
  8355     15A6  110C               	bcf	12,2	;volsfr
  8356     15A7                     l3373:
  8357                           
  8358                           ;MCAL_LAYER/EEPROM/eeprom.c: 24:     INTCONbits.GIE = status;
  8359     15A7  0C73               	rrf	WRITE_DATA_EEPROM@status,w
  8360     15A8  1C03               	skipc
  8361     15A9  138B               	bcf	11,7	;volatile
  8362     15AA  1803               	skipnc
  8363     15AB  178B               	bsf	11,7	;volatile
  8364     15AC                     l254:
  8365     15AC  0008               	return
  8366     15AD                     __end_of_WRITE_DATA_EEPROM:
  8367                           
  8368                           	psect	text31
  8369     1473                     __ptext31:	
  8370 ;; *************** function _READ_DATA_EEPROM *****************
  8371 ;; Defined at:
  8372 ;;		line 26 in file "MCAL_LAYER/EEPROM/eeprom.c"
  8373 ;; Parameters:    Size  Location     Type
  8374 ;;  add             2    0[COMMON] unsigned short 
  8375 ;;  data            1    2[COMMON] PTR unsigned char 
  8376 ;;		 -> Max_Temp(2), 
  8377 ;; Auto vars:     Size  Location     Type
  8378 ;;		None
  8379 ;; Return value:  Size  Location     Type
  8380 ;;                  1    wreg      unsigned char 
  8381 ;; Registers used:
  8382 ;;		wreg, fsr0l, fsr0h
  8383 ;; Tracked objects:
  8384 ;;		On entry : 0/0
  8385 ;;		On exit  : 0/0
  8386 ;;		Unchanged: 0/0
  8387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8388 ;;      Params:         3       0       0       0       0
  8389 ;;      Locals:         0       0       0       0       0
  8390 ;;      Temps:          0       0       0       0       0
  8391 ;;      Totals:         3       0       0       0       0
  8392 ;;Total ram usage:        3 bytes
  8393 ;; Hardware stack levels used: 1
  8394 ;; This function calls:
  8395 ;;		Nothing
  8396 ;; This function is called by:
  8397 ;;		_main
  8398 ;; This function uses a non-reentrant model
  8399 ;;
  8400                           
  8401     1473                     _READ_DATA_EEPROM:	
  8402                           ;psect for function _READ_DATA_EEPROM
  8403                           
  8404     1473                     l3375:	
  8405                           ;incstack = 0
  8406                           ; Regs used in _READ_DATA_EEPROM: [wregfsr0]
  8407                           
  8408                           
  8409                           ;MCAL_LAYER/EEPROM/eeprom.c: 27:     EEADR = (add & 0xFF);
  8410     1473  0870               	movf	READ_DATA_EEPROM@add,w
  8411     1474  1283               	bcf	3,5	;RP0=0, select bank2
  8412     1475  1703               	bsf	3,6	;RP1=1, select bank2
  8413     1476  008D               	movwf	13	;volatile
  8414     1477                     l3377:
  8415                           
  8416                           ;MCAL_LAYER/EEPROM/eeprom.c: 28:     (EECON1bits.EEPGD = 0);
  8417     1477  1683               	bsf	3,5	;RP0=1, select bank3
  8418     1478  1703               	bsf	3,6	;RP1=1, select bank3
  8419     1479  138C               	bcf	12,7	;volsfr
  8420     147A                     l3379:
  8421                           
  8422                           ;MCAL_LAYER/EEPROM/eeprom.c: 29:     (EECON1bits.RD = 1);
  8423     147A  140C               	bsf	12,0	;volsfr
  8424     147B                     l3381:
  8425                           
  8426                           ;MCAL_LAYER/EEPROM/eeprom.c: 30:     __nop();
  8427     147B  0000               	nop
  8428     147C                     l3383:
  8429                           
  8430                           ;MCAL_LAYER/EEPROM/eeprom.c: 31:     __nop();
  8431     147C  0000               	nop
  8432     147D                     l3385:
  8433                           
  8434                           ;MCAL_LAYER/EEPROM/eeprom.c: 32:     *data = EEDATA;
  8435     147D  0872               	movf	READ_DATA_EEPROM@data,w
  8436     147E  0084               	movwf	4
  8437     147F  1283               	bcf	3,5	;RP0=0, select bank2
  8438     1480  1703               	bsf	3,6	;RP1=1, select bank2
  8439     1481  080C               	movf	12,w	;volatile
  8440     1482  1383               	bcf	3,7	;select IRP bank0
  8441     1483  0080               	movwf	0
  8442     1484                     l257:
  8443     1484  0008               	return
  8444     1485                     __end_of_READ_DATA_EEPROM:
  8445                           
  8446                           	psect	text32
  8447     0889                     __ptext32:	
  8448 ;; *************** function _Convert_uint16_to_string *****************
  8449 ;; Defined at:
  8450 ;;		line 116 in file "ECU_LAYER/LCD/ecu_lcd.c"
  8451 ;; Parameters:    Size  Location     Type
  8452 ;;  data            2   29[BANK0 ] unsigned short 
  8453 ;;  str             1   31[BANK0 ] PTR unsigned char 
  8454 ;;		 -> lcd_show_max(6), lcd_show(6), 
  8455 ;; Auto vars:     Size  Location     Type
  8456 ;;  temp            6   33[BANK0 ] unsigned char [6]
  8457 ;;  counter         1   39[BANK0 ] unsigned char 
  8458 ;; Return value:  Size  Location     Type
  8459 ;;                  1    wreg      void 
  8460 ;; Registers used:
  8461 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8462 ;; Tracked objects:
  8463 ;;		On entry : 0/0
  8464 ;;		On exit  : 0/0
  8465 ;;		Unchanged: 0/0
  8466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8467 ;;      Params:         0       3       0       0       0
  8468 ;;      Locals:         0       7       0       0       0
  8469 ;;      Temps:          0       1       0       0       0
  8470 ;;      Totals:         0      11       0       0       0
  8471 ;;Total ram usage:       11 bytes
  8472 ;; Hardware stack levels used: 1
  8473 ;; Hardware stack levels required when called: 5
  8474 ;; This function calls:
  8475 ;;		_memset
  8476 ;;		_sprintf
  8477 ;; This function is called by:
  8478 ;;		_main
  8479 ;; This function uses a non-reentrant model
  8480 ;;
  8481                           
  8482     0889                     _Convert_uint16_to_string:	
  8483                           ;psect for function _Convert_uint16_to_string
  8484                           
  8485     0889                     l3295:	
  8486                           ;incstack = 0
  8487                           ; Regs used in _Convert_uint16_to_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
  8488                           
  8489                           
  8490                           ;ECU_LAYER/LCD/ecu_lcd.c: 117:     uint8 temp[6] = {0};
  8491     0889  3041               	movlw	Convert_uint16_to_string@temp& (0+255)
  8492     088A  0084               	movwf	4
  8493     088B  3006               	movlw	6
  8494     088C  00FF               	movwf	btemp+1
  8495     088D                     u3940:
  8496     088D  1383               	bcf	3,7	;select IRP bank0
  8497     088E  0180               	clrf	0
  8498     088F  0A84               	incf	4,f
  8499     0890  0BFF               	decfsz	btemp+1,f
  8500     0891  288D               	goto	u3940
  8501     0892                     l3297:
  8502                           
  8503                           ;ECU_LAYER/LCD/ecu_lcd.c: 118:     uint8 counter = 0;
  8504     0892  1283               	bcf	3,5	;RP0=0, select bank0
  8505     0893  1303               	bcf	3,6	;RP1=0, select bank0
  8506     0894  01C7               	clrf	Convert_uint16_to_string@counter
  8507     0895                     l3299:
  8508                           
  8509                           ;ECU_LAYER/LCD/ecu_lcd.c: 119:     memset(str,' ',5);
  8510     0895  3020               	movlw	32
  8511     0896  00F0               	movwf	memset@c
  8512     0897  3000               	movlw	0
  8513     0898  00F1               	movwf	memset@c+1
  8514     0899  3005               	movlw	5
  8515     089A  00F2               	movwf	memset@n
  8516     089B  3000               	movlw	0
  8517     089C  00F3               	movwf	memset@n+1
  8518     089D  083F               	movf	Convert_uint16_to_string@str,w
  8519     089E  160A  118A  2511  120A  158A  	fcall	_memset
  8520     08A3                     l3301:
  8521                           
  8522                           ;ECU_LAYER/LCD/ecu_lcd.c: 120:     str[5] = '\0';
  8523     08A3  1283               	bcf	3,5	;RP0=0, select bank0
  8524     08A4  1303               	bcf	3,6	;RP1=0, select bank0
  8525     08A5  083F               	movf	Convert_uint16_to_string@str,w
  8526     08A6  3E05               	addlw	5
  8527     08A7  0084               	movwf	4
  8528     08A8  1383               	bcf	3,7	;select IRP bank0
  8529     08A9  0180               	clrf	0
  8530     08AA                     l3303:
  8531                           
  8532                           ;ECU_LAYER/LCD/ecu_lcd.c: 121:     sprintf((char *)temp,"%i",data);
  8533     08AA  304B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  8534     08AB  00AC               	movwf	sprintf@fmt
  8535     08AC  083E               	movf	Convert_uint16_to_string@data+1,w
  8536     08AD  00AE               	movwf	?_sprintf+2
  8537     08AE  083D               	movf	Convert_uint16_to_string@data,w
  8538     08AF  00AD               	movwf	?_sprintf+1
  8539     08B0  3041               	movlw	(low (Convert_uint16_to_string@temp| 0))& (0+255)
  8540     08B1  160A  118A  252D  120A  158A  	fcall	_sprintf
  8541                           
  8542                           ;ECU_LAYER/LCD/ecu_lcd.c: 122:     while(temp[counter] != '\0'){
  8543     08B6  28C7               	goto	l3309
  8544     08B7                     l3305:
  8545                           
  8546                           ;ECU_LAYER/LCD/ecu_lcd.c: 123:         str[counter] = temp[counter];
  8547     08B7  0847               	movf	Convert_uint16_to_string@counter,w
  8548     08B8  3E41               	addlw	(low (Convert_uint16_to_string@temp| 0))& (0+255)
  8549     08B9  0084               	movwf	4
  8550     08BA  0800               	movf	0,w
  8551     08BB  00FF               	movwf	btemp+1
  8552     08BC  0847               	movf	Convert_uint16_to_string@counter,w
  8553     08BD  073F               	addwf	Convert_uint16_to_string@str,w
  8554     08BE  00C0               	movwf	??_Convert_uint16_to_string
  8555     08BF  0840               	movf	??_Convert_uint16_to_string,w
  8556     08C0  0084               	movwf	4
  8557     08C1  087F               	movf	btemp+1,w
  8558     08C2  0080               	movwf	0
  8559     08C3                     l3307:
  8560                           
  8561                           ;ECU_LAYER/LCD/ecu_lcd.c: 124:         counter++;
  8562     08C3  3001               	movlw	1
  8563     08C4  00FF               	movwf	btemp+1
  8564     08C5  087F               	movf	btemp+1,w
  8565     08C6  07C7               	addwf	Convert_uint16_to_string@counter,f
  8566     08C7                     l3309:
  8567                           
  8568                           ;ECU_LAYER/LCD/ecu_lcd.c: 122:     while(temp[counter] != '\0'){
  8569     08C7  1283               	bcf	3,5	;RP0=0, select bank0
  8570     08C8  1303               	bcf	3,6	;RP1=0, select bank0
  8571     08C9  0847               	movf	Convert_uint16_to_string@counter,w
  8572     08CA  3E41               	addlw	(low (Convert_uint16_to_string@temp| 0))& (0+255)
  8573     08CB  0084               	movwf	4
  8574     08CC  1383               	bcf	3,7	;select IRP bank0
  8575     08CD  0800               	movf	0,w
  8576     08CE  1D03               	btfss	3,2
  8577     08CF  28D1               	goto	u3951
  8578     08D0  28D2               	goto	u3950
  8579     08D1                     u3951:
  8580     08D1  28B7               	goto	l3305
  8581     08D2                     u3950:
  8582     08D2                     l101:
  8583     08D2  0008               	return
  8584     08D3                     __end_of_Convert_uint16_to_string:
  8585                           
  8586                           	psect	text33
  8587     152D                     __ptext33:	
  8588 ;; *************** function _sprintf *****************
  8589 ;; Defined at:
  8590 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  8591 ;; Parameters:    Size  Location     Type
  8592 ;;  s               1    wreg     PTR unsigned char 
  8593 ;;		 -> Convert_uint32_to_string@temp(11), Convert_uint16_to_string@temp(6), Convert_uint8_to_string@temp(4), 
  8594 ;;  fmt             1   12[BANK0 ] PTR const unsigned char 
  8595 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  8596 ;; Auto vars:     Size  Location     Type
  8597 ;;  s               1   17[BANK0 ] PTR unsigned char 
  8598 ;;		 -> Convert_uint32_to_string@temp(11), Convert_uint16_to_string@temp(6), Convert_uint8_to_string@temp(4), 
  8599 ;;  f              11   18[BANK0 ] struct _IO_FILE
  8600 ;;  ret             2    0        int 
  8601 ;;  ap              1   16[BANK0 ] PTR void [1]
  8602 ;;		 -> ?_sprintf(2), 
  8603 ;; Return value:  Size  Location     Type
  8604 ;;                  2   12[BANK0 ] int 
  8605 ;; Registers used:
  8606 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8607 ;; Tracked objects:
  8608 ;;		On entry : 0/0
  8609 ;;		On exit  : 0/0
  8610 ;;		Unchanged: 0/0
  8611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8612 ;;      Params:         0       3       0       0       0
  8613 ;;      Locals:         0      13       0       0       0
  8614 ;;      Temps:          0       1       0       0       0
  8615 ;;      Totals:         0      17       0       0       0
  8616 ;;Total ram usage:       17 bytes
  8617 ;; Hardware stack levels used: 1
  8618 ;; Hardware stack levels required when called: 4
  8619 ;; This function calls:
  8620 ;;		_vfprintf
  8621 ;; This function is called by:
  8622 ;;		_Convert_uint16_to_string
  8623 ;;		_Convert_uint8_to_string
  8624 ;;		_Convert_uint32_to_string
  8625 ;; This function uses a non-reentrant model
  8626 ;;
  8627                           
  8628     152D                     _sprintf:	
  8629                           ;psect for function _sprintf
  8630                           
  8631                           
  8632                           ;incstack = 0
  8633                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8634                           ;sprintf@s stored from wreg
  8635     152D  1283               	bcf	3,5	;RP0=0, select bank0
  8636     152E  1303               	bcf	3,6	;RP1=0, select bank0
  8637     152F  00B1               	movwf	sprintf@s
  8638     1530                     l3155:
  8639     1530  302D               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  8640     1531  00B0               	movwf	sprintf@ap
  8641     1532  0831               	movf	sprintf@s,w
  8642     1533  00B2               	movwf	sprintf@f
  8643     1534                     l3157:
  8644     1534  01B4               	clrf	sprintf@f+2
  8645     1535  01B5               	clrf	sprintf@f+3
  8646     1536                     l3159:
  8647     1536  01BB               	clrf	sprintf@f+9
  8648     1537  01BC               	clrf	sprintf@f+10
  8649     1538                     l3161:
  8650     1538  082C               	movf	sprintf@fmt,w
  8651     1539  00A8               	movwf	vfprintf@fmt
  8652     153A  3030               	movlw	(low (sprintf@ap| 0))& (0+255)
  8653     153B  00A9               	movwf	vfprintf@ap
  8654     153C  3032               	movlw	(low (sprintf@f| 0))& (0+255)
  8655     153D  160A  118A  256B  160A  118A  	fcall	_vfprintf
  8656     1542                     l3163:
  8657     1542  1283               	bcf	3,5	;RP0=0, select bank0
  8658     1543  1303               	bcf	3,6	;RP1=0, select bank0
  8659     1544  0834               	movf	sprintf@f+2,w
  8660     1545  0731               	addwf	sprintf@s,w
  8661     1546  00AF               	movwf	??_sprintf
  8662     1547  082F               	movf	??_sprintf,w
  8663     1548  0084               	movwf	4
  8664     1549  1383               	bcf	3,7	;select IRP bank0
  8665     154A  0180               	clrf	0
  8666     154B                     l1105:
  8667     154B  0008               	return
  8668     154C                     __end_of_sprintf:
  8669                           
  8670                           	psect	text34
  8671     156B                     __ptext34:	
  8672 ;; *************** function _vfprintf *****************
  8673 ;; Defined at:
  8674 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  8675 ;; Parameters:    Size  Location     Type
  8676 ;;  fp              1    wreg     PTR struct _IO_FILE
  8677 ;;		 -> sprintf@f(11), 
  8678 ;;  fmt             1    8[BANK0 ] PTR const unsigned char 
  8679 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  8680 ;;  ap              1    9[BANK0 ] PTR PTR void 
  8681 ;;		 -> sprintf@ap(1), 
  8682 ;; Auto vars:     Size  Location     Type
  8683 ;;  fp              1   10[BANK0 ] PTR struct _IO_FILE
  8684 ;;		 -> sprintf@f(11), 
  8685 ;;  cfmt            1   11[BANK0 ] PTR unsigned char 
  8686 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  8687 ;; Return value:  Size  Location     Type
  8688 ;;                  2    8[BANK0 ] int 
  8689 ;; Registers used:
  8690 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8691 ;; Tracked objects:
  8692 ;;		On entry : 0/0
  8693 ;;		On exit  : 0/0
  8694 ;;		Unchanged: 0/0
  8695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8696 ;;      Params:         0       2       0       0       0
  8697 ;;      Locals:         0       2       0       0       0
  8698 ;;      Temps:          0       0       0       0       0
  8699 ;;      Totals:         0       4       0       0       0
  8700 ;;Total ram usage:        4 bytes
  8701 ;; Hardware stack levels used: 1
  8702 ;; Hardware stack levels required when called: 3
  8703 ;; This function calls:
  8704 ;;		_vfpfcnvrt
  8705 ;; This function is called by:
  8706 ;;		_sprintf
  8707 ;; This function uses a non-reentrant model
  8708 ;;
  8709                           
  8710     156B                     _vfprintf:	
  8711                           ;psect for function _vfprintf
  8712                           
  8713                           
  8714                           ;incstack = 0
  8715                           ; Regs used in _vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8716                           ;vfprintf@fp stored from wreg
  8717     156B  1283               	bcf	3,5	;RP0=0, select bank0
  8718     156C  1303               	bcf	3,6	;RP1=0, select bank0
  8719     156D  00AA               	movwf	vfprintf@fp
  8720     156E                     l3071:
  8721                           
  8722                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  8723     156E  0828               	movf	vfprintf@fmt,w
  8724     156F  00AB               	movwf	vfprintf@cfmt
  8725                           
  8726                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  8727     1570  2D7B               	goto	l3075
  8728     1571                     l3073:
  8729                           
  8730                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  8731     1571  302B               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  8732     1572  00FA               	movwf	vfpfcnvrt@fmt
  8733     1573  0829               	movf	vfprintf@ap,w
  8734     1574  00FB               	movwf	vfpfcnvrt@ap
  8735     1575  082A               	movf	vfprintf@fp,w
  8736     1576  120A  158A  2711  160A  118A  	fcall	_vfpfcnvrt
  8737     157B                     l3075:
  8738                           
  8739                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  8740     157B  1283               	bcf	3,5	;RP0=0, select bank0
  8741     157C  1303               	bcf	3,6	;RP1=0, select bank0
  8742     157D  082B               	movf	vfprintf@cfmt,w
  8743     157E  0084               	movwf	4
  8744     157F  120A  158A  200A  160A  118A  	fcall	stringdir
  8745     1584  3A00               	xorlw	0
  8746     1585  1D03               	skipz
  8747     1586  2D88               	goto	u3581
  8748     1587  2D89               	goto	u3580
  8749     1588                     u3581:
  8750     1588  2D71               	goto	l3073
  8751     1589                     u3580:
  8752     1589                     l3077:
  8753                           
  8754                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  8755     1589  01A8               	clrf	?_vfprintf
  8756     158A  01A9               	clrf	?_vfprintf+1
  8757     158B                     l1149:
  8758     158B  0008               	return
  8759     158C                     __end_of_vfprintf:
  8760                           
  8761                           	psect	text35
  8762     0F11                     __ptext35:	
  8763 ;; *************** function _vfpfcnvrt *****************
  8764 ;; Defined at:
  8765 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  8766 ;; Parameters:    Size  Location     Type
  8767 ;;  fp              1    wreg     PTR struct _IO_FILE
  8768 ;;		 -> sprintf@f(11), 
  8769 ;;  fmt             1   10[COMMON] PTR PTR unsigned char 
  8770 ;;		 -> vfprintf@cfmt(1), 
  8771 ;;  ap              1   11[COMMON] PTR PTR void 
  8772 ;;		 -> sprintf@ap(1), 
  8773 ;; Auto vars:     Size  Location     Type
  8774 ;;  fp              1    1[BANK0 ] PTR struct _IO_FILE
  8775 ;;		 -> sprintf@f(11), 
  8776 ;;  convarg         4    3[BANK0 ] struct .
  8777 ;;  c               1    7[BANK0 ] unsigned char 
  8778 ;;  cp              1    2[BANK0 ] PTR unsigned char 
  8779 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  8780 ;;  done            1    0[BANK0 ] _Bool 
  8781 ;; Return value:  Size  Location     Type
  8782 ;;                  1    wreg      void 
  8783 ;; Registers used:
  8784 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8785 ;; Tracked objects:
  8786 ;;		On entry : 0/0
  8787 ;;		On exit  : 0/0
  8788 ;;		Unchanged: 0/0
  8789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8790 ;;      Params:         2       0       0       0       0
  8791 ;;      Locals:         0       8       0       0       0
  8792 ;;      Temps:          2       0       0       0       0
  8793 ;;      Totals:         4       8       0       0       0
  8794 ;;Total ram usage:       12 bytes
  8795 ;; Hardware stack levels used: 1
  8796 ;; Hardware stack levels required when called: 2
  8797 ;; This function calls:
  8798 ;;		___awdiv
  8799 ;;		___awmod
  8800 ;;		_abs
  8801 ;;		_fputc
  8802 ;; This function is called by:
  8803 ;;		_vfprintf
  8804 ;; This function uses a non-reentrant model
  8805 ;;
  8806                           
  8807     0F11                     _vfpfcnvrt:	
  8808                           ;psect for function _vfpfcnvrt
  8809                           
  8810                           
  8811                           ;incstack = 0
  8812                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8813                           ;vfpfcnvrt@fp stored from wreg
  8814     0F11  1283               	bcf	3,5	;RP0=0, select bank0
  8815     0F12  1303               	bcf	3,6	;RP1=0, select bank0
  8816     0F13  00A1               	movwf	vfpfcnvrt@fp
  8817     0F14                     l2903:
  8818                           
  8819                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  8820     0F14  087A               	movf	vfpfcnvrt@fmt,w
  8821     0F15  0084               	movwf	4
  8822     0F16  1383               	bcf	3,7	;select IRP bank0
  8823     0F17  0800               	movf	0,w
  8824     0F18  0084               	movwf	4
  8825     0F19  120A  158A  200A  120A  158A  	fcall	stringdir
  8826     0F1E  3A25               	xorlw	37
  8827     0F1F  1D03               	skipz
  8828     0F20  2F22               	goto	u3391
  8829     0F21  2F23               	goto	u3390
  8830     0F22                     u3391:
  8831     0F22  2FE8               	goto	l2949
  8832     0F23                     u3390:
  8833     0F23                     l2905:
  8834                           
  8835                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  8836     0F23  3001               	movlw	1
  8837     0F24  00FF               	movwf	btemp+1
  8838     0F25  087A               	movf	vfpfcnvrt@fmt,w
  8839     0F26  0084               	movwf	4
  8840     0F27  087F               	movf	btemp+1,w
  8841     0F28  0780               	addwf	0,f
  8842     0F29                     l2907:
  8843                           
  8844                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  8845     0F29  1683               	bsf	3,5	;RP0=1, select bank1
  8846     0F2A  1303               	bcf	3,6	;RP1=0, select bank1
  8847     0F2B  01D4               	clrf	_width^(0+128)
  8848     0F2C  01D5               	clrf	(_width+1)^(0+128)
  8849     0F2D  1003               	clrc
  8850     0F2E  3000               	movlw	0
  8851     0F2F  1803               	btfsc	3,0
  8852     0F30  3001               	movlw	1
  8853     0F31  00D8               	movwf	_flags^(0+128)
  8854     0F32                     l2909:
  8855                           
  8856                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  8857     0F32  30FF               	movlw	255
  8858     0F33  00D6               	movwf	_prec^(0+128)
  8859     0F34  30FF               	movlw	255
  8860     0F35  00D7               	movwf	(_prec^(0+128)+1)
  8861     0F36                     l2911:
  8862                           
  8863                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  8864     0F36  087A               	movf	vfpfcnvrt@fmt,w
  8865     0F37  0084               	movwf	4
  8866     0F38  0800               	movf	0,w
  8867     0F39  1283               	bcf	3,5	;RP0=0, select bank0
  8868     0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  8869     0F3B  00A2               	movwf	vfpfcnvrt@cp
  8870     0F3C                     l2913:
  8871                           
  8872                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  8873     0F3C  0822               	movf	vfpfcnvrt@cp,w
  8874     0F3D  0084               	movwf	4
  8875     0F3E  120A  158A  200A  120A  158A  	fcall	stringdir
  8876     0F43  3A64               	xorlw	100
  8877     0F44  1903               	skipnz
  8878     0F45  2F47               	goto	u3401
  8879     0F46  2F48               	goto	u3400
  8880     0F47                     u3401:
  8881     0F47  2F54               	goto	l2917
  8882     0F48                     u3400:
  8883     0F48                     l2915:
  8884     0F48  0822               	movf	vfpfcnvrt@cp,w
  8885     0F49  0084               	movwf	4
  8886     0F4A  120A  158A  200A  120A  158A  	fcall	stringdir
  8887     0F4F  3A69               	xorlw	105
  8888     0F50  1D03               	skipz
  8889     0F51  2F53               	goto	u3411
  8890     0F52  2F54               	goto	u3410
  8891     0F53                     u3411:
  8892     0F53  2FE0               	goto	l2945
  8893     0F54                     u3410:
  8894     0F54                     l2917:
  8895                           
  8896                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  8897     0F54  087B               	movf	vfpfcnvrt@ap,w
  8898     0F55  0084               	movwf	4
  8899     0F56  0800               	movf	0,w
  8900     0F57  00FF               	movwf	btemp+1
  8901     0F58  3002               	movlw	2
  8902     0F59  0780               	addwf	0,f
  8903     0F5A  087F               	movf	btemp+1,w
  8904     0F5B  0084               	movwf	4
  8905     0F5C  0800               	movf	0,w
  8906     0F5D  00A3               	movwf	vfpfcnvrt@convarg
  8907     0F5E  0A84               	incf	4,f
  8908     0F5F  0800               	movf	0,w
  8909     0F60  00A4               	movwf	vfpfcnvrt@convarg+1
  8910     0F61                     l2919:
  8911                           
  8912                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  8913     0F61  087A               	movf	vfpfcnvrt@fmt,w
  8914     0F62  0084               	movwf	4
  8915     0F63  0822               	movf	vfpfcnvrt@cp,w
  8916     0F64  3E01               	addlw	1
  8917     0F65  0080               	movwf	0
  8918     0F66                     l2921:
  8919                           
  8920                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  8921     0F66  3020               	movlw	32
  8922     0F67  00A7               	movwf	vfpfcnvrt@c
  8923     0F68                     l2923:
  8924                           
  8925                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  8926     0F68  1BA4               	btfsc	vfpfcnvrt@convarg+1,7
  8927     0F69  2F6B               	goto	u3421
  8928     0F6A  2F6D               	goto	u3420
  8929     0F6B                     u3421:
  8930     0F6B  3001               	movlw	1
  8931     0F6C  2F6E               	goto	u3430
  8932     0F6D                     u3420:
  8933     0F6D  3000               	movlw	0
  8934     0F6E                     u3430:
  8935     0F6E  00A0               	movwf	vfpfcnvrt@done
  8936     0F6F                     l2925:
  8937                           
  8938                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  8939     0F6F  3001               	movlw	1
  8940     0F70  02A7               	subwf	vfpfcnvrt@c,f
  8941     0F71  0827               	movf	vfpfcnvrt@c,w
  8942     0F72  3E90               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8943     0F73  0084               	movwf	4
  8944     0F74  300A               	movlw	10
  8945     0F75  00F0               	movwf	___awmod@divisor
  8946     0F76  3000               	movlw	0
  8947     0F77  00F1               	movwf	___awmod@divisor+1
  8948     0F78  0824               	movf	vfpfcnvrt@convarg+1,w
  8949     0F79  00F3               	movwf	___awmod@dividend+1
  8950     0F7A  0823               	movf	vfpfcnvrt@convarg,w
  8951     0F7B  00F2               	movwf	___awmod@dividend
  8952     0F7C  120A  158A  2173  120A  158A  	fcall	___awmod
  8953     0F81  0871               	movf	?___awmod+1,w
  8954     0F82  00F7               	movwf	abs@a+1
  8955     0F83  0870               	movf	?___awmod,w
  8956     0F84  00F6               	movwf	abs@a
  8957     0F85  160A  118A  2462  120A  158A  	fcall	_abs
  8958     0F8A  0876               	movf	?_abs,w
  8959     0F8B  3E30               	addlw	48
  8960     0F8C  1783               	bsf	3,7	;select IRP bank3
  8961     0F8D  0080               	movwf	0
  8962     0F8E                     l2927:
  8963                           
  8964                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  8965     0F8E  300A               	movlw	10
  8966     0F8F  00F0               	movwf	___awdiv@divisor
  8967     0F90  3000               	movlw	0
  8968     0F91  00F1               	movwf	___awdiv@divisor+1
  8969     0F92  1283               	bcf	3,5	;RP0=0, select bank0
  8970     0F93  1303               	bcf	3,6	;RP1=0, select bank0
  8971     0F94  0824               	movf	vfpfcnvrt@convarg+1,w
  8972     0F95  00F3               	movwf	___awdiv@dividend+1
  8973     0F96  0823               	movf	vfpfcnvrt@convarg,w
  8974     0F97  00F2               	movwf	___awdiv@dividend
  8975     0F98  120A  158A  21CC  120A  158A  	fcall	___awdiv
  8976     0F9D  0871               	movf	?___awdiv+1,w
  8977     0F9E  1283               	bcf	3,5	;RP0=0, select bank0
  8978     0F9F  1303               	bcf	3,6	;RP1=0, select bank0
  8979     0FA0  00A4               	movwf	vfpfcnvrt@convarg+1
  8980     0FA1  0870               	movf	?___awdiv,w
  8981     0FA2  00A3               	movwf	vfpfcnvrt@convarg
  8982     0FA3                     l2929:
  8983                           
  8984                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  8985     0FA3  0823               	movf	vfpfcnvrt@convarg,w
  8986     0FA4  0424               	iorwf	vfpfcnvrt@convarg+1,w
  8987     0FA5  1903               	btfsc	3,2
  8988     0FA6  2FA8               	goto	u3441
  8989     0FA7  2FA9               	goto	u3440
  8990     0FA8                     u3441:
  8991     0FA8  2FAE               	goto	l2933
  8992     0FA9                     u3440:
  8993     0FA9                     l2931:
  8994     0FA9  0827               	movf	vfpfcnvrt@c,w
  8995     0FAA  1D03               	btfss	3,2
  8996     0FAB  2FAD               	goto	u3451
  8997     0FAC  2FAE               	goto	u3450
  8998     0FAD                     u3451:
  8999     0FAD  2F6F               	goto	l2925
  9000     0FAE                     u3450:
  9001     0FAE                     l2933:
  9002                           
  9003                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  9004     0FAE  0827               	movf	vfpfcnvrt@c,w
  9005     0FAF  1903               	btfsc	3,2
  9006     0FB0  2FB2               	goto	u3461
  9007     0FB1  2FB3               	goto	u3460
  9008     0FB2                     u3461:
  9009     0FB2  2FD9               	goto	l2943
  9010     0FB3                     u3460:
  9011     0FB3                     l2935:
  9012     0FB3  0820               	movf	vfpfcnvrt@done,w
  9013     0FB4  1903               	btfsc	3,2
  9014     0FB5  2FB7               	goto	u3471
  9015     0FB6  2FB8               	goto	u3470
  9016     0FB7                     u3471:
  9017     0FB7  2FD9               	goto	l2943
  9018     0FB8                     u3470:
  9019     0FB8                     l2937:
  9020                           
  9021                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  9022     0FB8  3001               	movlw	1
  9023     0FB9  02A7               	subwf	vfpfcnvrt@c,f
  9024     0FBA  0827               	movf	vfpfcnvrt@c,w
  9025     0FBB  3E90               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9026     0FBC  0084               	movwf	4
  9027     0FBD  302D               	movlw	45
  9028     0FBE  1783               	bsf	3,7	;select IRP bank3
  9029     0FBF  0080               	movwf	0
  9030     0FC0  2FD9               	goto	l2943
  9031     0FC1                     l2939:
  9032                           
  9033                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  9034     0FC1  0827               	movf	vfpfcnvrt@c,w
  9035     0FC2  3E90               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9036     0FC3  0084               	movwf	4
  9037     0FC4  1783               	bsf	3,7	;select IRP bank3
  9038     0FC5  0800               	movf	0,w
  9039     0FC6  00FC               	movwf	??_vfpfcnvrt
  9040     0FC7  01FD               	clrf	??_vfpfcnvrt+1
  9041     0FC8  087C               	movf	??_vfpfcnvrt,w
  9042     0FC9  00F0               	movwf	fputc@c
  9043     0FCA  087D               	movf	??_vfpfcnvrt+1,w
  9044     0FCB  00F1               	movwf	fputc@c+1
  9045     0FCC  0821               	movf	vfpfcnvrt@fp,w
  9046     0FCD  00F2               	movwf	fputc@fp
  9047     0FCE  120A  158A  211D  120A  158A  	fcall	_fputc
  9048     0FD3                     l2941:
  9049     0FD3  3001               	movlw	1
  9050     0FD4  00FF               	movwf	btemp+1
  9051     0FD5  087F               	movf	btemp+1,w
  9052     0FD6  1283               	bcf	3,5	;RP0=0, select bank0
  9053     0FD7  1303               	bcf	3,6	;RP1=0, select bank0
  9054     0FD8  07A7               	addwf	vfpfcnvrt@c,f
  9055     0FD9                     l2943:
  9056                           
  9057                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  9058     0FD9  3020               	movlw	32
  9059     0FDA  0627               	xorwf	vfpfcnvrt@c,w
  9060     0FDB  1D03               	btfss	3,2
  9061     0FDC  2FDE               	goto	u3481
  9062     0FDD  2FDF               	goto	u3480
  9063     0FDE                     u3481:
  9064     0FDE  2FC1               	goto	l2939
  9065     0FDF                     u3480:
  9066     0FDF  2FFF               	goto	l1143
  9067     0FE0                     l2945:
  9068                           
  9069                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  9070     0FE0  3001               	movlw	1
  9071     0FE1  00FF               	movwf	btemp+1
  9072     0FE2  087A               	movf	vfpfcnvrt@fmt,w
  9073     0FE3  0084               	movwf	4
  9074     0FE4  087F               	movf	btemp+1,w
  9075     0FE5  1383               	bcf	3,7	;select IRP bank0
  9076     0FE6  0780               	addwf	0,f
  9077     0FE7  2FFF               	goto	l1143
  9078     0FE8                     l2949:
  9079                           
  9080                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  9081     0FE8  087A               	movf	vfpfcnvrt@fmt,w
  9082     0FE9  0084               	movwf	4
  9083     0FEA  0800               	movf	0,w
  9084     0FEB  0084               	movwf	4
  9085     0FEC  120A  158A  200A  120A  158A  	fcall	stringdir
  9086     0FF1  00FC               	movwf	??_vfpfcnvrt
  9087     0FF2  01FD               	clrf	??_vfpfcnvrt+1
  9088     0FF3  087C               	movf	??_vfpfcnvrt,w
  9089     0FF4  00F0               	movwf	fputc@c
  9090     0FF5  087D               	movf	??_vfpfcnvrt+1,w
  9091     0FF6  00F1               	movwf	fputc@c+1
  9092     0FF7  0821               	movf	vfpfcnvrt@fp,w
  9093     0FF8  00F2               	movwf	fputc@fp
  9094     0FF9  120A  158A  211D  120A  158A  	fcall	_fputc
  9095     0FFE  2FE0               	goto	l2945
  9096     0FFF                     l1143:
  9097     0FFF  0008               	return
  9098     1000                     __end_of_vfpfcnvrt:
  9099                           
  9100                           	psect	text36
  9101     091D                     __ptext36:	
  9102 ;; *************** function _fputc *****************
  9103 ;; Defined at:
  9104 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  9105 ;; Parameters:    Size  Location     Type
  9106 ;;  c               2    0[COMMON] int 
  9107 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  9108 ;;		 -> sprintf@f(11), 
  9109 ;; Auto vars:     Size  Location     Type
  9110 ;;		None
  9111 ;; Return value:  Size  Location     Type
  9112 ;;                  2    0[COMMON] int 
  9113 ;; Registers used:
  9114 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9115 ;; Tracked objects:
  9116 ;;		On entry : 0/0
  9117 ;;		On exit  : 0/0
  9118 ;;		Unchanged: 0/0
  9119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9120 ;;      Params:         3       0       0       0       0
  9121 ;;      Locals:         0       0       0       0       0
  9122 ;;      Temps:          5       0       0       0       0
  9123 ;;      Totals:         8       0       0       0       0
  9124 ;;Total ram usage:        8 bytes
  9125 ;; Hardware stack levels used: 1
  9126 ;; Hardware stack levels required when called: 1
  9127 ;; This function calls:
  9128 ;;		_putch
  9129 ;; This function is called by:
  9130 ;;		_vfpfcnvrt
  9131 ;; This function uses a non-reentrant model
  9132 ;;
  9133                           
  9134     091D                     _fputc:	
  9135                           ;psect for function _fputc
  9136                           
  9137     091D                     l2821:	
  9138                           ;incstack = 0
  9139                           ; Regs used in _fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9140                           
  9141     091D  0872               	movf	fputc@fp,w
  9142     091E  1903               	btfsc	3,2
  9143     091F  2921               	goto	u3201
  9144     0920  2922               	goto	u3200
  9145     0921                     u3201:
  9146     0921  2927               	goto	l2825
  9147     0922                     u3200:
  9148     0922                     l2823:
  9149     0922  0872               	movf	fputc@fp,w
  9150     0923  1D03               	btfss	3,2
  9151     0924  2926               	goto	u3211
  9152     0925  2927               	goto	u3210
  9153     0926                     u3211:
  9154     0926  292E               	goto	l2827
  9155     0927                     u3210:
  9156     0927                     l2825:
  9157     0927  0870               	movf	fputc@c,w
  9158     0928  160A  118A  2443  120A  158A  	fcall	_putch
  9159     092D  2972               	goto	l1168
  9160     092E                     l2827:
  9161     092E  0872               	movf	fputc@fp,w
  9162     092F  3E09               	addlw	9
  9163     0930  0084               	movwf	4
  9164     0931  1383               	bcf	3,7	;select IRP bank0
  9165     0932  0800               	movf	0,w
  9166     0933  00F3               	movwf	??_fputc
  9167     0934  0A84               	incf	4,f
  9168     0935  0800               	movf	0,w
  9169     0936  00F4               	movwf	??_fputc+1
  9170     0937  0873               	movf	??_fputc,w
  9171     0938  0474               	iorwf	??_fputc+1,w
  9172     0939  1903               	btfsc	3,2
  9173     093A  293C               	goto	u3221
  9174     093B  293D               	goto	u3220
  9175     093C                     u3221:
  9176     093C  295B               	goto	l2831
  9177     093D                     u3220:
  9178     093D                     l2829:
  9179     093D  0872               	movf	fputc@fp,w
  9180     093E  3E09               	addlw	9
  9181     093F  0084               	movwf	4
  9182     0940  0800               	movf	0,w
  9183     0941  00F3               	movwf	??_fputc
  9184     0942  0A84               	incf	4,f
  9185     0943  0800               	movf	0,w
  9186     0944  00F4               	movwf	??_fputc+1
  9187     0945  0872               	movf	fputc@fp,w
  9188     0946  3E02               	addlw	2
  9189     0947  0084               	movwf	4
  9190     0948  0800               	movf	0,w
  9191     0949  00F5               	movwf	??_fputc+2
  9192     094A  0A84               	incf	4,f
  9193     094B  0800               	movf	0,w
  9194     094C  00F6               	movwf	??_fputc+3
  9195     094D  0876               	movf	??_fputc+3,w
  9196     094E  3A80               	xorlw	128
  9197     094F  00F7               	movwf	??_fputc+4
  9198     0950  0874               	movf	??_fputc+1,w
  9199     0951  3A80               	xorlw	128
  9200     0952  0277               	subwf	??_fputc+4,w
  9201     0953  1D03               	skipz
  9202     0954  2957               	goto	u3235
  9203     0955  0873               	movf	??_fputc,w
  9204     0956  0275               	subwf	??_fputc+2,w
  9205     0957                     u3235:
  9206     0957  1803               	skipnc
  9207     0958  295A               	goto	u3231
  9208     0959  295B               	goto	u3230
  9209     095A                     u3231:
  9210     095A  2972               	goto	l1168
  9211     095B                     u3230:
  9212     095B                     l2831:
  9213     095B  0872               	movf	fputc@fp,w
  9214     095C  3E02               	addlw	2
  9215     095D  0084               	movwf	4
  9216     095E  1383               	bcf	3,7	;select IRP bank0
  9217     095F  0800               	movf	0,w
  9218     0960  00F3               	movwf	??_fputc
  9219     0961  0872               	movf	fputc@fp,w
  9220     0962  0084               	movwf	4
  9221     0963  0800               	movf	0,w
  9222     0964  0773               	addwf	??_fputc,w
  9223     0965  00F4               	movwf	??_fputc+1
  9224     0966  0874               	movf	??_fputc+1,w
  9225     0967  0084               	movwf	4
  9226     0968  0870               	movf	fputc@c,w
  9227     0969  0080               	movwf	0
  9228     096A  0872               	movf	fputc@fp,w
  9229     096B  3E02               	addlw	2
  9230     096C  0084               	movwf	4
  9231     096D  3001               	movlw	1
  9232     096E  0780               	addwf	0,f
  9233     096F  0A84               	incf	4,f
  9234     0970  1803               	skipnc
  9235     0971  0A80               	incf	0,f
  9236     0972                     l1168:
  9237     0972  0008               	return
  9238     0973                     __end_of_fputc:
  9239                           
  9240                           	psect	text37
  9241     1443                     __ptext37:	
  9242 ;; *************** function _putch *****************
  9243 ;; Defined at:
  9244 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  9245 ;; Parameters:    Size  Location     Type
  9246 ;;  c               1    wreg     unsigned char 
  9247 ;; Auto vars:     Size  Location     Type
  9248 ;;  c               1    0[COMMON] unsigned char 
  9249 ;; Return value:  Size  Location     Type
  9250 ;;                  1    wreg      void 
  9251 ;; Registers used:
  9252 ;;		wreg
  9253 ;; Tracked objects:
  9254 ;;		On entry : 0/0
  9255 ;;		On exit  : 0/0
  9256 ;;		Unchanged: 0/0
  9257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9258 ;;      Params:         0       0       0       0       0
  9259 ;;      Locals:         0       0       0       0       0
  9260 ;;      Temps:          0       0       0       0       0
  9261 ;;      Totals:         0       0       0       0       0
  9262 ;;Total ram usage:        0 bytes
  9263 ;; Hardware stack levels used: 1
  9264 ;; This function calls:
  9265 ;;		Nothing
  9266 ;; This function is called by:
  9267 ;;		_fputc
  9268 ;; This function uses a non-reentrant model
  9269 ;;
  9270                           
  9271     1443                     _putch:	
  9272                           ;psect for function _putch
  9273                           
  9274     1443                     l1179:	
  9275                           ;incstack = 0
  9276                           ; Regs used in _putch: [wreg]
  9277                           
  9278     1443  0008               	return
  9279     1444                     __end_of_putch:
  9280                           
  9281                           	psect	text38
  9282     1462                     __ptext38:	
  9283 ;; *************** function _abs *****************
  9284 ;; Defined at:
  9285 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  9286 ;; Parameters:    Size  Location     Type
  9287 ;;  a               2    6[COMMON] int 
  9288 ;; Auto vars:     Size  Location     Type
  9289 ;;		None
  9290 ;; Return value:  Size  Location     Type
  9291 ;;                  2    6[COMMON] int 
  9292 ;; Registers used:
  9293 ;;		wreg, status,2, status,0
  9294 ;; Tracked objects:
  9295 ;;		On entry : 0/0
  9296 ;;		On exit  : 0/0
  9297 ;;		Unchanged: 0/0
  9298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9299 ;;      Params:         2       0       0       0       0
  9300 ;;      Locals:         0       0       0       0       0
  9301 ;;      Temps:          2       0       0       0       0
  9302 ;;      Totals:         4       0       0       0       0
  9303 ;;Total ram usage:        4 bytes
  9304 ;; Hardware stack levels used: 1
  9305 ;; This function calls:
  9306 ;;		Nothing
  9307 ;; This function is called by:
  9308 ;;		_vfpfcnvrt
  9309 ;; This function uses a non-reentrant model
  9310 ;;
  9311                           
  9312     1462                     _abs:	
  9313                           ;psect for function _abs
  9314                           
  9315     1462                     l2835:	
  9316                           ;incstack = 0
  9317                           ; Regs used in _abs: [wreg+status,2+status,0]
  9318                           
  9319     1462  1BF7               	btfsc	abs@a+1,7
  9320     1463  2C65               	goto	u3241
  9321     1464  2C66               	goto	u3240
  9322     1465                     u3241:
  9323     1465  2C67               	goto	l2839
  9324     1466                     u3240:
  9325     1466                     l2837:
  9326     1466  2C72               	goto	l1156
  9327     1467                     l2839:
  9328     1467  0976               	comf	abs@a,w
  9329     1468  00F8               	movwf	??_abs
  9330     1469  0977               	comf	abs@a+1,w
  9331     146A  00F9               	movwf	??_abs+1
  9332     146B  0AF8               	incf	??_abs,f
  9333     146C  1903               	skipnz
  9334     146D  0AF9               	incf	??_abs+1,f
  9335     146E  0878               	movf	??_abs,w
  9336     146F  00F6               	movwf	?_abs
  9337     1470  0879               	movf	??_abs+1,w
  9338     1471  00F7               	movwf	?_abs+1
  9339     1472                     l1156:
  9340     1472  0008               	return
  9341     1473                     __end_of_abs:
  9342                           
  9343                           	psect	text39
  9344     0973                     __ptext39:	
  9345 ;; *************** function ___awmod *****************
  9346 ;; Defined at:
  9347 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  9348 ;; Parameters:    Size  Location     Type
  9349 ;;  divisor         2    0[COMMON] int 
  9350 ;;  dividend        2    2[COMMON] int 
  9351 ;; Auto vars:     Size  Location     Type
  9352 ;;  sign            1    5[COMMON] unsigned char 
  9353 ;;  counter         1    4[COMMON] unsigned char 
  9354 ;; Return value:  Size  Location     Type
  9355 ;;                  2    0[COMMON] int 
  9356 ;; Registers used:
  9357 ;;		wreg, status,2, status,0, btemp+1
  9358 ;; Tracked objects:
  9359 ;;		On entry : 0/0
  9360 ;;		On exit  : 0/0
  9361 ;;		Unchanged: 0/0
  9362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9363 ;;      Params:         4       0       0       0       0
  9364 ;;      Locals:         2       0       0       0       0
  9365 ;;      Temps:          0       0       0       0       0
  9366 ;;      Totals:         6       0       0       0       0
  9367 ;;Total ram usage:        6 bytes
  9368 ;; Hardware stack levels used: 1
  9369 ;; This function calls:
  9370 ;;		Nothing
  9371 ;; This function is called by:
  9372 ;;		_vfpfcnvrt
  9373 ;; This function uses a non-reentrant model
  9374 ;;
  9375                           
  9376     0973                     ___awmod:	
  9377                           ;psect for function ___awmod
  9378                           
  9379     0973                     l2783:	
  9380                           ;incstack = 0
  9381                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  9382                           
  9383     0973  01F5               	clrf	___awmod@sign
  9384     0974                     l2785:
  9385     0974  1FF3               	btfss	___awmod@dividend+1,7
  9386     0975  2977               	goto	u3111
  9387     0976  2978               	goto	u3110
  9388     0977                     u3111:
  9389     0977  297F               	goto	l2791
  9390     0978                     u3110:
  9391     0978                     l2787:
  9392     0978  09F2               	comf	___awmod@dividend,f
  9393     0979  09F3               	comf	___awmod@dividend+1,f
  9394     097A  0AF2               	incf	___awmod@dividend,f
  9395     097B  1903               	skipnz
  9396     097C  0AF3               	incf	___awmod@dividend+1,f
  9397     097D                     l2789:
  9398     097D  01F5               	clrf	___awmod@sign
  9399     097E  0AF5               	incf	___awmod@sign,f
  9400     097F                     l2791:
  9401     097F  1FF1               	btfss	___awmod@divisor+1,7
  9402     0980  2982               	goto	u3121
  9403     0981  2983               	goto	u3120
  9404     0982                     u3121:
  9405     0982  2988               	goto	l2795
  9406     0983                     u3120:
  9407     0983                     l2793:
  9408     0983  09F0               	comf	___awmod@divisor,f
  9409     0984  09F1               	comf	___awmod@divisor+1,f
  9410     0985  0AF0               	incf	___awmod@divisor,f
  9411     0986  1903               	skipnz
  9412     0987  0AF1               	incf	___awmod@divisor+1,f
  9413     0988                     l2795:
  9414     0988  0870               	movf	___awmod@divisor,w
  9415     0989  0471               	iorwf	___awmod@divisor+1,w
  9416     098A  1903               	btfsc	3,2
  9417     098B  298D               	goto	u3131
  9418     098C  298E               	goto	u3130
  9419     098D                     u3131:
  9420     098D  29BD               	goto	l2813
  9421     098E                     u3130:
  9422     098E                     l2797:
  9423     098E  01F4               	clrf	___awmod@counter
  9424     098F  0AF4               	incf	___awmod@counter,f
  9425     0990  299C               	goto	l2803
  9426     0991                     l2799:
  9427     0991  3001               	movlw	1
  9428     0992                     u3145:
  9429     0992  1003               	clrc
  9430     0993  0DF0               	rlf	___awmod@divisor,f
  9431     0994  0DF1               	rlf	___awmod@divisor+1,f
  9432     0995  3EFF               	addlw	-1
  9433     0996  1D03               	skipz
  9434     0997  2992               	goto	u3145
  9435     0998                     l2801:
  9436     0998  3001               	movlw	1
  9437     0999  00FF               	movwf	btemp+1
  9438     099A  087F               	movf	btemp+1,w
  9439     099B  07F4               	addwf	___awmod@counter,f
  9440     099C                     l2803:
  9441     099C  1FF1               	btfss	___awmod@divisor+1,7
  9442     099D  299F               	goto	u3151
  9443     099E  29A0               	goto	u3150
  9444     099F                     u3151:
  9445     099F  2991               	goto	l2799
  9446     09A0                     u3150:
  9447     09A0                     l2805:
  9448     09A0  0871               	movf	___awmod@divisor+1,w
  9449     09A1  0273               	subwf	___awmod@dividend+1,w
  9450     09A2  1D03               	skipz
  9451     09A3  29A6               	goto	u3165
  9452     09A4  0870               	movf	___awmod@divisor,w
  9453     09A5  0272               	subwf	___awmod@dividend,w
  9454     09A6                     u3165:
  9455     09A6  1C03               	skipc
  9456     09A7  29A9               	goto	u3161
  9457     09A8  29AA               	goto	u3160
  9458     09A9                     u3161:
  9459     09A9  29B0               	goto	l2809
  9460     09AA                     u3160:
  9461     09AA                     l2807:
  9462     09AA  0870               	movf	___awmod@divisor,w
  9463     09AB  02F2               	subwf	___awmod@dividend,f
  9464     09AC  0871               	movf	___awmod@divisor+1,w
  9465     09AD  1C03               	skipc
  9466     09AE  03F3               	decf	___awmod@dividend+1,f
  9467     09AF  02F3               	subwf	___awmod@dividend+1,f
  9468     09B0                     l2809:
  9469     09B0  3001               	movlw	1
  9470     09B1                     u3175:
  9471     09B1  1003               	clrc
  9472     09B2  0CF1               	rrf	___awmod@divisor+1,f
  9473     09B3  0CF0               	rrf	___awmod@divisor,f
  9474     09B4  3EFF               	addlw	-1
  9475     09B5  1D03               	skipz
  9476     09B6  29B1               	goto	u3175
  9477     09B7                     l2811:
  9478     09B7  3001               	movlw	1
  9479     09B8  02F4               	subwf	___awmod@counter,f
  9480     09B9  1D03               	btfss	3,2
  9481     09BA  29BC               	goto	u3181
  9482     09BB  29BD               	goto	u3180
  9483     09BC                     u3181:
  9484     09BC  29A0               	goto	l2805
  9485     09BD                     u3180:
  9486     09BD                     l2813:
  9487     09BD  0875               	movf	___awmod@sign,w
  9488     09BE  1903               	btfsc	3,2
  9489     09BF  29C1               	goto	u3191
  9490     09C0  29C2               	goto	u3190
  9491     09C1                     u3191:
  9492     09C1  29C7               	goto	l2817
  9493     09C2                     u3190:
  9494     09C2                     l2815:
  9495     09C2  09F2               	comf	___awmod@dividend,f
  9496     09C3  09F3               	comf	___awmod@dividend+1,f
  9497     09C4  0AF2               	incf	___awmod@dividend,f
  9498     09C5  1903               	skipnz
  9499     09C6  0AF3               	incf	___awmod@dividend+1,f
  9500     09C7                     l2817:
  9501     09C7  0873               	movf	___awmod@dividend+1,w
  9502     09C8  00F1               	movwf	?___awmod+1
  9503     09C9  0872               	movf	___awmod@dividend,w
  9504     09CA  00F0               	movwf	?___awmod
  9505     09CB                     l802:
  9506     09CB  0008               	return
  9507     09CC                     __end_of___awmod:
  9508                           
  9509                           	psect	text40
  9510     09CC                     __ptext40:	
  9511 ;; *************** function ___awdiv *****************
  9512 ;; Defined at:
  9513 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  9514 ;; Parameters:    Size  Location     Type
  9515 ;;  divisor         2    0[COMMON] int 
  9516 ;;  dividend        2    2[COMMON] int 
  9517 ;; Auto vars:     Size  Location     Type
  9518 ;;  quotient        2    6[COMMON] int 
  9519 ;;  sign            1    5[COMMON] unsigned char 
  9520 ;;  counter         1    4[COMMON] unsigned char 
  9521 ;; Return value:  Size  Location     Type
  9522 ;;                  2    0[COMMON] int 
  9523 ;; Registers used:
  9524 ;;		wreg, status,2, status,0, btemp+1
  9525 ;; Tracked objects:
  9526 ;;		On entry : 0/0
  9527 ;;		On exit  : 0/0
  9528 ;;		Unchanged: 0/0
  9529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9530 ;;      Params:         4       0       0       0       0
  9531 ;;      Locals:         4       0       0       0       0
  9532 ;;      Temps:          0       0       0       0       0
  9533 ;;      Totals:         8       0       0       0       0
  9534 ;;Total ram usage:        8 bytes
  9535 ;; Hardware stack levels used: 1
  9536 ;; This function calls:
  9537 ;;		Nothing
  9538 ;; This function is called by:
  9539 ;;		_vfpfcnvrt
  9540 ;; This function uses a non-reentrant model
  9541 ;;
  9542                           
  9543     09CC                     ___awdiv:	
  9544                           ;psect for function ___awdiv
  9545                           
  9546     09CC                     l2739:	
  9547                           ;incstack = 0
  9548                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  9549                           
  9550     09CC  01F5               	clrf	___awdiv@sign
  9551     09CD                     l2741:
  9552     09CD  1FF1               	btfss	___awdiv@divisor+1,7
  9553     09CE  29D0               	goto	u3011
  9554     09CF  29D1               	goto	u3010
  9555     09D0                     u3011:
  9556     09D0  29D8               	goto	l2747
  9557     09D1                     u3010:
  9558     09D1                     l2743:
  9559     09D1  09F0               	comf	___awdiv@divisor,f
  9560     09D2  09F1               	comf	___awdiv@divisor+1,f
  9561     09D3  0AF0               	incf	___awdiv@divisor,f
  9562     09D4  1903               	skipnz
  9563     09D5  0AF1               	incf	___awdiv@divisor+1,f
  9564     09D6                     l2745:
  9565     09D6  01F5               	clrf	___awdiv@sign
  9566     09D7  0AF5               	incf	___awdiv@sign,f
  9567     09D8                     l2747:
  9568     09D8  1FF3               	btfss	___awdiv@dividend+1,7
  9569     09D9  29DB               	goto	u3021
  9570     09DA  29DC               	goto	u3020
  9571     09DB                     u3021:
  9572     09DB  29E5               	goto	l2753
  9573     09DC                     u3020:
  9574     09DC                     l2749:
  9575     09DC  09F2               	comf	___awdiv@dividend,f
  9576     09DD  09F3               	comf	___awdiv@dividend+1,f
  9577     09DE  0AF2               	incf	___awdiv@dividend,f
  9578     09DF  1903               	skipnz
  9579     09E0  0AF3               	incf	___awdiv@dividend+1,f
  9580     09E1                     l2751:
  9581     09E1  3001               	movlw	1
  9582     09E2  00FF               	movwf	btemp+1
  9583     09E3  087F               	movf	btemp+1,w
  9584     09E4  06F5               	xorwf	___awdiv@sign,f
  9585     09E5                     l2753:
  9586     09E5  01F6               	clrf	___awdiv@quotient
  9587     09E6  01F7               	clrf	___awdiv@quotient+1
  9588     09E7                     l2755:
  9589     09E7  0870               	movf	___awdiv@divisor,w
  9590     09E8  0471               	iorwf	___awdiv@divisor+1,w
  9591     09E9  1903               	btfsc	3,2
  9592     09EA  29EC               	goto	u3031
  9593     09EB  29ED               	goto	u3030
  9594     09EC                     u3031:
  9595     09EC  2A24               	goto	l2775
  9596     09ED                     u3030:
  9597     09ED                     l2757:
  9598     09ED  01F4               	clrf	___awdiv@counter
  9599     09EE  0AF4               	incf	___awdiv@counter,f
  9600     09EF  29FB               	goto	l2763
  9601     09F0                     l2759:
  9602     09F0  3001               	movlw	1
  9603     09F1                     u3045:
  9604     09F1  1003               	clrc
  9605     09F2  0DF0               	rlf	___awdiv@divisor,f
  9606     09F3  0DF1               	rlf	___awdiv@divisor+1,f
  9607     09F4  3EFF               	addlw	-1
  9608     09F5  1D03               	skipz
  9609     09F6  29F1               	goto	u3045
  9610     09F7                     l2761:
  9611     09F7  3001               	movlw	1
  9612     09F8  00FF               	movwf	btemp+1
  9613     09F9  087F               	movf	btemp+1,w
  9614     09FA  07F4               	addwf	___awdiv@counter,f
  9615     09FB                     l2763:
  9616     09FB  1FF1               	btfss	___awdiv@divisor+1,7
  9617     09FC  29FE               	goto	u3051
  9618     09FD  29FF               	goto	u3050
  9619     09FE                     u3051:
  9620     09FE  29F0               	goto	l2759
  9621     09FF                     u3050:
  9622     09FF                     l2765:
  9623     09FF  3001               	movlw	1
  9624     0A00                     u3065:
  9625     0A00  1003               	clrc
  9626     0A01  0DF6               	rlf	___awdiv@quotient,f
  9627     0A02  0DF7               	rlf	___awdiv@quotient+1,f
  9628     0A03  3EFF               	addlw	-1
  9629     0A04  1D03               	skipz
  9630     0A05  2A00               	goto	u3065
  9631     0A06  0871               	movf	___awdiv@divisor+1,w
  9632     0A07  0273               	subwf	___awdiv@dividend+1,w
  9633     0A08  1D03               	skipz
  9634     0A09  2A0C               	goto	u3075
  9635     0A0A  0870               	movf	___awdiv@divisor,w
  9636     0A0B  0272               	subwf	___awdiv@dividend,w
  9637     0A0C                     u3075:
  9638     0A0C  1C03               	skipc
  9639     0A0D  2A0F               	goto	u3071
  9640     0A0E  2A10               	goto	u3070
  9641     0A0F                     u3071:
  9642     0A0F  2A17               	goto	l2771
  9643     0A10                     u3070:
  9644     0A10                     l2767:
  9645     0A10  0870               	movf	___awdiv@divisor,w
  9646     0A11  02F2               	subwf	___awdiv@dividend,f
  9647     0A12  0871               	movf	___awdiv@divisor+1,w
  9648     0A13  1C03               	skipc
  9649     0A14  03F3               	decf	___awdiv@dividend+1,f
  9650     0A15  02F3               	subwf	___awdiv@dividend+1,f
  9651     0A16                     l2769:
  9652     0A16  1476               	bsf	___awdiv@quotient,0
  9653     0A17                     l2771:
  9654     0A17  3001               	movlw	1
  9655     0A18                     u3085:
  9656     0A18  1003               	clrc
  9657     0A19  0CF1               	rrf	___awdiv@divisor+1,f
  9658     0A1A  0CF0               	rrf	___awdiv@divisor,f
  9659     0A1B  3EFF               	addlw	-1
  9660     0A1C  1D03               	skipz
  9661     0A1D  2A18               	goto	u3085
  9662     0A1E                     l2773:
  9663     0A1E  3001               	movlw	1
  9664     0A1F  02F4               	subwf	___awdiv@counter,f
  9665     0A20  1D03               	btfss	3,2
  9666     0A21  2A23               	goto	u3091
  9667     0A22  2A24               	goto	u3090
  9668     0A23                     u3091:
  9669     0A23  29FF               	goto	l2765
  9670     0A24                     u3090:
  9671     0A24                     l2775:
  9672     0A24  0875               	movf	___awdiv@sign,w
  9673     0A25  1903               	btfsc	3,2
  9674     0A26  2A28               	goto	u3101
  9675     0A27  2A29               	goto	u3100
  9676     0A28                     u3101:
  9677     0A28  2A2E               	goto	l2779
  9678     0A29                     u3100:
  9679     0A29                     l2777:
  9680     0A29  09F6               	comf	___awdiv@quotient,f
  9681     0A2A  09F7               	comf	___awdiv@quotient+1,f
  9682     0A2B  0AF6               	incf	___awdiv@quotient,f
  9683     0A2C  1903               	skipnz
  9684     0A2D  0AF7               	incf	___awdiv@quotient+1,f
  9685     0A2E                     l2779:
  9686     0A2E  0877               	movf	___awdiv@quotient+1,w
  9687     0A2F  00F1               	movwf	?___awdiv+1
  9688     0A30  0876               	movf	___awdiv@quotient,w
  9689     0A31  00F0               	movwf	?___awdiv
  9690     0A32                     l789:
  9691     0A32  0008               	return
  9692     0A33                     __end_of___awdiv:
  9693                           
  9694                           	psect	text41
  9695     1511                     __ptext41:	
  9696 ;; *************** function _memset *****************
  9697 ;; Defined at:
  9698 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memset.c"
  9699 ;; Parameters:    Size  Location     Type
  9700 ;;  dest            1    wreg     PTR void 
  9701 ;;		 -> lcd_show_max(6), lcd_show(6), 
  9702 ;;  c               2    0[COMMON] int 
  9703 ;;  n               2    2[COMMON] unsigned int 
  9704 ;; Auto vars:     Size  Location     Type
  9705 ;;  dest            1    5[COMMON] PTR void 
  9706 ;;		 -> lcd_show_max(6), lcd_show(6), 
  9707 ;;  p               1    4[COMMON] PTR unsigned char 
  9708 ;;		 -> lcd_show_max(6), lcd_show(6), 
  9709 ;; Return value:  Size  Location     Type
  9710 ;;                  1    wreg      PTR void 
  9711 ;; Registers used:
  9712 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  9713 ;; Tracked objects:
  9714 ;;		On entry : 0/0
  9715 ;;		On exit  : 0/0
  9716 ;;		Unchanged: 0/0
  9717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9718 ;;      Params:         4       0       0       0       0
  9719 ;;      Locals:         2       0       0       0       0
  9720 ;;      Temps:          0       0       0       0       0
  9721 ;;      Totals:         6       0       0       0       0
  9722 ;;Total ram usage:        6 bytes
  9723 ;; Hardware stack levels used: 1
  9724 ;; This function calls:
  9725 ;;		Nothing
  9726 ;; This function is called by:
  9727 ;;		_Convert_uint16_to_string
  9728 ;;		_Convert_uint8_to_string
  9729 ;;		_Convert_uint32_to_string
  9730 ;; This function uses a non-reentrant model
  9731 ;;
  9732                           
  9733     1511                     _memset:	
  9734                           ;psect for function _memset
  9735                           
  9736                           
  9737                           ;incstack = 0
  9738                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0+btemp+1]
  9739                           ;memset@dest stored from wreg
  9740     1511  00F5               	movwf	memset@dest
  9741     1512                     l3147:
  9742     1512  0875               	movf	memset@dest,w
  9743     1513  00F4               	movwf	memset@p
  9744     1514  2D1E               	goto	l3153
  9745     1515                     l3149:
  9746     1515  0874               	movf	memset@p,w
  9747     1516  0084               	movwf	4
  9748     1517  0870               	movf	memset@c,w
  9749     1518  1383               	bcf	3,7	;select IRP bank0
  9750     1519  0080               	movwf	0
  9751     151A                     l3151:
  9752     151A  3001               	movlw	1
  9753     151B  00FF               	movwf	btemp+1
  9754     151C  087F               	movf	btemp+1,w
  9755     151D  07F4               	addwf	memset@p,f
  9756     151E                     l3153:
  9757     151E  3001               	movlw	1
  9758     151F  02F2               	subwf	memset@n,f
  9759     1520  3000               	movlw	0
  9760     1521  1C03               	skipc
  9761     1522  03F3               	decf	memset@n+1,f
  9762     1523  02F3               	subwf	memset@n+1,f
  9763     1524  0A72               	incf	memset@n,w
  9764     1525  1D03               	skipz
  9765     1526  2D2B               	goto	u3751
  9766     1527  0A73               	incf	memset@n+1,w
  9767     1528  1D03               	btfss	3,2
  9768     1529  2D2B               	goto	u3751
  9769     152A  2D2C               	goto	u3750
  9770     152B                     u3751:
  9771     152B  2D15               	goto	l3149
  9772     152C                     u3750:
  9773     152C                     l1098:
  9774     152C  0008               	return
  9775     152D                     __end_of_memset:
  9776                           
  9777                           	psect	text42
  9778     163D                     __ptext42:	
  9779 ;; *************** function _ADC_Start_Conversion_Blocking *****************
  9780 ;; Defined at:
  9781 ;;		line 78 in file "MCAL_LAYER/ADC/hal_adc.c"
  9782 ;; Parameters:    Size  Location     Type
  9783 ;;  adc             1    wreg     PTR const struct .
  9784 ;;		 -> adc(3), 
  9785 ;;  channel         1    5[COMMON] enum E1595
  9786 ;;  result          2    6[COMMON] unsigned short 
  9787 ;; Auto vars:     Size  Location     Type
  9788 ;;  adc             1    9[COMMON] PTR const struct .
  9789 ;;		 -> adc(3), 
  9790 ;;  ret             1    0        unsigned char 
  9791 ;; Return value:  Size  Location     Type
  9792 ;;                  1    wreg      unsigned char 
  9793 ;; Registers used:
  9794 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9795 ;; Tracked objects:
  9796 ;;		On entry : 0/0
  9797 ;;		On exit  : 0/0
  9798 ;;		Unchanged: 0/0
  9799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9800 ;;      Params:         3       0       0       0       0
  9801 ;;      Locals:         1       0       0       0       0
  9802 ;;      Temps:          1       0       0       0       0
  9803 ;;      Totals:         5       0       0       0       0
  9804 ;;Total ram usage:        5 bytes
  9805 ;; Hardware stack levels used: 1
  9806 ;; Hardware stack levels required when called: 1
  9807 ;; This function calls:
  9808 ;;		_ADC_Get_Conversion_Result
  9809 ;;		_ADC_Start_Conversion
  9810 ;; This function is called by:
  9811 ;;		_main
  9812 ;; This function uses a non-reentrant model
  9813 ;;
  9814                           
  9815     163D                     _ADC_Start_Conversion_Blocking:	
  9816                           ;psect for function _ADC_Start_Conversion_Blocking
  9817                           
  9818                           
  9819                           ;incstack = 0
  9820                           ; Regs used in _ADC_Start_Conversion_Blocking: [wreg-fsr0h+status,2+status,0+btemp+1+pcl
      +                          ath+cstack]
  9821                           ;ADC_Start_Conversion_Blocking@adc stored from wreg
  9822     163D  00F9               	movwf	ADC_Start_Conversion_Blocking@adc
  9823     163E                     l3341:
  9824     163E                     l3343:
  9825                           
  9826                           ;MCAL_LAYER/ADC/hal_adc.c: 80:     if(adc == ((void*)0)){
  9827     163E  0879               	movf	ADC_Start_Conversion_Blocking@adc,w
  9828     163F  1D03               	btfss	3,2
  9829     1640  2E42               	goto	u3991
  9830     1641  2E43               	goto	u3990
  9831     1642                     u3991:
  9832     1642  2E44               	goto	l225
  9833     1643                     u3990:
  9834     1643                     l3345:
  9835                           
  9836                           ;MCAL_LAYER/ADC/hal_adc.c: 82:     }
  9837     1643  2E64               	goto	l227
  9838     1644                     l225:	
  9839                           ;MCAL_LAYER/ADC/hal_adc.c: 83:     else{
  9840                           
  9841                           
  9842                           ;MCAL_LAYER/ADC/hal_adc.c: 84:         (ADCON0bits.GO_nDONE = 0);
  9843     1644  1283               	bcf	3,5	;RP0=0, select bank0
  9844     1645  1303               	bcf	3,6	;RP1=0, select bank0
  9845     1646  111F               	bcf	31,2	;volatile
  9846     1647                     l3347:
  9847                           
  9848                           ;MCAL_LAYER/ADC/hal_adc.c: 85:         (ADCON0bits.CHS = adc->channel);
  9849     1647  0879               	movf	ADC_Start_Conversion_Blocking@adc,w
  9850     1648  0084               	movwf	4
  9851     1649  1383               	bcf	3,7	;select IRP bank0
  9852     164A  0800               	movf	0,w
  9853     164B  00F8               	movwf	??_ADC_Start_Conversion_Blocking
  9854     164C  0DF8               	rlf	??_ADC_Start_Conversion_Blocking,f
  9855     164D  0DF8               	rlf	??_ADC_Start_Conversion_Blocking,f
  9856     164E  0DF8               	rlf	??_ADC_Start_Conversion_Blocking,f
  9857     164F  081F               	movf	31,w	;volatile
  9858     1650  0678               	xorwf	??_ADC_Start_Conversion_Blocking,w
  9859     1651  39C7               	andlw	-57
  9860     1652  0678               	xorwf	??_ADC_Start_Conversion_Blocking,w
  9861     1653  009F               	movwf	31	;volatile
  9862     1654                     l3349:
  9863                           
  9864                           ;MCAL_LAYER/ADC/hal_adc.c: 86:         ADC_Start_Conversion(adc);
  9865     1654  0879               	movf	ADC_Start_Conversion_Blocking@adc,w
  9866     1655  160A  118A  2453  160A  118A  	fcall	_ADC_Start_Conversion
  9867     165A                     l3351:
  9868                           
  9869                           ;MCAL_LAYER/ADC/hal_adc.c: 87:         ADC_Get_Conversion_Result(adc,result);
  9870     165A  0876               	movf	ADC_Start_Conversion_Blocking@result,w
  9871     165B  00F0               	movwf	ADC_Get_Conversion_Result@result
  9872     165C  0877               	movf	ADC_Start_Conversion_Blocking@result+1,w
  9873     165D  00F1               	movwf	ADC_Get_Conversion_Result@result+1
  9874     165E  0879               	movf	ADC_Start_Conversion_Blocking@adc,w
  9875     165F  160A  118A  272F  160A  118A  	fcall	_ADC_Get_Conversion_Result
  9876     1664                     l227:
  9877     1664  0008               	return
  9878     1665                     __end_of_ADC_Start_Conversion_Blocking:
  9879                           
  9880                           	psect	text43
  9881     1453                     __ptext43:	
  9882 ;; *************** function _ADC_Start_Conversion *****************
  9883 ;; Defined at:
  9884 ;;		line 37 in file "MCAL_LAYER/ADC/hal_adc.c"
  9885 ;; Parameters:    Size  Location     Type
  9886 ;;  adc             1    wreg     PTR const struct .
  9887 ;;		 -> adc(3), 
  9888 ;; Auto vars:     Size  Location     Type
  9889 ;;  adc             1    0[COMMON] PTR const struct .
  9890 ;;		 -> adc(3), 
  9891 ;;  ret             1    0        unsigned char 
  9892 ;; Return value:  Size  Location     Type
  9893 ;;                  1    wreg      unsigned char 
  9894 ;; Registers used:
  9895 ;;		wreg, status,2, status,0
  9896 ;; Tracked objects:
  9897 ;;		On entry : 0/0
  9898 ;;		On exit  : 0/0
  9899 ;;		Unchanged: 0/0
  9900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9901 ;;      Params:         0       0       0       0       0
  9902 ;;      Locals:         1       0       0       0       0
  9903 ;;      Temps:          0       0       0       0       0
  9904 ;;      Totals:         1       0       0       0       0
  9905 ;;Total ram usage:        1 bytes
  9906 ;; Hardware stack levels used: 1
  9907 ;; This function calls:
  9908 ;;		Nothing
  9909 ;; This function is called by:
  9910 ;;		_ADC_Start_Conversion_Blocking
  9911 ;; This function uses a non-reentrant model
  9912 ;;
  9913                           
  9914     1453                     _ADC_Start_Conversion:	
  9915                           ;psect for function _ADC_Start_Conversion
  9916                           
  9917                           
  9918                           ;incstack = 0
  9919                           ; Regs used in _ADC_Start_Conversion: [wreg+status,2+status,0]
  9920                           ;ADC_Start_Conversion@adc stored from wreg
  9921     1453  00F0               	movwf	ADC_Start_Conversion@adc
  9922     1454                     l3169:
  9923     1454                     l3171:
  9924                           
  9925                           ;MCAL_LAYER/ADC/hal_adc.c: 39:     if(adc == ((void*)0)){
  9926     1454  0870               	movf	ADC_Start_Conversion@adc,w
  9927     1455  1D03               	btfss	3,2
  9928     1456  2C58               	goto	u3761
  9929     1457  2C59               	goto	u3760
  9930     1458                     u3761:
  9931     1458  2C5A               	goto	l204
  9932     1459                     u3760:
  9933     1459                     l3173:
  9934                           
  9935                           ;MCAL_LAYER/ADC/hal_adc.c: 41:     }
  9936     1459  2C61               	goto	l209
  9937     145A                     l204:	
  9938                           ;MCAL_LAYER/ADC/hal_adc.c: 42:     else{
  9939                           
  9940                           
  9941                           ;MCAL_LAYER/ADC/hal_adc.c: 43:         ADCON0bits.GO_nDONE = 1;
  9942     145A  1283               	bcf	3,5	;RP0=0, select bank0
  9943     145B  1303               	bcf	3,6	;RP1=0, select bank0
  9944     145C  151F               	bsf	31,2	;volatile
  9945     145D                     l206:	
  9946                           ;MCAL_LAYER/ADC/hal_adc.c: 44:         while(ADCON0bits.GO_nDONE);
  9947                           
  9948     145D  191F               	btfsc	31,2	;volatile
  9949     145E  2C60               	goto	u3771
  9950     145F  2C61               	goto	u3770
  9951     1460                     u3771:
  9952     1460  2C5D               	goto	l206
  9953     1461                     u3770:
  9954     1461                     l209:
  9955     1461  0008               	return
  9956     1462                     __end_of_ADC_Start_Conversion:
  9957                           
  9958                           	psect	text44
  9959     172F                     __ptext44:	
  9960 ;; *************** function _ADC_Get_Conversion_Result *****************
  9961 ;; Defined at:
  9962 ;;		line 60 in file "MCAL_LAYER/ADC/hal_adc.c"
  9963 ;; Parameters:    Size  Location     Type
  9964 ;;  adc             1    wreg     PTR const struct .
  9965 ;;		 -> adc(3), 
  9966 ;;  result          2    0[COMMON] PTR unsigned short 
  9967 ;;		 -> RAM(512), 
  9968 ;; Auto vars:     Size  Location     Type
  9969 ;;  adc             1    4[COMMON] PTR const struct .
  9970 ;;		 -> adc(3), 
  9971 ;;  ret             1    0        unsigned char 
  9972 ;; Return value:  Size  Location     Type
  9973 ;;                  1    wreg      unsigned char 
  9974 ;; Registers used:
  9975 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  9976 ;; Tracked objects:
  9977 ;;		On entry : 0/0
  9978 ;;		On exit  : 0/0
  9979 ;;		Unchanged: 0/0
  9980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9981 ;;      Params:         2       0       0       0       0
  9982 ;;      Locals:         1       0       0       0       0
  9983 ;;      Temps:          2       0       0       0       0
  9984 ;;      Totals:         5       0       0       0       0
  9985 ;;Total ram usage:        5 bytes
  9986 ;; Hardware stack levels used: 1
  9987 ;; This function calls:
  9988 ;;		Nothing
  9989 ;; This function is called by:
  9990 ;;		_ADC_Start_Conversion_Blocking
  9991 ;; This function uses a non-reentrant model
  9992 ;;
  9993                           
  9994     172F                     _ADC_Get_Conversion_Result:	
  9995                           ;psect for function _ADC_Get_Conversion_Result
  9996                           
  9997                           
  9998                           ;incstack = 0
  9999                           ; Regs used in _ADC_Get_Conversion_Result: [wreg-fsr0h+status,2+status,0+btemp+1]
 10000                           ;ADC_Get_Conversion_Result@adc stored from wreg
 10001     172F  00F4               	movwf	ADC_Get_Conversion_Result@adc
 10002     1730                     l3175:
 10003     1730                     l3177:
 10004                           
 10005                           ;MCAL_LAYER/ADC/hal_adc.c: 62:     if(adc == ((void*)0)){
 10006     1730  0874               	movf	ADC_Get_Conversion_Result@adc,w
 10007     1731  1D03               	btfss	3,2
 10008     1732  2F34               	goto	u3781
 10009     1733  2F35               	goto	u3780
 10010     1734                     u3781:
 10011     1734  2F36               	goto	l3181
 10012     1735                     u3780:
 10013     1735                     l3179:
 10014                           
 10015                           ;MCAL_LAYER/ADC/hal_adc.c: 64:     }
 10016     1735  2F70               	goto	l222
 10017     1736                     l3181:
 10018                           
 10019                           ;MCAL_LAYER/ADC/hal_adc.c: 66:         if(adc->format == RIGHT_JUSTIFIED){
 10020     1736  0874               	movf	ADC_Get_Conversion_Result@adc,w
 10021     1737  3E02               	addlw	2
 10022     1738  0084               	movwf	4
 10023     1739  1383               	bcf	3,7	;select IRP bank0
 10024     173A  0800               	movf	0,w
 10025     173B  1D03               	btfss	3,2
 10026     173C  2F3E               	goto	u3791
 10027     173D  2F3F               	goto	u3790
 10028     173E                     u3791:
 10029     173E  2F4E               	goto	l3185
 10030     173F                     u3790:
 10031     173F                     l3183:
 10032                           
 10033                           ;MCAL_LAYER/ADC/hal_adc.c: 67:             *result = (uint16)(ADRESL + (ADRESH << 8));
 10034     173F  0870               	movf	ADC_Get_Conversion_Result@result,w
 10035     1740  0084               	movwf	4
 10036     1741  1783               	bsf	3,7
 10037     1742  1C71               	btfss	ADC_Get_Conversion_Result@result+1,0
 10038     1743  1383               	bcf	3,7
 10039     1744  1683               	bsf	3,5	;RP0=1, select bank1
 10040     1745  1303               	bcf	3,6	;RP1=0, select bank1
 10041     1746  081E               	movf	30,w	;volatile
 10042     1747  0080               	movwf	0
 10043     1748  0A84               	incf	4,f
 10044     1749  1283               	bcf	3,5	;RP0=0, select bank0
 10045     174A  1303               	bcf	3,6	;RP1=0, select bank0
 10046     174B  081E               	movf	30,w	;volatile
 10047     174C  0080               	movwf	0
 10048                           
 10049                           ;MCAL_LAYER/ADC/hal_adc.c: 68:         }
 10050     174D  2F70               	goto	l222
 10051     174E                     l3185:
 10052     174E  0874               	movf	ADC_Get_Conversion_Result@adc,w
 10053     174F  3E02               	addlw	2
 10054     1750  0084               	movwf	4
 10055     1751  0300               	decf	0,w
 10056     1752  1D03               	btfss	3,2
 10057     1753  2F55               	goto	u3801
 10058     1754  2F56               	goto	u3800
 10059     1755                     u3801:
 10060     1755  2F70               	goto	l218
 10061     1756                     u3800:
 10062     1756                     l3187:
 10063                           
 10064                           ;MCAL_LAYER/ADC/hal_adc.c: 70:             *result = (uint16)((ADRESL + (ADRESH << 8)) >
      +                          > 6);
 10065     1756  1283               	bcf	3,5	;RP0=0, select bank0
 10066     1757  1303               	bcf	3,6	;RP1=0, select bank0
 10067     1758  081E               	movf	30,w	;volatile
 10068     1759  00F3               	movwf	??_ADC_Get_Conversion_Result+1
 10069     175A  1683               	bsf	3,5	;RP0=1, select bank1
 10070     175B  1303               	bcf	3,6	;RP1=0, select bank1
 10071     175C  081E               	movf	30,w	;volatile
 10072     175D  00F2               	movwf	??_ADC_Get_Conversion_Result
 10073     175E  3006               	movlw	6
 10074     175F  00FF               	movwf	btemp+1
 10075     1760                     u3815:
 10076     1760  0D73               	rlf	??_ADC_Get_Conversion_Result+1,w
 10077     1761  0CF3               	rrf	??_ADC_Get_Conversion_Result+1,f
 10078     1762  0CF2               	rrf	??_ADC_Get_Conversion_Result,f
 10079     1763  0BFF               	decfsz	btemp+1,f
 10080     1764  2F60               	goto	u3815
 10081     1765  0870               	movf	ADC_Get_Conversion_Result@result,w
 10082     1766  0084               	movwf	4
 10083     1767  1783               	bsf	3,7
 10084     1768  1C71               	btfss	ADC_Get_Conversion_Result@result+1,0
 10085     1769  1383               	bcf	3,7
 10086     176A  0872               	movf	??_ADC_Get_Conversion_Result,w
 10087     176B  0080               	movwf	0
 10088     176C  0A84               	incf	4,f
 10089     176D  0873               	movf	??_ADC_Get_Conversion_Result+1,w
 10090     176E  0080               	movwf	0
 10091     176F  2F70               	goto	l222
 10092     1770                     l218:	
 10093                           ;MCAL_LAYER/ADC/hal_adc.c: 73:     }
 10094                           
 10095     1770                     l222:
 10096     1770  0008               	return
 10097     1771                     __end_of_ADC_Get_Conversion_Result:
 10098     007E                     btemp	set	126	;btemp
 10099     007E                     wtemp0	set	126
 10100                           
 10101                           	psect	config
 10102                           
 10103                           ;Config register CONFIG @ 0x2007
 10104                           ;	Oscillator Selection bits
 10105                           ;	FOSC = EXTRC, RC oscillator
 10106                           ;	Watchdog Timer Enable bit
 10107                           ;	WDTE = OFF, WDT disabled
 10108                           ;	Power-up Timer Enable bit
 10109                           ;	PWRTE = OFF, PWRT disabled
 10110                           ;	Brown-out Reset Enable bit
 10111                           ;	BOREN = OFF, BOR disabled
 10112                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
 10113                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
 10114                           ;	Data EEPROM Memory Code Protection bit
 10115                           ;	CPD = OFF, Data EEPROM code protection off
 10116                           ;	Flash Program Memory Write Enable bits
 10117                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
 10118                           ;	In-Circuit Debugger Mode bit
 10119                           ;	DEBUG = 0x1, unprogrammed default
 10120                           ;	Flash Program Memory Code Protection bit
 10121                           ;	CP = OFF, Code protection off
 10122     2007                     	org	8199
 10123     2007  3F3B               	dw	16187

Data Sizes:
    Strings     65
    Constant    12
    Data        49
    BSS         88
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     67      80
    BANK1            80      0      75
    BANK3            96      0      49
    BANK2            96      0       0

Pointer List with Targets:

    ADC_Get_Conversion_Result@adc	PTR const struct . size(1) Largest target is 3
		 -> adc(BANK1[3]), 

    ADC_Get_Conversion_Result@result	PTR unsigned short  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    ADC_INIT@adc	PTR const struct . size(1) Largest target is 3
		 -> adc(BANK1[3]), 

    ADC_Start_Conversion@adc	PTR const struct . size(1) Largest target is 3
		 -> adc(BANK1[3]), 

    ADC_Start_Conversion_Blocking@adc	PTR const struct . size(1) Largest target is 3
		 -> adc(BANK1[3]), 

    Convert_uint16_to_string@str	PTR unsigned char  size(1) Largest target is 6
		 -> lcd_show(BANK1[6]), lcd_show_max(BANK1[6]), 

    EXT_INTX_HANDLER	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    EXT_RB4_HIGH_HANDLER	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    EXT_RB4_LOW_HANDLER	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    EXT_RB5_HIGH_HANDLER	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    EXT_RB5_LOW_HANDLER	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    EXT_RB6_HIGH_HANDLER	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    EXT_RB6_LOW_HANDLER	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    EXT_RB7_HIGH_HANDLER	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    EXT_RB7_LOW_HANDLER	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    f$.$buffer	PTR unsigned char  size(1) Largest target is 0

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    gpio_pin_direction_initialize@pin	PTR const struct . size(1) Largest target is 7
		 -> buzzer(BANK0[1]), keypad(BANK1[7]), keypad$COLOUMNS_PIN(BANK1[3]), keypad$ROWS_PIN(BANK1[4]), 
		 -> lcd(BANK1[6]), lcd$pins(BANK1[4]), motor1(BANK1[2]), motor1$pins(BANK1[2]), 
		 -> motor2(BANK1[2]), motor2$pins(BANK1[2]), 

    gpio_pin_initialize@pin	PTR const struct . size(1) Largest target is 7
		 -> buzzer(BANK0[1]), keypad(BANK1[7]), keypad$COLOUMNS_PIN(BANK1[3]), keypad$ROWS_PIN(BANK1[4]), 
		 -> lcd(BANK1[6]), lcd$pins(BANK1[4]), motor1(BANK1[2]), motor1$pins(BANK1[2]), 
		 -> motor2(BANK1[2]), motor2$pins(BANK1[2]), 

    gpio_pin_read_logic@logic	PTR enum E1519 size(1) Largest target is 1
		 -> keypad_read_value@val(BANK0[1]), 

    gpio_pin_read_logic@pin	PTR const struct . size(1) Largest target is 7
		 -> keypad(BANK1[7]), keypad$COLOUMNS_PIN(BANK1[3]), 

    gpio_pin_write_logic@pin	PTR const struct . size(1) Largest target is 7
		 -> buzzer(BANK0[1]), keypad(BANK1[7]), keypad$COLOUMNS_PIN(BANK1[3]), keypad$ROWS_PIN(BANK1[4]), 
		 -> lcd(BANK1[6]), lcd$pins(BANK1[4]), motor1(BANK1[2]), motor1$pins(BANK1[2]), 
		 -> motor2(BANK1[2]), motor2$pins(BANK1[2]), 

    keypad_initialize@keypad	PTR const struct . size(1) Largest target is 7
		 -> keypad(BANK1[7]), 

    keypad_read_value@keypad	PTR const struct . size(1) Largest target is 7
		 -> keypad(BANK1[7]), 

    keypad_read_value@value	PTR unsigned char  size(1) Largest target is 4
		 -> temp(BANK1[4]), val(BANK0[1]), 

    lcd_4bits_initialize@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd(BANK1[6]), 

    lcd_4bits_send_char@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd(BANK1[6]), 

    lcd_4bits_send_command@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd(BANK1[6]), 

    lcd_4bits_send_string@data	PTR unsigned char  size(2) Largest target is 17
		 -> lcd_show(BANK1[6]), lcd_show_max(BANK1[6]), STR_4(CODE[15]), STR_5(CODE[17]), 
		 -> STR_6(CODE[11]), STR_7(CODE[15]), STR_8(CODE[15]), 

    lcd_4bits_send_string@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd(BANK1[6]), 

    lcd_4bits_send_string_pos@data	PTR unsigned char  size(2) Largest target is 15
		 -> lcd_show(BANK1[6]), lcd_show_max(BANK1[6]), STR_4(CODE[15]), STR_6(CODE[11]), 
		 -> STR_7(CODE[15]), STR_8(CODE[15]), 

    lcd_4bits_send_string_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd(BANK1[6]), 

    memset@dest	PTR void  size(1) Largest target is 6
		 -> lcd_show(BANK1[6]), lcd_show_max(BANK1[6]), 

    memset@p	PTR unsigned char  size(1) Largest target is 6
		 -> lcd_show(BANK1[6]), lcd_show_max(BANK1[6]), 

    motor_initialize@motor	PTR const struct . size(1) Largest target is 2
		 -> motor1(BANK1[2]), motor2(BANK1[2]), 

    motor_turn_left@motor	PTR const struct . size(1) Largest target is 2
		 -> motor2(BANK1[2]), 

    motor_turn_off@motor	PTR const struct . size(1) Largest target is 2
		 -> motor1(BANK1[2]), motor2(BANK1[2]), 

    motor_turn_right@motor	PTR const struct . size(1) Largest target is 2
		 -> motor1(BANK1[2]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTB(SFR0[1]), PORTC(SFR0[1]), PORTD(SFR0[1]), 
		 -> PORTE(SFR0[1]), 

    READ_DATA_EEPROM@data	PTR unsigned char  size(1) Largest target is 2
		 -> Max_Temp(BANK0[2]), 

    Result_Format@adc	PTR const struct . size(1) Largest target is 3
		 -> adc(BANK1[3]), 

    S1231$buffer	PTR unsigned char  size(1) Largest target is 0

    S1231$source	PTR const unsigned char  size(1) Largest target is 0

    send_4bits@lcd	PTR struct . size(1) Largest target is 6
		 -> lcd(BANK1[6]), 

    send_enable_signal@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd(BANK1[6]), 

    set_cursor@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd(BANK1[6]), 

    sp__memset	PTR void  size(1) Largest target is 6
		 -> lcd_show(BANK1[6]), lcd_show_max(BANK1[6]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 11
		 -> Convert_uint16_to_string@temp(BANK0[6]), Convert_uint32_to_string@temp(COMMON[11]), Convert_uint8_to_string@temp(COMMON[4]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(SFR1[1]), TRISB(SFR1[1]), TRISC(SFR1[1]), TRISD(SFR1[1]), 
		 -> TRISE(SFR1[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _main->_lcd_4bits_send_command
    _motor_turn_right->_gpio_pin_write_logic
    _motor_turn_off->_gpio_pin_write_logic
    _motor_turn_left->_gpio_pin_write_logic
    _set_cursor->_lcd_4bits_send_command
    _lcd_4bits_send_string->_lcd_4bits_send_char
    _lcd_4bits_send_char->_send_4bits
    _keypad_read_value->_gpio_pin_read_logic
    _keypad_read_value->_gpio_pin_write_logic
    _mcal_initialize->_ADC_INIT
    _ADC_INIT->_Result_Format
    _ecu_initialzie->_motor_initialize
    _motor_initialize->_gpio_pin_initialize
    _lcd_4bits_initialize->_lcd_4bits_send_command
    _lcd_4bits_send_command->_send_4bits
    _send_enable_signal->_gpio_pin_write_logic
    _send_4bits->_gpio_pin_write_logic
    _keypad_initialize->_gpio_pin_initialize
    _gpio_pin_initialize->_gpio_pin_write_logic
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    ___fldiv->___xxtofl
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _ADC_Start_Conversion_Blocking->_ADC_Get_Conversion_Result

Critical Paths under _main in BANK0

    _main->___fltol
    _lcd_4bits_send_string_pos->_lcd_4bits_send_string
    _lcd_4bits_send_string_pos->_set_cursor
    _set_cursor->_lcd_4bits_send_command
    _lcd_4bits_send_string->_lcd_4bits_send_char
    _ecu_initialzie->_lcd_4bits_initialize
    _lcd_4bits_initialize->_lcd_4bits_send_command
    ___fltol->___fldiv
    ___fldiv->___flmul
    _Convert_uint16_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   90100
                                             62 BANK0      5     5      0
      _ADC_Start_Conversion_Blocking
           _Convert_uint16_to_string
                   _READ_DATA_EEPROM
                  _WRITE_DATA_EEPROM
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
             _apllication_initilaize
               _gpio_pin_write_logic
                  _keypad_read_value
             _lcd_4bits_send_command
              _lcd_4bits_send_string
          _lcd_4bits_send_string_pos
                    _motor_turn_left
                     _motor_turn_off
                   _motor_turn_right
 ---------------------------------------------------------------------------------
 (1) _motor_turn_right                                     2     2      0    2590
                                              8 COMMON     2     2      0
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _motor_turn_off                                       2     2      0    2623
                                              8 COMMON     2     2      0
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _motor_turn_left                                      2     2      0    2557
                                              8 COMMON     2     2      0
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _lcd_4bits_send_string_pos                            6     2      4   21618
                                              6 BANK0      6     2      4
              _lcd_4bits_send_string
                         _set_cursor
 ---------------------------------------------------------------------------------
 (2) _set_cursor                                           4     2      2   10816
                                              2 BANK0      4     2      2
             _lcd_4bits_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bits_send_string                                4     2      2    9094
                                              2 BANK0      4     2      2
                _lcd_4bits_send_char
 ---------------------------------------------------------------------------------
 (3) _lcd_4bits_send_char                                  4     3      1    8762
                                             12 COMMON     2     1      1
                                              0 BANK0      2     2      0
               _gpio_pin_write_logic
                         _send_4bits
                 _send_enable_signal
 ---------------------------------------------------------------------------------
 (1) _keypad_read_value                                    9     8      1    3667
                                              8 COMMON     3     2      1
                                              0 BANK0      5     5      0
                             ___bmul
                _gpio_pin_read_logic
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_read_logic                                  8     7      1     464
                                              0 COMMON     8     7      1
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1     118
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _apllication_initilaize                               0     0      0   25074
                     _ecu_initialzie
                    _mcal_initialize
 ---------------------------------------------------------------------------------
 (2) _mcal_initialize                                      1     1      0     210
                           _ADC_INIT
 ---------------------------------------------------------------------------------
 (3) _ADC_INIT                                             3     3      0     208
                                              3 COMMON     3     3      0
                      _Result_Format
 ---------------------------------------------------------------------------------
 (4) _Result_Format                                        4     4      0      85
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _ecu_initialzie                                       0     0      0   24864
                _gpio_pin_initialize
                  _keypad_initialize
               _lcd_4bits_initialize
                   _motor_initialize
 ---------------------------------------------------------------------------------
 (3) _motor_initialize                                     2     2      0    3581
                                             12 COMMON     2     2      0
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (3) _lcd_4bits_initialize                                 6     6      0   14158
                                              2 BANK0      6     6      0
                _gpio_pin_initialize
             _lcd_4bits_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bits_send_command                               4     3      1   10288
                                             12 COMMON     2     1      1
                                              0 BANK0      2     2      0
               _gpio_pin_write_logic
                         _send_4bits
                 _send_enable_signal
 ---------------------------------------------------------------------------------
 (4) _send_enable_signal                                   3     3      0    2672
                                              8 COMMON     3     3      0
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _send_4bits                                           4     3      1    3110
                                              8 COMMON     4     3      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _keypad_initialize                                    4     4      0    3686
                                              0 BANK0      3     3      0
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_initialize                                  4     4      0    3439
                                              8 COMMON     4     4      0
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                 8     7      1    2448
                                              0 COMMON     8     7      1
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_initialize                        7     7      0     394
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                             52 BANK0     10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2417
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1273
                                             26 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _WRITE_DATA_EEPROM                                    4     1      3     219
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _READ_DATA_EEPROM                                     3     0      3     196
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (1) _Convert_uint16_to_string                            11     8      3    4560
                                             29 BANK0     11     8      3
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             19    16      3    3376
                                             12 BANK0     17    14      3
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     2      2    2850
                                              8 BANK0      4     2      2
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           12    10      2    2543
                                             10 COMMON     4     2      2
                                              0 BANK0      8     8      0
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     782
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMMON     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                               6     2      4     651
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _ADC_Start_Conversion_Blocking                        6     3      3     593
                                              5 COMMON     5     2      3
          _ADC_Get_Conversion_Result
               _ADC_Start_Conversion
 ---------------------------------------------------------------------------------
 (2) _ADC_Start_Conversion                                 2     2      0      63
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Get_Conversion_Result                            6     4      2     227
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Start_Conversion_Blocking
     _ADC_Get_Conversion_Result
     _ADC_Start_Conversion
   _Convert_uint16_to_string
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _READ_DATA_EEPROM
   _WRITE_DATA_EEPROM
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
   ___fltol
     ___fldiv (ARG)
     ___flmul (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _apllication_initilaize
     _ecu_initialzie
       _gpio_pin_initialize
         _gpio_pin_direction_initialize
         _gpio_pin_write_logic
       _keypad_initialize
         _gpio_pin_initialize
       _lcd_4bits_initialize
         _gpio_pin_initialize
         _lcd_4bits_send_command
           _gpio_pin_write_logic
           _send_4bits
             _gpio_pin_write_logic
           _send_enable_signal
             _gpio_pin_write_logic
       _motor_initialize
         _gpio_pin_initialize
     _mcal_initialize
       _ADC_INIT
         _Result_Format
   _gpio_pin_write_logic
   _keypad_read_value
     ___bmul
     _gpio_pin_read_logic
     _gpio_pin_write_logic
   _lcd_4bits_send_command
   _lcd_4bits_send_string
     _lcd_4bits_send_char
       _gpio_pin_write_logic
       _send_4bits
       _send_enable_signal
   _lcd_4bits_send_string_pos
     _lcd_4bits_send_string
     _set_cursor
       _lcd_4bits_send_command
   _motor_turn_left
     _gpio_pin_write_logic
   _motor_turn_off
     _gpio_pin_write_logic
   _motor_turn_right
     _gpio_pin_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      31       9       51.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      4B       7       93.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     43      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      DA      12        0.0%
ABS                  0      0      DA       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Aug 16 15:34:44 2024

         ADC_Get_Conversion_Result@adc 0074                           ___fldiv@aexp 0053  
                         ___fldiv@bexp 0052                                      pc 0002  
                         ___fldiv@sign 004B                         ___bmul@product 0071  
                                   l32 0AA8                                     l19 16F9  
                                   l62 17B7                                     l80 172E  
                                   l57 0CA0                                     l67 17FF  
                                   l85 1615                           ___awdiv@sign 0075  
          keypad_read_value@l_coloumns 0024                                     fsr 0004  
                  __Umul8_16@word_mpld 0076                       _READ_DATA_EEPROM 1473  
                                  l101 08D2                                    l121 091C  
                                  l204 145A                                    l125 15CC  
                                  l222 1770                                    l206 145D  
                                  l302 0E30                                    l126 15CD  
                                  l150 1510                                    l136 1694  
                                  l160 14DC                                    l209 1461  
                                  l225 1644                                    l145 14C3  
                                  l233 15D5              _lcd_4bits_send_string_pos 15F2  
                                  l218 1770                                    l227 1664  
                                  l251 15A2                                    l235 15D9  
                                  l155 14F6                                    l236 15F1  
                                  l253 15A6                                    l181 156A  
                                  l254 15AC                                    l342 0F10  
                                  l257 1484                                    l361 0BEA  
                                  l194 0867                                    l347 0B48  
                                  l196 0888                                    l550 000E  
                                  l527 032F                                    l457 144A  
                                  l802 09CB                                    l395 0B3B  
                                  l830 0086                                    l662 14AC  
                                  l840 0086                                    l837 0071  
                                  l789 0A32                                    l993 00DD  
                                  l995 0255                                    _adc 00C9  
                                  _abs 1462                                    _lcd 00BF  
                                  _val 006E                                    fsr0 0004  
                                  indf 0000                           ___awmod@sign 0075  
                      _mcal_initialize 1444                      ?_motor_initialize 0070  
                         ___flmul@aexp 0032                           ___flmul@bexp 0033  
                         ___flmul@sign 002D                           ___flmul@temp 0038  
                         ___flmul@prod 0034                     ??_motor_initialize 007C  
                         ___fltol@exp1 005D                                   l1015 0241  
                                 l1105 154B                                   l1009 01CF  
                                 l1033 07CD                                   ?_abs 0076  
                                 l1052 162A                                   l1054 163C  
                                 l1143 0FFF                                   l1039 073D  
                                 l3001 0C11                                   l1090 0D22  
                                 l1091 0D2E                                   l3011 0C4A  
                                 l3003 0C17                                   l1156 1472  
                                 l1149 158B                                   l1077 0CC3  
                                 l3021 0C78                                   l3013 0C50  
                                 l3005 0C1D                                   l3101 0B9A  
                                 l1079 0D58                                   l3023 0C82  
                                 l3015 0C5A                                   l3007 0C2C  
                                 l3103 0BA8                                   l3031 17BB  
                                 l1168 0972                                   l3025 0C8C  
                                 l3017 0C64                                   l3009 0C36  
                                 l3201 14A2                                   l3105 0BB1  
                                 l3033 17BB                                   l3121 167E  
                                 l3113 1668                                   l4001 0383  
                                 l1098 152C                                   l1179 1443  
                                 l3211 1617                                   l3027 0C96  
                                 l3019 0C6E                                   l3043 14AE  
                                 l3203 14A4                                   l3107 0BBF  
                                 l3035 17C0                                   l3131 16FD  
                                 l3115 1669                                   l4011 03B4  
                                 l4003 039D                                   l3301 08A3  
                                 l3221 1638                                   l3213 1619  
                                 l3045 14AE                                   l3061 0878  
                                 l3053 085E                                   l3205 14A6  
                                 l3109 0BE9                                   l3037 17C3  
                                 l3141 171F                                   l3133 16FE  
                                 l3117 166E                                   l3125 168B  
                                 l4021 0418                                   l4013 03BF  
                                 l4005 03A5                                   l3151 151A  
                                 l3071 156E                                   l3303 08AA  
                                 l3215 1620                                   l3047 14B3  
                                 l3063 087E                                   l3055 085F  
                                 l3207 14AB                                   l3231 0A40  
                                 l3039 17FE                                   l3143 172D  
                                 l3135 1703                                   l3119 1671  
                                 l3127 1693                                   l3311 14F8  
                                 l4031 0457                                   l4023 0423  
                                 l4015 03C6                                   l4007 03AB  
                                 l3153 151E                                   l3073 1571  
                                 l3161 1538                                   l3305 08B7  
                                 l3217 1624                                   l3401 0037  
                                 l3049 14B4                                   l3065 0884  
                                 l3057 0864                                   l3081 0B3D  
                                 l3225 0A36                                   l3137 1706  
                                 l3321 14DE                                   l3313 14F8  
                                 l4033 046A                                   l4025 042C  
                                 l4017 0405                                   l4009 03B1  
                                 l3171 1454                                   l3147 1512  
                                 l3075 157B                                   l3163 1542  
                                 l3155 1530                                   l3307 08C3  
                                 l3219 1633                                   l3403 003F  
                                 l3059 086B                                   l3067 0887  
                                 l3091 0B63                                   l3083 0B3E  
                                 l3251 0A5F                                   l3243 0A42  
                                 l3227 0A3A                                   l3139 1719  
                                 l3323 14DE                                   l3331 14C5  
                                 l3315 14FD                                   l4035 0476  
                                 l4027 0439                                   l4019 040A  
                                 l3181 1736                                   l3173 1459  
                                 l3341 163E                                   l3149 1515  
                                 l3077 1589                                   l3157 1534  
                                 l3309 08C7                                   l3501 0154  
                                 l3413 004D                                   l3405 0041  
                                 l2701 15C3                                   l3093 0B6C  
                                 l3085 0B43                                   l3261 0A75  
                                 l3253 0A68                                   l3245 0A4A  
                                 l3237 0A41                                   l3229 0A3F  
                                 l3325 14E3                                   l3333 14C5  
                                 l3317 14FE                                   l4037 047A  
                                 l4029 0442                                   l3183 173F  
                                 l3175 1730                                   l3351 165A  
                                 l3343 163E                                   l3159 1536  
                                 l3503 015D                                   l3511 0182  
                                 l3431 008C                                   l3423 0066  
                                 l3415 0056                                   l3407 0045  
                                 l2711 0D60                                   l3167 154C  
                                 l3191 1444                                   l3095 0B7A  
                                 l3087 0B4B                                   l3271 0AA2  
                                 l3263 0A7C                                   l3247 0A50  
                                 l3327 14E4                                   l3335 14CA  
                     ??_motor_turn_off 0078                                   l3185 174E  
                                 l3177 1730                                   l3169 1454  
                                 l3345 1643                                   l2801 0998  
                                 l3361 1597                                   l3521 019F  
                                 l3513 0188                                   l3505 016F  
                                 l3441 009F                                   l3433 0090  
                                 l3601 04C1                                   l3425 0076  
                                 l3417 005F                                   l2721 0D98  
                                 l2713 0D6A                                   l2705 0D5A  
                                 l2641 0E38                                   l3193 1444  
                                 l3097 0B83                                   l3089 0B55  
                                 l3265 0A94                                   l3249 0A56  
                                 l3337 14CB                                   l3187 1756  
                                 l3179 1735                                   l3347 1647  
                                 l2811 09B7                                   l2803 099C  
                                 l3371 15A1                                   l3363 1599  
                                 l3355 158C                                   l3531 01B4  
                                 l3523 01A0                                   l3515 0190  
                                 l3507 0170                                   l3451 00B7  
                                 l3443 00A7                                   l3435 0094  
                                 l3611 04DD                                   l3603 04C6  
                                 l3427 007B                                   l2731 0DD5  
                                 l2723 0DA6                                   l2715 0D78  
                                 l2707 0D5A                                   l4091 0F07  
                                 l2651 0E6A                                   l2643 0E3B  
                                 l3195 1499                                   l3099 0B91  
                                 l3267 0A98                                   l3259 0A6B  
                                 l3291 15FB                                   l3349 1654  
                                 l2741 09CD                                   l2805 09A0  
                                 l2813 09BD                                   l2821 091D  
                                 l3381 147B                                   l3373 15A7  
                                 l3365 159C                                   l3357 1590  
                                 l3541 01D9                                   l3533 01B8  
                                 l3525 01A9                                   l3517 0192  
                                 l3509 017E                                   l3461 00CA  
                                 l3453 00BB                                   l3445 00A8  
                                 l3437 0095                                   l3429 0087  
                                 l3701 07A9                                   l3621 04FE  
                                 l3613 04E2                                   l3605 04CB  
                                 l2733 0DFD                                   l2725 0DAF  
                                 l2717 0D81                                   l2709 0D5F  
                                 l2661 0EA1                                   l2653 0E73  
                                 l2645 0E45                                   l2637 0E32  
                                 l3197 149A                                   l3269 0A9E  
                                 l3285 15F5                                   l2751 09E1  
                                 l2743 09D1                                   l2815 09C2  
                                 l2807 09AA                                   l2831 095B  
                                 l2823 0922                                   l2911 0F36  
                                 l2903 0F14                                   l3295 0889  
                                 l3383 147C                                   l3375 1473  
                                 l3367 159D                                   l3359 1593  
                                 l3551 0217                                   l3543 01E7  
                                 l3535 01CC                                   l3519 019B  
                                 l3527 01AF                                   l3471 00F1  
                                 l3463 00D2                                   l3455 00BF  
                                 l3439 009A                                   l3447 00AA  
                                 l3703 07AB                                   l3711 07C1  
                                 l3631 0588                                   l3623 050B  
                                 l3615 04E7                                   l3607 04D3  
                                 l3391 000F                                   l2727 0DBD  
                                 l2719 0D8F                                   l2663 0EB0  
                                 l2655 0E81                                   l2647 0E53  
                                 l2671 0F0F                                   l2639 0E33  
                                 l3199 149E                                   l3287 15F5  
                                 l2761 09F7                                   l2753 09E5  
                                 l2745 09D6                                   l2817 09C7  
                                 l2809 09B0                                   l2825 0927  
                                 l2921 0F66                                   l2913 0F3C  
                                 l2905 0F23                                   l3297 0892  
                                 l3385 147D                                   l3377 1477  
                                 l3369 159F                                   l3561 0245  
                                 l3553 0225                                   l3545 01EB  
                                 l3529 01B3                                   l3473 00F5  
                                 l3465 00D3                                   l3457 00C0  
                                 l3449 00B2                                   l3713 07C5  
                                 l3705 07B7                                   l3641 05E6  
                                 l3633 05A4                                   l3625 0526  
                                 l3609 04D5                                   l3393 001A  
                                 l3721 0CAB                                   l2729 0DC6  
                                 l2737 0E24                                   l2665 0ED7  
                                 l2657 0E8A                                   l2649 0E5C  
                                 l2681 08D4                                   l4089 15E9  
                                 l3289 15FA                                   l2771 0A17  
                                 l2763 09FB                                   l2755 09E7  
                                 l2747 09D8                                   l2739 09CC  
                                 l2835 1462                                   l2827 092E  
                                 l2931 0FA9                                   l2923 0F68  
                                 l2915 0F48                                   l2907 0F29  
                                 l3299 0895                                   l3379 147A  
                                 l3563 0249                                   l3555 0234  
                                 l3547 0204                                   l3539 01D4  
                                 l3491 0136                                   l3483 010C  
                                 l3459 00C5                                   l3467 00D5  
                                 l3707 07BB                                   l3651 0670  
                                 l3643 0603                                   l3635 05AD  
                                 l3627 0542                                   l3619 04F0  
                                 l3731 0CD7                                   l3723 0CBB  
                                 l2659 0E98                                   l2851 0ABD  
                                 l2843 0AAA                                   l2683 08D9  
                                 l2691 15AE                                   l3387 0004  
                                 l2773 0A1E                                   l2765 09FF  
                                 l2757 09ED                                   l2749 09DC  
                                 l2837 1466                                   l2829 093D  
                                 l2941 0FD3                                   l2933 0FAE  
                                 l2925 0F6F                                   l2917 0F54  
                                 l2909 0F32                                   l3565 024B  
                                 l3557 0238                                   l3549 020A  
                                 l3493 0138                                   l3485 011E  
                                 l3469 00E5                                   l3477 00FE  
                                 l3709 07BC                                   l3661 0700  
                                 l3653 069B                                   l3645 061A  
                                 l3637 05BB                                   l3629 056C  
                                 l3581 0496                                   l3397 0023  
                                 l3741 0CFD                                   l3733 0CDB  
                                 l3725 0CCB                                   l3717 0CA2  
                                 l2669 0EFF                                   l2861 0AF9  
                                 l2853 0ACB                                   l2845 0AAB  
                                 l2685 08DC                                   l2693 15AE  
                                 l3389 0009                                   l2767 0A10  
                                 l2759 09F0                                   l2775 0A24  
                                 l2791 097F                                   l2783 0973  
                                 l2839 1467                                   l2935 0FB3  
                                 l2943 0FD9                                   l2927 0F8E  
                                 l2919 0F61                                   l3567 024F  
                                 l3559 0240                                   l3495 013D  
                                 l3487 0126                                   l3479 0103  
                                 l3663 0709                                   l3671 071D  
                                 l3655 06C1                                   l3647 0637  
                                 l3639 05D8                                   l3591 04AB  
                                 l3583 0497                                   l3575 0489  
                                 l3399 0036                                   l3751 0D26  
                                 l3743 0D06                                   l3735 0CE4  
                                 l3719 0CA7                                   l2863 0B02  
                                 l2855 0AD4                                   l2871 0B3A  
                                 l2847 0AB0                                   l2687 091B  
                                 l2679 08D4                                   l2695 15B3  
                                 l2777 0A29                                   l2769 0A16  
                                 l2793 0983                                   l2785 0974  
                                 l2937 0FB8                                   l2929 0FA3  
                                 l2945 0FE0                                   l3497 014F  
                                 l3489 012E                                   l3673 0721  
                                 l3665 070D                                   l3657 06E9  
                                 l3649 0662                                   l3593 04B3  
                                 l3585 049C                                   l3577 048E  
                                 l3761 0D50                                   l3753 0D30  
                                 l3745 0D0D                                   l3737 0CEB  
                                 l3729 0CD4                                   l2865 0B10  
                                 l2857 0AE2                                   l2849 0AB3  
                                 l2961 16D0                                   l2697 15B6  
                                 l2881 177C                                   l2779 0A2E  
                                 l2795 0988                                   l2787 0978  
                                 l2939 0FC1                                   l3499 0153  
                                 l3691 0772                                   l3683 0742  
                                 l3675 0722                                   l3667 070E  
                                 l3659 06F2                                   l3595 04B8  
                                 l3587 04A1                                   l3579 0492  
                                 l3755 0D46                                   l3747 0D18  
                                 l3739 0CEF                                   l2867 0B19  
                                 l2859 0AEB                                   l2971 16DE  
                                 l2955 16C8                                   l2699 15BF  
                                 l2883 17B6                                   l2875 1774  
                                 l2891 15D4                                   l2797 098E  
                                 l2789 097D                                   l2949 0FE8  
                                 l3685 0747                                   l3693 0778  
                                 l3677 0726                                   l3669 0717  
                                 l3597 04BC                                   l3589 04A9  
                                 l3757 0D4B                                   l3749 0D1C  
                                 l2869 0B27                                   l2981 16ED  
                                 l2973 16E4                                   l2957 16CA  
                                 l2877 1774                                   l2799 0991  
                                 l3695 0785                                   l3687 0755  
                                 l3679 073A                                   l3599 04C0  
                                 l3759 0D4F                                   l2983 16F3  
                                 l2967 16D1                                   l2959 16CF  
                                 l2879 1779                                   l2991 0BF5  
                                 l2895 15DD                                   l2887 15CF  
                                 l3951 02C2                                   l3943 0256  
                                 l3697 0790                                   l3689 0759  
                                 l2969 16D8                                   l2993 0C08  
                                 l2985 0BEE                                   l2889 15CF  
                                 l3961 02FB                                   l3953 02CD  
                                 l3945 025B                                   l3699 079F  
                                 l2979 16E5                                   l2987 0BEF  
                                 l3971 0314                                   l3955 02D5  
                                 l3947 0266                                   l2989 0BF4  
                                 l3973 0323                                   l3957 02DD  
                                 l3949 0271                                   l2999 0C09  
                                 l3991 035A                                   l3983 0332  
                                 l3975 0329                                   l3967 02FF  
                                 l3959 02E2                                   l3993 0368  
                                 l3985 0341                                   l3977 0331  
                                 l3969 0308                                   l3987 0342  
                                 l3989 034A                                   l3997 0371  
                                 l3999 0379                                   STR_1 085A  
                                 STR_2 085A                                   STR_4 083C  
                                 STR_5 081C                                   STR_6 0831  
                                 STR_7 082D                                   STR_8 084B  
                                 u3010 09D1                                   u3011 09D0  
                                 u3100 0A29                                   u3020 09DC  
                                 u3004 0E0A                                   u3101 0A28  
                                 u3021 09DB                                   u3005 0E08  
                                 u3030 09ED                                   u3110 0978  
                                 u3031 09EC                                   u3111 0977  
                                 u3120 0983                                   u3200 0922  
                                 u4000 15A6                                   u3121 0982  
                                 u3201 0921                                   u4001 15A5  
                                 u3050 09FF                                   u3130 098E  
                                 u3210 0927                                   u4010 001A  
                                 u3051 09FE                                   u3131 098D  
                                 u3211 0926                                   u4011 0019  
                                 u3220 093D                                   u4100 007B  
                                 u4020 0031                                   u3300 0AEB  
                                 u3045 09F1                                   u3221 093C  
                                 u4101 007A                                   u3301 0AEA  
                                 u3070 0A10                                   u3150 09A0  
                                 u3230 095B                                   u4110 0094  
                                 u4030 0045                                   u3310 0AF9  
                                 u3071 0A0F                                   u3151 099F  
                                 u3231 095A                                   u4111 0093  
                                 u4031 0044                                   u3311 0AF8  
                                 u3160 09AA                                   u3240 1466  
                                 u3400 0F48                                   u4120 009A  
                                 u4040 004C                                   u3320 0B02  
                                 u3065 0A00                                   u3161 09A9  
                                 u3145 0992                                   u3241 1465  
                                 u3401 0F47                                   u4121 0099  
                                 u4041 004B                                   u4025 002C  
                                 u3321 0B01                                   u3090 0A24  
                                 u3410 0F54                                   u4130 009F  
                                 u3330 0B10                                   u3250 0AB0  
                                 u3091 0A23                                   u3075 0A0C  
                                 u3235 0957                                   u3411 0F53  
                                 u4131 009E                                   u3331 0B0F  
                                 u3251 0AAF                                   u3180 09BD  
                                 u3420 0F6D                                   u4300 01B3  
                                 u4220 0153                                   u4140 00BF  
                                 u4060 005E                                   u3340 0B19  
                                 u3260 0ABD                                   u3500 16E4  
                                 u3085 0A18                                   u3181 09BC  
                                 u3165 09A6                                   u3421 0F6B  
                                 u4301 01B2                                   u4221 0152  
                                 u4205 013F                                   u4141 00BE  
                                 u4061 005D                                   u3341 0B18  
                                 u3261 0ABC                                   u3501 16E3  
                                 u3190 09C2                                   u3430 0F6E  
                                 u4310 01B8                                   u4150 00C5  
                                 u4070 0065                                   u2710 0E38  
                                 u3350 0B27                                   u3270 0ACB  
                                 u3510 16F9                                   u3191 09C1  
                                 u3175 09B1                                   u4311 01B7  
                                 u4215 0148                                   u4151 00C4  
                                 u4071 0064                                   u4055 004E  
                                 u2711 0E37                                   u3351 0B26  
                                 u3271 0ACA                                   u3511 16F8  
                                 u3440 0FA9                                   u4320 01CC  
                                 u4240 016F                                   u4160 00CA  
                                 u4400 0496                                   u2800 0EA1  
                                 u2720 0E45                                   u3280 0AD4  
                                 u3360 1779                                   u3520 0BF4  
                                 u3600 0B48                                   u3441 0FA8  
                                 u4321 01CB                                   u4241 016E  
                                 u4161 00C9                                   u4401 0495  
                                 u2801 0EA0                                   u2721 0E44  
                                 u3281 0AD3                                   u3361 1778  
                                 u3521 0BF3                                   u3601 0B47  
                          main@counter 0061                                   u3450 0FAE  
                                 u4330 01D3                                   u4250 0188  
                                 u4170 00E5                                   u4410 049C  
                                 u4090 0076                                   u2810 0EAF  
                                 u2730 0E53                                   u3290 0AE2  
                                 u3530 0C1D                                   u3610 0B55  
                                 u3451 0FAD                                   u4331 01D2  
                                 u4251 0187                                   u4235 0156  
                                 u4171 00E4                                   u4411 049B  
                                 u4091 0075                                   u2811 0EAE  
                                 u2731 0E52                                   u3291 0AE1  
                                 u3531 0C1C                                   u3611 0B54  
                                 u3460 0FB3                                   u4340 01D9  
                                 u4260 0190                                   u4180 0103  
                                 u4420 04A1                                   u2900 0D78  
                                 u2740 0E5C                                   u3380 15D4  
                                 u3700 0BBF                                   u3620 0B63  
                                 u3540 17C0                                   u5300 032F  
                                 u3461 0FB2                                   u4341 01D8  
                                 u4261 018F                                   u4245 016B  
                                 u4181 0102                                   u4501 057A  
                                 u4421 04A0                                   u4085 0068  
                                 u2901 0D77                                   u2741 0E5B  
                                 u3381 15D3                                   u3701 0BBE  
                                 u3621 0B62                                   u3541 17BF  
                                 u5301 032E                                   u3470 0FB8  
                                 u3390 0F23                                   u4350 01EB  
                                 u4190 013D                                   u4502 0581  
                                 u4430 04C0                                   u2910 0D81  
                                 u2750 0E6A                                   u3630 0B6C  
                                 u5310 0341                                   u3471 0FB7  
                                 u3391 0F22                                   u4351 01EA  
                                 u4191 013C                                   u4511 0596  
                                 u4503 0588                                   u4431 04BF  
                                 u2911 0D80                                   u2751 0E69  
                                 u3375 1789                                   u3631 0B6B  
                                 u5311 0340                                   u3800 1756  
                                 u3480 0FDF                                   u4360 01FA  
                                 u4280 019F                                   u4512 059D  
                                 u4440 04C6                                   u2920 0D8F  
                                 u2824 0EBD                                   u2760 0E73  
                                 u2840 08D9                                   u3560 14B3  
                                 u3640 0B7A                                   u3720 166E  
                                 u5320 03B1                                   u3801 1755  
                                 u3481 0FDE                                   u4281 019E  
                                 u4601 06B3                                   u4513 05A4  
                                 u4441 04C5                                   u2921 0D8E  
                                 u2825 0EBB                                   u2761 0E72  
                                 u2841 08D8                                   u3561 14B2  
                                 u3641 0B79                                   u3721 166D  
                                 u5321 03B0                                   u4370 0217  
                                 u4610 06CF                                   u4602 06BA  
                                 u4450 04CB                                   u2930 0D98  
                                 u2834 0EE4                                   u2770 0E81  
                                 u3490 16CF                                   u3570 0864  
                                 u3714 0BDF                                   u3650 0B83  
                                 u3730 1703                                   u5330 03C6  
                                 u4371 0216                                   u4275 0194  
                                 u4603 06C1                                   u4531 05CA  
                                 u4451 04CA                                   u2931 0D97  
                                 u2835 0EE2                                   u2771 0E80  
                                 u3491 16CE                                   u3571 0863  
                                 u3715 0BDD                                   u3651 0B82  
                                 u3555 17D1                                   u3731 1702  
                                 u5331 03C5                                   u3580 1589  
                                 u4380 0234                                   u4700 0741  
                                 u4532 05D1                                   u4460 04E2  
                                 u2940 0DA6                                   u2780 0E8A  
                                 u3820 149E                                   u3660 0B91  
                                 u3900 0A9E                                   u3740 172D  
                                 u5340 040A                                   u3581 1588  
                                 u4381 0233                                   u4365 01F5  
                                 u4701 0740                                   u4621 06DB  
                                 u4541 05F5                                   u4533 05D8  
                                 u4525 05A6                                   u4461 04E1  
                                 u2941 0DA5                                   u2781 0E89  
                                 u3821 149D                                   u3661 0B90  
                                 u3901 0A9D                                   u3741 172C  
                                 u5341 0409                                   u3750 152C  
                                 u4390 0249                                   u4710 0747  
                                 u4622 06E2                                   u4542 05FC  
                                 u4470 04E7                                   u2950 0DAF  
                                 u2790 0E98                                   u2870 15B3  
                                 u3830 14AB                                   u3670 0B9A  
                                 u3590 0B43                                   u3910 0AA8  
                                 u5350 0423                                   u5270 02DD  
                                 u3815 1760                                   u3751 152B  
                                 u4391 0248                                   u4375 0213  
                                 u4295 01A2                                   u4711 0746  
                                 u4623 06E9                                   u4615 06CA  
                                 u4543 0603                                   u4471 04E6  
                                 u2951 0DAE                                   u2791 0E97  
                                 u2855 08F8                                   u2871 15B2  
                                 u3831 14AA                                   u3671 0B99  
                                 u3591 0B42                                   u3911 0AA7  
                                 u5351 0422                                   u5407 031C  
                                 u5271 02DC                                   u3760 1459  
                                 u3840 1624                                   u4720 0759  
                                 u2960 0DBD                                   u2880 0D5F  
                                 u3680 0BA8                                   u5360 042C  
                                 u5280 02E2                                   u3761 1458  
                                 u4385 0230                                   u3841 1623  
                                 u4721 0758                                   u4561 0629  
                                 u4481 0534                                   u2961 0DBC  
                                 u2881 0D5E                                   u2865 090B  
                                 u3681 0BA7                                   u5361 042B  
                                 u5417 0362                                   u5281 02E1  
                                 u3770 1461                                   u4730 0768  
                                 u4650 070D                                   u4562 0630  
                                 u4482 053B                                   u4810 0CEA  
                                 u2970 0DC6                                   u2890 0D6A  
                                 u3690 0BB1                                   u3930 15FA  
                                 u5370 0442                                   u5290 0314  
                                 u3771 1460                                   u4651 070C  
                                 u4635 06EB                                   u4571 0654  
                                 u4563 0637                                   u4555 0605  
                                 u4491 0550                                   u4483 0542  
                                 u4811 0CE9                                   u2971 0DC5  
                                 u2891 0D69                                   u3691 0BB0  
                                 u3931 15F9                                   u5371 0441  
                                 u5427 037F                                   u5291 0313  
                                 u3780 1735                                   u3940 088D  
                                 u3860 1638                                   u4740 0785  
                                 u4572 065B                                   u4492 0557  
                                 u4900 0D4F                                   u2980 0DD4  
                                 u5380 0476                                   u3781 1734  
                                 u3861 1637                                   u4741 0784  
                                 u4645 0702                                   u4581 067F  
                                 u4573 0662                                   u4493 055E  
                                 u4901 0D4E                                   u4805 0CDC  
                                 u2981 0DD3                                   u5381 0475  
                                 u5437 0397                                   u3790 173F  
                                 u3950 08D2                                   u4750 079F  
                                 u4670 0721                                   u4590 06A7  
                                 u4582 0686                                   u4830 0D0C  
                                 u3870 0A3F                                   u3791 173E  
                                 u3951 08D1                                   u3855 162B  
                                 u4751 079E                                   u4735 0763  
                                 u4671 0720                                   u4583 068D  
                                 u4831 0D0B                                   u5447 0A63  
                                 u3871 0A3E                                   u4760 07BB  
                                 u4680 0726                                   u3880 0A56  
                                 u3960 14FD                                   u4761 07BA  
                                 u4745 0781                                   u4681 0725  
                                 u4665 0710                                   u4825 0CFE  
                                 u5457 0C25                                   u3881 0A55  
                                 u3961 14FC                                   u5385 0472  
                                 u4690 073A                                   u4850 0D1C  
                                 u4770 0CA7                                   u2994 0DE2  
                                 u3890 0A7C                                   u3970 14E3  
                                 u4755 079B                                   u4691 0739  
                                 u4595 06A2                                   u4851 0D1B  
                                 u4771 0CA6                                   u2995 0DE0  
                                 u5467 0C3C                                   u3891 0A7B  
                                 u3971 14E2                                   u4860 0D22  
                                 u4780 0CAB                                   u3980 14CA  
                                 u4861 0D21                                   u4845 0D11  
                                 u4781 0CAA                                   u5477 0C4E  
                                 u3981 14C9                                   u5397 02EA  
                                 u3990 1643                                   u4870 0D26  
                                 u4790 0CCB                                   u3991 1642  
                                 u4871 0D25                                   u4791 0CCA  
                                 u5487 15C1                                   u4880 0D3B  
                                 u4890 0D4B                                   u4891 0D4A  
                                 u4885 0D36                                   _Temp 0063  
                                 abs@a 0076                                   _dbuf 0190  
                                 _flag 0065                       __end_of_ADC_INIT 0889  
                                 _main 0256                                   _pass 00B4  
                                 _prec 00D6                                   _temp 00C5  
                                 btemp 007E                                   start 0000  
                  _EXT_RB4_LOW_HANDLER 0069                        ___fldiv@new_exp 004C  
                    ___bmul@multiplier 0072                      set_cursor@coloumn 0023  
                 keypad_read_value@val 0020                                  ??_abs 0078  
                 _gpio_pin_write_logic 0E31       ADC_Start_Conversion_Blocking@adc 0079  
               lcd_4bits_send_char@lcd 0021                 lcd_4bits_send_char@ret 0020  
                        ___fltol@sign1 005C                      ??_motor_turn_left 0078  
                                ?_main 0070                        __end_of___fldiv 0256  
                      __end_of___awdiv 0A33                                  _EEADR 010D  
                      __end_of___awmod 09CC                        __end_of___flmul 07CE  
                      __end_of___fltol 0087                        ___awdiv@divisor 0070  
                      ___awdiv@counter 0074                           vfpfcnvrt@fmt 007A  
               ?_lcd_4bits_send_string 0022                                  _PORTA 0005  
                                _PORTB 0006                                  _PORTC 0007  
                                _PORTD 0008                                  _PORTE 0009  
                                _TRISA 0085                                  _TRISB 0086  
                                _TRISC 0087                                  _TRISD 0088  
                                _TRISE 0089                                  _flags 00D8  
                 _ADC_Start_Conversion 1453                   _EXT_RB7_HIGH_HANDLER 00DB  
                                _fputc 091D                                  _width 00D4  
                                _putch 1443                                  main@i 0062  
                                pclath 000A          lcd_4bits_send_command@command 007C  
                                status 0003                                  wtemp0 007E  
                      __end_of_sprintf 154C                    _EXT_RB5_LOW_HANDLER 0067  
       ?_gpio_pin_direction_initialize 0070                        __initialization 07CE  
                         __end_of_main 0489                  ?_gpio_pin_write_logic 0070  
 ADC_Start_Conversion_Blocking@channel 0075                __end_of_mcal_initialize 144B  
             gpio_pin_read_logic@logic 0070            __end_of_lcd_4bits_send_char 1800  
                               ??_main 005E                lcd_4bits_send_char@data 007C  
              ?_lcd_4bits_send_command 007C                       _EXT_INTX_HANDLER 006B  
                    ?_motor_turn_right 0070                  ?_ADC_Start_Conversion 0070  
                   ??_motor_turn_right 0078                                 ?_fputc 0070  
                               _ADRESH 001E                                 _ADRESL 009E  
                               _EEDATA 010C                                 _EECON2 018D  
                     ___awdiv@dividend 0072                                 ?_putch 0070  
                        vfpfcnvrt@done 0020               keypad_read_value@counter 0021  
                 READ_DATA_EEPROM@data 0072                       __end_of___xxtofl 0D59  
                  _EXT_RB6_LOW_HANDLER 00DC                keypad_initialize@l_rows 0021  
                __end_of_Result_Format 15F2                           vfprintf@cfmt 002B  
              keypad_initialize@keypad 0020                                 ___bmul 1498  
                            ??___fldiv 0042                              ??___awdiv 0074  
                            ??___awmod 0074                              ??___flmul 0028  
                            ??___fltol 0058             ??_Convert_uint16_to_string 0040  
                               _keypad 00B8                                 _memset 1511  
                               _buzzer 006F                       ___awdiv@quotient 0076  
                      ___awmod@divisor 0070                                 _motor1 00CE  
                               _motor2 00CC                        ___awmod@counter 0074  
                 WRITE_DATA_EEPROM@add 0070         __end_of_lcd_4bits_send_command 17B8  
                               fputc@c 0070                              ?_ADC_INIT 0070  
                               putch@c 0070                       __end_of_vfprintf 158C  
              ADC_Start_Conversion@adc 0070                              ??_sprintf 002F  
                         ___xxtofl@arg 007A                           ___xxtofl@exp 0079  
                         ___xxtofl@val 0070                __end_of__initialization 07FC  
             __end_of_READ_DATA_EEPROM 1485                             ___fltol@f1 0054  
                  _EXT_RB7_LOW_HANDLER 00DA                    ___bmul@multiplicand 0070  
               ??_gpio_pin_write_logic 0071                         __pcstackCOMMON 0070  
         __end_of_lcd_4bits_initialize 0CA1                           __pidataBANK0 0003  
                         __pidataBANK1 1695                          __end_of_fputc 0973  
                        __end_of_putch 1444           Convert_uint16_to_string@data 003D  
                     ?_mcal_initialize 0070           Convert_uint16_to_string@temp 0041  
                        send_4bits@lcd 007B                          send_4bits@ret 007A  
                           ??_ADC_INIT 0073                 ??_ADC_Start_Conversion 0070  
               keypad_read_value@value 0078             ?_ADC_Get_Conversion_Result 0070  
                              ??_fputc 0073                                ??_putch 0070  
                           __pbssBANK0 0063                             __pbssBANK1 00D0  
                           __pbssBANK3 0190      __end_of_lcd_4bits_send_string_pos 1616  
                      _motor_turn_left 14DD                      __end_of__Umul8_16 163D  
                           __pmaintext 0256                                ?___bmul 0070  
          Convert_uint16_to_string@str 003F                                ?_memset 0070  
              ??_lcd_4bits_send_string 007E                              ?___xxtofl 0070  
            lcd_4bits_send_command@lcd 0021              lcd_4bits_send_command@ret 0020  
    __end_of_ADC_Get_Conversion_Result 1771                             __stringtab 0800  
                           _btn_values 0810                         _tris_registers 00AA  
      ??_ADC_Start_Conversion_Blocking 0078                    _gpio_pin_initialize 0AA9  
                              ___fldiv 0087                                ___awdiv 09CC  
                  _gpio_pin_read_logic 0B3C                                ___awmod 0973  
                              ___flmul 0489                                ___fltol 000F  
                              _adc_res 00E9                              ?_vfprintf 0028  
                              __ptext1 14F7                                __ptext2 14C4  
                              __ptext3 14DD                                __ptext4 15F2  
                              __ptext5 1665                                __ptext6 16FA  
                              __ptext7 17B8                                __ptext8 0A33  
                              __ptext9 0B3C               ??_apllication_initilaize 007E  
      ??_gpio_pin_direction_initialize 0070                                _counter 00D9  
                           ??___xxtofl 0074                       ___awmod@dividend 0072  
           __end_of_send_enable_signal 15CE                   ?_gpio_pin_initialize 0070  
                           _send_4bits 08D3                   ?_gpio_pin_read_logic 0070  
                              _sprintf 152D                                clrloop0 144C  
                 _lcd_4bits_initialize 0BEB                   end_of_initialization 07FC  
              __end_of_motor_turn_left 14F7                  WRITE_DATA_EEPROM@data 0072  
          lcd_4bits_initialize@counter 0025                                fputc@fp 0072  
                              memset@c 0070                                memset@n 0072  
                              memset@p 0074                  motor_turn_right@motor 0079  
                           _set_cursor 1665                      __end_of_vfpfcnvrt 1000  
                     vfpfcnvrt@convarg 0023                             ??_vfprintf 007E  
                         _lcd_show_max 00DD                         _ecu_initialzie 154C  
                        ___xxtofl@sign 0078                  ??_gpio_pin_initialize 0078  
                ??_gpio_pin_read_logic 0071                            ___fldiv@grs 004E  
                          ___fldiv@rem 0047                  ?_lcd_4bits_initialize 0070  
                          ___flmul@grs 002E                      ?_READ_DATA_EEPROM 0070  
                     _motor_initialize 14AD                     ??_READ_DATA_EEPROM 0073  
        Convert_uint32_to_string@F1655 01B0          Convert_uint16_to_string@F1649 01BB  
                       __end_of___bmul 14AD                            vfpfcnvrt@ap 007B  
                          vfpfcnvrt@cp 0022                            vfpfcnvrt@fp 0021  
               __end_of_ecu_initialzie 156B  __end_of_ADC_Start_Conversion_Blocking 1665  
        _ADC_Start_Conversion_Blocking 163D               lcd_4bits_send_string@lcd 0025  
             lcd_4bits_send_string@ret 0024                         __end_of_memset 152D  
                  start_initialization 07CE                      send_4bits@command 0078  
                          __end_of_abs 1473                            ?_send_4bits 0078  
__end_of_gpio_pin_direction_initialize 0E31          _gpio_pin_direction_initialize 0D59  
          ??_ADC_Get_Conversion_Result 0072          lcd_4bits_send_string_pos@data 0028  
            ?_Convert_uint16_to_string 003D    ADC_Start_Conversion_Blocking@result 0076  
                     ?_motor_turn_left 0070                    READ_DATA_EEPROM@add 0070  
              keypad_read_value@l_rows 0023                keypad_read_value@keypad 0022  
                          ?_set_cursor 0022                            vfprintf@fmt 0028  
                             ??___bmul 0071                             init_fetch0 1485  
                            __Umul8_16 1616                            __pdataBANK0 006F  
                          __pdataBANK1 00A0           Convert_uint8_to_string@F1643 00D0  
                             ??_memset 0074                        ?_ecu_initialzie 0070  
                           memset@dest 0075                lcd_4bits_initialize@lcd 0027  
              lcd_4bits_initialize@ret 0026          __end_of_lcd_4bits_send_string 172F  
                            ___fldiv@a 003A                              ___fldiv@b 003E  
                            ___flmul@a 0024                              ___flmul@b 0020  
                            ___latbits 0002                          __pcstackBANK0 0020  
               ??_lcd_4bits_initialize 0022                            ADC_INIT@adc 0075  
                          ADC_INIT@ret 0074                 _apllication_initilaize 0004  
                 motor_turn_left@motor 0079             ?_lcd_4bits_send_string_pos 0026  
                     _motor_turn_right 14F7                         _motor_turn_off 14C4  
            _ADC_Get_Conversion_Result 172F                          _Result_Format 15CE  
                             ?___fldiv 003A                               ?___awdiv 0070  
                             ?___awmod 0070                               ?___flmul 0020  
             ??_lcd_4bits_send_command 007D                               ?___fltol 0054  
                           ?__Umul8_16 0070              gpio_pin_write_logic@logic 0070  
                            __pstrings 0800                               _ADC_INIT 085D  
            lcd_4bits_send_string@data 0022         ?_ADC_Start_Conversion_Blocking 0075  
                 _EXT_RB4_HIGH_HANDLER 006A                               ?_sprintf 002C  
          keypad_initialize@l_coloumns 0022                    motor_initialize@ret 007C  
               __end_of_motor_turn_off 14DD                              clear_ram0 144B  
                   _send_enable_signal 15AD                         ?_Result_Format 0070  
                  _lcd_4bits_send_char 17B8       gpio_pin_direction_initialize@pin 0075  
                  ?_send_enable_signal 0070                              _vfpfcnvrt 0F11  
                           _ADCON0bits 001F                            __stringbase 080F  
                           _ADCON1bits 009F                          set_cursor@Row 0022  
                        set_cursor@lcd 0025                          set_cursor@ret 0024  
             __end_of_motor_initialize 14C4                 gpio_pin_initialize@pin 007B  
               gpio_pin_initialize@ret 007A                   ?_lcd_4bits_send_char 007C  
                           vfpfcnvrt@c 0027                gpio_pin_write_logic@pin 0077  
              gpio_pin_write_logic@ret 0076                   ??_send_enable_signal 0078  
                    _keypad_initialize 16C5                               _Max_Temp 006C  
                    _keypad_read_value 0A33                      ??_mcal_initialize 0076  
                   ?_keypad_initialize 0070                 gpio_pin_read_logic@pin 0077  
               gpio_pin_read_logic@ret 0076                     ?_keypad_read_value 0078  
                send_enable_signal@lcd 007A                  send_enable_signal@ret 0079  
                      ?_motor_turn_off 0070                             _EECON1bits 018C  
              WRITE_DATA_EEPROM@status 0073                             vfprintf@ap 0029  
                           vfprintf@fp 002A                    ??_keypad_initialize 007C  
                  ??_keypad_read_value 0079                            ??__Umul8_16 0072  
                           ?_vfpfcnvrt 007A       __end_of_Convert_uint16_to_string 08D3  
                   __end_of__stringtab 0810            __end_of_gpio_pin_initialize 0B3C  
                   __end_of_btn_values 081C            __end_of_gpio_pin_read_logic 0BEB  
                           sprintf@fmt 002C                    motor_turn_off@motor 0079  
                             ___xxtofl 0CA1                  ??_lcd_4bits_send_char 007D  
                 _EXT_RB5_HIGH_HANDLER 0068              __end_of_keypad_initialize 16FA  
                             __ptext10 1498                               __ptext11 0004  
                             __ptext20 08D3                               __ptext12 1444  
                             __ptext21 16C5                               __ptext13 085D  
                             __ptext30 158C                               __ptext22 0AA9  
                             __ptext14 15CE                               __ptext31 1473  
                             __ptext23 0E31                               __ptext15 154C  
                             __ptext40 09CC                               __ptext32 0889  
                             __ptext24 0D59                               __ptext16 14AD  
                             __ptext41 1511                               __ptext33 152D  
                             __ptext25 0CA1                               __ptext17 0BEB  
                             __ptext42 163D                               __ptext34 156B  
                             __ptext26 000F                               __ptext18 1771  
                         ??_send_4bits 0079                               __ptext43 1453  
                             __ptext35 0F11                               __ptext27 0489  
                             __ptext19 15AD                               __ptext44 172F  
                             __ptext36 091D                               __ptext28 1616  
                             __ptext37 1443                               __ptext29 0087  
                             __ptext38 1462                               __ptext39 0973  
            __end_of_keypad_read_value 0AA9                               _lcd_show 00E3  
      Convert_uint16_to_string@counter 0047                        ??_Result_Format 0070  
                  motor_turn_right@ret 0078                           ??_set_cursor 007E  
                     ??_ecu_initialzie 007E                               _vfprintf 156B  
                   __end_of_send_4bits 091D                  motor_initialize@motor 007D  
                           _INTCONbits 000B               __end_of_motor_turn_right 1511  
                             init_ram0 1489           __end_of_gpio_pin_write_logic 0F11  
                     Result_Format@adc 0072                 _lcd_4bits_send_command 1771  
              ?_apllication_initilaize 0070                     __end_of_set_cursor 1695  
                            sprintf@ap 0030                     motor_turn_left@ret 0078  
                    _WRITE_DATA_EEPROM 158C                     ?_WRITE_DATA_EEPROM 0070  
          ??_lcd_4bits_send_string_pos 007E                              stringcode 080A  
         __end_of_ADC_Start_Conversion 1462                    ??_WRITE_DATA_EEPROM 0073  
                          ??_vfpfcnvrt 007C                 __Umul8_16@multiplicand 0070  
                             sprintf@f 0032                      motor_turn_off@ret 0078  
                             sprintf@s 0031       lcd_4bits_send_string_pos@coloumn 0027  
                       _port_registers 00A0               _Convert_uint16_to_string 0889  
                _lcd_4bits_send_string 16FA                               stringdir 080A  
                             stringtab 0800         __end_of_apllication_initilaize 000F  
                 _EXT_RB6_HIGH_HANDLER 0066              __end_of_WRITE_DATA_EEPROM 15AD  
      ADC_Get_Conversion_Result@result 0070                   __Umul8_16@multiplier 0078  
         lcd_4bits_send_string_pos@Row 0026           lcd_4bits_send_string_pos@lcd 002B  
         lcd_4bits_send_string_pos@ret 002A                      __Umul8_16@product 0074  
