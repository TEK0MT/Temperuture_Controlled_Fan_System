

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Jul 10 10:13:31 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24     0000                     
    25                           ; Generated 12/10/2023 GMT
    26                           ; 
    27                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F877A Definitions
    57                           ; 
    58                           ; SFR Addresses
    59     0000                     	;# 
    60     0001                     	;# 
    61     0002                     	;# 
    62     0003                     	;# 
    63     0004                     	;# 
    64     0005                     	;# 
    65     0006                     	;# 
    66     0007                     	;# 
    67     0008                     	;# 
    68     0009                     	;# 
    69     000A                     	;# 
    70     000B                     	;# 
    71     000C                     	;# 
    72     000D                     	;# 
    73     000E                     	;# 
    74     000E                     	;# 
    75     000F                     	;# 
    76     0010                     	;# 
    77     0011                     	;# 
    78     0012                     	;# 
    79     0013                     	;# 
    80     0014                     	;# 
    81     0015                     	;# 
    82     0015                     	;# 
    83     0016                     	;# 
    84     0017                     	;# 
    85     0018                     	;# 
    86     0019                     	;# 
    87     001A                     	;# 
    88     001B                     	;# 
    89     001B                     	;# 
    90     001C                     	;# 
    91     001D                     	;# 
    92     001E                     	;# 
    93     001F                     	;# 
    94     0081                     	;# 
    95     0085                     	;# 
    96     0086                     	;# 
    97     0087                     	;# 
    98     0088                     	;# 
    99     0089                     	;# 
   100     008C                     	;# 
   101     008D                     	;# 
   102     008E                     	;# 
   103     0091                     	;# 
   104     0092                     	;# 
   105     0093                     	;# 
   106     0094                     	;# 
   107     0098                     	;# 
   108     0099                     	;# 
   109     009C                     	;# 
   110     009D                     	;# 
   111     009E                     	;# 
   112     009F                     	;# 
   113     010C                     	;# 
   114     010D                     	;# 
   115     010E                     	;# 
   116     010F                     	;# 
   117     018C                     	;# 
   118     018D                     	;# 
   119     0000                     	;# 
   120     0001                     	;# 
   121     0002                     	;# 
   122     0003                     	;# 
   123     0004                     	;# 
   124     0005                     	;# 
   125     0006                     	;# 
   126     0007                     	;# 
   127     0008                     	;# 
   128     0009                     	;# 
   129     000A                     	;# 
   130     000B                     	;# 
   131     000C                     	;# 
   132     000D                     	;# 
   133     000E                     	;# 
   134     000E                     	;# 
   135     000F                     	;# 
   136     0010                     	;# 
   137     0011                     	;# 
   138     0012                     	;# 
   139     0013                     	;# 
   140     0014                     	;# 
   141     0015                     	;# 
   142     0015                     	;# 
   143     0016                     	;# 
   144     0017                     	;# 
   145     0018                     	;# 
   146     0019                     	;# 
   147     001A                     	;# 
   148     001B                     	;# 
   149     001B                     	;# 
   150     001C                     	;# 
   151     001D                     	;# 
   152     001E                     	;# 
   153     001F                     	;# 
   154     0081                     	;# 
   155     0085                     	;# 
   156     0086                     	;# 
   157     0087                     	;# 
   158     0088                     	;# 
   159     0089                     	;# 
   160     008C                     	;# 
   161     008D                     	;# 
   162     008E                     	;# 
   163     0091                     	;# 
   164     0092                     	;# 
   165     0093                     	;# 
   166     0094                     	;# 
   167     0098                     	;# 
   168     0099                     	;# 
   169     009C                     	;# 
   170     009D                     	;# 
   171     009E                     	;# 
   172     009F                     	;# 
   173     010C                     	;# 
   174     010D                     	;# 
   175     010E                     	;# 
   176     010F                     	;# 
   177     018C                     	;# 
   178     018D                     	;# 
   179     0000                     	;# 
   180     0001                     	;# 
   181     0002                     	;# 
   182     0003                     	;# 
   183     0004                     	;# 
   184     0005                     	;# 
   185     0006                     	;# 
   186     0007                     	;# 
   187     0008                     	;# 
   188     0009                     	;# 
   189     000A                     	;# 
   190     000B                     	;# 
   191     000C                     	;# 
   192     000D                     	;# 
   193     000E                     	;# 
   194     000E                     	;# 
   195     000F                     	;# 
   196     0010                     	;# 
   197     0011                     	;# 
   198     0012                     	;# 
   199     0013                     	;# 
   200     0014                     	;# 
   201     0015                     	;# 
   202     0015                     	;# 
   203     0016                     	;# 
   204     0017                     	;# 
   205     0018                     	;# 
   206     0019                     	;# 
   207     001A                     	;# 
   208     001B                     	;# 
   209     001B                     	;# 
   210     001C                     	;# 
   211     001D                     	;# 
   212     001E                     	;# 
   213     001F                     	;# 
   214     0081                     	;# 
   215     0085                     	;# 
   216     0086                     	;# 
   217     0087                     	;# 
   218     0088                     	;# 
   219     0089                     	;# 
   220     008C                     	;# 
   221     008D                     	;# 
   222     008E                     	;# 
   223     0091                     	;# 
   224     0092                     	;# 
   225     0093                     	;# 
   226     0094                     	;# 
   227     0098                     	;# 
   228     0099                     	;# 
   229     009C                     	;# 
   230     009D                     	;# 
   231     009E                     	;# 
   232     009F                     	;# 
   233     010C                     	;# 
   234     010D                     	;# 
   235     010E                     	;# 
   236     010F                     	;# 
   237     018C                     	;# 
   238     018D                     	;# 
   239     0000                     	;# 
   240     0001                     	;# 
   241     0002                     	;# 
   242     0003                     	;# 
   243     0004                     	;# 
   244     0005                     	;# 
   245     0006                     	;# 
   246     0007                     	;# 
   247     0008                     	;# 
   248     0009                     	;# 
   249     000A                     	;# 
   250     000B                     	;# 
   251     000C                     	;# 
   252     000D                     	;# 
   253     000E                     	;# 
   254     000E                     	;# 
   255     000F                     	;# 
   256     0010                     	;# 
   257     0011                     	;# 
   258     0012                     	;# 
   259     0013                     	;# 
   260     0014                     	;# 
   261     0015                     	;# 
   262     0015                     	;# 
   263     0016                     	;# 
   264     0017                     	;# 
   265     0018                     	;# 
   266     0019                     	;# 
   267     001A                     	;# 
   268     001B                     	;# 
   269     001B                     	;# 
   270     001C                     	;# 
   271     001D                     	;# 
   272     001E                     	;# 
   273     001F                     	;# 
   274     0081                     	;# 
   275     0085                     	;# 
   276     0086                     	;# 
   277     0087                     	;# 
   278     0088                     	;# 
   279     0089                     	;# 
   280     008C                     	;# 
   281     008D                     	;# 
   282     008E                     	;# 
   283     0091                     	;# 
   284     0092                     	;# 
   285     0093                     	;# 
   286     0094                     	;# 
   287     0098                     	;# 
   288     0099                     	;# 
   289     009C                     	;# 
   290     009D                     	;# 
   291     009E                     	;# 
   292     009F                     	;# 
   293     010C                     	;# 
   294     010D                     	;# 
   295     010E                     	;# 
   296     010F                     	;# 
   297     018C                     	;# 
   298     018D                     	;# 
   299     0000                     	;# 
   300     0001                     	;# 
   301     0002                     	;# 
   302     0003                     	;# 
   303     0004                     	;# 
   304     0005                     	;# 
   305     0006                     	;# 
   306     0007                     	;# 
   307     0008                     	;# 
   308     0009                     	;# 
   309     000A                     	;# 
   310     000B                     	;# 
   311     000C                     	;# 
   312     000D                     	;# 
   313     000E                     	;# 
   314     000E                     	;# 
   315     000F                     	;# 
   316     0010                     	;# 
   317     0011                     	;# 
   318     0012                     	;# 
   319     0013                     	;# 
   320     0014                     	;# 
   321     0015                     	;# 
   322     0015                     	;# 
   323     0016                     	;# 
   324     0017                     	;# 
   325     0018                     	;# 
   326     0019                     	;# 
   327     001A                     	;# 
   328     001B                     	;# 
   329     001B                     	;# 
   330     001C                     	;# 
   331     001D                     	;# 
   332     001E                     	;# 
   333     001F                     	;# 
   334     0081                     	;# 
   335     0085                     	;# 
   336     0086                     	;# 
   337     0087                     	;# 
   338     0088                     	;# 
   339     0089                     	;# 
   340     008C                     	;# 
   341     008D                     	;# 
   342     008E                     	;# 
   343     0091                     	;# 
   344     0092                     	;# 
   345     0093                     	;# 
   346     0094                     	;# 
   347     0098                     	;# 
   348     0099                     	;# 
   349     009C                     	;# 
   350     009D                     	;# 
   351     009E                     	;# 
   352     009F                     	;# 
   353     010C                     	;# 
   354     010D                     	;# 
   355     010E                     	;# 
   356     010F                     	;# 
   357     018C                     	;# 
   358     018D                     	;# 
   359     0000                     	;# 
   360     0001                     	;# 
   361     0002                     	;# 
   362     0003                     	;# 
   363     0004                     	;# 
   364     0005                     	;# 
   365     0006                     	;# 
   366     0007                     	;# 
   367     0008                     	;# 
   368     0009                     	;# 
   369     000A                     	;# 
   370     000B                     	;# 
   371     000C                     	;# 
   372     000D                     	;# 
   373     000E                     	;# 
   374     000E                     	;# 
   375     000F                     	;# 
   376     0010                     	;# 
   377     0011                     	;# 
   378     0012                     	;# 
   379     0013                     	;# 
   380     0014                     	;# 
   381     0015                     	;# 
   382     0015                     	;# 
   383     0016                     	;# 
   384     0017                     	;# 
   385     0018                     	;# 
   386     0019                     	;# 
   387     001A                     	;# 
   388     001B                     	;# 
   389     001B                     	;# 
   390     001C                     	;# 
   391     001D                     	;# 
   392     001E                     	;# 
   393     001F                     	;# 
   394     0081                     	;# 
   395     0085                     	;# 
   396     0086                     	;# 
   397     0087                     	;# 
   398     0088                     	;# 
   399     0089                     	;# 
   400     008C                     	;# 
   401     008D                     	;# 
   402     008E                     	;# 
   403     0091                     	;# 
   404     0092                     	;# 
   405     0093                     	;# 
   406     0094                     	;# 
   407     0098                     	;# 
   408     0099                     	;# 
   409     009C                     	;# 
   410     009D                     	;# 
   411     009E                     	;# 
   412     009F                     	;# 
   413     010C                     	;# 
   414     010D                     	;# 
   415     010E                     	;# 
   416     010F                     	;# 
   417     018C                     	;# 
   418     018D                     	;# 
   419     0000                     	;# 
   420     0001                     	;# 
   421     0002                     	;# 
   422     0003                     	;# 
   423     0004                     	;# 
   424     0005                     	;# 
   425     0006                     	;# 
   426     0007                     	;# 
   427     0008                     	;# 
   428     0009                     	;# 
   429     000A                     	;# 
   430     000B                     	;# 
   431     000C                     	;# 
   432     000D                     	;# 
   433     000E                     	;# 
   434     000E                     	;# 
   435     000F                     	;# 
   436     0010                     	;# 
   437     0011                     	;# 
   438     0012                     	;# 
   439     0013                     	;# 
   440     0014                     	;# 
   441     0015                     	;# 
   442     0015                     	;# 
   443     0016                     	;# 
   444     0017                     	;# 
   445     0018                     	;# 
   446     0019                     	;# 
   447     001A                     	;# 
   448     001B                     	;# 
   449     001B                     	;# 
   450     001C                     	;# 
   451     001D                     	;# 
   452     001E                     	;# 
   453     001F                     	;# 
   454     0081                     	;# 
   455     0085                     	;# 
   456     0086                     	;# 
   457     0087                     	;# 
   458     0088                     	;# 
   459     0089                     	;# 
   460     008C                     	;# 
   461     008D                     	;# 
   462     008E                     	;# 
   463     0091                     	;# 
   464     0092                     	;# 
   465     0093                     	;# 
   466     0094                     	;# 
   467     0098                     	;# 
   468     0099                     	;# 
   469     009C                     	;# 
   470     009D                     	;# 
   471     009E                     	;# 
   472     009F                     	;# 
   473     010C                     	;# 
   474     010D                     	;# 
   475     010E                     	;# 
   476     010F                     	;# 
   477     018C                     	;# 
   478     018D                     	;# 
   479                           
   480                           	psect	idataBANK0
   481     03D2                     __pidataBANK0:
   482                           
   483                           ;initializer for _port_registers
   484     03D2  3405               	retlw	5
   485     03D3  3400               	retlw	0
   486     03D4  3406               	retlw	6
   487     03D5  3400               	retlw	0
   488     03D6  3407               	retlw	7
   489     03D7  3400               	retlw	0
   490     03D8  3408               	retlw	8
   491     03D9  3400               	retlw	0
   492     03DA  3409               	retlw	9
   493     03DB  3400               	retlw	0
   494                           
   495                           ;initializer for _tris_registers
   496     03DC  3485               	retlw	133
   497     03DD  3400               	retlw	0
   498     03DE  3486               	retlw	134
   499     03DF  3400               	retlw	0
   500     03E0  3487               	retlw	135
   501     03E1  3400               	retlw	0
   502     03E2  3488               	retlw	136
   503     03E3  3400               	retlw	0
   504     03E4  3489               	retlw	137
   505     03E5  3400               	retlw	0
   506                           
   507                           ;initializer for _lcd
   508     03E6  3400               	retlw	0
   509     03E7  3408               	retlw	8
   510     03E8  3410               	retlw	16
   511     03E9  3418               	retlw	24
   512     03EA  3420               	retlw	32
   513     03EB  3428               	retlw	40
   514                           
   515                           ;initializer for _motor2
   516     03EC  3411               	retlw	17
   517     03ED  3419               	retlw	25
   518                           
   519                           ;initializer for _motor1
   520     03EE  3401               	retlw	1
   521     03EF  3409               	retlw	9
   522     0009                     _PORTE	set	9
   523     0008                     _PORTD	set	8
   524     0007                     _PORTC	set	7
   525     0006                     _PORTB	set	6
   526     0005                     _PORTA	set	5
   527     0089                     _TRISE	set	137
   528     0088                     _TRISD	set	136
   529     0087                     _TRISC	set	135
   530     0086                     _TRISB	set	134
   531     0085                     _TRISA	set	133
   532                           
   533                           	psect	cinit
   534     07EE                     start_initialization:	
   535                           ; #config settings
   536                           
   537     07EE                     __initialization:
   538                           
   539                           ; Initialize objects allocated to BANK0
   540     07EE  1383               	bcf	3,7	;select IRP bank0
   541     07EF  303E               	movlw	low (__pdataBANK0+30)
   542     07F0  00FD               	movwf	btemp+-1
   543     07F1  3003               	movlw	high __pidataBANK0
   544     07F2  00FE               	movwf	btemp
   545     07F3  30D2               	movlw	low __pidataBANK0
   546     07F4  00FF               	movwf	btemp+1
   547     07F5  3020               	movlw	low __pdataBANK0
   548     07F6  0084               	movwf	4
   549     07F7  120A  118A  23AC  120A  118A  	fcall	init_ram0
   550     07FC                     end_of_initialization:	
   551                           ;End of C runtime variable initialization code
   552                           
   553     07FC                     __end_of__initialization:
   554     07FC  0183               	clrf	3
   555     07FD  120A  118A  2B84   	ljmp	_main	;jump to C main() function
   556                           
   557                           	psect	dataBANK0
   558     0020                     __pdataBANK0:
   559     0020                     _port_registers:
   560     0020                     	ds	10
   561     002A                     _tris_registers:
   562     002A                     	ds	10
   563     0034                     _lcd:
   564     0034                     	ds	6
   565     003A                     _motor2:
   566     003A                     	ds	2
   567     003C                     _motor1:
   568     003C                     	ds	2
   569                           
   570                           	psect	inittext
   571     03A8                     init_fetch0:	
   572                           ;	Called with low address in FSR and high address in W
   573                           
   574     03A8  087E               	movf	btemp,w
   575     03A9  008A               	movwf	10
   576     03AA  087F               	movf	btemp+1,w
   577     03AB  0082               	movwf	2
   578     03AC                     init_ram0:	
   579                           ;Called with:
   580                           ;	high address of idata address in btemp 
   581                           ;	low address of idata address in btemp+1 
   582                           ;	low address of data in FSR
   583                           ;	high address + 1 of data in btemp-1
   584                           
   585     03AC  120A  118A  23A8  120A  118A  	fcall	init_fetch0
   586     03B1  0080               	movwf	0
   587     03B2  0A84               	incf	4,f
   588     03B3  0804               	movf	4,w
   589     03B4  067D               	xorwf	btemp+-1,w
   590     03B5  1903               	btfsc	3,2
   591     03B6  3400               	retlw	0
   592     03B7  0AFF               	incf	btemp+1,f
   593     03B8  1903               	btfsc	3,2
   594     03B9  0AFE               	incf	btemp,f
   595     03BA  2BAC               	goto	init_ram0
   596                           
   597                           	psect	cstackCOMMON
   598     0070                     __pcstackCOMMON:
   599     0070                     ?_gpio_pin_initialize:
   600     0070                     ?_gpio_pin_write_logic:	
   601                           ; 1 bytes @ 0x0
   602                           
   603     0070                     ?_lcd_4bits_initialize:	
   604                           ; 1 bytes @ 0x0
   605                           
   606     0070                     ?_apllication_initilaize:	
   607                           ; 1 bytes @ 0x0
   608                           
   609     0070                     ?_send_enable_signal:	
   610                           ; 1 bytes @ 0x0
   611                           
   612     0070                     ?_motor_initialize:	
   613                           ; 1 bytes @ 0x0
   614                           
   615     0070                     ?_ecu_initialzie:	
   616                           ; 1 bytes @ 0x0
   617                           
   618     0070                     ?_gpio_pin_direction_initialize:	
   619                           ; 1 bytes @ 0x0
   620                           
   621     0070                     ??_gpio_pin_direction_initialize:	
   622                           ; 1 bytes @ 0x0
   623                           
   624     0070                     ?_main:	
   625                           ; 1 bytes @ 0x0
   626                           
   627     0070                     gpio_pin_write_logic@logic:	
   628                           ; 2 bytes @ 0x0
   629                           
   630                           
   631                           ; 1 bytes @ 0x0
   632     0070                     	ds	1
   633     0071                     ??_gpio_pin_write_logic:
   634                           
   635                           ; 1 bytes @ 0x1
   636     0071                     	ds	4
   637     0075                     gpio_pin_direction_initialize@pin:
   638                           
   639                           ; 1 bytes @ 0x5
   640     0075                     	ds	1
   641     0076                     gpio_pin_write_logic@ret:
   642                           
   643                           ; 1 bytes @ 0x6
   644     0076                     	ds	1
   645     0077                     gpio_pin_write_logic@pin:
   646                           
   647                           ; 1 bytes @ 0x7
   648     0077                     	ds	1
   649     0078                     ??_gpio_pin_initialize:
   650     0078                     ?_send_4bits:	
   651                           ; 1 bytes @ 0x8
   652                           
   653     0078                     ??_send_enable_signal:	
   654                           ; 1 bytes @ 0x8
   655                           
   656     0078                     send_4bits@command:	
   657                           ; 1 bytes @ 0x8
   658                           
   659                           
   660                           ; 1 bytes @ 0x8
   661     0078                     	ds	1
   662     0079                     ??_send_4bits:
   663     0079                     send_enable_signal@ret:	
   664                           ; 1 bytes @ 0x9
   665                           
   666                           
   667                           ; 1 bytes @ 0x9
   668     0079                     	ds	1
   669     007A                     gpio_pin_initialize@ret:
   670     007A                     send_4bits@ret:	
   671                           ; 1 bytes @ 0xA
   672                           
   673     007A                     send_enable_signal@lcd:	
   674                           ; 1 bytes @ 0xA
   675                           
   676                           
   677                           ; 1 bytes @ 0xA
   678     007A                     	ds	1
   679     007B                     gpio_pin_initialize@pin:
   680     007B                     send_4bits@lcd:	
   681                           ; 1 bytes @ 0xB
   682                           
   683                           
   684                           ; 1 bytes @ 0xB
   685     007B                     	ds	1
   686     007C                     ?_lcd_4bits_send_char:
   687     007C                     ?_lcd_4bits_send_command:	
   688                           ; 1 bytes @ 0xC
   689                           
   690     007C                     ??_motor_initialize:	
   691                           ; 1 bytes @ 0xC
   692                           
   693     007C                     motor_initialize@ret:	
   694                           ; 1 bytes @ 0xC
   695                           
   696     007C                     lcd_4bits_send_command@command:	
   697                           ; 1 bytes @ 0xC
   698                           
   699     007C                     lcd_4bits_send_char@data:	
   700                           ; 1 bytes @ 0xC
   701                           
   702                           
   703                           ; 1 bytes @ 0xC
   704     007C                     	ds	1
   705     007D                     ??_lcd_4bits_send_char:
   706     007D                     ??_lcd_4bits_send_command:	
   707                           ; 1 bytes @ 0xD
   708                           
   709     007D                     motor_initialize@motor:	
   710                           ; 1 bytes @ 0xD
   711                           
   712                           
   713                           ; 1 bytes @ 0xD
   714     007D                     	ds	1
   715     007E                     ??_apllication_initilaize:
   716     007E                     ??_ecu_initialzie:	
   717                           ; 1 bytes @ 0xE
   718                           
   719     007E                     ??_main:	
   720                           ; 1 bytes @ 0xE
   721                           
   722                           
   723                           	psect	cstackBANK0
   724     003E                     __pcstackBANK0:	
   725                           ; 1 bytes @ 0xE
   726                           
   727     003E                     lcd_4bits_send_command@ret:
   728     003E                     lcd_4bits_send_char@ret:	
   729                           ; 1 bytes @ 0x0
   730                           
   731                           
   732                           ; 1 bytes @ 0x0
   733     003E                     	ds	1
   734     003F                     lcd_4bits_send_command@lcd:
   735     003F                     lcd_4bits_send_char@lcd:	
   736                           ; 1 bytes @ 0x1
   737                           
   738                           
   739                           ; 1 bytes @ 0x1
   740     003F                     	ds	1
   741     0040                     ??_lcd_4bits_initialize:
   742                           
   743                           ; 1 bytes @ 0x2
   744     0040                     	ds	3
   745     0043                     lcd_4bits_initialize@counter:
   746                           
   747                           ; 1 bytes @ 0x5
   748     0043                     	ds	1
   749     0044                     lcd_4bits_initialize@ret:
   750                           
   751                           ; 1 bytes @ 0x6
   752     0044                     	ds	1
   753     0045                     lcd_4bits_initialize@lcd:
   754                           
   755                           ; 1 bytes @ 0x7
   756     0045                     	ds	1
   757                           
   758                           	psect	maintext
   759     0384                     __pmaintext:	
   760 ;;
   761 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   762 ;;
   763 ;; *************** function _main *****************
   764 ;; Defined at:
   765 ;;		line 9 in file "Temperature_Controlled_Fan_System.c"
   766 ;; Parameters:    Size  Location     Type
   767 ;;		None
   768 ;; Auto vars:     Size  Location     Type
   769 ;;		None
   770 ;; Return value:  Size  Location     Type
   771 ;;                  2  222[None  ] int 
   772 ;; Registers used:
   773 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   774 ;; Tracked objects:
   775 ;;		On entry : B00/0
   776 ;;		On exit  : 0/0
   777 ;;		Unchanged: 0/0
   778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   779 ;;      Params:         0       0       0       0       0
   780 ;;      Locals:         0       0       0       0       0
   781 ;;      Temps:          0       0       0       0       0
   782 ;;      Totals:         0       0       0       0       0
   783 ;;Total ram usage:        0 bytes
   784 ;; Hardware stack levels required when called: 6
   785 ;; This function calls:
   786 ;;		_apllication_initilaize
   787 ;;		_lcd_4bits_send_char
   788 ;; This function is called by:
   789 ;;		Startup code after reset
   790 ;; This function uses a non-reentrant model
   791 ;;
   792                           
   793     0384                     _main:	
   794                           ;psect for function _main
   795                           
   796     0384                     l1698:	
   797                           ;incstack = 0
   798                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   799                           
   800                           
   801                           ;Temperature_Controlled_Fan_System.c: 10:     apllication_initilaize();
   802     0384  120A  118A  237E  120A  118A  	fcall	_apllication_initilaize
   803     0389                     l223:	
   804                           ;Temperature_Controlled_Fan_System.c: 12: while(1){
   805                           
   806                           
   807                           ;Temperature_Controlled_Fan_System.c: 13:     lcd_4bits_send_char(&lcd,'f');
   808     0389  3066               	movlw	102
   809     038A  00FC               	movwf	lcd_4bits_send_char@data
   810     038B  3034               	movlw	(low (_lcd| 0))& (0+255)
   811     038C  120A  118A  2458  120A  118A  	fcall	_lcd_4bits_send_char
   812     0391  2B89               	goto	l223
   813     0392  120A  118A  2800   	ljmp	start
   814     0395                     __end_of_main:
   815                           
   816                           	psect	text1
   817     0458                     __ptext1:	
   818 ;; *************** function _lcd_4bits_send_char *****************
   819 ;; Defined at:
   820 ;;		line 57 in file "ECU_LAYER/LCD/ecu_lcd.c"
   821 ;; Parameters:    Size  Location     Type
   822 ;;  lcd             1    wreg     PTR const struct .
   823 ;;		 -> lcd(6), 
   824 ;;  data            1   12[COMMON] unsigned char 
   825 ;; Auto vars:     Size  Location     Type
   826 ;;  lcd             1    1[BANK0 ] PTR const struct .
   827 ;;		 -> lcd(6), 
   828 ;;  ret             1    0[BANK0 ] unsigned char 
   829 ;; Return value:  Size  Location     Type
   830 ;;                  1    wreg      unsigned char 
   831 ;; Registers used:
   832 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   833 ;; Tracked objects:
   834 ;;		On entry : 0/0
   835 ;;		On exit  : 0/0
   836 ;;		Unchanged: 0/0
   837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   838 ;;      Params:         1       0       0       0       0
   839 ;;      Locals:         0       2       0       0       0
   840 ;;      Temps:          1       0       0       0       0
   841 ;;      Totals:         2       2       0       0       0
   842 ;;Total ram usage:        4 bytes
   843 ;; Hardware stack levels used: 1
   844 ;; Hardware stack levels required when called: 2
   845 ;; This function calls:
   846 ;;		_gpio_pin_write_logic
   847 ;;		_send_4bits
   848 ;;		_send_enable_signal
   849 ;; This function is called by:
   850 ;;		_main
   851 ;;		_lcd_4bits_send_char_pos
   852 ;;		_lcd_4bits_send_string
   853 ;;		_lcd_4bits_send_string_pos
   854 ;; This function uses a non-reentrant model
   855 ;;
   856                           
   857     0458                     _lcd_4bits_send_char:	
   858                           ;psect for function _lcd_4bits_send_char
   859                           
   860                           
   861                           ;incstack = 0
   862                           ; Regs used in _lcd_4bits_send_char: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
   863                           ;lcd_4bits_send_char@lcd stored from wreg
   864     0458  1283               	bcf	3,5	;RP0=0, select bank0
   865     0459  1303               	bcf	3,6	;RP1=0, select bank0
   866     045A  00BF               	movwf	lcd_4bits_send_char@lcd
   867     045B                     l1506:
   868     045B                     l1508:
   869                           
   870                           ;ECU_LAYER/LCD/ecu_lcd.c: 59:     if(lcd == ((void*)0)){
   871     045B  083F               	movf	lcd_4bits_send_char@lcd,w
   872     045C  1D03               	btfss	3,2
   873     045D  2C5F               	goto	u1461
   874     045E  2C60               	goto	u1460
   875     045F                     u1461:
   876     045F  2C63               	goto	l1512
   877     0460                     u1460:
   878     0460                     l1510:
   879                           
   880                           ;ECU_LAYER/LCD/ecu_lcd.c: 60:         ret = 0x01;
   881     0460  01BE               	clrf	lcd_4bits_send_char@ret
   882     0461  0ABE               	incf	lcd_4bits_send_char@ret,f
   883                           
   884                           ;ECU_LAYER/LCD/ecu_lcd.c: 61:     }
   885     0462  2C9E               	goto	l1514
   886     0463                     l1512:
   887                           
   888                           ;ECU_LAYER/LCD/ecu_lcd.c: 63:         ret = gpio_pin_write_logic(&(lcd->rs),GPIO_HIGH);
   889     0463  01F0               	clrf	gpio_pin_write_logic@logic
   890     0464  0AF0               	incf	gpio_pin_write_logic@logic,f
   891     0465  083F               	movf	lcd_4bits_send_char@lcd,w
   892     0466  120A  118A  270E  120A  118A  	fcall	_gpio_pin_write_logic
   893     046B  1283               	bcf	3,5	;RP0=0, select bank0
   894     046C  1303               	bcf	3,6	;RP1=0, select bank0
   895     046D  00BE               	movwf	lcd_4bits_send_char@ret
   896                           
   897                           ;ECU_LAYER/LCD/ecu_lcd.c: 64:         ret = send_4bits(lcd,(data >> 4));
   898     046E  087C               	movf	lcd_4bits_send_char@data,w
   899     046F  00FD               	movwf	??_lcd_4bits_send_char
   900     0470  3004               	movlw	4
   901     0471                     u1475:
   902     0471  1003               	clrc
   903     0472  0CFD               	rrf	??_lcd_4bits_send_char,f
   904     0473  3EFF               	addlw	-1
   905     0474  1D03               	skipz
   906     0475  2C71               	goto	u1475
   907     0476  087D               	movf	??_lcd_4bits_send_char,w
   908     0477  00F8               	movwf	send_4bits@command
   909     0478  083F               	movf	lcd_4bits_send_char@lcd,w
   910     0479  120A  118A  24A0  120A  118A  	fcall	_send_4bits
   911     047E  1283               	bcf	3,5	;RP0=0, select bank0
   912     047F  1303               	bcf	3,6	;RP1=0, select bank0
   913     0480  00BE               	movwf	lcd_4bits_send_char@ret
   914                           
   915                           ;ECU_LAYER/LCD/ecu_lcd.c: 65:          ret = send_enable_signal(lcd);
   916     0481  083F               	movf	lcd_4bits_send_char@lcd,w
   917     0482  120A  118A  23F0  120A  118A  	fcall	_send_enable_signal
   918     0487  1283               	bcf	3,5	;RP0=0, select bank0
   919     0488  1303               	bcf	3,6	;RP1=0, select bank0
   920     0489  00BE               	movwf	lcd_4bits_send_char@ret
   921                           
   922                           ;ECU_LAYER/LCD/ecu_lcd.c: 66:         ret = send_4bits(lcd,data);
   923     048A  087C               	movf	lcd_4bits_send_char@data,w
   924     048B  00F8               	movwf	send_4bits@command
   925     048C  083F               	movf	lcd_4bits_send_char@lcd,w
   926     048D  120A  118A  24A0  120A  118A  	fcall	_send_4bits
   927     0492  1283               	bcf	3,5	;RP0=0, select bank0
   928     0493  1303               	bcf	3,6	;RP1=0, select bank0
   929     0494  00BE               	movwf	lcd_4bits_send_char@ret
   930                           
   931                           ;ECU_LAYER/LCD/ecu_lcd.c: 67:         ret = send_enable_signal(lcd);
   932     0495  083F               	movf	lcd_4bits_send_char@lcd,w
   933     0496  120A  118A  23F0  120A  118A  	fcall	_send_enable_signal
   934     049B  1283               	bcf	3,5	;RP0=0, select bank0
   935     049C  1303               	bcf	3,6	;RP1=0, select bank0
   936     049D  00BE               	movwf	lcd_4bits_send_char@ret
   937     049E                     l1514:
   938                           
   939                           ;ECU_LAYER/LCD/ecu_lcd.c: 69:     return ret;
   940     049E  083E               	movf	lcd_4bits_send_char@ret,w
   941     049F                     l260:
   942     049F  0008               	return
   943     04A0                     __end_of_lcd_4bits_send_char:
   944                           
   945                           	psect	text2
   946     037E                     __ptext2:	
   947 ;; *************** function _apllication_initilaize *****************
   948 ;; Defined at:
   949 ;;		line 26 in file "Temperature_Controlled_Fan_System.c"
   950 ;; Parameters:    Size  Location     Type
   951 ;;		None
   952 ;; Auto vars:     Size  Location     Type
   953 ;;		None
   954 ;; Return value:  Size  Location     Type
   955 ;;                  1    wreg      void 
   956 ;; Registers used:
   957 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   958 ;; Tracked objects:
   959 ;;		On entry : 0/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   963 ;;      Params:         0       0       0       0       0
   964 ;;      Locals:         0       0       0       0       0
   965 ;;      Temps:          0       0       0       0       0
   966 ;;      Totals:         0       0       0       0       0
   967 ;;Total ram usage:        0 bytes
   968 ;; Hardware stack levels used: 1
   969 ;; Hardware stack levels required when called: 5
   970 ;; This function calls:
   971 ;;		_ecu_initialzie
   972 ;; This function is called by:
   973 ;;		_main
   974 ;; This function uses a non-reentrant model
   975 ;;
   976                           
   977     037E                     _apllication_initilaize:	
   978                           ;psect for function _apllication_initilaize
   979                           
   980     037E                     l1504:	
   981                           ;incstack = 0
   982                           ; Regs used in _apllication_initilaize: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
   983                           
   984                           
   985                           ;Temperature_Controlled_Fan_System.c: 27:     ecu_initialzie();
   986     037E  120A  118A  2395  120A  118A  	fcall	_ecu_initialzie
   987     0383                     l229:
   988     0383  0008               	return
   989     0384                     __end_of_apllication_initilaize:
   990                           
   991                           	psect	text3
   992     0395                     __ptext3:	
   993 ;; *************** function _ecu_initialzie *****************
   994 ;; Defined at:
   995 ;;		line 22 in file "ECU_LAYER/ECU_LAYER.c"
   996 ;; Parameters:    Size  Location     Type
   997 ;;		None
   998 ;; Auto vars:     Size  Location     Type
   999 ;;		None
  1000 ;; Return value:  Size  Location     Type
  1001 ;;                  1    wreg      void 
  1002 ;; Registers used:
  1003 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1004 ;; Tracked objects:
  1005 ;;		On entry : 0/0
  1006 ;;		On exit  : 0/0
  1007 ;;		Unchanged: 0/0
  1008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1009 ;;      Params:         0       0       0       0       0
  1010 ;;      Locals:         0       0       0       0       0
  1011 ;;      Temps:          0       0       0       0       0
  1012 ;;      Totals:         0       0       0       0       0
  1013 ;;Total ram usage:        0 bytes
  1014 ;; Hardware stack levels used: 1
  1015 ;; Hardware stack levels required when called: 4
  1016 ;; This function calls:
  1017 ;;		_lcd_4bits_initialize
  1018 ;;		_motor_initialize
  1019 ;; This function is called by:
  1020 ;;		_apllication_initilaize
  1021 ;; This function uses a non-reentrant model
  1022 ;;
  1023                           
  1024     0395                     _ecu_initialzie:	
  1025                           ;psect for function _ecu_initialzie
  1026                           
  1027     0395                     l1502:	
  1028                           ;incstack = 0
  1029                           ; Regs used in _ecu_initialzie: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1030                           
  1031                           
  1032                           ;ECU_LAYER/ECU_LAYER.c: 23:     motor_initialize(&motor1);
  1033     0395  303C               	movlw	(low (_motor1| 0))& (0+255)
  1034     0396  120A  118A  23BB  120A  118A  	fcall	_motor_initialize
  1035                           
  1036                           ;ECU_LAYER/ECU_LAYER.c: 24:     motor_initialize(&motor2);
  1037     039B  303A               	movlw	(low (_motor2| 0))& (0+255)
  1038     039C  120A  118A  23BB  120A  118A  	fcall	_motor_initialize
  1039                           
  1040                           ;ECU_LAYER/ECU_LAYER.c: 25:     lcd_4bits_initialize(&lcd);
  1041     03A1  3034               	movlw	(low (_lcd| 0))& (0+255)
  1042     03A2  120A  118A  257D  120A  118A  	fcall	_lcd_4bits_initialize
  1043     03A7                     l37:
  1044     03A7  0008               	return
  1045     03A8                     __end_of_ecu_initialzie:
  1046                           
  1047                           	psect	text4
  1048     03BB                     __ptext4:	
  1049 ;; *************** function _motor_initialize *****************
  1050 ;; Defined at:
  1051 ;;		line 8 in file "ECU_LAYER/Motor/ecu_motor_driver.c"
  1052 ;; Parameters:    Size  Location     Type
  1053 ;;  motor           1    wreg     PTR const struct .
  1054 ;;		 -> motor2(2), motor1(2), 
  1055 ;; Auto vars:     Size  Location     Type
  1056 ;;  motor           1   13[COMMON] PTR const struct .
  1057 ;;		 -> motor2(2), motor1(2), 
  1058 ;;  ret             1   12[COMMON] unsigned char 
  1059 ;; Return value:  Size  Location     Type
  1060 ;;                  1    wreg      unsigned char 
  1061 ;; Registers used:
  1062 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1063 ;; Tracked objects:
  1064 ;;		On entry : 0/0
  1065 ;;		On exit  : 0/0
  1066 ;;		Unchanged: 0/0
  1067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1068 ;;      Params:         0       0       0       0       0
  1069 ;;      Locals:         2       0       0       0       0
  1070 ;;      Temps:          0       0       0       0       0
  1071 ;;      Totals:         2       0       0       0       0
  1072 ;;Total ram usage:        2 bytes
  1073 ;; Hardware stack levels used: 1
  1074 ;; Hardware stack levels required when called: 2
  1075 ;; This function calls:
  1076 ;;		_gpio_pin_initialize
  1077 ;; This function is called by:
  1078 ;;		_ecu_initialzie
  1079 ;; This function uses a non-reentrant model
  1080 ;;
  1081                           
  1082     03BB                     _motor_initialize:	
  1083                           ;psect for function _motor_initialize
  1084                           
  1085                           
  1086                           ;incstack = 0
  1087                           ; Regs used in _motor_initialize: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1088                           ;motor_initialize@motor stored from wreg
  1089     03BB  00FD               	movwf	motor_initialize@motor
  1090     03BC                     l1446:
  1091     03BC                     l1448:
  1092                           
  1093                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 10:     if(motor == ((void*)0)){
  1094     03BC  087D               	movf	motor_initialize@motor,w
  1095     03BD  1D03               	btfss	3,2
  1096     03BE  2BC0               	goto	u1431
  1097     03BF  2BC1               	goto	u1430
  1098     03C0                     u1431:
  1099     03C0  2BC2               	goto	l1452
  1100     03C1                     u1430:
  1101     03C1                     l1450:
  1102                           
  1103                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 12:     }
  1104     03C1  2BD1               	goto	l9
  1105     03C2                     l1452:
  1106                           
  1107                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 14:         ret = gpio_pin_initialize(&(motor->pins
      +                          [0]));
  1108     03C2  087D               	movf	motor_initialize@motor,w
  1109     03C3  120A  118A  24EA  120A  118A  	fcall	_gpio_pin_initialize
  1110     03C8  00FC               	movwf	motor_initialize@ret
  1111                           
  1112                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 15:         ret = gpio_pin_initialize(&(motor->pins
      +                          [1]));
  1113     03C9  087D               	movf	motor_initialize@motor,w
  1114     03CA  3E01               	addlw	1
  1115     03CB  120A  118A  24EA  120A  118A  	fcall	_gpio_pin_initialize
  1116     03D0  00FC               	movwf	motor_initialize@ret
  1117     03D1                     l9:
  1118     03D1  0008               	return
  1119     03D2                     __end_of_motor_initialize:
  1120                           
  1121                           	psect	text5
  1122     057D                     __ptext5:	
  1123 ;; *************** function _lcd_4bits_initialize *****************
  1124 ;; Defined at:
  1125 ;;		line 14 in file "ECU_LAYER/LCD/ecu_lcd.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;  lcd             1    wreg     PTR const struct .
  1128 ;;		 -> lcd(6), 
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;  lcd             1    7[BANK0 ] PTR const struct .
  1131 ;;		 -> lcd(6), 
  1132 ;;  ret             1    6[BANK0 ] unsigned char 
  1133 ;;  counter         1    5[BANK0 ] unsigned char 
  1134 ;; Return value:  Size  Location     Type
  1135 ;;                  1    wreg      unsigned char 
  1136 ;; Registers used:
  1137 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1138 ;; Tracked objects:
  1139 ;;		On entry : 0/0
  1140 ;;		On exit  : 0/0
  1141 ;;		Unchanged: 0/0
  1142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1143 ;;      Params:         0       0       0       0       0
  1144 ;;      Locals:         0       3       0       0       0
  1145 ;;      Temps:          0       3       0       0       0
  1146 ;;      Totals:         0       6       0       0       0
  1147 ;;Total ram usage:        6 bytes
  1148 ;; Hardware stack levels used: 1
  1149 ;; Hardware stack levels required when called: 3
  1150 ;; This function calls:
  1151 ;;		_gpio_pin_initialize
  1152 ;;		_lcd_4bits_send_command
  1153 ;; This function is called by:
  1154 ;;		_ecu_initialzie
  1155 ;; This function uses a non-reentrant model
  1156 ;;
  1157                           
  1158     057D                     _lcd_4bits_initialize:	
  1159                           ;psect for function _lcd_4bits_initialize
  1160                           
  1161                           
  1162                           ;incstack = 0
  1163                           ; Regs used in _lcd_4bits_initialize: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  1164                           ;lcd_4bits_initialize@lcd stored from wreg
  1165     057D  1283               	bcf	3,5	;RP0=0, select bank0
  1166     057E  1303               	bcf	3,6	;RP1=0, select bank0
  1167     057F  00C5               	movwf	lcd_4bits_initialize@lcd
  1168     0580                     l1456:
  1169                           
  1170                           ;ECU_LAYER/LCD/ecu_lcd.c: 16:     uint8 counter = 0x00;
  1171     0580  01C3               	clrf	lcd_4bits_initialize@counter
  1172     0581                     l1458:
  1173                           
  1174                           ;ECU_LAYER/LCD/ecu_lcd.c: 17:     if(lcd == ((void*)0)){
  1175     0581  0845               	movf	lcd_4bits_initialize@lcd,w
  1176     0582  1D03               	btfss	3,2
  1177     0583  2D85               	goto	u1441
  1178     0584  2D86               	goto	u1440
  1179     0585                     u1441:
  1180     0585  2D87               	goto	l1462
  1181     0586                     u1440:
  1182     0586                     l1460:
  1183                           
  1184                           ;ECU_LAYER/LCD/ecu_lcd.c: 19:     }
  1185     0586  2E35               	goto	l250
  1186     0587                     l1462:
  1187                           
  1188                           ;ECU_LAYER/LCD/ecu_lcd.c: 21:         ret = gpio_pin_initialize(&(lcd->rs));
  1189     0587  0845               	movf	lcd_4bits_initialize@lcd,w
  1190     0588  120A  118A  24EA  120A  118A  	fcall	_gpio_pin_initialize
  1191     058D  1283               	bcf	3,5	;RP0=0, select bank0
  1192     058E  1303               	bcf	3,6	;RP1=0, select bank0
  1193     058F  00C4               	movwf	lcd_4bits_initialize@ret
  1194                           
  1195                           ;ECU_LAYER/LCD/ecu_lcd.c: 22:         ret = gpio_pin_initialize(&(lcd->en));
  1196     0590  0845               	movf	lcd_4bits_initialize@lcd,w
  1197     0591  3E01               	addlw	1
  1198     0592  120A  118A  24EA  120A  118A  	fcall	_gpio_pin_initialize
  1199     0597  1283               	bcf	3,5	;RP0=0, select bank0
  1200     0598  1303               	bcf	3,6	;RP1=0, select bank0
  1201     0599  00C4               	movwf	lcd_4bits_initialize@ret
  1202     059A                     l1464:
  1203                           
  1204                           ;ECU_LAYER/LCD/ecu_lcd.c: 23:         for(counter = 0x00;counter < 4;counter++){
  1205     059A  01C3               	clrf	lcd_4bits_initialize@counter
  1206     059B                     l1470:
  1207     059B  0843               	movf	lcd_4bits_initialize@counter,w
  1208     059C  0745               	addwf	lcd_4bits_initialize@lcd,w
  1209     059D  3E02               	addlw	2
  1210     059E  120A  118A  24EA  120A  118A  	fcall	_gpio_pin_initialize
  1211     05A3                     l1472:
  1212                           
  1213                           ;ECU_LAYER/LCD/ecu_lcd.c: 25:         }
  1214     05A3  3001               	movlw	1
  1215     05A4  00FF               	movwf	btemp+1
  1216     05A5  087F               	movf	btemp+1,w
  1217     05A6  1283               	bcf	3,5	;RP0=0, select bank0
  1218     05A7  1303               	bcf	3,6	;RP1=0, select bank0
  1219     05A8  07C3               	addwf	lcd_4bits_initialize@counter,f
  1220     05A9                     l1474:
  1221     05A9  3004               	movlw	4
  1222     05AA  0243               	subwf	lcd_4bits_initialize@counter,w
  1223     05AB  1C03               	skipc
  1224     05AC  2DAE               	goto	u1451
  1225     05AD  2DAF               	goto	u1450
  1226     05AE                     u1451:
  1227     05AE  2D9B               	goto	l1470
  1228     05AF                     u1450:
  1229     05AF                     l1476:
  1230                           
  1231                           ;ECU_LAYER/LCD/ecu_lcd.c: 26:         _delay((unsigned long)((150)*(20000000UL/4000.0)))
      +                          ;
  1232     05AF  3004               	movlw	4
  1233     05B0  1283               	bcf	3,5	;RP0=0, select bank0
  1234     05B1  1303               	bcf	3,6	;RP1=0, select bank0
  1235     05B2  00C2               	movwf	??_lcd_4bits_initialize+2
  1236     05B3  30CF               	movlw	207
  1237     05B4  00C1               	movwf	??_lcd_4bits_initialize+1
  1238     05B5  3001               	movlw	1
  1239     05B6  00C0               	movwf	??_lcd_4bits_initialize
  1240     05B7                     u1997:
  1241     05B7  0BC0               	decfsz	??_lcd_4bits_initialize,f
  1242     05B8  2DB7               	goto	u1997
  1243     05B9  0BC1               	decfsz	??_lcd_4bits_initialize+1,f
  1244     05BA  2DB7               	goto	u1997
  1245     05BB  0BC2               	decfsz	??_lcd_4bits_initialize+2,f
  1246     05BC  2DB7               	goto	u1997
  1247     05BD                     l1478:
  1248     05BD  3038               	movlw	56
  1249     05BE  00FC               	movwf	lcd_4bits_send_command@command
  1250     05BF  1283               	bcf	3,5	;RP0=0, select bank0
  1251     05C0  1303               	bcf	3,6	;RP1=0, select bank0
  1252     05C1  0845               	movf	lcd_4bits_initialize@lcd,w
  1253     05C2  120A  118A  2411  120A  118A  	fcall	_lcd_4bits_send_command
  1254     05C7                     l1480:
  1255                           
  1256                           ;ECU_LAYER/LCD/ecu_lcd.c: 28:         _delay((unsigned long)((50)*(20000000UL/4000.0)));
  1257     05C7  3002               	movlw	2
  1258     05C8  1283               	bcf	3,5	;RP0=0, select bank0
  1259     05C9  1303               	bcf	3,6	;RP1=0, select bank0
  1260     05CA  00C2               	movwf	??_lcd_4bits_initialize+2
  1261     05CB  3045               	movlw	69
  1262     05CC  00C1               	movwf	??_lcd_4bits_initialize+1
  1263     05CD  30A9               	movlw	169
  1264     05CE  00C0               	movwf	??_lcd_4bits_initialize
  1265     05CF                     u2007:
  1266     05CF  0BC0               	decfsz	??_lcd_4bits_initialize,f
  1267     05D0  2DCF               	goto	u2007
  1268     05D1  0BC1               	decfsz	??_lcd_4bits_initialize+1,f
  1269     05D2  2DCF               	goto	u2007
  1270     05D3  0BC2               	decfsz	??_lcd_4bits_initialize+2,f
  1271     05D4  2DCF               	goto	u2007
  1272     05D5  3038               	movlw	56
  1273     05D6  00FC               	movwf	lcd_4bits_send_command@command
  1274     05D7  1283               	bcf	3,5	;RP0=0, select bank0
  1275     05D8  1303               	bcf	3,6	;RP1=0, select bank0
  1276     05D9  0845               	movf	lcd_4bits_initialize@lcd,w
  1277     05DA  120A  118A  2411  120A  118A  	fcall	_lcd_4bits_send_command
  1278     05DF                     l1482:
  1279                           
  1280                           ;ECU_LAYER/LCD/ecu_lcd.c: 30:         _delay((unsigned long)((150)*(20000000UL/4000000.0
      +                          )));
  1281     05DF  30F9               	movlw	249
  1282     05E0  1283               	bcf	3,5	;RP0=0, select bank0
  1283     05E1  1303               	bcf	3,6	;RP1=0, select bank0
  1284     05E2  00C0               	movwf	??_lcd_4bits_initialize
  1285     05E3                     u2017:
  1286     05E3  0BC0               	decfsz	??_lcd_4bits_initialize,f
  1287     05E4  2DE3               	goto	u2017
  1288     05E5                     l1484:
  1289     05E5  3038               	movlw	56
  1290     05E6  00FC               	movwf	lcd_4bits_send_command@command
  1291     05E7  1283               	bcf	3,5	;RP0=0, select bank0
  1292     05E8  1303               	bcf	3,6	;RP1=0, select bank0
  1293     05E9  0845               	movf	lcd_4bits_initialize@lcd,w
  1294     05EA  120A  118A  2411  120A  118A  	fcall	_lcd_4bits_send_command
  1295     05EF                     l1486:
  1296     05EF  01FC               	clrf	lcd_4bits_send_command@command
  1297     05F0  0AFC               	incf	lcd_4bits_send_command@command,f
  1298     05F1  1283               	bcf	3,5	;RP0=0, select bank0
  1299     05F2  1303               	bcf	3,6	;RP1=0, select bank0
  1300     05F3  0845               	movf	lcd_4bits_initialize@lcd,w
  1301     05F4  120A  118A  2411  120A  118A  	fcall	_lcd_4bits_send_command
  1302     05F9                     l1488:
  1303     05F9  3002               	movlw	2
  1304     05FA  00FC               	movwf	lcd_4bits_send_command@command
  1305     05FB  1283               	bcf	3,5	;RP0=0, select bank0
  1306     05FC  1303               	bcf	3,6	;RP1=0, select bank0
  1307     05FD  0845               	movf	lcd_4bits_initialize@lcd,w
  1308     05FE  120A  118A  2411  120A  118A  	fcall	_lcd_4bits_send_command
  1309     0603                     l1490:
  1310     0603  3006               	movlw	6
  1311     0604  00FC               	movwf	lcd_4bits_send_command@command
  1312     0605  1283               	bcf	3,5	;RP0=0, select bank0
  1313     0606  1303               	bcf	3,6	;RP1=0, select bank0
  1314     0607  0845               	movf	lcd_4bits_initialize@lcd,w
  1315     0608  120A  118A  2411  120A  118A  	fcall	_lcd_4bits_send_command
  1316     060D                     l1492:
  1317     060D  300F               	movlw	15
  1318     060E  00FC               	movwf	lcd_4bits_send_command@command
  1319     060F  1283               	bcf	3,5	;RP0=0, select bank0
  1320     0610  1303               	bcf	3,6	;RP1=0, select bank0
  1321     0611  0845               	movf	lcd_4bits_initialize@lcd,w
  1322     0612  120A  118A  2411  120A  118A  	fcall	_lcd_4bits_send_command
  1323     0617                     l1494:
  1324     0617  3010               	movlw	16
  1325     0618  00FC               	movwf	lcd_4bits_send_command@command
  1326     0619  1283               	bcf	3,5	;RP0=0, select bank0
  1327     061A  1303               	bcf	3,6	;RP1=0, select bank0
  1328     061B  0845               	movf	lcd_4bits_initialize@lcd,w
  1329     061C  120A  118A  2411  120A  118A  	fcall	_lcd_4bits_send_command
  1330     0621                     l1496:
  1331     0621  3028               	movlw	40
  1332     0622  00FC               	movwf	lcd_4bits_send_command@command
  1333     0623  1283               	bcf	3,5	;RP0=0, select bank0
  1334     0624  1303               	bcf	3,6	;RP1=0, select bank0
  1335     0625  0845               	movf	lcd_4bits_initialize@lcd,w
  1336     0626  120A  118A  2411  120A  118A  	fcall	_lcd_4bits_send_command
  1337     062B                     l1498:
  1338     062B  3080               	movlw	128
  1339     062C  00FC               	movwf	lcd_4bits_send_command@command
  1340     062D  1283               	bcf	3,5	;RP0=0, select bank0
  1341     062E  1303               	bcf	3,6	;RP1=0, select bank0
  1342     062F  0845               	movf	lcd_4bits_initialize@lcd,w
  1343     0630  120A  118A  2411  120A  118A  	fcall	_lcd_4bits_send_command
  1344     0635                     l250:
  1345     0635  0008               	return
  1346     0636                     __end_of_lcd_4bits_initialize:
  1347                           
  1348                           	psect	text6
  1349     0411                     __ptext6:	
  1350 ;; *************** function _lcd_4bits_send_command *****************
  1351 ;; Defined at:
  1352 ;;		line 43 in file "ECU_LAYER/LCD/ecu_lcd.c"
  1353 ;; Parameters:    Size  Location     Type
  1354 ;;  lcd             1    wreg     PTR const struct .
  1355 ;;		 -> lcd(6), 
  1356 ;;  command         1   12[COMMON] unsigned char 
  1357 ;; Auto vars:     Size  Location     Type
  1358 ;;  lcd             1    1[BANK0 ] PTR const struct .
  1359 ;;		 -> lcd(6), 
  1360 ;;  ret             1    0[BANK0 ] unsigned char 
  1361 ;; Return value:  Size  Location     Type
  1362 ;;                  1    wreg      unsigned char 
  1363 ;; Registers used:
  1364 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1365 ;; Tracked objects:
  1366 ;;		On entry : 0/0
  1367 ;;		On exit  : 0/0
  1368 ;;		Unchanged: 0/0
  1369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1370 ;;      Params:         1       0       0       0       0
  1371 ;;      Locals:         0       2       0       0       0
  1372 ;;      Temps:          1       0       0       0       0
  1373 ;;      Totals:         2       2       0       0       0
  1374 ;;Total ram usage:        4 bytes
  1375 ;; Hardware stack levels used: 1
  1376 ;; Hardware stack levels required when called: 2
  1377 ;; This function calls:
  1378 ;;		_gpio_pin_write_logic
  1379 ;;		_send_4bits
  1380 ;;		_send_enable_signal
  1381 ;; This function is called by:
  1382 ;;		_lcd_4bits_initialize
  1383 ;;		_set_cursor
  1384 ;; This function uses a non-reentrant model
  1385 ;;
  1386                           
  1387     0411                     _lcd_4bits_send_command:	
  1388                           ;psect for function _lcd_4bits_send_command
  1389                           
  1390                           
  1391                           ;incstack = 0
  1392                           ; Regs used in _lcd_4bits_send_command: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  1393                           ;lcd_4bits_send_command@lcd stored from wreg
  1394     0411  1283               	bcf	3,5	;RP0=0, select bank0
  1395     0412  1303               	bcf	3,6	;RP1=0, select bank0
  1396     0413  00BF               	movwf	lcd_4bits_send_command@lcd
  1397     0414                     l1434:
  1398     0414                     l1436:
  1399                           
  1400                           ;ECU_LAYER/LCD/ecu_lcd.c: 45:     if(lcd == ((void*)0)){
  1401     0414  083F               	movf	lcd_4bits_send_command@lcd,w
  1402     0415  1D03               	btfss	3,2
  1403     0416  2C18               	goto	u1411
  1404     0417  2C19               	goto	u1410
  1405     0418                     u1411:
  1406     0418  2C1C               	goto	l1440
  1407     0419                     u1410:
  1408     0419                     l1438:
  1409                           
  1410                           ;ECU_LAYER/LCD/ecu_lcd.c: 46:         ret = 0x01;
  1411     0419  01BE               	clrf	lcd_4bits_send_command@ret
  1412     041A  0ABE               	incf	lcd_4bits_send_command@ret,f
  1413                           
  1414                           ;ECU_LAYER/LCD/ecu_lcd.c: 47:     }
  1415     041B  2C56               	goto	l1442
  1416     041C                     l1440:
  1417                           
  1418                           ;ECU_LAYER/LCD/ecu_lcd.c: 49:         ret = gpio_pin_write_logic(&(lcd->rs),GPIO_LOW);
  1419     041C  01F0               	clrf	gpio_pin_write_logic@logic
  1420     041D  083F               	movf	lcd_4bits_send_command@lcd,w
  1421     041E  120A  118A  270E  120A  118A  	fcall	_gpio_pin_write_logic
  1422     0423  1283               	bcf	3,5	;RP0=0, select bank0
  1423     0424  1303               	bcf	3,6	;RP1=0, select bank0
  1424     0425  00BE               	movwf	lcd_4bits_send_command@ret
  1425                           
  1426                           ;ECU_LAYER/LCD/ecu_lcd.c: 50:         ret = send_4bits(lcd,(command >> 4));
  1427     0426  087C               	movf	lcd_4bits_send_command@command,w
  1428     0427  00FD               	movwf	??_lcd_4bits_send_command
  1429     0428  3004               	movlw	4
  1430     0429                     u1425:
  1431     0429  1003               	clrc
  1432     042A  0CFD               	rrf	??_lcd_4bits_send_command,f
  1433     042B  3EFF               	addlw	-1
  1434     042C  1D03               	skipz
  1435     042D  2C29               	goto	u1425
  1436     042E  087D               	movf	??_lcd_4bits_send_command,w
  1437     042F  00F8               	movwf	send_4bits@command
  1438     0430  083F               	movf	lcd_4bits_send_command@lcd,w
  1439     0431  120A  118A  24A0  120A  118A  	fcall	_send_4bits
  1440     0436  1283               	bcf	3,5	;RP0=0, select bank0
  1441     0437  1303               	bcf	3,6	;RP1=0, select bank0
  1442     0438  00BE               	movwf	lcd_4bits_send_command@ret
  1443                           
  1444                           ;ECU_LAYER/LCD/ecu_lcd.c: 51:         ret = send_enable_signal(lcd);
  1445     0439  083F               	movf	lcd_4bits_send_command@lcd,w
  1446     043A  120A  118A  23F0  120A  118A  	fcall	_send_enable_signal
  1447     043F  1283               	bcf	3,5	;RP0=0, select bank0
  1448     0440  1303               	bcf	3,6	;RP1=0, select bank0
  1449     0441  00BE               	movwf	lcd_4bits_send_command@ret
  1450                           
  1451                           ;ECU_LAYER/LCD/ecu_lcd.c: 52:         ret = send_4bits(lcd,command);
  1452     0442  087C               	movf	lcd_4bits_send_command@command,w
  1453     0443  00F8               	movwf	send_4bits@command
  1454     0444  083F               	movf	lcd_4bits_send_command@lcd,w
  1455     0445  120A  118A  24A0  120A  118A  	fcall	_send_4bits
  1456     044A  1283               	bcf	3,5	;RP0=0, select bank0
  1457     044B  1303               	bcf	3,6	;RP1=0, select bank0
  1458     044C  00BE               	movwf	lcd_4bits_send_command@ret
  1459                           
  1460                           ;ECU_LAYER/LCD/ecu_lcd.c: 53:         ret = send_enable_signal(lcd);
  1461     044D  083F               	movf	lcd_4bits_send_command@lcd,w
  1462     044E  120A  118A  23F0  120A  118A  	fcall	_send_enable_signal
  1463     0453  1283               	bcf	3,5	;RP0=0, select bank0
  1464     0454  1303               	bcf	3,6	;RP1=0, select bank0
  1465     0455  00BE               	movwf	lcd_4bits_send_command@ret
  1466     0456                     l1442:
  1467                           
  1468                           ;ECU_LAYER/LCD/ecu_lcd.c: 55:     return ret;
  1469     0456  083E               	movf	lcd_4bits_send_command@ret,w
  1470     0457                     l255:
  1471     0457  0008               	return
  1472     0458                     __end_of_lcd_4bits_send_command:
  1473                           
  1474                           	psect	text7
  1475     03F0                     __ptext7:	
  1476 ;; *************** function _send_enable_signal *****************
  1477 ;; Defined at:
  1478 ;;		line 122 in file "ECU_LAYER/LCD/ecu_lcd.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;  lcd             1    wreg     PTR const struct .
  1481 ;;		 -> lcd(6), 
  1482 ;; Auto vars:     Size  Location     Type
  1483 ;;  lcd             1   10[COMMON] PTR const struct .
  1484 ;;		 -> lcd(6), 
  1485 ;;  ret             1    9[COMMON] unsigned char 
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  1    wreg      unsigned char 
  1488 ;; Registers used:
  1489 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1495 ;;      Params:         0       0       0       0       0
  1496 ;;      Locals:         2       0       0       0       0
  1497 ;;      Temps:          1       0       0       0       0
  1498 ;;      Totals:         3       0       0       0       0
  1499 ;;Total ram usage:        3 bytes
  1500 ;; Hardware stack levels used: 1
  1501 ;; Hardware stack levels required when called: 1
  1502 ;; This function calls:
  1503 ;;		_gpio_pin_write_logic
  1504 ;; This function is called by:
  1505 ;;		_lcd_4bits_send_command
  1506 ;;		_lcd_4bits_send_char
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510     03F0                     _send_enable_signal:	
  1511                           ;psect for function _send_enable_signal
  1512                           
  1513                           
  1514                           ;incstack = 0
  1515                           ; Regs used in _send_enable_signal: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1516                           ;send_enable_signal@lcd stored from wreg
  1517     03F0  00FA               	movwf	send_enable_signal@lcd
  1518     03F1                     l1388:
  1519     03F1                     l1390:
  1520                           
  1521                           ;ECU_LAYER/LCD/ecu_lcd.c: 124:     if(lcd == ((void*)0)){
  1522     03F1  087A               	movf	send_enable_signal@lcd,w
  1523     03F2  1D03               	btfss	3,2
  1524     03F3  2BF5               	goto	u1291
  1525     03F4  2BF6               	goto	u1290
  1526     03F5                     u1291:
  1527     03F5  2BF9               	goto	l1394
  1528     03F6                     u1290:
  1529     03F6                     l1392:
  1530                           
  1531                           ;ECU_LAYER/LCD/ecu_lcd.c: 125:         ret = 0x01;
  1532     03F6  01F9               	clrf	send_enable_signal@ret
  1533     03F7  0AF9               	incf	send_enable_signal@ret,f
  1534                           
  1535                           ;ECU_LAYER/LCD/ecu_lcd.c: 126:     }
  1536     03F8  2C0F               	goto	l287
  1537     03F9                     l1394:
  1538     03F9  01F0               	clrf	gpio_pin_write_logic@logic
  1539     03FA  0AF0               	incf	gpio_pin_write_logic@logic,f
  1540     03FB  087A               	movf	send_enable_signal@lcd,w
  1541     03FC  3E01               	addlw	1
  1542     03FD  120A  118A  270E  120A  118A  	fcall	_gpio_pin_write_logic
  1543     0402                     l1396:
  1544                           
  1545                           ;ECU_LAYER/LCD/ecu_lcd.c: 129:         _delay((unsigned long)((5)*(20000000UL/4000000.0)
      +                          ));
  1546     0402  3008               	movlw	8
  1547     0403  00F8               	movwf	??_send_enable_signal
  1548     0404                     u2027:
  1549     0404  0BF8               	decfsz	??_send_enable_signal,f
  1550     0405  2C04               	goto	u2027
  1551     0406                     l1398:
  1552                           
  1553                           ;ECU_LAYER/LCD/ecu_lcd.c: 130:         ret = gpio_pin_write_logic(&(lcd->en),GPIO_LOW);
  1554     0406  01F0               	clrf	gpio_pin_write_logic@logic
  1555     0407  087A               	movf	send_enable_signal@lcd,w
  1556     0408  3E01               	addlw	1
  1557     0409  120A  118A  270E  120A  118A  	fcall	_gpio_pin_write_logic
  1558     040E  00F9               	movwf	send_enable_signal@ret
  1559     040F                     l287:	
  1560                           ;ECU_LAYER/LCD/ecu_lcd.c: 131:     }
  1561                           
  1562                           
  1563                           ;ECU_LAYER/LCD/ecu_lcd.c: 132:     return ret;
  1564     040F  0879               	movf	send_enable_signal@ret,w
  1565     0410                     l288:
  1566     0410  0008               	return
  1567     0411                     __end_of_send_enable_signal:
  1568                           
  1569                           	psect	text8
  1570     04A0                     __ptext8:	
  1571 ;; *************** function _send_4bits *****************
  1572 ;; Defined at:
  1573 ;;		line 108 in file "ECU_LAYER/LCD/ecu_lcd.c"
  1574 ;; Parameters:    Size  Location     Type
  1575 ;;  lcd             1    wreg     PTR struct .
  1576 ;;		 -> lcd(6), 
  1577 ;;  command         1    8[COMMON] unsigned char 
  1578 ;; Auto vars:     Size  Location     Type
  1579 ;;  lcd             1   11[COMMON] PTR struct .
  1580 ;;		 -> lcd(6), 
  1581 ;;  ret             1   10[COMMON] unsigned char 
  1582 ;; Return value:  Size  Location     Type
  1583 ;;                  1    wreg      unsigned char 
  1584 ;; Registers used:
  1585 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1586 ;; Tracked objects:
  1587 ;;		On entry : 0/0
  1588 ;;		On exit  : 0/0
  1589 ;;		Unchanged: 0/0
  1590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1591 ;;      Params:         1       0       0       0       0
  1592 ;;      Locals:         2       0       0       0       0
  1593 ;;      Temps:          1       0       0       0       0
  1594 ;;      Totals:         4       0       0       0       0
  1595 ;;Total ram usage:        4 bytes
  1596 ;; Hardware stack levels used: 1
  1597 ;; Hardware stack levels required when called: 1
  1598 ;; This function calls:
  1599 ;;		_gpio_pin_write_logic
  1600 ;; This function is called by:
  1601 ;;		_lcd_4bits_send_command
  1602 ;;		_lcd_4bits_send_char
  1603 ;; This function uses a non-reentrant model
  1604 ;;
  1605                           
  1606     04A0                     _send_4bits:	
  1607                           ;psect for function _send_4bits
  1608                           
  1609                           
  1610                           ;incstack = 0
  1611                           ; Regs used in _send_4bits: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1612                           ;send_4bits@lcd stored from wreg
  1613     04A0  00FB               	movwf	send_4bits@lcd
  1614     04A1                     l1376:
  1615     04A1                     l1378:
  1616                           
  1617                           ;ECU_LAYER/LCD/ecu_lcd.c: 110:     if(lcd == ((void*)0)){
  1618     04A1  087B               	movf	send_4bits@lcd,w
  1619     04A2  1D03               	btfss	3,2
  1620     04A3  2CA5               	goto	u1261
  1621     04A4  2CA6               	goto	u1260
  1622     04A5                     u1261:
  1623     04A5  2CA9               	goto	l1382
  1624     04A6                     u1260:
  1625     04A6                     l1380:
  1626                           
  1627                           ;ECU_LAYER/LCD/ecu_lcd.c: 111:         ret = 0x01;
  1628     04A6  01FA               	clrf	send_4bits@ret
  1629     04A7  0AFA               	incf	send_4bits@ret,f
  1630                           
  1631                           ;ECU_LAYER/LCD/ecu_lcd.c: 112:     }
  1632     04A8  2CE8               	goto	l1384
  1633     04A9                     l1382:
  1634                           
  1635                           ;ECU_LAYER/LCD/ecu_lcd.c: 114:         ret = gpio_pin_write_logic(&(lcd->pins[0]),((comm
      +                          and >> 0) & 0x01));
  1636     04A9  0878               	movf	send_4bits@command,w
  1637     04AA  3901               	andlw	1
  1638     04AB  00F0               	movwf	gpio_pin_write_logic@logic
  1639     04AC  087B               	movf	send_4bits@lcd,w
  1640     04AD  3E02               	addlw	2
  1641     04AE  120A  118A  270E  120A  118A  	fcall	_gpio_pin_write_logic
  1642     04B3  00FA               	movwf	send_4bits@ret
  1643                           
  1644                           ;ECU_LAYER/LCD/ecu_lcd.c: 115:         ret = gpio_pin_write_logic(&(lcd->pins[1]),((comm
      +                          and >> 1) & 0x01));
  1645     04B4  0878               	movf	send_4bits@command,w
  1646     04B5  00F9               	movwf	??_send_4bits
  1647     04B6  1003               	clrc
  1648     04B7  0C79               	rrf	??_send_4bits,w
  1649     04B8  3901               	andlw	1
  1650     04B9  00F0               	movwf	gpio_pin_write_logic@logic
  1651     04BA  087B               	movf	send_4bits@lcd,w
  1652     04BB  3E03               	addlw	3
  1653     04BC  120A  118A  270E  120A  118A  	fcall	_gpio_pin_write_logic
  1654     04C1  00FA               	movwf	send_4bits@ret
  1655                           
  1656                           ;ECU_LAYER/LCD/ecu_lcd.c: 116:         ret = gpio_pin_write_logic(&(lcd->pins[2]),((comm
      +                          and >> 2) & 0x01));
  1657     04C2  0878               	movf	send_4bits@command,w
  1658     04C3  00F9               	movwf	??_send_4bits
  1659     04C4  3002               	movlw	2
  1660     04C5                     u1275:
  1661     04C5  1003               	clrc
  1662     04C6  0CF9               	rrf	??_send_4bits,f
  1663     04C7  3EFF               	addlw	-1
  1664     04C8  1D03               	skipz
  1665     04C9  2CC5               	goto	u1275
  1666     04CA  0879               	movf	??_send_4bits,w
  1667     04CB  3901               	andlw	1
  1668     04CC  00F0               	movwf	gpio_pin_write_logic@logic
  1669     04CD  087B               	movf	send_4bits@lcd,w
  1670     04CE  3E04               	addlw	4
  1671     04CF  120A  118A  270E  120A  118A  	fcall	_gpio_pin_write_logic
  1672     04D4  00FA               	movwf	send_4bits@ret
  1673                           
  1674                           ;ECU_LAYER/LCD/ecu_lcd.c: 117:         ret = gpio_pin_write_logic(&(lcd->pins[3]),((comm
      +                          and >> 3) & 0x01));
  1675     04D5  0878               	movf	send_4bits@command,w
  1676     04D6  00F9               	movwf	??_send_4bits
  1677     04D7  3003               	movlw	3
  1678     04D8                     u1285:
  1679     04D8  1003               	clrc
  1680     04D9  0CF9               	rrf	??_send_4bits,f
  1681     04DA  3EFF               	addlw	-1
  1682     04DB  1D03               	skipz
  1683     04DC  2CD8               	goto	u1285
  1684     04DD  0879               	movf	??_send_4bits,w
  1685     04DE  3901               	andlw	1
  1686     04DF  00F0               	movwf	gpio_pin_write_logic@logic
  1687     04E0  087B               	movf	send_4bits@lcd,w
  1688     04E1  3E05               	addlw	5
  1689     04E2  120A  118A  270E  120A  118A  	fcall	_gpio_pin_write_logic
  1690     04E7  00FA               	movwf	send_4bits@ret
  1691     04E8                     l1384:
  1692                           
  1693                           ;ECU_LAYER/LCD/ecu_lcd.c: 119:     return ret;
  1694     04E8  087A               	movf	send_4bits@ret,w
  1695     04E9                     l283:
  1696     04E9  0008               	return
  1697     04EA                     __end_of_send_4bits:
  1698                           
  1699                           	psect	text9
  1700     04EA                     __ptext9:	
  1701 ;; *************** function _gpio_pin_initialize *****************
  1702 ;; Defined at:
  1703 ;;		line 103 in file "MCAL_LAYER/GPIO/mcal_gpio.c"
  1704 ;; Parameters:    Size  Location     Type
  1705 ;;  pin             1    wreg     PTR const struct .
  1706 ;;		 -> lcd$pins(4), lcd(6), motor2$pins(2), motor2(2), 
  1707 ;;		 -> motor1$pins(2), motor1(2), 
  1708 ;; Auto vars:     Size  Location     Type
  1709 ;;  pin             1   11[COMMON] PTR const struct .
  1710 ;;		 -> lcd$pins(4), lcd(6), motor2$pins(2), motor2(2), 
  1711 ;;		 -> motor1$pins(2), motor1(2), 
  1712 ;;  ret             1   10[COMMON] unsigned char 
  1713 ;; Return value:  Size  Location     Type
  1714 ;;                  1    wreg      unsigned char 
  1715 ;; Registers used:
  1716 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1717 ;; Tracked objects:
  1718 ;;		On entry : 0/0
  1719 ;;		On exit  : 0/0
  1720 ;;		Unchanged: 0/0
  1721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1722 ;;      Params:         0       0       0       0       0
  1723 ;;      Locals:         2       0       0       0       0
  1724 ;;      Temps:          2       0       0       0       0
  1725 ;;      Totals:         4       0       0       0       0
  1726 ;;Total ram usage:        4 bytes
  1727 ;; Hardware stack levels used: 1
  1728 ;; Hardware stack levels required when called: 1
  1729 ;; This function calls:
  1730 ;;		_gpio_pin_direction_initialize
  1731 ;;		_gpio_pin_write_logic
  1732 ;; This function is called by:
  1733 ;;		_motor_initialize
  1734 ;;		_lcd_4bits_initialize
  1735 ;; This function uses a non-reentrant model
  1736 ;;
  1737                           
  1738     04EA                     _gpio_pin_initialize:	
  1739                           ;psect for function _gpio_pin_initialize
  1740                           
  1741                           
  1742                           ;incstack = 0
  1743                           ; Regs used in _gpio_pin_initialize: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  1744                           ;gpio_pin_initialize@pin stored from wreg
  1745     04EA  00FB               	movwf	gpio_pin_initialize@pin
  1746     04EB                     l1402:
  1747                           
  1748                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 104:     uint8 ret = 0x00;
  1749     04EB  01FA               	clrf	gpio_pin_initialize@ret
  1750     04EC                     l1404:
  1751                           
  1752                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 105:     if (pin == ((void*)0)) {
  1753     04EC  087B               	movf	gpio_pin_initialize@pin,w
  1754     04ED  1D03               	btfss	3,2
  1755     04EE  2CF0               	goto	u1301
  1756     04EF  2CF1               	goto	u1300
  1757     04F0                     u1301:
  1758     04F0  2CF4               	goto	l1408
  1759     04F1                     u1300:
  1760     04F1                     l1406:
  1761                           
  1762                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 106:         ret = 0x01;
  1763     04F1  01FA               	clrf	gpio_pin_initialize@ret
  1764     04F2  0AFA               	incf	gpio_pin_initialize@ret,f
  1765                           
  1766                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 107:     } else {
  1767     04F3  2D7B               	goto	l1430
  1768     04F4                     l1408:
  1769                           
  1770                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 108:         if ((pin->port == PORTA_INDEX && pin->pin < 6
      +                          ) || (pin->port == PORTB_INDEX && pin->pin < 8) || (pin->port == PORTC_INDEX && pin->pin
      +                           < 8) ||
  1771     04F4  087B               	movf	gpio_pin_initialize@pin,w
  1772     04F5  0084               	movwf	4
  1773     04F6  1383               	bcf	3,7	;select IRP bank0
  1774     04F7  0800               	movf	0,w
  1775     04F8  3907               	andlw	7
  1776     04F9  3A00               	xorlw	0
  1777     04FA  1D03               	skipz
  1778     04FB  2CFD               	goto	u1311
  1779     04FC  2CFE               	goto	u1310
  1780     04FD                     u1311:
  1781     04FD  2D0C               	goto	l1412
  1782     04FE                     u1310:
  1783     04FE                     l1410:
  1784     04FE  087B               	movf	gpio_pin_initialize@pin,w
  1785     04FF  0084               	movwf	4
  1786     0500  0C00               	rrf	0,w
  1787     0501  00F8               	movwf	??_gpio_pin_initialize
  1788     0502  0CF8               	rrf	??_gpio_pin_initialize,f
  1789     0503  0C78               	rrf	??_gpio_pin_initialize,w
  1790     0504  3907               	andlw	7
  1791     0505  00F9               	movwf	??_gpio_pin_initialize+1
  1792     0506  3006               	movlw	6
  1793     0507  0279               	subwf	??_gpio_pin_initialize+1,w
  1794     0508  1C03               	skipc
  1795     0509  2D0B               	goto	u1321
  1796     050A  2D0C               	goto	u1320
  1797     050B                     u1321:
  1798     050B  2D68               	goto	l1428
  1799     050C                     u1320:
  1800     050C                     l1412:
  1801     050C  087B               	movf	gpio_pin_initialize@pin,w
  1802     050D  0084               	movwf	4
  1803     050E  0800               	movf	0,w
  1804     050F  3907               	andlw	7
  1805     0510  3A01               	xorlw	1
  1806     0511  1D03               	skipz
  1807     0512  2D14               	goto	u1331
  1808     0513  2D15               	goto	u1330
  1809     0514                     u1331:
  1810     0514  2D23               	goto	l1416
  1811     0515                     u1330:
  1812     0515                     l1414:
  1813     0515  087B               	movf	gpio_pin_initialize@pin,w
  1814     0516  0084               	movwf	4
  1815     0517  0C00               	rrf	0,w
  1816     0518  00F8               	movwf	??_gpio_pin_initialize
  1817     0519  0CF8               	rrf	??_gpio_pin_initialize,f
  1818     051A  0C78               	rrf	??_gpio_pin_initialize,w
  1819     051B  3907               	andlw	7
  1820     051C  00F9               	movwf	??_gpio_pin_initialize+1
  1821     051D  3008               	movlw	8
  1822     051E  0279               	subwf	??_gpio_pin_initialize+1,w
  1823     051F  1C03               	skipc
  1824     0520  2D22               	goto	u1341
  1825     0521  2D23               	goto	u1340
  1826     0522                     u1341:
  1827     0522  2D68               	goto	l1428
  1828     0523                     u1340:
  1829     0523                     l1416:
  1830     0523  087B               	movf	gpio_pin_initialize@pin,w
  1831     0524  0084               	movwf	4
  1832     0525  0800               	movf	0,w
  1833     0526  3907               	andlw	7
  1834     0527  3A02               	xorlw	2
  1835     0528  1D03               	skipz
  1836     0529  2D2B               	goto	u1351
  1837     052A  2D2C               	goto	u1350
  1838     052B                     u1351:
  1839     052B  2D3A               	goto	l1420
  1840     052C                     u1350:
  1841     052C                     l1418:
  1842     052C  087B               	movf	gpio_pin_initialize@pin,w
  1843     052D  0084               	movwf	4
  1844     052E  0C00               	rrf	0,w
  1845     052F  00F8               	movwf	??_gpio_pin_initialize
  1846     0530  0CF8               	rrf	??_gpio_pin_initialize,f
  1847     0531  0C78               	rrf	??_gpio_pin_initialize,w
  1848     0532  3907               	andlw	7
  1849     0533  00F9               	movwf	??_gpio_pin_initialize+1
  1850     0534  3008               	movlw	8
  1851     0535  0279               	subwf	??_gpio_pin_initialize+1,w
  1852     0536  1C03               	skipc
  1853     0537  2D39               	goto	u1361
  1854     0538  2D3A               	goto	u1360
  1855     0539                     u1361:
  1856     0539  2D68               	goto	l1428
  1857     053A                     u1360:
  1858     053A                     l1420:
  1859     053A  087B               	movf	gpio_pin_initialize@pin,w
  1860     053B  0084               	movwf	4
  1861     053C  0800               	movf	0,w
  1862     053D  3907               	andlw	7
  1863     053E  3A03               	xorlw	3
  1864     053F  1D03               	skipz
  1865     0540  2D42               	goto	u1371
  1866     0541  2D43               	goto	u1370
  1867     0542                     u1371:
  1868     0542  2D51               	goto	l1424
  1869     0543                     u1370:
  1870     0543                     l1422:
  1871     0543  087B               	movf	gpio_pin_initialize@pin,w
  1872     0544  0084               	movwf	4
  1873     0545  0C00               	rrf	0,w
  1874     0546  00F8               	movwf	??_gpio_pin_initialize
  1875     0547  0CF8               	rrf	??_gpio_pin_initialize,f
  1876     0548  0C78               	rrf	??_gpio_pin_initialize,w
  1877     0549  3907               	andlw	7
  1878     054A  00F9               	movwf	??_gpio_pin_initialize+1
  1879     054B  3008               	movlw	8
  1880     054C  0279               	subwf	??_gpio_pin_initialize+1,w
  1881     054D  1C03               	skipc
  1882     054E  2D50               	goto	u1381
  1883     054F  2D51               	goto	u1380
  1884     0550                     u1381:
  1885     0550  2D68               	goto	l1428
  1886     0551                     u1380:
  1887     0551                     l1424:
  1888     0551  087B               	movf	gpio_pin_initialize@pin,w
  1889     0552  0084               	movwf	4
  1890     0553  0800               	movf	0,w
  1891     0554  3907               	andlw	7
  1892     0555  3A04               	xorlw	4
  1893     0556  1D03               	skipz
  1894     0557  2D59               	goto	u1391
  1895     0558  2D5A               	goto	u1390
  1896     0559                     u1391:
  1897     0559  2CF1               	goto	l1406
  1898     055A                     u1390:
  1899     055A                     l1426:
  1900     055A  087B               	movf	gpio_pin_initialize@pin,w
  1901     055B  0084               	movwf	4
  1902     055C  0C00               	rrf	0,w
  1903     055D  00F8               	movwf	??_gpio_pin_initialize
  1904     055E  0CF8               	rrf	??_gpio_pin_initialize,f
  1905     055F  0C78               	rrf	??_gpio_pin_initialize,w
  1906     0560  3907               	andlw	7
  1907     0561  00F9               	movwf	??_gpio_pin_initialize+1
  1908     0562  3003               	movlw	3
  1909     0563  0279               	subwf	??_gpio_pin_initialize+1,w
  1910     0564  1803               	skipnc
  1911     0565  2D67               	goto	u1401
  1912     0566  2D68               	goto	u1400
  1913     0567                     u1401:
  1914     0567  2CF1               	goto	l1406
  1915     0568                     u1400:
  1916     0568                     l1428:
  1917                           
  1918                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 109:                 (pin->port == PORTD_INDEX && pin->pin
      +                           < 8) || (pin->port == PORTE_INDEX && pin->pin < 3)) {;MCAL_LAYER/GPIO/mcal_gpio.c: 110:
      +                                       gpio_pin_direction_initialize(pin);
  1919     0568  087B               	movf	gpio_pin_initialize@pin,w
  1920     0569  120A  118A  2636  120A  118A  	fcall	_gpio_pin_direction_initialize
  1921                           
  1922                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 111:             gpio_pin_write_logic(pin, pin->logic);
  1923     056E  087B               	movf	gpio_pin_initialize@pin,w
  1924     056F  0084               	movwf	4
  1925     0570  3000               	movlw	0
  1926     0571  1383               	bcf	3,7	;select IRP bank0
  1927     0572  1B00               	btfsc	0,6
  1928     0573  3001               	movlw	1
  1929     0574  00F0               	movwf	gpio_pin_write_logic@logic
  1930     0575  087B               	movf	gpio_pin_initialize@pin,w
  1931     0576  120A  118A  270E  120A  118A  	fcall	_gpio_pin_write_logic
  1932     057B                     l1430:	
  1933                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 112:         } else {
  1934                           
  1935                           
  1936                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 116:     return ret;
  1937     057B  087A               	movf	gpio_pin_initialize@ret,w
  1938     057C                     l175:
  1939     057C  0008               	return
  1940     057D                     __end_of_gpio_pin_initialize:
  1941                           
  1942                           	psect	text10
  1943     070E                     __ptext10:	
  1944 ;; *************** function _gpio_pin_write_logic *****************
  1945 ;; Defined at:
  1946 ;;		line 50 in file "MCAL_LAYER/GPIO/mcal_gpio.c"
  1947 ;; Parameters:    Size  Location     Type
  1948 ;;  pin             1    wreg     PTR const struct .
  1949 ;;		 -> lcd$pins(4), lcd(6), motor2$pins(2), motor2(2), 
  1950 ;;		 -> motor1$pins(2), motor1(2), 
  1951 ;;  logic           1    0[COMMON] enum E1352
  1952 ;; Auto vars:     Size  Location     Type
  1953 ;;  pin             1    7[COMMON] PTR const struct .
  1954 ;;		 -> lcd$pins(4), lcd(6), motor2$pins(2), motor2(2), 
  1955 ;;		 -> motor1$pins(2), motor1(2), 
  1956 ;;  ret             1    6[COMMON] unsigned char 
  1957 ;; Return value:  Size  Location     Type
  1958 ;;                  1    wreg      unsigned char 
  1959 ;; Registers used:
  1960 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1961 ;; Tracked objects:
  1962 ;;		On entry : 0/0
  1963 ;;		On exit  : 0/0
  1964 ;;		Unchanged: 0/0
  1965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1966 ;;      Params:         1       0       0       0       0
  1967 ;;      Locals:         2       0       0       0       0
  1968 ;;      Temps:          5       0       0       0       0
  1969 ;;      Totals:         8       0       0       0       0
  1970 ;;Total ram usage:        8 bytes
  1971 ;; Hardware stack levels used: 1
  1972 ;; This function calls:
  1973 ;;		Nothing
  1974 ;; This function is called by:
  1975 ;;		_gpio_pin_initialize
  1976 ;;		_lcd_4bits_send_command
  1977 ;;		_lcd_4bits_send_char
  1978 ;;		_send_4bits
  1979 ;;		_send_enable_signal
  1980 ;;		_motor_turn_right
  1981 ;;		_motor_turn_left
  1982 ;;		_motor_turn_off
  1983 ;; This function uses a non-reentrant model
  1984 ;;
  1985                           
  1986     070E                     _gpio_pin_write_logic:	
  1987                           ;psect for function _gpio_pin_write_logic
  1988                           
  1989                           
  1990                           ;incstack = 0
  1991                           ; Regs used in _gpio_pin_write_logic: [wreg-fsr0h+status,2+status,0+btemp+1]
  1992                           ;gpio_pin_write_logic@pin stored from wreg
  1993     070E  00F7               	movwf	gpio_pin_write_logic@pin
  1994     070F                     l1300:
  1995                           
  1996                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 51:     uint8 ret = 0x00;
  1997     070F  01F6               	clrf	gpio_pin_write_logic@ret
  1998     0710                     l1302:
  1999                           
  2000                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 52:     if (pin == ((void*)0)) {
  2001     0710  0877               	movf	gpio_pin_write_logic@pin,w
  2002     0711  1D03               	btfss	3,2
  2003     0712  2F14               	goto	u1001
  2004     0713  2F15               	goto	u1000
  2005     0714                     u1001:
  2006     0714  2F18               	goto	l1306
  2007     0715                     u1000:
  2008     0715                     l1304:
  2009                           
  2010                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 53:         ret = 0x01;
  2011     0715  01F6               	clrf	gpio_pin_write_logic@ret
  2012     0716  0AF6               	incf	gpio_pin_write_logic@ret,f
  2013                           
  2014                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 54:     } else {
  2015     0717  2FEC               	goto	l1334
  2016     0718                     l1306:
  2017                           
  2018                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 55:         if ((pin->port == PORTA_INDEX && pin->pin < 6)
      +                           || (pin->port == PORTB_INDEX && pin->pin < 8) || (pin->port == PORTC_INDEX && pin->pin 
      +                          < 8) ||
  2019     0718  0877               	movf	gpio_pin_write_logic@pin,w
  2020     0719  0084               	movwf	4
  2021     071A  1383               	bcf	3,7	;select IRP bank0
  2022     071B  0800               	movf	0,w
  2023     071C  3907               	andlw	7
  2024     071D  3A00               	xorlw	0
  2025     071E  1D03               	skipz
  2026     071F  2F21               	goto	u1011
  2027     0720  2F22               	goto	u1010
  2028     0721                     u1011:
  2029     0721  2F30               	goto	l1310
  2030     0722                     u1010:
  2031     0722                     l1308:
  2032     0722  0877               	movf	gpio_pin_write_logic@pin,w
  2033     0723  0084               	movwf	4
  2034     0724  0C00               	rrf	0,w
  2035     0725  00F1               	movwf	??_gpio_pin_write_logic
  2036     0726  0CF1               	rrf	??_gpio_pin_write_logic,f
  2037     0727  0C71               	rrf	??_gpio_pin_write_logic,w
  2038     0728  3907               	andlw	7
  2039     0729  00F2               	movwf	??_gpio_pin_write_logic+1
  2040     072A  3006               	movlw	6
  2041     072B  0272               	subwf	??_gpio_pin_write_logic+1,w
  2042     072C  1C03               	skipc
  2043     072D  2F2F               	goto	u1021
  2044     072E  2F30               	goto	u1020
  2045     072F                     u1021:
  2046     072F  2FDC               	goto	l1332
  2047     0730                     u1020:
  2048     0730                     l1310:
  2049     0730  0877               	movf	gpio_pin_write_logic@pin,w
  2050     0731  0084               	movwf	4
  2051     0732  0800               	movf	0,w
  2052     0733  3907               	andlw	7
  2053     0734  3A01               	xorlw	1
  2054     0735  1D03               	skipz
  2055     0736  2F38               	goto	u1031
  2056     0737  2F39               	goto	u1030
  2057     0738                     u1031:
  2058     0738  2F47               	goto	l1314
  2059     0739                     u1030:
  2060     0739                     l1312:
  2061     0739  0877               	movf	gpio_pin_write_logic@pin,w
  2062     073A  0084               	movwf	4
  2063     073B  0C00               	rrf	0,w
  2064     073C  00F1               	movwf	??_gpio_pin_write_logic
  2065     073D  0CF1               	rrf	??_gpio_pin_write_logic,f
  2066     073E  0C71               	rrf	??_gpio_pin_write_logic,w
  2067     073F  3907               	andlw	7
  2068     0740  00F2               	movwf	??_gpio_pin_write_logic+1
  2069     0741  3008               	movlw	8
  2070     0742  0272               	subwf	??_gpio_pin_write_logic+1,w
  2071     0743  1C03               	skipc
  2072     0744  2F46               	goto	u1041
  2073     0745  2F47               	goto	u1040
  2074     0746                     u1041:
  2075     0746  2FDC               	goto	l1332
  2076     0747                     u1040:
  2077     0747                     l1314:
  2078     0747  0877               	movf	gpio_pin_write_logic@pin,w
  2079     0748  0084               	movwf	4
  2080     0749  0800               	movf	0,w
  2081     074A  3907               	andlw	7
  2082     074B  3A02               	xorlw	2
  2083     074C  1D03               	skipz
  2084     074D  2F4F               	goto	u1051
  2085     074E  2F50               	goto	u1050
  2086     074F                     u1051:
  2087     074F  2F5E               	goto	l1318
  2088     0750                     u1050:
  2089     0750                     l1316:
  2090     0750  0877               	movf	gpio_pin_write_logic@pin,w
  2091     0751  0084               	movwf	4
  2092     0752  0C00               	rrf	0,w
  2093     0753  00F1               	movwf	??_gpio_pin_write_logic
  2094     0754  0CF1               	rrf	??_gpio_pin_write_logic,f
  2095     0755  0C71               	rrf	??_gpio_pin_write_logic,w
  2096     0756  3907               	andlw	7
  2097     0757  00F2               	movwf	??_gpio_pin_write_logic+1
  2098     0758  3008               	movlw	8
  2099     0759  0272               	subwf	??_gpio_pin_write_logic+1,w
  2100     075A  1C03               	skipc
  2101     075B  2F5D               	goto	u1061
  2102     075C  2F5E               	goto	u1060
  2103     075D                     u1061:
  2104     075D  2FDC               	goto	l1332
  2105     075E                     u1060:
  2106     075E                     l1318:
  2107     075E  0877               	movf	gpio_pin_write_logic@pin,w
  2108     075F  0084               	movwf	4
  2109     0760  0800               	movf	0,w
  2110     0761  3907               	andlw	7
  2111     0762  3A03               	xorlw	3
  2112     0763  1D03               	skipz
  2113     0764  2F66               	goto	u1071
  2114     0765  2F67               	goto	u1070
  2115     0766                     u1071:
  2116     0766  2F75               	goto	l1322
  2117     0767                     u1070:
  2118     0767                     l1320:
  2119     0767  0877               	movf	gpio_pin_write_logic@pin,w
  2120     0768  0084               	movwf	4
  2121     0769  0C00               	rrf	0,w
  2122     076A  00F1               	movwf	??_gpio_pin_write_logic
  2123     076B  0CF1               	rrf	??_gpio_pin_write_logic,f
  2124     076C  0C71               	rrf	??_gpio_pin_write_logic,w
  2125     076D  3907               	andlw	7
  2126     076E  00F2               	movwf	??_gpio_pin_write_logic+1
  2127     076F  3008               	movlw	8
  2128     0770  0272               	subwf	??_gpio_pin_write_logic+1,w
  2129     0771  1C03               	skipc
  2130     0772  2F74               	goto	u1081
  2131     0773  2F75               	goto	u1080
  2132     0774                     u1081:
  2133     0774  2FDC               	goto	l1332
  2134     0775                     u1080:
  2135     0775                     l1322:
  2136     0775  0877               	movf	gpio_pin_write_logic@pin,w
  2137     0776  0084               	movwf	4
  2138     0777  0800               	movf	0,w
  2139     0778  3907               	andlw	7
  2140     0779  3A04               	xorlw	4
  2141     077A  1D03               	skipz
  2142     077B  2F7D               	goto	u1091
  2143     077C  2F7E               	goto	u1090
  2144     077D                     u1091:
  2145     077D  2F15               	goto	l1304
  2146     077E                     u1090:
  2147     077E                     l1324:
  2148     077E  0877               	movf	gpio_pin_write_logic@pin,w
  2149     077F  0084               	movwf	4
  2150     0780  0C00               	rrf	0,w
  2151     0781  00F1               	movwf	??_gpio_pin_write_logic
  2152     0782  0CF1               	rrf	??_gpio_pin_write_logic,f
  2153     0783  0C71               	rrf	??_gpio_pin_write_logic,w
  2154     0784  3907               	andlw	7
  2155     0785  00F2               	movwf	??_gpio_pin_write_logic+1
  2156     0786  3003               	movlw	3
  2157     0787  0272               	subwf	??_gpio_pin_write_logic+1,w
  2158     0788  1803               	skipnc
  2159     0789  2F8B               	goto	u1101
  2160     078A  2F8C               	goto	u1100
  2161     078B                     u1101:
  2162     078B  2F15               	goto	l1304
  2163     078C                     u1100:
  2164     078C  2FDC               	goto	l1332
  2165     078D                     l1326:
  2166                           
  2167                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 60:                     (*port_registers[pin->port] |= (0x
      +                          01 << pin->pin));
  2168     078D  3001               	movlw	1
  2169     078E  00F1               	movwf	??_gpio_pin_write_logic
  2170     078F  0877               	movf	gpio_pin_write_logic@pin,w
  2171     0790  0084               	movwf	4
  2172     0791  0C00               	rrf	0,w
  2173     0792  00F2               	movwf	??_gpio_pin_write_logic+1
  2174     0793  0CF2               	rrf	??_gpio_pin_write_logic+1,f
  2175     0794  0C72               	rrf	??_gpio_pin_write_logic+1,w
  2176     0795  3907               	andlw	7
  2177     0796  3E01               	addlw	1
  2178     0797  2F9A               	goto	u1114
  2179     0798                     u1115:
  2180     0798  1003               	clrc
  2181     0799  0DF1               	rlf	??_gpio_pin_write_logic,f
  2182     079A                     u1114:
  2183     079A  3EFF               	addlw	-1
  2184     079B  1D03               	skipz
  2185     079C  2F98               	goto	u1115
  2186     079D  0871               	movf	??_gpio_pin_write_logic,w
  2187     079E  00FF               	movwf	btemp+1
  2188     079F  0877               	movf	gpio_pin_write_logic@pin,w
  2189     07A0  0084               	movwf	4
  2190     07A1  0800               	movf	0,w
  2191     07A2  3907               	andlw	7
  2192     07A3  00F3               	movwf	??_gpio_pin_write_logic+2
  2193     07A4  0773               	addwf	??_gpio_pin_write_logic+2,w
  2194     07A5  3E20               	addlw	(low (_port_registers| 0))& (0+255)
  2195     07A6  0084               	movwf	4
  2196     07A7  0800               	movf	0,w
  2197     07A8  00F4               	movwf	??_gpio_pin_write_logic+3
  2198     07A9  0A84               	incf	4,f
  2199     07AA  0800               	movf	0,w
  2200     07AB  00F5               	movwf	??_gpio_pin_write_logic+4
  2201     07AC  0874               	movf	??_gpio_pin_write_logic+3,w
  2202     07AD  0084               	movwf	4
  2203     07AE  1783               	bsf	3,7
  2204     07AF  1C75               	btfss	??_gpio_pin_write_logic+4,0
  2205     07B0  1383               	bcf	3,7
  2206     07B1  087F               	movf	btemp+1,w
  2207     07B2  0480               	iorwf	0,f
  2208                           
  2209                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 61:                     break;
  2210     07B3  2FEC               	goto	l1334
  2211     07B4                     l1328:
  2212                           
  2213                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 63:                     (*port_registers[pin->port] &= ~(0
      +                          x01 << pin->pin));
  2214     07B4  3001               	movlw	1
  2215     07B5  00F1               	movwf	??_gpio_pin_write_logic
  2216     07B6  0877               	movf	gpio_pin_write_logic@pin,w
  2217     07B7  0084               	movwf	4
  2218     07B8  0C00               	rrf	0,w
  2219     07B9  00F2               	movwf	??_gpio_pin_write_logic+1
  2220     07BA  0CF2               	rrf	??_gpio_pin_write_logic+1,f
  2221     07BB  0C72               	rrf	??_gpio_pin_write_logic+1,w
  2222     07BC  3907               	andlw	7
  2223     07BD  3E01               	addlw	1
  2224     07BE  2FC1               	goto	u1124
  2225     07BF                     u1125:
  2226     07BF  1003               	clrc
  2227     07C0  0DF1               	rlf	??_gpio_pin_write_logic,f
  2228     07C1                     u1124:
  2229     07C1  3EFF               	addlw	-1
  2230     07C2  1D03               	skipz
  2231     07C3  2FBF               	goto	u1125
  2232     07C4  0871               	movf	??_gpio_pin_write_logic,w
  2233     07C5  3AFF               	xorlw	255
  2234     07C6  00FF               	movwf	btemp+1
  2235     07C7  0877               	movf	gpio_pin_write_logic@pin,w
  2236     07C8  0084               	movwf	4
  2237     07C9  0800               	movf	0,w
  2238     07CA  3907               	andlw	7
  2239     07CB  00F3               	movwf	??_gpio_pin_write_logic+2
  2240     07CC  0773               	addwf	??_gpio_pin_write_logic+2,w
  2241     07CD  3E20               	addlw	(low (_port_registers| 0))& (0+255)
  2242     07CE  0084               	movwf	4
  2243     07CF  0800               	movf	0,w
  2244     07D0  00F4               	movwf	??_gpio_pin_write_logic+3
  2245     07D1  0A84               	incf	4,f
  2246     07D2  0800               	movf	0,w
  2247     07D3  00F5               	movwf	??_gpio_pin_write_logic+4
  2248     07D4  0874               	movf	??_gpio_pin_write_logic+3,w
  2249     07D5  0084               	movwf	4
  2250     07D6  1783               	bsf	3,7
  2251     07D7  1C75               	btfss	??_gpio_pin_write_logic+4,0
  2252     07D8  1383               	bcf	3,7
  2253     07D9  087F               	movf	btemp+1,w
  2254     07DA  0580               	andwf	0,f
  2255                           
  2256                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 64:                     break;
  2257     07DB  2FEC               	goto	l1334
  2258     07DC                     l1332:
  2259     07DC  0870               	movf	gpio_pin_write_logic@logic,w
  2260     07DD  00F1               	movwf	??_gpio_pin_write_logic
  2261     07DE  01F2               	clrf	??_gpio_pin_write_logic+1
  2262                           
  2263                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2264                           ; Switch size 1, requested type "simple"
  2265                           ; Number of cases is 1, Range of values is 0 to 0
  2266                           ; switch strategies available:
  2267                           ; Name         Instructions Cycles
  2268                           ; simple_byte            4     3 (average)
  2269                           ; direct_byte           11     8 (fixed)
  2270                           ; jumptable            260     6 (fixed)
  2271                           ;	Chosen strategy is simple_byte
  2272     07DF  0872               	movf	??_gpio_pin_write_logic+1,w
  2273     07E0  3A00               	xorlw	0	; case 0
  2274     07E1  1903               	skipnz
  2275     07E2  2FE4               	goto	l1772
  2276     07E3  2FEC               	goto	l1334
  2277     07E4                     l1772:
  2278                           
  2279                           ; Switch size 1, requested type "simple"
  2280                           ; Number of cases is 2, Range of values is 0 to 1
  2281                           ; switch strategies available:
  2282                           ; Name         Instructions Cycles
  2283                           ; simple_byte            7     4 (average)
  2284                           ; direct_byte           14     8 (fixed)
  2285                           ; jumptable            260     6 (fixed)
  2286                           ;	Chosen strategy is simple_byte
  2287     07E4  0871               	movf	??_gpio_pin_write_logic,w
  2288     07E5  3A00               	xorlw	0	; case 0
  2289     07E6  1903               	skipnz
  2290     07E7  2FB4               	goto	l1328
  2291     07E8  3A01               	xorlw	1	; case 1
  2292     07E9  1903               	skipnz
  2293     07EA  2F8D               	goto	l1326
  2294     07EB  2FEC               	goto	l1334
  2295     07EC                     l1334:
  2296                           
  2297                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 70:     return ret;
  2298     07EC  0876               	movf	gpio_pin_write_logic@ret,w
  2299     07ED                     l122:
  2300     07ED  0008               	return
  2301     07EE                     __end_of_gpio_pin_write_logic:
  2302                           
  2303                           	psect	text11
  2304     0636                     __ptext11:	
  2305 ;; *************** function _gpio_pin_direction_initialize *****************
  2306 ;; Defined at:
  2307 ;;		line 12 in file "MCAL_LAYER/GPIO/mcal_gpio.c"
  2308 ;; Parameters:    Size  Location     Type
  2309 ;;  pin             1    wreg     PTR const struct .
  2310 ;;		 -> lcd$pins(4), lcd(6), motor2$pins(2), motor2(2), 
  2311 ;;		 -> motor1$pins(2), motor1(2), 
  2312 ;; Auto vars:     Size  Location     Type
  2313 ;;  pin             1    5[COMMON] PTR const struct .
  2314 ;;		 -> lcd$pins(4), lcd(6), motor2$pins(2), motor2(2), 
  2315 ;;		 -> motor1$pins(2), motor1(2), 
  2316 ;;  ret             1    0        unsigned char 
  2317 ;; Return value:  Size  Location     Type
  2318 ;;                  1    wreg      unsigned char 
  2319 ;; Registers used:
  2320 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2321 ;; Tracked objects:
  2322 ;;		On entry : 0/0
  2323 ;;		On exit  : 0/0
  2324 ;;		Unchanged: 0/0
  2325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2326 ;;      Params:         0       0       0       0       0
  2327 ;;      Locals:         1       0       0       0       0
  2328 ;;      Temps:          5       0       0       0       0
  2329 ;;      Totals:         6       0       0       0       0
  2330 ;;Total ram usage:        6 bytes
  2331 ;; Hardware stack levels used: 1
  2332 ;; This function calls:
  2333 ;;		Nothing
  2334 ;; This function is called by:
  2335 ;;		_gpio_pin_initialize
  2336 ;; This function uses a non-reentrant model
  2337 ;;
  2338                           
  2339     0636                     _gpio_pin_direction_initialize:	
  2340                           ;psect for function _gpio_pin_direction_initialize
  2341                           
  2342                           
  2343                           ;incstack = 0
  2344                           ; Regs used in _gpio_pin_direction_initialize: [wreg-fsr0h+status,2+status,0+btemp+1]
  2345                           ;gpio_pin_direction_initialize@pin stored from wreg
  2346     0636  00F5               	movwf	gpio_pin_direction_initialize@pin
  2347     0637                     l1342:
  2348     0637                     l1344:
  2349                           
  2350                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 14:     if (pin == ((void*)0)) {
  2351     0637  0875               	movf	gpio_pin_direction_initialize@pin,w
  2352     0638  1D03               	btfss	3,2
  2353     0639  2E3B               	goto	u1131
  2354     063A  2E3C               	goto	u1130
  2355     063B                     u1131:
  2356     063B  2E3D               	goto	l1348
  2357     063C                     u1130:
  2358     063C                     l1346:
  2359                           
  2360                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 16:     } else {
  2361     063C  2F0D               	goto	l82
  2362     063D                     l1348:
  2363                           
  2364                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 17:         if ((pin->port == PORTA_INDEX && pin->pin < 6)
      +                           || (pin->port == PORTB_INDEX && pin->pin < 8) || (pin->port == PORTC_INDEX && pin->pin 
      +                          < 8) ||
  2365     063D  0875               	movf	gpio_pin_direction_initialize@pin,w
  2366     063E  0084               	movwf	4
  2367     063F  1383               	bcf	3,7	;select IRP bank0
  2368     0640  0800               	movf	0,w
  2369     0641  3907               	andlw	7
  2370     0642  3A00               	xorlw	0
  2371     0643  1D03               	skipz
  2372     0644  2E46               	goto	u1141
  2373     0645  2E47               	goto	u1140
  2374     0646                     u1141:
  2375     0646  2E55               	goto	l1352
  2376     0647                     u1140:
  2377     0647                     l1350:
  2378     0647  0875               	movf	gpio_pin_direction_initialize@pin,w
  2379     0648  0084               	movwf	4
  2380     0649  0C00               	rrf	0,w
  2381     064A  00F0               	movwf	??_gpio_pin_direction_initialize
  2382     064B  0CF0               	rrf	??_gpio_pin_direction_initialize,f
  2383     064C  0C70               	rrf	??_gpio_pin_direction_initialize,w
  2384     064D  3907               	andlw	7
  2385     064E  00F1               	movwf	??_gpio_pin_direction_initialize+1
  2386     064F  3006               	movlw	6
  2387     0650  0271               	subwf	??_gpio_pin_direction_initialize+1,w
  2388     0651  1C03               	skipc
  2389     0652  2E54               	goto	u1151
  2390     0653  2E55               	goto	u1150
  2391     0654                     u1151:
  2392     0654  2F01               	goto	l1374
  2393     0655                     u1150:
  2394     0655                     l1352:
  2395     0655  0875               	movf	gpio_pin_direction_initialize@pin,w
  2396     0656  0084               	movwf	4
  2397     0657  0800               	movf	0,w
  2398     0658  3907               	andlw	7
  2399     0659  3A01               	xorlw	1
  2400     065A  1D03               	skipz
  2401     065B  2E5D               	goto	u1161
  2402     065C  2E5E               	goto	u1160
  2403     065D                     u1161:
  2404     065D  2E6C               	goto	l1356
  2405     065E                     u1160:
  2406     065E                     l1354:
  2407     065E  0875               	movf	gpio_pin_direction_initialize@pin,w
  2408     065F  0084               	movwf	4
  2409     0660  0C00               	rrf	0,w
  2410     0661  00F0               	movwf	??_gpio_pin_direction_initialize
  2411     0662  0CF0               	rrf	??_gpio_pin_direction_initialize,f
  2412     0663  0C70               	rrf	??_gpio_pin_direction_initialize,w
  2413     0664  3907               	andlw	7
  2414     0665  00F1               	movwf	??_gpio_pin_direction_initialize+1
  2415     0666  3008               	movlw	8
  2416     0667  0271               	subwf	??_gpio_pin_direction_initialize+1,w
  2417     0668  1C03               	skipc
  2418     0669  2E6B               	goto	u1171
  2419     066A  2E6C               	goto	u1170
  2420     066B                     u1171:
  2421     066B  2F01               	goto	l1374
  2422     066C                     u1170:
  2423     066C                     l1356:
  2424     066C  0875               	movf	gpio_pin_direction_initialize@pin,w
  2425     066D  0084               	movwf	4
  2426     066E  0800               	movf	0,w
  2427     066F  3907               	andlw	7
  2428     0670  3A02               	xorlw	2
  2429     0671  1D03               	skipz
  2430     0672  2E74               	goto	u1181
  2431     0673  2E75               	goto	u1180
  2432     0674                     u1181:
  2433     0674  2E83               	goto	l1360
  2434     0675                     u1180:
  2435     0675                     l1358:
  2436     0675  0875               	movf	gpio_pin_direction_initialize@pin,w
  2437     0676  0084               	movwf	4
  2438     0677  0C00               	rrf	0,w
  2439     0678  00F0               	movwf	??_gpio_pin_direction_initialize
  2440     0679  0CF0               	rrf	??_gpio_pin_direction_initialize,f
  2441     067A  0C70               	rrf	??_gpio_pin_direction_initialize,w
  2442     067B  3907               	andlw	7
  2443     067C  00F1               	movwf	??_gpio_pin_direction_initialize+1
  2444     067D  3008               	movlw	8
  2445     067E  0271               	subwf	??_gpio_pin_direction_initialize+1,w
  2446     067F  1C03               	skipc
  2447     0680  2E82               	goto	u1191
  2448     0681  2E83               	goto	u1190
  2449     0682                     u1191:
  2450     0682  2F01               	goto	l1374
  2451     0683                     u1190:
  2452     0683                     l1360:
  2453     0683  0875               	movf	gpio_pin_direction_initialize@pin,w
  2454     0684  0084               	movwf	4
  2455     0685  0800               	movf	0,w
  2456     0686  3907               	andlw	7
  2457     0687  3A03               	xorlw	3
  2458     0688  1D03               	skipz
  2459     0689  2E8B               	goto	u1201
  2460     068A  2E8C               	goto	u1200
  2461     068B                     u1201:
  2462     068B  2E9A               	goto	l1364
  2463     068C                     u1200:
  2464     068C                     l1362:
  2465     068C  0875               	movf	gpio_pin_direction_initialize@pin,w
  2466     068D  0084               	movwf	4
  2467     068E  0C00               	rrf	0,w
  2468     068F  00F0               	movwf	??_gpio_pin_direction_initialize
  2469     0690  0CF0               	rrf	??_gpio_pin_direction_initialize,f
  2470     0691  0C70               	rrf	??_gpio_pin_direction_initialize,w
  2471     0692  3907               	andlw	7
  2472     0693  00F1               	movwf	??_gpio_pin_direction_initialize+1
  2473     0694  3008               	movlw	8
  2474     0695  0271               	subwf	??_gpio_pin_direction_initialize+1,w
  2475     0696  1C03               	skipc
  2476     0697  2E99               	goto	u1211
  2477     0698  2E9A               	goto	u1210
  2478     0699                     u1211:
  2479     0699  2F01               	goto	l1374
  2480     069A                     u1210:
  2481     069A                     l1364:
  2482     069A  0875               	movf	gpio_pin_direction_initialize@pin,w
  2483     069B  0084               	movwf	4
  2484     069C  0800               	movf	0,w
  2485     069D  3907               	andlw	7
  2486     069E  3A04               	xorlw	4
  2487     069F  1D03               	skipz
  2488     06A0  2EA2               	goto	u1221
  2489     06A1  2EA3               	goto	u1220
  2490     06A2                     u1221:
  2491     06A2  2E3C               	goto	l1346
  2492     06A3                     u1220:
  2493     06A3                     l1366:
  2494     06A3  0875               	movf	gpio_pin_direction_initialize@pin,w
  2495     06A4  0084               	movwf	4
  2496     06A5  0C00               	rrf	0,w
  2497     06A6  00F0               	movwf	??_gpio_pin_direction_initialize
  2498     06A7  0CF0               	rrf	??_gpio_pin_direction_initialize,f
  2499     06A8  0C70               	rrf	??_gpio_pin_direction_initialize,w
  2500     06A9  3907               	andlw	7
  2501     06AA  00F1               	movwf	??_gpio_pin_direction_initialize+1
  2502     06AB  3003               	movlw	3
  2503     06AC  0271               	subwf	??_gpio_pin_direction_initialize+1,w
  2504     06AD  1803               	skipnc
  2505     06AE  2EB0               	goto	u1231
  2506     06AF  2EB1               	goto	u1230
  2507     06B0                     u1231:
  2508     06B0  2E3C               	goto	l1346
  2509     06B1                     u1230:
  2510     06B1  2F01               	goto	l1374
  2511     06B2                     l1368:
  2512                           
  2513                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 21:                     (*tris_registers[pin->port] &= ~(0
      +                          x01 << pin->pin));
  2514     06B2  3001               	movlw	1
  2515     06B3  00F0               	movwf	??_gpio_pin_direction_initialize
  2516     06B4  0875               	movf	gpio_pin_direction_initialize@pin,w
  2517     06B5  0084               	movwf	4
  2518     06B6  0C00               	rrf	0,w
  2519     06B7  00F1               	movwf	??_gpio_pin_direction_initialize+1
  2520     06B8  0CF1               	rrf	??_gpio_pin_direction_initialize+1,f
  2521     06B9  0C71               	rrf	??_gpio_pin_direction_initialize+1,w
  2522     06BA  3907               	andlw	7
  2523     06BB  3E01               	addlw	1
  2524     06BC  2EBF               	goto	u1244
  2525     06BD                     u1245:
  2526     06BD  1003               	clrc
  2527     06BE  0DF0               	rlf	??_gpio_pin_direction_initialize,f
  2528     06BF                     u1244:
  2529     06BF  3EFF               	addlw	-1
  2530     06C0  1D03               	skipz
  2531     06C1  2EBD               	goto	u1245
  2532     06C2  0870               	movf	??_gpio_pin_direction_initialize,w
  2533     06C3  3AFF               	xorlw	255
  2534     06C4  00FF               	movwf	btemp+1
  2535     06C5  0875               	movf	gpio_pin_direction_initialize@pin,w
  2536     06C6  0084               	movwf	4
  2537     06C7  0800               	movf	0,w
  2538     06C8  3907               	andlw	7
  2539     06C9  00F2               	movwf	??_gpio_pin_direction_initialize+2
  2540     06CA  0772               	addwf	??_gpio_pin_direction_initialize+2,w
  2541     06CB  3E2A               	addlw	(low (_tris_registers| 0))& (0+255)
  2542     06CC  0084               	movwf	4
  2543     06CD  0800               	movf	0,w
  2544     06CE  00F3               	movwf	??_gpio_pin_direction_initialize+3
  2545     06CF  0A84               	incf	4,f
  2546     06D0  0800               	movf	0,w
  2547     06D1  00F4               	movwf	??_gpio_pin_direction_initialize+4
  2548     06D2  0873               	movf	??_gpio_pin_direction_initialize+3,w
  2549     06D3  0084               	movwf	4
  2550     06D4  1783               	bsf	3,7
  2551     06D5  1C74               	btfss	??_gpio_pin_direction_initialize+4,0
  2552     06D6  1383               	bcf	3,7
  2553     06D7  087F               	movf	btemp+1,w
  2554     06D8  0580               	andwf	0,f
  2555                           
  2556                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 22:                     break;
  2557     06D9  2F0D               	goto	l82
  2558     06DA                     l1370:
  2559                           
  2560                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 24:                     (*tris_registers[pin->port] |= (0x
      +                          01 << pin->pin));
  2561     06DA  3001               	movlw	1
  2562     06DB  00F0               	movwf	??_gpio_pin_direction_initialize
  2563     06DC  0875               	movf	gpio_pin_direction_initialize@pin,w
  2564     06DD  0084               	movwf	4
  2565     06DE  0C00               	rrf	0,w
  2566     06DF  00F1               	movwf	??_gpio_pin_direction_initialize+1
  2567     06E0  0CF1               	rrf	??_gpio_pin_direction_initialize+1,f
  2568     06E1  0C71               	rrf	??_gpio_pin_direction_initialize+1,w
  2569     06E2  3907               	andlw	7
  2570     06E3  3E01               	addlw	1
  2571     06E4  2EE7               	goto	u1254
  2572     06E5                     u1255:
  2573     06E5  1003               	clrc
  2574     06E6  0DF0               	rlf	??_gpio_pin_direction_initialize,f
  2575     06E7                     u1254:
  2576     06E7  3EFF               	addlw	-1
  2577     06E8  1D03               	skipz
  2578     06E9  2EE5               	goto	u1255
  2579     06EA  0870               	movf	??_gpio_pin_direction_initialize,w
  2580     06EB  00FF               	movwf	btemp+1
  2581     06EC  0875               	movf	gpio_pin_direction_initialize@pin,w
  2582     06ED  0084               	movwf	4
  2583     06EE  0800               	movf	0,w
  2584     06EF  3907               	andlw	7
  2585     06F0  00F2               	movwf	??_gpio_pin_direction_initialize+2
  2586     06F1  0772               	addwf	??_gpio_pin_direction_initialize+2,w
  2587     06F2  3E2A               	addlw	(low (_tris_registers| 0))& (0+255)
  2588     06F3  0084               	movwf	4
  2589     06F4  0800               	movf	0,w
  2590     06F5  00F3               	movwf	??_gpio_pin_direction_initialize+3
  2591     06F6  0A84               	incf	4,f
  2592     06F7  0800               	movf	0,w
  2593     06F8  00F4               	movwf	??_gpio_pin_direction_initialize+4
  2594     06F9  0873               	movf	??_gpio_pin_direction_initialize+3,w
  2595     06FA  0084               	movwf	4
  2596     06FB  1783               	bsf	3,7
  2597     06FC  1C74               	btfss	??_gpio_pin_direction_initialize+4,0
  2598     06FD  1383               	bcf	3,7
  2599     06FE  087F               	movf	btemp+1,w
  2600     06FF  0480               	iorwf	0,f
  2601                           
  2602                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 25:                     break;
  2603     0700  2F0D               	goto	l82
  2604     0701                     l1374:
  2605     0701  0875               	movf	gpio_pin_direction_initialize@pin,w
  2606     0702  0084               	movwf	4
  2607     0703  0D00               	rlf	0,w
  2608     0704  0D00               	rlf	0,w
  2609     0705  3901               	andlw	1
  2610                           
  2611                           ; Switch size 1, requested type "simple"
  2612                           ; Number of cases is 2, Range of values is 0 to 1
  2613                           ; switch strategies available:
  2614                           ; Name         Instructions Cycles
  2615                           ; simple_byte            7     4 (average)
  2616                           ; direct_byte           14     8 (fixed)
  2617                           ; jumptable            260     6 (fixed)
  2618                           ;	Chosen strategy is simple_byte
  2619     0706  3A00               	xorlw	0	; case 0
  2620     0707  1903               	skipnz
  2621     0708  2EB2               	goto	l1368
  2622     0709  3A01               	xorlw	1	; case 1
  2623     070A  1903               	skipnz
  2624     070B  2EDA               	goto	l1370
  2625     070C  2F0D               	goto	l82
  2626     070D                     l82:
  2627     070D  0008               	return
  2628     070E                     __end_of_gpio_pin_direction_initialize:
  2629     007E                     btemp	set	126	;btemp
  2630     007E                     wtemp0	set	126
  2631                           
  2632                           	psect	config
  2633                           
  2634                           ;Config register CONFIG @ 0x2007
  2635                           ;	Oscillator Selection bits
  2636                           ;	FOSC = HS, HS oscillator
  2637                           ;	Watchdog Timer Enable bit
  2638                           ;	WDTE = OFF, WDT disabled
  2639                           ;	Power-up Timer Enable bit
  2640                           ;	PWRTE = ON, PWRT enabled
  2641                           ;	Brown-out Reset Enable bit
  2642                           ;	BOREN = ON, BOR enabled
  2643                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2644                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  2645                           ;	Data EEPROM Memory Code Protection bit
  2646                           ;	CPD = OFF, Data EEPROM code protection off
  2647                           ;	Flash Program Memory Write Enable bits
  2648                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  2649                           ;	In-Circuit Debugger Mode bit
  2650                           ;	DEBUG = 0x1, unprogrammed default
  2651                           ;	Flash Program Memory Code Protection bit
  2652                           ;	CP = OFF, Code protection off
  2653     2007                     	org	8199
  2654     2007  3F72               	dw	16242

Data Sizes:
    Strings     0
    Constant    0
    Data        30
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      8      38
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    gpio_pin_direction_initialize@pin	PTR const struct . size(1) Largest target is 6
		 -> lcd(BANK0[6]), lcd$pins(BANK0[4]), motor1(BANK0[2]), motor1$pins(BANK0[2]), 
		 -> motor2(BANK0[2]), motor2$pins(BANK0[2]), 

    gpio_pin_initialize@pin	PTR const struct . size(1) Largest target is 6
		 -> lcd(BANK0[6]), lcd$pins(BANK0[4]), motor1(BANK0[2]), motor1$pins(BANK0[2]), 
		 -> motor2(BANK0[2]), motor2$pins(BANK0[2]), 

    gpio_pin_write_logic@pin	PTR const struct . size(1) Largest target is 6
		 -> lcd(BANK0[6]), lcd$pins(BANK0[4]), motor1(BANK0[2]), motor1$pins(BANK0[2]), 
		 -> motor2(BANK0[2]), motor2$pins(BANK0[2]), 

    lcd_4bits_initialize@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd(BANK0[6]), 

    lcd_4bits_send_char@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd(BANK0[6]), 

    lcd_4bits_send_command@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd(BANK0[6]), 

    motor_initialize@motor	PTR const struct . size(1) Largest target is 2
		 -> motor1(BANK0[2]), motor2(BANK0[2]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTB(SFR0[1]), PORTC(SFR0[1]), PORTD(SFR0[1]), 
		 -> PORTE(SFR0[1]), 

    send_4bits@lcd	PTR struct . size(1) Largest target is 6
		 -> lcd(BANK0[6]), 

    send_enable_signal@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd(BANK0[6]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(SFR1[1]), TRISB(SFR1[1]), TRISC(SFR1[1]), TRISD(SFR1[1]), 
		 -> TRISE(SFR1[1]), 


Critical Paths under _main in COMMON

    _main->_lcd_4bits_send_char
    _lcd_4bits_send_char->_send_4bits
    _ecu_initialzie->_motor_initialize
    _motor_initialize->_gpio_pin_initialize
    _lcd_4bits_initialize->_lcd_4bits_send_command
    _lcd_4bits_send_command->_send_4bits
    _send_enable_signal->_gpio_pin_write_logic
    _send_4bits->_gpio_pin_write_logic
    _gpio_pin_initialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    _ecu_initialzie->_lcd_4bits_initialize
    _lcd_4bits_initialize->_lcd_4bits_send_command

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   22379
             _apllication_initilaize
                _lcd_4bits_send_char
 ---------------------------------------------------------------------------------
 (1) _lcd_4bits_send_char                                  4     3      1    7563
                                             12 COMMON     2     1      1
                                              0 BANK0      2     2      0
               _gpio_pin_write_logic
                         _send_4bits
                 _send_enable_signal
 ---------------------------------------------------------------------------------
 (1) _apllication_initilaize                               0     0      0   14816
                     _ecu_initialzie
 ---------------------------------------------------------------------------------
 (2) _ecu_initialzie                                       0     0      0   14816
               _lcd_4bits_initialize
                   _motor_initialize
 ---------------------------------------------------------------------------------
 (3) _motor_initialize                                     2     2      0    3046
                                             12 COMMON     2     2      0
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (3) _lcd_4bits_initialize                                 6     6      0   11770
                                              2 BANK0      6     6      0
                _gpio_pin_initialize
             _lcd_4bits_send_command
 ---------------------------------------------------------------------------------
 (4) _lcd_4bits_send_command                               4     3      1    8435
                                             12 COMMON     2     1      1
                                              0 BANK0      2     2      0
               _gpio_pin_write_logic
                         _send_4bits
                 _send_enable_signal
 ---------------------------------------------------------------------------------
 (2) _send_enable_signal                                   3     3      0    2236
                                              8 COMMON     3     3      0
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _send_4bits                                           4     3      1    2674
                                              8 COMMON     4     3      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_initialize                                  4     4      0    2904
                                              8 COMMON     4     4      0
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_write_logic                                 8     7      1    2012
                                              0 COMMON     8     7      1
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_initialize                        7     7      0     394
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _apllication_initilaize
     _ecu_initialzie
       _lcd_4bits_initialize
         _gpio_pin_initialize
           _gpio_pin_direction_initialize
           _gpio_pin_write_logic
         _lcd_4bits_send_command
           _gpio_pin_write_logic
           _send_4bits
             _gpio_pin_write_logic
           _send_enable_signal
             _gpio_pin_write_logic
       _motor_initialize
         _gpio_pin_initialize
   _lcd_4bits_send_char
     _gpio_pin_write_logic
     _send_4bits
     _send_enable_signal

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      8      26       5       47.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      34      12        0.0%
ABS                  0      0      34       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Jul 10 10:13:31 2024

                                    l9 03D1                                      pc 0002  
                                   l37 03A7                                     l82 070D  
                                   fsr 0004                                    l122 07ED  
                                  l223 0389                                    l250 0635  
                                  l260 049F                                    l229 0383  
                                  l175 057C                                    l255 0457  
                                  l283 04E9                                    l287 040F  
                                  l288 0410                                    _lcd 0034  
                                  fsr0 0004                                    indf 0000  
                    ?_motor_initialize 0070                     ??_motor_initialize 007C  
                                 l1300 070F                                   l1310 0730  
                                 l1302 0710                                   l1320 0767  
                                 l1312 0739                                   l1304 0715  
                                 l1322 0775                                   l1314 0747  
                                 l1306 0718                                   l1410 04FE  
                                 l1402 04EB                                   l1324 077E  
                                 l1316 0750                                   l1332 07DC  
                                 l1308 0722                                   l1420 053A  
                                 l1412 050C                                   l1404 04EC  
                                 l1350 0647                                   l1342 0637  
                                 l1326 078D                                   l1318 075E  
                                 l1334 07EC                                   l1422 0543  
                                 l1414 0515                                   l1430 057B  
                                 l1406 04F1                                   l1502 0395  
                                 l1510 0460                                   l1360 0683  
                                 l1352 0655                                   l1344 0637  
                                 l1328 07B4                                   l1424 0551  
                                 l1416 0523                                   l1408 04F4  
                                 l1440 041C                                   l1504 037E  
                                 l1512 0463                                   l1370 06DA  
                                 l1362 068C                                   l1354 065E  
                                 l1346 063C                                   l1426 055A  
                                 l1418 052C                                   l1442 0456  
                                 l1434 0414                                   l1450 03C1  
                                 l1514 049E                                   l1506 045B  
                                 l1364 069A                                   l1356 066C  
                                 l1348 063D                                   l1428 0568  
                                 l1380 04A6                                   l1436 0414  
                                 l1460 0586                                   l1452 03C2  
                                 l1508 045B                                   l1366 06A3  
                                 l1358 0675                                   l1374 0701  
                                 l1382 04A9                                   l1390 03F1  
                                 l1438 0419                                   l1470 059B  
                                 l1462 0587                                   l1446 03BC  
                                 l1368 06B2                                   l1384 04E8  
                                 l1376 04A1                                   l1392 03F6  
                                 l1480 05C7                                   l1472 05A3  
                                 l1464 059A                                   l1456 0580  
                                 l1448 03BC                                   l1378 04A1  
                                 l1394 03F9                                   l1490 0603  
                                 l1482 05DF                                   l1474 05A9  
                                 l1458 0581                                   l1396 0402  
                                 l1388 03F1                                   l1492 060D  
                                 l1484 05E5                                   l1476 05AF  
                                 l1398 0406                                   l1494 0617  
                                 l1486 05EF                                   l1478 05BD  
                                 l1496 0621                                   l1488 05F9  
                                 l1498 062B                                   l1772 07E4  
                                 l1698 0384                                   u1000 0715  
                                 u1001 0714                                   u1010 0722  
                                 u1011 0721                                   u1100 078C  
                                 u1020 0730                                   u1101 078B  
                                 u1021 072F                                   u1030 0739  
                                 u1031 0738                                   u1200 068C  
                                 u1040 0747                                   u1201 068B  
                                 u1041 0746                                   u1210 069A  
                                 u1130 063C                                   u1114 079A  
                                 u1050 0750                                   u1211 0699  
                                 u1131 063B                                   u1115 0798  
                                 u1051 074F                                   u1220 06A3  
                                 u1140 0647                                   u1124 07C1  
                                 u1060 075E                                   u1300 04F1  
                                 u1221 06A2                                   u1141 0646  
                                 u1125 07BF                                   u1061 075D  
                                 u1301 04F0                                   u1230 06B1  
                                 u1150 0655                                   u1070 0767  
                                 u1310 04FE                                   u1231 06B0  
                                 u1151 0654                                   u1071 0766  
                                 u1311 04FD                                   u2007 05CF  
                                 u1160 065E                                   u1080 0775  
                                 u1400 0568                                   u1320 050C  
                                 u1161 065D                                   u1081 0774  
                                 u1401 0567                                   u1321 050B  
                                 u2017 05E3                                   u1170 066C  
                                 u1090 077E                                   u1330 0515  
                                 u1410 0419                                   u1171 066B  
                                 u1091 077D                                   u1331 0514  
                                 u2027 0404                                   u1411 0418  
                                 u1244 06BF                                   u1180 0675  
                                 u1340 0523                                   u1260 04A6  
                                 u1245 06BD                                   u1181 0674  
                                 u1341 0522                                   u1261 04A5  
                                 u1254 06E7                                   u1190 0683  
                                 u1350 052C                                   u1430 03C1  
                                 u1255 06E5                                   u1191 0682  
                                 u1351 052B                                   u1431 03C0  
                                 u1360 053A                                   u1440 0586  
                                 u1361 0539                                   u1425 0429  
                                 u1441 0585                                   u1370 0543  
                                 u1290 03F6                                   u1450 05AF  
                                 u1371 0542                                   u1275 04C5  
                                 u1291 03F5                                   u1451 05AE  
                                 u1380 0551                                   u1460 0460  
                                 u1381 0550                                   u1285 04D8  
                                 u1461 045F                                   u1390 055A  
                                 u1391 0559                                   u1475 0471  
                                 u1997 05B7                                   _main 0384  
                                 btemp 007E                                   start 0000  
                 _gpio_pin_write_logic 070E                 lcd_4bits_send_char@lcd 003F  
               lcd_4bits_send_char@ret 003E                                  ?_main 0070  
                                _PORTA 0005                                  _PORTB 0006  
                                _PORTC 0007                                  _PORTD 0008  
                                _PORTE 0009                                  _TRISA 0085  
                                _TRISB 0086                                  _TRISC 0087  
                                _TRISD 0088                                  _TRISE 0089  
                                pclath 000A          lcd_4bits_send_command@command 007C  
                                status 0003                                  wtemp0 007E  
       ?_gpio_pin_direction_initialize 0070                        __initialization 07EE  
                         __end_of_main 0395                  ?_gpio_pin_write_logic 0070  
          __end_of_lcd_4bits_send_char 04A0                                 ??_main 007E  
              lcd_4bits_send_char@data 007C                ?_lcd_4bits_send_command 007C  
                               _motor1 003C                                 _motor2 003A  
       __end_of_lcd_4bits_send_command 0458                __end_of__initialization 07FC  
               ??_gpio_pin_write_logic 0071                         __pcstackCOMMON 0070  
         __end_of_lcd_4bits_initialize 0636                           __pidataBANK0 03D2  
                        send_4bits@lcd 007B                          send_4bits@ret 007A  
                           __pmaintext 0384              lcd_4bits_send_command@lcd 003F  
            lcd_4bits_send_command@ret 003E                         _tris_registers 002A  
                  _gpio_pin_initialize 04EA                                __ptext1 0458  
                              __ptext2 037E                                __ptext3 0395  
                              __ptext4 03BB                                __ptext5 057D  
                              __ptext6 0411                                __ptext7 03F0  
                              __ptext8 04A0                                __ptext9 04EA  
             ??_apllication_initilaize 007E        ??_gpio_pin_direction_initialize 0070  
           __end_of_send_enable_signal 0411                   ?_gpio_pin_initialize 0070  
                           _send_4bits 04A0                   _lcd_4bits_initialize 057D  
                 end_of_initialization 07FC            lcd_4bits_initialize@counter 0043  
                       _ecu_initialzie 0395                  ??_gpio_pin_initialize 0078  
                ?_lcd_4bits_initialize 0070                       _motor_initialize 03BB  
               __end_of_ecu_initialzie 03A8                    start_initialization 07EE  
                    send_4bits@command 0078                            ?_send_4bits 0078  
__end_of_gpio_pin_direction_initialize 070E          _gpio_pin_direction_initialize 0636  
                           init_fetch0 03A8                            __pdataBANK0 0020  
                      ?_ecu_initialzie 0070                lcd_4bits_initialize@lcd 0045  
              lcd_4bits_initialize@ret 0044                              ___latbits 0002  
                        __pcstackBANK0 003E                 ??_lcd_4bits_initialize 0040  
               _apllication_initilaize 037E               ??_lcd_4bits_send_command 007D  
            gpio_pin_write_logic@logic 0070                    motor_initialize@ret 007C  
                   _send_enable_signal 03F0                    _lcd_4bits_send_char 0458  
     gpio_pin_direction_initialize@pin 0075                    ?_send_enable_signal 0070  
             __end_of_motor_initialize 03D2                 gpio_pin_initialize@pin 007B  
               gpio_pin_initialize@ret 007A                   ?_lcd_4bits_send_char 007C  
              gpio_pin_write_logic@pin 0077                gpio_pin_write_logic@ret 0076  
                 ??_send_enable_signal 0078                  send_enable_signal@lcd 007A  
                send_enable_signal@ret 0079            __end_of_gpio_pin_initialize 057D  
                ??_lcd_4bits_send_char 007D                               __ptext10 070E  
                             __ptext11 0636                           ??_send_4bits 0079  
                     ??_ecu_initialzie 007E                     __end_of_send_4bits 04EA  
                motor_initialize@motor 007D                               init_ram0 03AC  
         __end_of_gpio_pin_write_logic 07EE                 _lcd_4bits_send_command 0411  
              ?_apllication_initilaize 0070                         _port_registers 0020  
       __end_of_apllication_initilaize 0384  
