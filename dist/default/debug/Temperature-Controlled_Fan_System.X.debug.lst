

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Jul 08 22:58:14 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22     0000                     
    23                           ; Generated 12/10/2023 GMT
    24                           ; 
    25                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F877A Definitions
    55                           ; 
    56                           ; SFR Addresses
    57     0000                     	;# 
    58     0001                     	;# 
    59     0002                     	;# 
    60     0003                     	;# 
    61     0004                     	;# 
    62     0005                     	;# 
    63     0006                     	;# 
    64     0007                     	;# 
    65     0008                     	;# 
    66     0009                     	;# 
    67     000A                     	;# 
    68     000B                     	;# 
    69     000C                     	;# 
    70     000D                     	;# 
    71     000E                     	;# 
    72     000E                     	;# 
    73     000F                     	;# 
    74     0010                     	;# 
    75     0011                     	;# 
    76     0012                     	;# 
    77     0013                     	;# 
    78     0014                     	;# 
    79     0015                     	;# 
    80     0015                     	;# 
    81     0016                     	;# 
    82     0017                     	;# 
    83     0018                     	;# 
    84     0019                     	;# 
    85     001A                     	;# 
    86     001B                     	;# 
    87     001B                     	;# 
    88     001C                     	;# 
    89     001D                     	;# 
    90     001E                     	;# 
    91     001F                     	;# 
    92     0081                     	;# 
    93     0085                     	;# 
    94     0086                     	;# 
    95     0087                     	;# 
    96     0088                     	;# 
    97     0089                     	;# 
    98     008C                     	;# 
    99     008D                     	;# 
   100     008E                     	;# 
   101     0091                     	;# 
   102     0092                     	;# 
   103     0093                     	;# 
   104     0094                     	;# 
   105     0098                     	;# 
   106     0099                     	;# 
   107     009C                     	;# 
   108     009D                     	;# 
   109     009E                     	;# 
   110     009F                     	;# 
   111     010C                     	;# 
   112     010D                     	;# 
   113     010E                     	;# 
   114     010F                     	;# 
   115     018C                     	;# 
   116     018D                     	;# 
   117     0000                     	;# 
   118     0001                     	;# 
   119     0002                     	;# 
   120     0003                     	;# 
   121     0004                     	;# 
   122     0005                     	;# 
   123     0006                     	;# 
   124     0007                     	;# 
   125     0008                     	;# 
   126     0009                     	;# 
   127     000A                     	;# 
   128     000B                     	;# 
   129     000C                     	;# 
   130     000D                     	;# 
   131     000E                     	;# 
   132     000E                     	;# 
   133     000F                     	;# 
   134     0010                     	;# 
   135     0011                     	;# 
   136     0012                     	;# 
   137     0013                     	;# 
   138     0014                     	;# 
   139     0015                     	;# 
   140     0015                     	;# 
   141     0016                     	;# 
   142     0017                     	;# 
   143     0018                     	;# 
   144     0019                     	;# 
   145     001A                     	;# 
   146     001B                     	;# 
   147     001B                     	;# 
   148     001C                     	;# 
   149     001D                     	;# 
   150     001E                     	;# 
   151     001F                     	;# 
   152     0081                     	;# 
   153     0085                     	;# 
   154     0086                     	;# 
   155     0087                     	;# 
   156     0088                     	;# 
   157     0089                     	;# 
   158     008C                     	;# 
   159     008D                     	;# 
   160     008E                     	;# 
   161     0091                     	;# 
   162     0092                     	;# 
   163     0093                     	;# 
   164     0094                     	;# 
   165     0098                     	;# 
   166     0099                     	;# 
   167     009C                     	;# 
   168     009D                     	;# 
   169     009E                     	;# 
   170     009F                     	;# 
   171     010C                     	;# 
   172     010D                     	;# 
   173     010E                     	;# 
   174     010F                     	;# 
   175     018C                     	;# 
   176     018D                     	;# 
   177     0000                     	;# 
   178     0001                     	;# 
   179     0002                     	;# 
   180     0003                     	;# 
   181     0004                     	;# 
   182     0005                     	;# 
   183     0006                     	;# 
   184     0007                     	;# 
   185     0008                     	;# 
   186     0009                     	;# 
   187     000A                     	;# 
   188     000B                     	;# 
   189     000C                     	;# 
   190     000D                     	;# 
   191     000E                     	;# 
   192     000E                     	;# 
   193     000F                     	;# 
   194     0010                     	;# 
   195     0011                     	;# 
   196     0012                     	;# 
   197     0013                     	;# 
   198     0014                     	;# 
   199     0015                     	;# 
   200     0015                     	;# 
   201     0016                     	;# 
   202     0017                     	;# 
   203     0018                     	;# 
   204     0019                     	;# 
   205     001A                     	;# 
   206     001B                     	;# 
   207     001B                     	;# 
   208     001C                     	;# 
   209     001D                     	;# 
   210     001E                     	;# 
   211     001F                     	;# 
   212     0081                     	;# 
   213     0085                     	;# 
   214     0086                     	;# 
   215     0087                     	;# 
   216     0088                     	;# 
   217     0089                     	;# 
   218     008C                     	;# 
   219     008D                     	;# 
   220     008E                     	;# 
   221     0091                     	;# 
   222     0092                     	;# 
   223     0093                     	;# 
   224     0094                     	;# 
   225     0098                     	;# 
   226     0099                     	;# 
   227     009C                     	;# 
   228     009D                     	;# 
   229     009E                     	;# 
   230     009F                     	;# 
   231     010C                     	;# 
   232     010D                     	;# 
   233     010E                     	;# 
   234     010F                     	;# 
   235     018C                     	;# 
   236     018D                     	;# 
   237     0000                     	;# 
   238     0001                     	;# 
   239     0002                     	;# 
   240     0003                     	;# 
   241     0004                     	;# 
   242     0005                     	;# 
   243     0006                     	;# 
   244     0007                     	;# 
   245     0008                     	;# 
   246     0009                     	;# 
   247     000A                     	;# 
   248     000B                     	;# 
   249     000C                     	;# 
   250     000D                     	;# 
   251     000E                     	;# 
   252     000E                     	;# 
   253     000F                     	;# 
   254     0010                     	;# 
   255     0011                     	;# 
   256     0012                     	;# 
   257     0013                     	;# 
   258     0014                     	;# 
   259     0015                     	;# 
   260     0015                     	;# 
   261     0016                     	;# 
   262     0017                     	;# 
   263     0018                     	;# 
   264     0019                     	;# 
   265     001A                     	;# 
   266     001B                     	;# 
   267     001B                     	;# 
   268     001C                     	;# 
   269     001D                     	;# 
   270     001E                     	;# 
   271     001F                     	;# 
   272     0081                     	;# 
   273     0085                     	;# 
   274     0086                     	;# 
   275     0087                     	;# 
   276     0088                     	;# 
   277     0089                     	;# 
   278     008C                     	;# 
   279     008D                     	;# 
   280     008E                     	;# 
   281     0091                     	;# 
   282     0092                     	;# 
   283     0093                     	;# 
   284     0094                     	;# 
   285     0098                     	;# 
   286     0099                     	;# 
   287     009C                     	;# 
   288     009D                     	;# 
   289     009E                     	;# 
   290     009F                     	;# 
   291     010C                     	;# 
   292     010D                     	;# 
   293     010E                     	;# 
   294     010F                     	;# 
   295     018C                     	;# 
   296     018D                     	;# 
   297     0000                     	;# 
   298     0001                     	;# 
   299     0002                     	;# 
   300     0003                     	;# 
   301     0004                     	;# 
   302     0005                     	;# 
   303     0006                     	;# 
   304     0007                     	;# 
   305     0008                     	;# 
   306     0009                     	;# 
   307     000A                     	;# 
   308     000B                     	;# 
   309     000C                     	;# 
   310     000D                     	;# 
   311     000E                     	;# 
   312     000E                     	;# 
   313     000F                     	;# 
   314     0010                     	;# 
   315     0011                     	;# 
   316     0012                     	;# 
   317     0013                     	;# 
   318     0014                     	;# 
   319     0015                     	;# 
   320     0015                     	;# 
   321     0016                     	;# 
   322     0017                     	;# 
   323     0018                     	;# 
   324     0019                     	;# 
   325     001A                     	;# 
   326     001B                     	;# 
   327     001B                     	;# 
   328     001C                     	;# 
   329     001D                     	;# 
   330     001E                     	;# 
   331     001F                     	;# 
   332     0081                     	;# 
   333     0085                     	;# 
   334     0086                     	;# 
   335     0087                     	;# 
   336     0088                     	;# 
   337     0089                     	;# 
   338     008C                     	;# 
   339     008D                     	;# 
   340     008E                     	;# 
   341     0091                     	;# 
   342     0092                     	;# 
   343     0093                     	;# 
   344     0094                     	;# 
   345     0098                     	;# 
   346     0099                     	;# 
   347     009C                     	;# 
   348     009D                     	;# 
   349     009E                     	;# 
   350     009F                     	;# 
   351     010C                     	;# 
   352     010D                     	;# 
   353     010E                     	;# 
   354     010F                     	;# 
   355     018C                     	;# 
   356     018D                     	;# 
   357     0000                     	;# 
   358     0001                     	;# 
   359     0002                     	;# 
   360     0003                     	;# 
   361     0004                     	;# 
   362     0005                     	;# 
   363     0006                     	;# 
   364     0007                     	;# 
   365     0008                     	;# 
   366     0009                     	;# 
   367     000A                     	;# 
   368     000B                     	;# 
   369     000C                     	;# 
   370     000D                     	;# 
   371     000E                     	;# 
   372     000E                     	;# 
   373     000F                     	;# 
   374     0010                     	;# 
   375     0011                     	;# 
   376     0012                     	;# 
   377     0013                     	;# 
   378     0014                     	;# 
   379     0015                     	;# 
   380     0015                     	;# 
   381     0016                     	;# 
   382     0017                     	;# 
   383     0018                     	;# 
   384     0019                     	;# 
   385     001A                     	;# 
   386     001B                     	;# 
   387     001B                     	;# 
   388     001C                     	;# 
   389     001D                     	;# 
   390     001E                     	;# 
   391     001F                     	;# 
   392     0081                     	;# 
   393     0085                     	;# 
   394     0086                     	;# 
   395     0087                     	;# 
   396     0088                     	;# 
   397     0089                     	;# 
   398     008C                     	;# 
   399     008D                     	;# 
   400     008E                     	;# 
   401     0091                     	;# 
   402     0092                     	;# 
   403     0093                     	;# 
   404     0094                     	;# 
   405     0098                     	;# 
   406     0099                     	;# 
   407     009C                     	;# 
   408     009D                     	;# 
   409     009E                     	;# 
   410     009F                     	;# 
   411     010C                     	;# 
   412     010D                     	;# 
   413     010E                     	;# 
   414     010F                     	;# 
   415     018C                     	;# 
   416     018D                     	;# 
   417                           
   418                           	psect	idataBANK0
   419     04E4                     __pidataBANK0:
   420                           
   421                           ;initializer for _port_registers
   422     04E4  3405               	retlw	5
   423     04E5  3400               	retlw	0
   424     04E6  3406               	retlw	6
   425     04E7  3400               	retlw	0
   426     04E8  3407               	retlw	7
   427     04E9  3400               	retlw	0
   428     04EA  3408               	retlw	8
   429     04EB  3400               	retlw	0
   430     04EC  3409               	retlw	9
   431     04ED  3400               	retlw	0
   432                           
   433                           ;initializer for _tris_registers
   434     04EE  3485               	retlw	133
   435     04EF  3400               	retlw	0
   436     04F0  3486               	retlw	134
   437     04F1  3400               	retlw	0
   438     04F2  3487               	retlw	135
   439     04F3  3400               	retlw	0
   440     04F4  3488               	retlw	136
   441     04F5  3400               	retlw	0
   442     04F6  3489               	retlw	137
   443     04F7  3400               	retlw	0
   444                           
   445                           ;initializer for _motor2
   446     04F8  3411               	retlw	17
   447     04F9  3419               	retlw	25
   448                           
   449                           ;initializer for _motor1
   450     04FA  3401               	retlw	1
   451     04FB  3409               	retlw	9
   452     0009                     _PORTE	set	9
   453     0008                     _PORTD	set	8
   454     0007                     _PORTC	set	7
   455     0006                     _PORTB	set	6
   456     0005                     _PORTA	set	5
   457     0089                     _TRISE	set	137
   458     0088                     _TRISD	set	136
   459     0087                     _TRISC	set	135
   460     0086                     _TRISB	set	134
   461     0085                     _TRISA	set	133
   462                           
   463                           	psect	cinit
   464     07EE                     start_initialization:	
   465                           ; #config settings
   466                           
   467     07EE                     __initialization:
   468                           
   469                           ; Initialize objects allocated to BANK0
   470     07EE  1383               	bcf	3,7	;select IRP bank0
   471     07EF  3038               	movlw	low (__pdataBANK0+24)
   472     07F0  00FD               	movwf	btemp+-1
   473     07F1  3004               	movlw	high __pidataBANK0
   474     07F2  00FE               	movwf	btemp
   475     07F3  30E4               	movlw	low __pidataBANK0
   476     07F4  00FF               	movwf	btemp+1
   477     07F5  3020               	movlw	low __pdataBANK0
   478     07F6  0084               	movwf	4
   479     07F7  120A  118A  24BE  120A  118A  	fcall	init_ram0
   480     07FC                     end_of_initialization:	
   481                           ;End of C runtime variable initialization code
   482                           
   483     07FC                     __end_of__initialization:
   484     07FC  0183               	clrf	3
   485     07FD  120A  118A  2D49   	ljmp	_main	;jump to C main() function
   486                           
   487                           	psect	dataBANK0
   488     0020                     __pdataBANK0:
   489     0020                     _port_registers:
   490     0020                     	ds	10
   491     002A                     _tris_registers:
   492     002A                     	ds	10
   493     0034                     _motor2:
   494     0034                     	ds	2
   495     0036                     _motor1:
   496     0036                     	ds	2
   497                           
   498                           	psect	inittext
   499     04BA                     init_fetch0:	
   500                           ;	Called with low address in FSR and high address in W
   501                           
   502     04BA  087E               	movf	btemp,w
   503     04BB  008A               	movwf	10
   504     04BC  087F               	movf	btemp+1,w
   505     04BD  0082               	movwf	2
   506     04BE                     init_ram0:	
   507                           ;Called with:
   508                           ;	high address of idata address in btemp 
   509                           ;	low address of idata address in btemp+1 
   510                           ;	low address of data in FSR
   511                           ;	high address + 1 of data in btemp-1
   512                           
   513     04BE  120A  118A  24BA  120A  118A  	fcall	init_fetch0
   514     04C3  0080               	movwf	0
   515     04C4  0A84               	incf	4,f
   516     04C5  0804               	movf	4,w
   517     04C6  067D               	xorwf	btemp+-1,w
   518     04C7  1903               	btfsc	3,2
   519     04C8  3400               	retlw	0
   520     04C9  0AFF               	incf	btemp+1,f
   521     04CA  1903               	btfsc	3,2
   522     04CB  0AFE               	incf	btemp,f
   523     04CC  2CBE               	goto	init_ram0
   524                           
   525                           	psect	cstackCOMMON
   526     0070                     __pcstackCOMMON:
   527     0070                     ?_apllication_initilaize:
   528     0070                     ?_ecu_initialzie:	
   529                           ; 1 bytes @ 0x0
   530                           
   531     0070                     ?_gpio_pin_direction_initialize:	
   532                           ; 1 bytes @ 0x0
   533                           
   534     0070                     ??_gpio_pin_direction_initialize:	
   535                           ; 1 bytes @ 0x0
   536                           
   537     0070                     ?_gpio_pin_write_logic:	
   538                           ; 1 bytes @ 0x0
   539                           
   540     0070                     ?_main:	
   541                           ; 1 bytes @ 0x0
   542                           
   543     0070                     gpio_pin_write_logic@logic:	
   544                           ; 2 bytes @ 0x0
   545                           
   546                           
   547                           ; 1 bytes @ 0x0
   548     0070                     	ds	1
   549     0071                     ??_gpio_pin_write_logic:
   550                           
   551                           ; 1 bytes @ 0x1
   552     0071                     	ds	4
   553     0075                     gpio_pin_direction_initialize@pin:
   554                           
   555                           ; 1 bytes @ 0x5
   556     0075                     	ds	1
   557     0076                     gpio_pin_write_logic@ret:
   558                           
   559                           ; 1 bytes @ 0x6
   560     0076                     	ds	1
   561     0077                     gpio_pin_write_logic@pin:
   562                           
   563                           ; 1 bytes @ 0x7
   564     0077                     	ds	1
   565     0078                     ??_motor_turn_right:
   566     0078                     ??_motor_turn_left:	
   567                           ; 1 bytes @ 0x8
   568                           
   569     0078                     ??_motor_turn_off:	
   570                           ; 1 bytes @ 0x8
   571                           
   572     0078                     ??_gpio_pin_initialize:	
   573                           ; 1 bytes @ 0x8
   574                           
   575     0078                     motor_turn_right@ret:	
   576                           ; 1 bytes @ 0x8
   577                           
   578     0078                     motor_turn_left@ret:	
   579                           ; 1 bytes @ 0x8
   580                           
   581     0078                     motor_turn_off@ret:	
   582                           ; 1 bytes @ 0x8
   583                           
   584                           
   585                           ; 1 bytes @ 0x8
   586     0078                     	ds	1
   587     0079                     ?_motor_turn_right:
   588     0079                     ?_motor_turn_left:	
   589                           ; 1 bytes @ 0x9
   590                           
   591     0079                     ?_motor_turn_off:	
   592                           ; 1 bytes @ 0x9
   593                           
   594     0079                     ?_gpio_pin_initialize:	
   595                           ; 1 bytes @ 0x9
   596                           
   597     0079                     motor_turn_right@motor:	
   598                           ; 1 bytes @ 0x9
   599                           
   600     0079                     motor_turn_left@motor:	
   601                           ; 1 bytes @ 0x9
   602                           
   603     0079                     motor_turn_off@motor:	
   604                           ; 1 bytes @ 0x9
   605                           
   606                           
   607                           ; 1 bytes @ 0x9
   608     0079                     	ds	1
   609     007A                     gpio_pin_initialize@ret:
   610                           
   611                           ; 1 bytes @ 0xA
   612     007A                     	ds	1
   613     007B                     gpio_pin_initialize@pin:
   614                           
   615                           ; 1 bytes @ 0xB
   616     007B                     	ds	1
   617     007C                     ??_motor_initialize:
   618     007C                     motor_initialize@ret:	
   619                           ; 1 bytes @ 0xC
   620                           
   621                           
   622                           ; 1 bytes @ 0xC
   623     007C                     	ds	1
   624     007D                     motor_initialize@motor:
   625                           
   626                           ; 1 bytes @ 0xD
   627     007D                     	ds	1
   628     007E                     ??_apllication_initilaize:
   629     007E                     ??_ecu_initialzie:	
   630                           ; 1 bytes @ 0xE
   631                           
   632                           
   633                           	psect	cstackBANK0
   634     0038                     __pcstackBANK0:	
   635                           ; 1 bytes @ 0xE
   636                           
   637     0038                     ??_main:
   638     0038                     ?_motor_initialize:	
   639                           ; 1 bytes @ 0x0
   640                           
   641                           
   642                           ; 1 bytes @ 0x0
   643     0038                     	ds	3
   644                           
   645                           	psect	maintext
   646     0549                     __pmaintext:	
   647 ;;
   648 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   649 ;;
   650 ;; *************** function _main *****************
   651 ;; Defined at:
   652 ;;		line 9 in file "Temperature_Controlled_Fan_System.c"
   653 ;; Parameters:    Size  Location     Type
   654 ;;		None
   655 ;; Auto vars:     Size  Location     Type
   656 ;;		None
   657 ;; Return value:  Size  Location     Type
   658 ;;                  2  193[None  ] int 
   659 ;; Registers used:
   660 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   661 ;; Tracked objects:
   662 ;;		On entry : B00/0
   663 ;;		On exit  : 0/0
   664 ;;		Unchanged: 0/0
   665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   666 ;;      Params:         0       0       0       0       0
   667 ;;      Locals:         0       0       0       0       0
   668 ;;      Temps:          0       3       0       0       0
   669 ;;      Totals:         0       3       0       0       0
   670 ;;Total ram usage:        3 bytes
   671 ;; Hardware stack levels required when called: 5
   672 ;; This function calls:
   673 ;;		_apllication_initilaize
   674 ;;		_motor_turn_left
   675 ;;		_motor_turn_off
   676 ;;		_motor_turn_right
   677 ;; This function is called by:
   678 ;;		Startup code after reset
   679 ;; This function uses a non-reentrant model
   680 ;;
   681                           
   682     0549                     _main:	
   683                           ;psect for function _main
   684                           
   685     0549                     l194:	
   686                           ;incstack = 0
   687                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   688                           ;Temperature_Controlled_Fan_System.c: 11: while(1){
   689                           
   690     0549                     l1581:
   691                           
   692                           ;Temperature_Controlled_Fan_System.c: 12:     apllication_initilaize();
   693     0549  120A  118A  24A7  120A  118A  	fcall	_apllication_initilaize
   694                           
   695                           ;Temperature_Controlled_Fan_System.c: 13:     motor_turn_right(&motor1);
   696     054E  3036               	movlw	(low (_motor1| 0))& (0+255)
   697     054F  120A  118A  252F  120A  118A  	fcall	_motor_turn_right
   698                           
   699                           ;Temperature_Controlled_Fan_System.c: 14:     motor_turn_left(&motor2);
   700     0554  3034               	movlw	(low (_motor2| 0))& (0+255)
   701     0555  120A  118A  2515  120A  118A  	fcall	_motor_turn_left
   702     055A                     l1583:
   703                           
   704                           ;Temperature_Controlled_Fan_System.c: 15:     _delay((unsigned long)((2000)*(8000000UL/4
      +                          000.0)));
   705     055A  3015               	movlw	21
   706     055B  1283               	bcf	3,5	;RP0=0, select bank0
   707     055C  1303               	bcf	3,6	;RP1=0, select bank0
   708     055D  00BA               	movwf	??_main+2
   709     055E  304B               	movlw	75
   710     055F  00B9               	movwf	??_main+1
   711     0560  30BD               	movlw	189
   712     0561  00B8               	movwf	??_main
   713     0562                     u2107:
   714     0562  0BB8               	decfsz	??_main,f
   715     0563  2D62               	goto	u2107
   716     0564  0BB9               	decfsz	??_main+1,f
   717     0565  2D62               	goto	u2107
   718     0566  0BBA               	decfsz	??_main+2,f
   719     0567  2D62               	goto	u2107
   720     0568  2D69               	nop2
   721     0569                     l1585:
   722                           
   723                           ;Temperature_Controlled_Fan_System.c: 16:     motor_turn_right(&motor2);
   724     0569  3034               	movlw	(low (_motor2| 0))& (0+255)
   725     056A  120A  118A  252F  120A  118A  	fcall	_motor_turn_right
   726     056F                     l1587:
   727                           
   728                           ;Temperature_Controlled_Fan_System.c: 17:     motor_turn_left(&motor1);
   729     056F  3036               	movlw	(low (_motor1| 0))& (0+255)
   730     0570  120A  118A  2515  120A  118A  	fcall	_motor_turn_left
   731     0575                     l1589:
   732                           
   733                           ;Temperature_Controlled_Fan_System.c: 18:     _delay((unsigned long)((2000)*(8000000UL/4
      +                          000.0)));
   734     0575  3015               	movlw	21
   735     0576  1283               	bcf	3,5	;RP0=0, select bank0
   736     0577  1303               	bcf	3,6	;RP1=0, select bank0
   737     0578  00BA               	movwf	??_main+2
   738     0579  304B               	movlw	75
   739     057A  00B9               	movwf	??_main+1
   740     057B  30BD               	movlw	189
   741     057C  00B8               	movwf	??_main
   742     057D                     u2117:
   743     057D  0BB8               	decfsz	??_main,f
   744     057E  2D7D               	goto	u2117
   745     057F  0BB9               	decfsz	??_main+1,f
   746     0580  2D7D               	goto	u2117
   747     0581  0BBA               	decfsz	??_main+2,f
   748     0582  2D7D               	goto	u2117
   749     0583  2D84               	nop2
   750                           
   751                           ;Temperature_Controlled_Fan_System.c: 19:     motor_turn_off(&motor1);
   752     0584  3036               	movlw	(low (_motor1| 0))& (0+255)
   753     0585  120A  118A  24FC  120A  118A  	fcall	_motor_turn_off
   754                           
   755                           ;Temperature_Controlled_Fan_System.c: 20:     motor_turn_off(&motor2);
   756     058A  3034               	movlw	(low (_motor2| 0))& (0+255)
   757     058B  120A  118A  24FC  120A  118A  	fcall	_motor_turn_off
   758     0590                     l1591:
   759                           
   760                           ;Temperature_Controlled_Fan_System.c: 21:     _delay((unsigned long)((2000)*(8000000UL/4
      +                          000.0)));
   761     0590  3015               	movlw	21
   762     0591  1283               	bcf	3,5	;RP0=0, select bank0
   763     0592  1303               	bcf	3,6	;RP1=0, select bank0
   764     0593  00BA               	movwf	??_main+2
   765     0594  304B               	movlw	75
   766     0595  00B9               	movwf	??_main+1
   767     0596  30BD               	movlw	189
   768     0597  00B8               	movwf	??_main
   769     0598                     u2127:
   770     0598  0BB8               	decfsz	??_main,f
   771     0599  2D98               	goto	u2127
   772     059A  0BB9               	decfsz	??_main+1,f
   773     059B  2D98               	goto	u2127
   774     059C  0BBA               	decfsz	??_main+2,f
   775     059D  2D98               	goto	u2127
   776     059E  2D9F               	nop2
   777     059F  2D49               	goto	l194
   778     05A0  120A  118A  2800   	ljmp	start
   779     05A3                     __end_of_main:
   780                           
   781                           	psect	text1
   782     052F                     __ptext1:	
   783 ;; *************** function _motor_turn_right *****************
   784 ;; Defined at:
   785 ;;		line 19 in file "ECU_LAYER/Motor/ecu_motor_driver.c"
   786 ;; Parameters:    Size  Location     Type
   787 ;;  motor           1    wreg     PTR const struct .
   788 ;;		 -> motor2(2), motor1(2), 
   789 ;; Auto vars:     Size  Location     Type
   790 ;;  motor           1    9[COMMON] PTR const struct .
   791 ;;		 -> motor2(2), motor1(2), 
   792 ;;  ret             1    8[COMMON] unsigned char 
   793 ;; Return value:  Size  Location     Type
   794 ;;                  1    wreg      unsigned char 
   795 ;; Registers used:
   796 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   797 ;; Tracked objects:
   798 ;;		On entry : 0/0
   799 ;;		On exit  : 0/0
   800 ;;		Unchanged: 0/0
   801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   802 ;;      Params:         0       0       0       0       0
   803 ;;      Locals:         2       0       0       0       0
   804 ;;      Temps:          0       0       0       0       0
   805 ;;      Totals:         2       0       0       0       0
   806 ;;Total ram usage:        2 bytes
   807 ;; Hardware stack levels used: 1
   808 ;; Hardware stack levels required when called: 1
   809 ;; This function calls:
   810 ;;		_gpio_pin_write_logic
   811 ;; This function is called by:
   812 ;;		_main
   813 ;; This function uses a non-reentrant model
   814 ;;
   815                           
   816     052F                     _motor_turn_right:	
   817                           ;psect for function _motor_turn_right
   818                           
   819                           
   820                           ;incstack = 0
   821                           ; Regs used in _motor_turn_right: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   822                           ;motor_turn_right@motor stored from wreg
   823     052F  00F9               	movwf	motor_turn_right@motor
   824     0530                     l1551:
   825     0530                     l1553:
   826                           
   827                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 21:     if(motor == ((void*)0)){
   828     0530  0879               	movf	motor_turn_right@motor,w
   829     0531  1D03               	btfss	3,2
   830     0532  2D34               	goto	u2071
   831     0533  2D35               	goto	u2070
   832     0534                     u2071:
   833     0534  2D36               	goto	l1557
   834     0535                     u2070:
   835     0535                     l1555:
   836                           
   837                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 23:     }
   838     0535  2D48               	goto	l214
   839     0536                     l1557:
   840                           
   841                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 25:         ret = gpio_pin_write_logic(&(motor->pin
      +                          s[0]),GPIO_HIGH);
   842     0536  01F0               	clrf	gpio_pin_write_logic@logic
   843     0537  0AF0               	incf	gpio_pin_write_logic@logic,f
   844     0538  0879               	movf	motor_turn_right@motor,w
   845     0539  120A  118A  270E  120A  118A  	fcall	_gpio_pin_write_logic
   846     053E  00F8               	movwf	motor_turn_right@ret
   847                           
   848                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 26:         ret = gpio_pin_write_logic(&(motor->pin
      +                          s[1]),GPIO_LOW);
   849     053F  01F0               	clrf	gpio_pin_write_logic@logic
   850     0540  0879               	movf	motor_turn_right@motor,w
   851     0541  3E01               	addlw	1
   852     0542  120A  118A  270E  120A  118A  	fcall	_gpio_pin_write_logic
   853     0547  00F8               	movwf	motor_turn_right@ret
   854     0548                     l214:
   855     0548  0008               	return
   856     0549                     __end_of_motor_turn_right:
   857                           
   858                           	psect	text2
   859     04FC                     __ptext2:	
   860 ;; *************** function _motor_turn_off *****************
   861 ;; Defined at:
   862 ;;		line 41 in file "ECU_LAYER/Motor/ecu_motor_driver.c"
   863 ;; Parameters:    Size  Location     Type
   864 ;;  motor           1    wreg     PTR const struct .
   865 ;;		 -> motor2(2), motor1(2), 
   866 ;; Auto vars:     Size  Location     Type
   867 ;;  motor           1    9[COMMON] PTR const struct .
   868 ;;		 -> motor2(2), motor1(2), 
   869 ;;  ret             1    8[COMMON] unsigned char 
   870 ;; Return value:  Size  Location     Type
   871 ;;                  1    wreg      unsigned char 
   872 ;; Registers used:
   873 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   874 ;; Tracked objects:
   875 ;;		On entry : 0/0
   876 ;;		On exit  : 0/0
   877 ;;		Unchanged: 0/0
   878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   879 ;;      Params:         0       0       0       0       0
   880 ;;      Locals:         2       0       0       0       0
   881 ;;      Temps:          0       0       0       0       0
   882 ;;      Totals:         2       0       0       0       0
   883 ;;Total ram usage:        2 bytes
   884 ;; Hardware stack levels used: 1
   885 ;; Hardware stack levels required when called: 1
   886 ;; This function calls:
   887 ;;		_gpio_pin_write_logic
   888 ;; This function is called by:
   889 ;;		_main
   890 ;; This function uses a non-reentrant model
   891 ;;
   892                           
   893     04FC                     _motor_turn_off:	
   894                           ;psect for function _motor_turn_off
   895                           
   896                           
   897                           ;incstack = 0
   898                           ; Regs used in _motor_turn_off: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   899                           ;motor_turn_off@motor stored from wreg
   900     04FC  00F9               	movwf	motor_turn_off@motor
   901     04FD                     l1571:
   902     04FD                     l1573:
   903                           
   904                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 43:     if(motor == ((void*)0)){
   905     04FD  0879               	movf	motor_turn_off@motor,w
   906     04FE  1D03               	btfss	3,2
   907     04FF  2D01               	goto	u2091
   908     0500  2D02               	goto	u2090
   909     0501                     u2091:
   910     0501  2D03               	goto	l1577
   911     0502                     u2090:
   912     0502                     l1575:
   913                           
   914                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 45:     }
   915     0502  2D14               	goto	l224
   916     0503                     l1577:
   917                           
   918                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 47:         ret = gpio_pin_write_logic(&(motor->pin
      +                          s[0]),GPIO_LOW);
   919     0503  01F0               	clrf	gpio_pin_write_logic@logic
   920     0504  0879               	movf	motor_turn_off@motor,w
   921     0505  120A  118A  270E  120A  118A  	fcall	_gpio_pin_write_logic
   922     050A  00F8               	movwf	motor_turn_off@ret
   923                           
   924                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 48:         ret = gpio_pin_write_logic(&(motor->pin
      +                          s[1]),GPIO_LOW);
   925     050B  01F0               	clrf	gpio_pin_write_logic@logic
   926     050C  0879               	movf	motor_turn_off@motor,w
   927     050D  3E01               	addlw	1
   928     050E  120A  118A  270E  120A  118A  	fcall	_gpio_pin_write_logic
   929     0513  00F8               	movwf	motor_turn_off@ret
   930     0514                     l224:
   931     0514  0008               	return
   932     0515                     __end_of_motor_turn_off:
   933                           
   934                           	psect	text3
   935     0515                     __ptext3:	
   936 ;; *************** function _motor_turn_left *****************
   937 ;; Defined at:
   938 ;;		line 30 in file "ECU_LAYER/Motor/ecu_motor_driver.c"
   939 ;; Parameters:    Size  Location     Type
   940 ;;  motor           1    wreg     PTR const struct .
   941 ;;		 -> motor2(2), motor1(2), 
   942 ;; Auto vars:     Size  Location     Type
   943 ;;  motor           1    9[COMMON] PTR const struct .
   944 ;;		 -> motor2(2), motor1(2), 
   945 ;;  ret             1    8[COMMON] unsigned char 
   946 ;; Return value:  Size  Location     Type
   947 ;;                  1    wreg      unsigned char 
   948 ;; Registers used:
   949 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   950 ;; Tracked objects:
   951 ;;		On entry : 0/0
   952 ;;		On exit  : 0/0
   953 ;;		Unchanged: 0/0
   954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   955 ;;      Params:         0       0       0       0       0
   956 ;;      Locals:         2       0       0       0       0
   957 ;;      Temps:          0       0       0       0       0
   958 ;;      Totals:         2       0       0       0       0
   959 ;;Total ram usage:        2 bytes
   960 ;; Hardware stack levels used: 1
   961 ;; Hardware stack levels required when called: 1
   962 ;; This function calls:
   963 ;;		_gpio_pin_write_logic
   964 ;; This function is called by:
   965 ;;		_main
   966 ;; This function uses a non-reentrant model
   967 ;;
   968                           
   969     0515                     _motor_turn_left:	
   970                           ;psect for function _motor_turn_left
   971                           
   972                           
   973                           ;incstack = 0
   974                           ; Regs used in _motor_turn_left: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   975                           ;motor_turn_left@motor stored from wreg
   976     0515  00F9               	movwf	motor_turn_left@motor
   977     0516                     l1561:
   978     0516                     l1563:
   979                           
   980                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 32:     if(motor == ((void*)0)){
   981     0516  0879               	movf	motor_turn_left@motor,w
   982     0517  1D03               	btfss	3,2
   983     0518  2D1A               	goto	u2081
   984     0519  2D1B               	goto	u2080
   985     051A                     u2081:
   986     051A  2D1C               	goto	l1567
   987     051B                     u2080:
   988     051B                     l1565:
   989                           
   990                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 34:     }
   991     051B  2D2E               	goto	l219
   992     051C                     l1567:
   993                           
   994                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 36:         ret = gpio_pin_write_logic(&(motor->pin
      +                          s[0]),GPIO_LOW);
   995     051C  01F0               	clrf	gpio_pin_write_logic@logic
   996     051D  0879               	movf	motor_turn_left@motor,w
   997     051E  120A  118A  270E  120A  118A  	fcall	_gpio_pin_write_logic
   998     0523  00F8               	movwf	motor_turn_left@ret
   999                           
  1000                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 37:         ret = gpio_pin_write_logic(&(motor->pin
      +                          s[1]),GPIO_HIGH);
  1001     0524  01F0               	clrf	gpio_pin_write_logic@logic
  1002     0525  0AF0               	incf	gpio_pin_write_logic@logic,f
  1003     0526  0879               	movf	motor_turn_left@motor,w
  1004     0527  3E01               	addlw	1
  1005     0528  120A  118A  270E  120A  118A  	fcall	_gpio_pin_write_logic
  1006     052D  00F8               	movwf	motor_turn_left@ret
  1007     052E                     l219:
  1008     052E  0008               	return
  1009     052F                     __end_of_motor_turn_left:
  1010                           
  1011                           	psect	text4
  1012     04A7                     __ptext4:	
  1013 ;; *************** function _apllication_initilaize *****************
  1014 ;; Defined at:
  1015 ;;		line 25 in file "Temperature_Controlled_Fan_System.c"
  1016 ;; Parameters:    Size  Location     Type
  1017 ;;		None
  1018 ;; Auto vars:     Size  Location     Type
  1019 ;;		None
  1020 ;; Return value:  Size  Location     Type
  1021 ;;                  1    wreg      void 
  1022 ;; Registers used:
  1023 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1024 ;; Tracked objects:
  1025 ;;		On entry : 0/0
  1026 ;;		On exit  : 0/0
  1027 ;;		Unchanged: 0/0
  1028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1029 ;;      Params:         0       0       0       0       0
  1030 ;;      Locals:         0       0       0       0       0
  1031 ;;      Temps:          0       0       0       0       0
  1032 ;;      Totals:         0       0       0       0       0
  1033 ;;Total ram usage:        0 bytes
  1034 ;; Hardware stack levels used: 1
  1035 ;; Hardware stack levels required when called: 4
  1036 ;; This function calls:
  1037 ;;		_ecu_initialzie
  1038 ;; This function is called by:
  1039 ;;		_main
  1040 ;; This function uses a non-reentrant model
  1041 ;;
  1042                           
  1043     04A7                     _apllication_initilaize:	
  1044                           ;psect for function _apllication_initilaize
  1045                           
  1046     04A7                     l1549:	
  1047                           ;incstack = 0
  1048                           ; Regs used in _apllication_initilaize: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  1049                           
  1050                           
  1051                           ;Temperature_Controlled_Fan_System.c: 26:     ecu_initialzie();
  1052     04A7  120A  118A  24AD  120A  118A  	fcall	_ecu_initialzie
  1053     04AC                     l200:
  1054     04AC  0008               	return
  1055     04AD                     __end_of_apllication_initilaize:
  1056                           
  1057                           	psect	text5
  1058     04AD                     __ptext5:	
  1059 ;; *************** function _ecu_initialzie *****************
  1060 ;; Defined at:
  1061 ;;		line 14 in file "ECU_LAYER/ECU_LAYER.c"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;		None
  1064 ;; Auto vars:     Size  Location     Type
  1065 ;;		None
  1066 ;; Return value:  Size  Location     Type
  1067 ;;                  1    wreg      void 
  1068 ;; Registers used:
  1069 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1070 ;; Tracked objects:
  1071 ;;		On entry : 0/0
  1072 ;;		On exit  : 0/0
  1073 ;;		Unchanged: 0/0
  1074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1075 ;;      Params:         0       0       0       0       0
  1076 ;;      Locals:         0       0       0       0       0
  1077 ;;      Temps:          0       0       0       0       0
  1078 ;;      Totals:         0       0       0       0       0
  1079 ;;Total ram usage:        0 bytes
  1080 ;; Hardware stack levels used: 1
  1081 ;; Hardware stack levels required when called: 3
  1082 ;; This function calls:
  1083 ;;		_motor_initialize
  1084 ;; This function is called by:
  1085 ;;		_apllication_initilaize
  1086 ;; This function uses a non-reentrant model
  1087 ;;
  1088                           
  1089     04AD                     _ecu_initialzie:	
  1090                           ;psect for function _ecu_initialzie
  1091                           
  1092     04AD                     l1547:	
  1093                           ;incstack = 0
  1094                           ; Regs used in _ecu_initialzie: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1095                           
  1096                           
  1097                           ;ECU_LAYER/ECU_LAYER.c: 15:     motor_initialize(&motor1);
  1098     04AD  3036               	movlw	(low (_motor1| 0))& (0+255)
  1099     04AE  120A  118A  24CD  120A  118A  	fcall	_motor_initialize
  1100                           
  1101                           ;ECU_LAYER/ECU_LAYER.c: 16:     motor_initialize(&motor2);
  1102     04B3  3034               	movlw	(low (_motor2| 0))& (0+255)
  1103     04B4  120A  118A  24CD  120A  118A  	fcall	_motor_initialize
  1104     04B9                     l233:
  1105     04B9  0008               	return
  1106     04BA                     __end_of_ecu_initialzie:
  1107                           
  1108                           	psect	text6
  1109     04CD                     __ptext6:	
  1110 ;; *************** function _motor_initialize *****************
  1111 ;; Defined at:
  1112 ;;		line 8 in file "ECU_LAYER/Motor/ecu_motor_driver.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;  motor           1    wreg     PTR const struct .
  1115 ;;		 -> motor2(2), motor1(2), 
  1116 ;; Auto vars:     Size  Location     Type
  1117 ;;  motor           1   13[COMMON] PTR const struct .
  1118 ;;		 -> motor2(2), motor1(2), 
  1119 ;;  ret             1   12[COMMON] unsigned char 
  1120 ;; Return value:  Size  Location     Type
  1121 ;;                  1    wreg      unsigned char 
  1122 ;; Registers used:
  1123 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1124 ;; Tracked objects:
  1125 ;;		On entry : 0/0
  1126 ;;		On exit  : 0/0
  1127 ;;		Unchanged: 0/0
  1128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1129 ;;      Params:         0       0       0       0       0
  1130 ;;      Locals:         2       0       0       0       0
  1131 ;;      Temps:          0       0       0       0       0
  1132 ;;      Totals:         2       0       0       0       0
  1133 ;;Total ram usage:        2 bytes
  1134 ;; Hardware stack levels used: 1
  1135 ;; Hardware stack levels required when called: 2
  1136 ;; This function calls:
  1137 ;;		_gpio_pin_initialize
  1138 ;; This function is called by:
  1139 ;;		_ecu_initialzie
  1140 ;; This function uses a non-reentrant model
  1141 ;;
  1142                           
  1143     04CD                     _motor_initialize:	
  1144                           ;psect for function _motor_initialize
  1145                           
  1146                           
  1147                           ;incstack = 0
  1148                           ; Regs used in _motor_initialize: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1149                           ;motor_initialize@motor stored from wreg
  1150     04CD  00FD               	movwf	motor_initialize@motor
  1151     04CE                     l1537:
  1152     04CE                     l1539:
  1153                           
  1154                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 10:     if(motor == ((void*)0)){
  1155     04CE  087D               	movf	motor_initialize@motor,w
  1156     04CF  1D03               	btfss	3,2
  1157     04D0  2CD2               	goto	u2061
  1158     04D1  2CD3               	goto	u2060
  1159     04D2                     u2061:
  1160     04D2  2CD4               	goto	l1543
  1161     04D3                     u2060:
  1162     04D3                     l1541:
  1163                           
  1164                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 12:     }
  1165     04D3  2CE3               	goto	l209
  1166     04D4                     l1543:
  1167                           
  1168                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 14:         ret = gpio_pin_initialize(&(motor->pins
      +                          [0]));
  1169     04D4  087D               	movf	motor_initialize@motor,w
  1170     04D5  120A  118A  25A3  120A  118A  	fcall	_gpio_pin_initialize
  1171     04DA  00FC               	movwf	motor_initialize@ret
  1172                           
  1173                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 15:         ret = gpio_pin_initialize(&(motor->pins
      +                          [1]));
  1174     04DB  087D               	movf	motor_initialize@motor,w
  1175     04DC  3E01               	addlw	1
  1176     04DD  120A  118A  25A3  120A  118A  	fcall	_gpio_pin_initialize
  1177     04E2  00FC               	movwf	motor_initialize@ret
  1178     04E3                     l209:
  1179     04E3  0008               	return
  1180     04E4                     __end_of_motor_initialize:
  1181                           
  1182                           	psect	text7
  1183     05A3                     __ptext7:	
  1184 ;; *************** function _gpio_pin_initialize *****************
  1185 ;; Defined at:
  1186 ;;		line 103 in file "MCAL_LAYER/GPIO/mcal_gpio.c"
  1187 ;; Parameters:    Size  Location     Type
  1188 ;;  pin             1    wreg     PTR const struct .
  1189 ;;		 -> motor2$pins(2), motor1$pins(2), motor2(2), motor1(2), 
  1190 ;; Auto vars:     Size  Location     Type
  1191 ;;  pin             1   11[COMMON] PTR const struct .
  1192 ;;		 -> motor2$pins(2), motor1$pins(2), motor2(2), motor1(2), 
  1193 ;;  ret             1   10[COMMON] unsigned char 
  1194 ;; Return value:  Size  Location     Type
  1195 ;;                  1    wreg      unsigned char 
  1196 ;; Registers used:
  1197 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1198 ;; Tracked objects:
  1199 ;;		On entry : 0/0
  1200 ;;		On exit  : 0/0
  1201 ;;		Unchanged: 0/0
  1202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1203 ;;      Params:         0       0       0       0       0
  1204 ;;      Locals:         2       0       0       0       0
  1205 ;;      Temps:          2       0       0       0       0
  1206 ;;      Totals:         4       0       0       0       0
  1207 ;;Total ram usage:        4 bytes
  1208 ;; Hardware stack levels used: 1
  1209 ;; Hardware stack levels required when called: 1
  1210 ;; This function calls:
  1211 ;;		_gpio_pin_direction_initialize
  1212 ;;		_gpio_pin_write_logic
  1213 ;; This function is called by:
  1214 ;;		_motor_initialize
  1215 ;; This function uses a non-reentrant model
  1216 ;;
  1217                           
  1218     05A3                     _gpio_pin_initialize:	
  1219                           ;psect for function _gpio_pin_initialize
  1220                           
  1221                           
  1222                           ;incstack = 0
  1223                           ; Regs used in _gpio_pin_initialize: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  1224                           ;gpio_pin_initialize@pin stored from wreg
  1225     05A3  00FB               	movwf	gpio_pin_initialize@pin
  1226     05A4                     l1505:
  1227                           
  1228                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 104:     uint8 ret = 0x00;
  1229     05A4  01FA               	clrf	gpio_pin_initialize@ret
  1230     05A5                     l1507:
  1231                           
  1232                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 105:     if (pin == ((void*)0)) {
  1233     05A5  087B               	movf	gpio_pin_initialize@pin,w
  1234     05A6  1D03               	btfss	3,2
  1235     05A7  2DA9               	goto	u1951
  1236     05A8  2DAA               	goto	u1950
  1237     05A9                     u1951:
  1238     05A9  2DAD               	goto	l1511
  1239     05AA                     u1950:
  1240     05AA                     l1509:
  1241                           
  1242                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 106:         ret = 0x01;
  1243     05AA  01FA               	clrf	gpio_pin_initialize@ret
  1244     05AB  0AFA               	incf	gpio_pin_initialize@ret,f
  1245                           
  1246                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 107:     } else {
  1247     05AC  2E34               	goto	l1533
  1248     05AD                     l1511:
  1249                           
  1250                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 108:         if ((pin->port == PORTA_INDEX && pin->pin < 6
      +                          ) || (pin->port == PORTB_INDEX && pin->pin < 8) || (pin->port == PORTC_INDEX && pin->pin
      +                           < 8) ||
  1251     05AD  087B               	movf	gpio_pin_initialize@pin,w
  1252     05AE  0084               	movwf	4
  1253     05AF  1383               	bcf	3,7	;select IRP bank0
  1254     05B0  0800               	movf	0,w
  1255     05B1  3907               	andlw	7
  1256     05B2  3A00               	xorlw	0
  1257     05B3  1D03               	skipz
  1258     05B4  2DB6               	goto	u1961
  1259     05B5  2DB7               	goto	u1960
  1260     05B6                     u1961:
  1261     05B6  2DC5               	goto	l1515
  1262     05B7                     u1960:
  1263     05B7                     l1513:
  1264     05B7  087B               	movf	gpio_pin_initialize@pin,w
  1265     05B8  0084               	movwf	4
  1266     05B9  0C00               	rrf	0,w
  1267     05BA  00F8               	movwf	??_gpio_pin_initialize
  1268     05BB  0CF8               	rrf	??_gpio_pin_initialize,f
  1269     05BC  0C78               	rrf	??_gpio_pin_initialize,w
  1270     05BD  3907               	andlw	7
  1271     05BE  00F9               	movwf	??_gpio_pin_initialize+1
  1272     05BF  3006               	movlw	6
  1273     05C0  0279               	subwf	??_gpio_pin_initialize+1,w
  1274     05C1  1C03               	skipc
  1275     05C2  2DC4               	goto	u1971
  1276     05C3  2DC5               	goto	u1970
  1277     05C4                     u1971:
  1278     05C4  2E21               	goto	l1531
  1279     05C5                     u1970:
  1280     05C5                     l1515:
  1281     05C5  087B               	movf	gpio_pin_initialize@pin,w
  1282     05C6  0084               	movwf	4
  1283     05C7  0800               	movf	0,w
  1284     05C8  3907               	andlw	7
  1285     05C9  3A01               	xorlw	1
  1286     05CA  1D03               	skipz
  1287     05CB  2DCD               	goto	u1981
  1288     05CC  2DCE               	goto	u1980
  1289     05CD                     u1981:
  1290     05CD  2DDC               	goto	l1519
  1291     05CE                     u1980:
  1292     05CE                     l1517:
  1293     05CE  087B               	movf	gpio_pin_initialize@pin,w
  1294     05CF  0084               	movwf	4
  1295     05D0  0C00               	rrf	0,w
  1296     05D1  00F8               	movwf	??_gpio_pin_initialize
  1297     05D2  0CF8               	rrf	??_gpio_pin_initialize,f
  1298     05D3  0C78               	rrf	??_gpio_pin_initialize,w
  1299     05D4  3907               	andlw	7
  1300     05D5  00F9               	movwf	??_gpio_pin_initialize+1
  1301     05D6  3008               	movlw	8
  1302     05D7  0279               	subwf	??_gpio_pin_initialize+1,w
  1303     05D8  1C03               	skipc
  1304     05D9  2DDB               	goto	u1991
  1305     05DA  2DDC               	goto	u1990
  1306     05DB                     u1991:
  1307     05DB  2E21               	goto	l1531
  1308     05DC                     u1990:
  1309     05DC                     l1519:
  1310     05DC  087B               	movf	gpio_pin_initialize@pin,w
  1311     05DD  0084               	movwf	4
  1312     05DE  0800               	movf	0,w
  1313     05DF  3907               	andlw	7
  1314     05E0  3A02               	xorlw	2
  1315     05E1  1D03               	skipz
  1316     05E2  2DE4               	goto	u2001
  1317     05E3  2DE5               	goto	u2000
  1318     05E4                     u2001:
  1319     05E4  2DF3               	goto	l1523
  1320     05E5                     u2000:
  1321     05E5                     l1521:
  1322     05E5  087B               	movf	gpio_pin_initialize@pin,w
  1323     05E6  0084               	movwf	4
  1324     05E7  0C00               	rrf	0,w
  1325     05E8  00F8               	movwf	??_gpio_pin_initialize
  1326     05E9  0CF8               	rrf	??_gpio_pin_initialize,f
  1327     05EA  0C78               	rrf	??_gpio_pin_initialize,w
  1328     05EB  3907               	andlw	7
  1329     05EC  00F9               	movwf	??_gpio_pin_initialize+1
  1330     05ED  3008               	movlw	8
  1331     05EE  0279               	subwf	??_gpio_pin_initialize+1,w
  1332     05EF  1C03               	skipc
  1333     05F0  2DF2               	goto	u2011
  1334     05F1  2DF3               	goto	u2010
  1335     05F2                     u2011:
  1336     05F2  2E21               	goto	l1531
  1337     05F3                     u2010:
  1338     05F3                     l1523:
  1339     05F3  087B               	movf	gpio_pin_initialize@pin,w
  1340     05F4  0084               	movwf	4
  1341     05F5  0800               	movf	0,w
  1342     05F6  3907               	andlw	7
  1343     05F7  3A03               	xorlw	3
  1344     05F8  1D03               	skipz
  1345     05F9  2DFB               	goto	u2021
  1346     05FA  2DFC               	goto	u2020
  1347     05FB                     u2021:
  1348     05FB  2E0A               	goto	l1527
  1349     05FC                     u2020:
  1350     05FC                     l1525:
  1351     05FC  087B               	movf	gpio_pin_initialize@pin,w
  1352     05FD  0084               	movwf	4
  1353     05FE  0C00               	rrf	0,w
  1354     05FF  00F8               	movwf	??_gpio_pin_initialize
  1355     0600  0CF8               	rrf	??_gpio_pin_initialize,f
  1356     0601  0C78               	rrf	??_gpio_pin_initialize,w
  1357     0602  3907               	andlw	7
  1358     0603  00F9               	movwf	??_gpio_pin_initialize+1
  1359     0604  3008               	movlw	8
  1360     0605  0279               	subwf	??_gpio_pin_initialize+1,w
  1361     0606  1C03               	skipc
  1362     0607  2E09               	goto	u2031
  1363     0608  2E0A               	goto	u2030
  1364     0609                     u2031:
  1365     0609  2E21               	goto	l1531
  1366     060A                     u2030:
  1367     060A                     l1527:
  1368     060A  087B               	movf	gpio_pin_initialize@pin,w
  1369     060B  0084               	movwf	4
  1370     060C  0800               	movf	0,w
  1371     060D  3907               	andlw	7
  1372     060E  3A04               	xorlw	4
  1373     060F  1D03               	skipz
  1374     0610  2E12               	goto	u2041
  1375     0611  2E13               	goto	u2040
  1376     0612                     u2041:
  1377     0612  2DAA               	goto	l1509
  1378     0613                     u2040:
  1379     0613                     l1529:
  1380     0613  087B               	movf	gpio_pin_initialize@pin,w
  1381     0614  0084               	movwf	4
  1382     0615  0C00               	rrf	0,w
  1383     0616  00F8               	movwf	??_gpio_pin_initialize
  1384     0617  0CF8               	rrf	??_gpio_pin_initialize,f
  1385     0618  0C78               	rrf	??_gpio_pin_initialize,w
  1386     0619  3907               	andlw	7
  1387     061A  00F9               	movwf	??_gpio_pin_initialize+1
  1388     061B  3003               	movlw	3
  1389     061C  0279               	subwf	??_gpio_pin_initialize+1,w
  1390     061D  1803               	skipnc
  1391     061E  2E20               	goto	u2051
  1392     061F  2E21               	goto	u2050
  1393     0620                     u2051:
  1394     0620  2DAA               	goto	l1509
  1395     0621                     u2050:
  1396     0621                     l1531:
  1397                           
  1398                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 109:                 (pin->port == PORTD_INDEX && pin->pin
      +                           < 8) || (pin->port == PORTE_INDEX && pin->pin < 3)) {;MCAL_LAYER/GPIO/mcal_gpio.c: 110:
      +                                       gpio_pin_direction_initialize(pin);
  1399     0621  087B               	movf	gpio_pin_initialize@pin,w
  1400     0622  120A  118A  2636  120A  118A  	fcall	_gpio_pin_direction_initialize
  1401                           
  1402                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 111:             gpio_pin_write_logic(pin, pin->logic);
  1403     0627  087B               	movf	gpio_pin_initialize@pin,w
  1404     0628  0084               	movwf	4
  1405     0629  3000               	movlw	0
  1406     062A  1383               	bcf	3,7	;select IRP bank0
  1407     062B  1B00               	btfsc	0,6
  1408     062C  3001               	movlw	1
  1409     062D  00F0               	movwf	gpio_pin_write_logic@logic
  1410     062E  087B               	movf	gpio_pin_initialize@pin,w
  1411     062F  120A  118A  270E  120A  118A  	fcall	_gpio_pin_write_logic
  1412     0634                     l1533:	
  1413                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 112:         } else {
  1414                           
  1415                           
  1416                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 116:     return ret;
  1417     0634  087A               	movf	gpio_pin_initialize@ret,w
  1418     0635                     l138:
  1419     0635  0008               	return
  1420     0636                     __end_of_gpio_pin_initialize:
  1421                           
  1422                           	psect	text8
  1423     070E                     __ptext8:	
  1424 ;; *************** function _gpio_pin_write_logic *****************
  1425 ;; Defined at:
  1426 ;;		line 50 in file "MCAL_LAYER/GPIO/mcal_gpio.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;  pin             1    wreg     PTR const struct .
  1429 ;;		 -> motor2$pins(2), motor1$pins(2), motor2(2), motor1(2), 
  1430 ;;  logic           1    0[COMMON] enum E1352
  1431 ;; Auto vars:     Size  Location     Type
  1432 ;;  pin             1    7[COMMON] PTR const struct .
  1433 ;;		 -> motor2$pins(2), motor1$pins(2), motor2(2), motor1(2), 
  1434 ;;  ret             1    6[COMMON] unsigned char 
  1435 ;; Return value:  Size  Location     Type
  1436 ;;                  1    wreg      unsigned char 
  1437 ;; Registers used:
  1438 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1439 ;; Tracked objects:
  1440 ;;		On entry : 0/0
  1441 ;;		On exit  : 0/0
  1442 ;;		Unchanged: 0/0
  1443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1444 ;;      Params:         1       0       0       0       0
  1445 ;;      Locals:         2       0       0       0       0
  1446 ;;      Temps:          5       0       0       0       0
  1447 ;;      Totals:         8       0       0       0       0
  1448 ;;Total ram usage:        8 bytes
  1449 ;; Hardware stack levels used: 1
  1450 ;; This function calls:
  1451 ;;		Nothing
  1452 ;; This function is called by:
  1453 ;;		_gpio_pin_initialize
  1454 ;;		_motor_turn_right
  1455 ;;		_motor_turn_left
  1456 ;;		_motor_turn_off
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460     070E                     _gpio_pin_write_logic:	
  1461                           ;psect for function _gpio_pin_write_logic
  1462                           
  1463                           
  1464                           ;incstack = 0
  1465                           ; Regs used in _gpio_pin_write_logic: [wreg-fsr0h+status,2+status,0+btemp+1]
  1466                           ;gpio_pin_write_logic@pin stored from wreg
  1467     070E  00F7               	movwf	gpio_pin_write_logic@pin
  1468     070F                     l1463:
  1469                           
  1470                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 51:     uint8 ret = 0x00;
  1471     070F  01F6               	clrf	gpio_pin_write_logic@ret
  1472     0710                     l1465:
  1473                           
  1474                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 52:     if (pin == ((void*)0)) {
  1475     0710  0877               	movf	gpio_pin_write_logic@pin,w
  1476     0711  1D03               	btfss	3,2
  1477     0712  2F14               	goto	u1821
  1478     0713  2F15               	goto	u1820
  1479     0714                     u1821:
  1480     0714  2F18               	goto	l1469
  1481     0715                     u1820:
  1482     0715                     l1467:
  1483                           
  1484                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 53:         ret = 0x01;
  1485     0715  01F6               	clrf	gpio_pin_write_logic@ret
  1486     0716  0AF6               	incf	gpio_pin_write_logic@ret,f
  1487                           
  1488                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 54:     } else {
  1489     0717  2FEC               	goto	l1497
  1490     0718                     l1469:
  1491                           
  1492                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 55:         if ((pin->port == PORTA_INDEX && pin->pin < 6)
      +                           || (pin->port == PORTB_INDEX && pin->pin < 8) || (pin->port == PORTC_INDEX && pin->pin 
      +                          < 8) ||
  1493     0718  0877               	movf	gpio_pin_write_logic@pin,w
  1494     0719  0084               	movwf	4
  1495     071A  1383               	bcf	3,7	;select IRP bank0
  1496     071B  0800               	movf	0,w
  1497     071C  3907               	andlw	7
  1498     071D  3A00               	xorlw	0
  1499     071E  1D03               	skipz
  1500     071F  2F21               	goto	u1831
  1501     0720  2F22               	goto	u1830
  1502     0721                     u1831:
  1503     0721  2F30               	goto	l1473
  1504     0722                     u1830:
  1505     0722                     l1471:
  1506     0722  0877               	movf	gpio_pin_write_logic@pin,w
  1507     0723  0084               	movwf	4
  1508     0724  0C00               	rrf	0,w
  1509     0725  00F1               	movwf	??_gpio_pin_write_logic
  1510     0726  0CF1               	rrf	??_gpio_pin_write_logic,f
  1511     0727  0C71               	rrf	??_gpio_pin_write_logic,w
  1512     0728  3907               	andlw	7
  1513     0729  00F2               	movwf	??_gpio_pin_write_logic+1
  1514     072A  3006               	movlw	6
  1515     072B  0272               	subwf	??_gpio_pin_write_logic+1,w
  1516     072C  1C03               	skipc
  1517     072D  2F2F               	goto	u1841
  1518     072E  2F30               	goto	u1840
  1519     072F                     u1841:
  1520     072F  2FDC               	goto	l1495
  1521     0730                     u1840:
  1522     0730                     l1473:
  1523     0730  0877               	movf	gpio_pin_write_logic@pin,w
  1524     0731  0084               	movwf	4
  1525     0732  0800               	movf	0,w
  1526     0733  3907               	andlw	7
  1527     0734  3A01               	xorlw	1
  1528     0735  1D03               	skipz
  1529     0736  2F38               	goto	u1851
  1530     0737  2F39               	goto	u1850
  1531     0738                     u1851:
  1532     0738  2F47               	goto	l1477
  1533     0739                     u1850:
  1534     0739                     l1475:
  1535     0739  0877               	movf	gpio_pin_write_logic@pin,w
  1536     073A  0084               	movwf	4
  1537     073B  0C00               	rrf	0,w
  1538     073C  00F1               	movwf	??_gpio_pin_write_logic
  1539     073D  0CF1               	rrf	??_gpio_pin_write_logic,f
  1540     073E  0C71               	rrf	??_gpio_pin_write_logic,w
  1541     073F  3907               	andlw	7
  1542     0740  00F2               	movwf	??_gpio_pin_write_logic+1
  1543     0741  3008               	movlw	8
  1544     0742  0272               	subwf	??_gpio_pin_write_logic+1,w
  1545     0743  1C03               	skipc
  1546     0744  2F46               	goto	u1861
  1547     0745  2F47               	goto	u1860
  1548     0746                     u1861:
  1549     0746  2FDC               	goto	l1495
  1550     0747                     u1860:
  1551     0747                     l1477:
  1552     0747  0877               	movf	gpio_pin_write_logic@pin,w
  1553     0748  0084               	movwf	4
  1554     0749  0800               	movf	0,w
  1555     074A  3907               	andlw	7
  1556     074B  3A02               	xorlw	2
  1557     074C  1D03               	skipz
  1558     074D  2F4F               	goto	u1871
  1559     074E  2F50               	goto	u1870
  1560     074F                     u1871:
  1561     074F  2F5E               	goto	l1481
  1562     0750                     u1870:
  1563     0750                     l1479:
  1564     0750  0877               	movf	gpio_pin_write_logic@pin,w
  1565     0751  0084               	movwf	4
  1566     0752  0C00               	rrf	0,w
  1567     0753  00F1               	movwf	??_gpio_pin_write_logic
  1568     0754  0CF1               	rrf	??_gpio_pin_write_logic,f
  1569     0755  0C71               	rrf	??_gpio_pin_write_logic,w
  1570     0756  3907               	andlw	7
  1571     0757  00F2               	movwf	??_gpio_pin_write_logic+1
  1572     0758  3008               	movlw	8
  1573     0759  0272               	subwf	??_gpio_pin_write_logic+1,w
  1574     075A  1C03               	skipc
  1575     075B  2F5D               	goto	u1881
  1576     075C  2F5E               	goto	u1880
  1577     075D                     u1881:
  1578     075D  2FDC               	goto	l1495
  1579     075E                     u1880:
  1580     075E                     l1481:
  1581     075E  0877               	movf	gpio_pin_write_logic@pin,w
  1582     075F  0084               	movwf	4
  1583     0760  0800               	movf	0,w
  1584     0761  3907               	andlw	7
  1585     0762  3A03               	xorlw	3
  1586     0763  1D03               	skipz
  1587     0764  2F66               	goto	u1891
  1588     0765  2F67               	goto	u1890
  1589     0766                     u1891:
  1590     0766  2F75               	goto	l1485
  1591     0767                     u1890:
  1592     0767                     l1483:
  1593     0767  0877               	movf	gpio_pin_write_logic@pin,w
  1594     0768  0084               	movwf	4
  1595     0769  0C00               	rrf	0,w
  1596     076A  00F1               	movwf	??_gpio_pin_write_logic
  1597     076B  0CF1               	rrf	??_gpio_pin_write_logic,f
  1598     076C  0C71               	rrf	??_gpio_pin_write_logic,w
  1599     076D  3907               	andlw	7
  1600     076E  00F2               	movwf	??_gpio_pin_write_logic+1
  1601     076F  3008               	movlw	8
  1602     0770  0272               	subwf	??_gpio_pin_write_logic+1,w
  1603     0771  1C03               	skipc
  1604     0772  2F74               	goto	u1901
  1605     0773  2F75               	goto	u1900
  1606     0774                     u1901:
  1607     0774  2FDC               	goto	l1495
  1608     0775                     u1900:
  1609     0775                     l1485:
  1610     0775  0877               	movf	gpio_pin_write_logic@pin,w
  1611     0776  0084               	movwf	4
  1612     0777  0800               	movf	0,w
  1613     0778  3907               	andlw	7
  1614     0779  3A04               	xorlw	4
  1615     077A  1D03               	skipz
  1616     077B  2F7D               	goto	u1911
  1617     077C  2F7E               	goto	u1910
  1618     077D                     u1911:
  1619     077D  2F15               	goto	l1467
  1620     077E                     u1910:
  1621     077E                     l1487:
  1622     077E  0877               	movf	gpio_pin_write_logic@pin,w
  1623     077F  0084               	movwf	4
  1624     0780  0C00               	rrf	0,w
  1625     0781  00F1               	movwf	??_gpio_pin_write_logic
  1626     0782  0CF1               	rrf	??_gpio_pin_write_logic,f
  1627     0783  0C71               	rrf	??_gpio_pin_write_logic,w
  1628     0784  3907               	andlw	7
  1629     0785  00F2               	movwf	??_gpio_pin_write_logic+1
  1630     0786  3003               	movlw	3
  1631     0787  0272               	subwf	??_gpio_pin_write_logic+1,w
  1632     0788  1803               	skipnc
  1633     0789  2F8B               	goto	u1921
  1634     078A  2F8C               	goto	u1920
  1635     078B                     u1921:
  1636     078B  2F15               	goto	l1467
  1637     078C                     u1920:
  1638     078C  2FDC               	goto	l1495
  1639     078D                     l1489:
  1640                           
  1641                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 60:                     (*port_registers[pin->port] |= (0x
      +                          01 << pin->pin));
  1642     078D  3001               	movlw	1
  1643     078E  00F1               	movwf	??_gpio_pin_write_logic
  1644     078F  0877               	movf	gpio_pin_write_logic@pin,w
  1645     0790  0084               	movwf	4
  1646     0791  0C00               	rrf	0,w
  1647     0792  00F2               	movwf	??_gpio_pin_write_logic+1
  1648     0793  0CF2               	rrf	??_gpio_pin_write_logic+1,f
  1649     0794  0C72               	rrf	??_gpio_pin_write_logic+1,w
  1650     0795  3907               	andlw	7
  1651     0796  3E01               	addlw	1
  1652     0797  2F9A               	goto	u1934
  1653     0798                     u1935:
  1654     0798  1003               	clrc
  1655     0799  0DF1               	rlf	??_gpio_pin_write_logic,f
  1656     079A                     u1934:
  1657     079A  3EFF               	addlw	-1
  1658     079B  1D03               	skipz
  1659     079C  2F98               	goto	u1935
  1660     079D  0871               	movf	??_gpio_pin_write_logic,w
  1661     079E  00FF               	movwf	btemp+1
  1662     079F  0877               	movf	gpio_pin_write_logic@pin,w
  1663     07A0  0084               	movwf	4
  1664     07A1  0800               	movf	0,w
  1665     07A2  3907               	andlw	7
  1666     07A3  00F3               	movwf	??_gpio_pin_write_logic+2
  1667     07A4  0773               	addwf	??_gpio_pin_write_logic+2,w
  1668     07A5  3E20               	addlw	(low (_port_registers| 0))& (0+255)
  1669     07A6  0084               	movwf	4
  1670     07A7  0800               	movf	0,w
  1671     07A8  00F4               	movwf	??_gpio_pin_write_logic+3
  1672     07A9  0A84               	incf	4,f
  1673     07AA  0800               	movf	0,w
  1674     07AB  00F5               	movwf	??_gpio_pin_write_logic+4
  1675     07AC  0874               	movf	??_gpio_pin_write_logic+3,w
  1676     07AD  0084               	movwf	4
  1677     07AE  1783               	bsf	3,7
  1678     07AF  1C75               	btfss	??_gpio_pin_write_logic+4,0
  1679     07B0  1383               	bcf	3,7
  1680     07B1  087F               	movf	btemp+1,w
  1681     07B2  0480               	iorwf	0,f
  1682                           
  1683                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 61:                     break;
  1684     07B3  2FEC               	goto	l1497
  1685     07B4                     l1491:
  1686                           
  1687                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 63:                     (*port_registers[pin->port] &= ~(0
      +                          x01 << pin->pin));
  1688     07B4  3001               	movlw	1
  1689     07B5  00F1               	movwf	??_gpio_pin_write_logic
  1690     07B6  0877               	movf	gpio_pin_write_logic@pin,w
  1691     07B7  0084               	movwf	4
  1692     07B8  0C00               	rrf	0,w
  1693     07B9  00F2               	movwf	??_gpio_pin_write_logic+1
  1694     07BA  0CF2               	rrf	??_gpio_pin_write_logic+1,f
  1695     07BB  0C72               	rrf	??_gpio_pin_write_logic+1,w
  1696     07BC  3907               	andlw	7
  1697     07BD  3E01               	addlw	1
  1698     07BE  2FC1               	goto	u1944
  1699     07BF                     u1945:
  1700     07BF  1003               	clrc
  1701     07C0  0DF1               	rlf	??_gpio_pin_write_logic,f
  1702     07C1                     u1944:
  1703     07C1  3EFF               	addlw	-1
  1704     07C2  1D03               	skipz
  1705     07C3  2FBF               	goto	u1945
  1706     07C4  0871               	movf	??_gpio_pin_write_logic,w
  1707     07C5  3AFF               	xorlw	255
  1708     07C6  00FF               	movwf	btemp+1
  1709     07C7  0877               	movf	gpio_pin_write_logic@pin,w
  1710     07C8  0084               	movwf	4
  1711     07C9  0800               	movf	0,w
  1712     07CA  3907               	andlw	7
  1713     07CB  00F3               	movwf	??_gpio_pin_write_logic+2
  1714     07CC  0773               	addwf	??_gpio_pin_write_logic+2,w
  1715     07CD  3E20               	addlw	(low (_port_registers| 0))& (0+255)
  1716     07CE  0084               	movwf	4
  1717     07CF  0800               	movf	0,w
  1718     07D0  00F4               	movwf	??_gpio_pin_write_logic+3
  1719     07D1  0A84               	incf	4,f
  1720     07D2  0800               	movf	0,w
  1721     07D3  00F5               	movwf	??_gpio_pin_write_logic+4
  1722     07D4  0874               	movf	??_gpio_pin_write_logic+3,w
  1723     07D5  0084               	movwf	4
  1724     07D6  1783               	bsf	3,7
  1725     07D7  1C75               	btfss	??_gpio_pin_write_logic+4,0
  1726     07D8  1383               	bcf	3,7
  1727     07D9  087F               	movf	btemp+1,w
  1728     07DA  0580               	andwf	0,f
  1729                           
  1730                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 64:                     break;
  1731     07DB  2FEC               	goto	l1497
  1732     07DC                     l1495:
  1733     07DC  0870               	movf	gpio_pin_write_logic@logic,w
  1734     07DD  00F1               	movwf	??_gpio_pin_write_logic
  1735     07DE  01F2               	clrf	??_gpio_pin_write_logic+1
  1736                           
  1737                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1738                           ; Switch size 1, requested type "simple"
  1739                           ; Number of cases is 1, Range of values is 0 to 0
  1740                           ; switch strategies available:
  1741                           ; Name         Instructions Cycles
  1742                           ; simple_byte            4     3 (average)
  1743                           ; direct_byte           11     8 (fixed)
  1744                           ; jumptable            260     6 (fixed)
  1745                           ;	Chosen strategy is simple_byte
  1746     07DF  0872               	movf	??_gpio_pin_write_logic+1,w
  1747     07E0  3A00               	xorlw	0	; case 0
  1748     07E1  1903               	skipnz
  1749     07E2  2FE4               	goto	l1613
  1750     07E3  2FEC               	goto	l1497
  1751     07E4                     l1613:
  1752                           
  1753                           ; Switch size 1, requested type "simple"
  1754                           ; Number of cases is 2, Range of values is 0 to 1
  1755                           ; switch strategies available:
  1756                           ; Name         Instructions Cycles
  1757                           ; simple_byte            7     4 (average)
  1758                           ; direct_byte           14     8 (fixed)
  1759                           ; jumptable            260     6 (fixed)
  1760                           ;	Chosen strategy is simple_byte
  1761     07E4  0871               	movf	??_gpio_pin_write_logic,w
  1762     07E5  3A00               	xorlw	0	; case 0
  1763     07E6  1903               	skipnz
  1764     07E7  2FB4               	goto	l1491
  1765     07E8  3A01               	xorlw	1	; case 1
  1766     07E9  1903               	skipnz
  1767     07EA  2F8D               	goto	l1489
  1768     07EB  2FEC               	goto	l1497
  1769     07EC                     l1497:
  1770                           
  1771                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 70:     return ret;
  1772     07EC  0876               	movf	gpio_pin_write_logic@ret,w
  1773     07ED                     l85:
  1774     07ED  0008               	return
  1775     07EE                     __end_of_gpio_pin_write_logic:
  1776                           
  1777                           	psect	text9
  1778     0636                     __ptext9:	
  1779 ;; *************** function _gpio_pin_direction_initialize *****************
  1780 ;; Defined at:
  1781 ;;		line 12 in file "MCAL_LAYER/GPIO/mcal_gpio.c"
  1782 ;; Parameters:    Size  Location     Type
  1783 ;;  pin             1    wreg     PTR const struct .
  1784 ;;		 -> motor2$pins(2), motor1$pins(2), motor2(2), motor1(2), 
  1785 ;; Auto vars:     Size  Location     Type
  1786 ;;  pin             1    5[COMMON] PTR const struct .
  1787 ;;		 -> motor2$pins(2), motor1$pins(2), motor2(2), motor1(2), 
  1788 ;;  ret             1    0        unsigned char 
  1789 ;; Return value:  Size  Location     Type
  1790 ;;                  1    wreg      unsigned char 
  1791 ;; Registers used:
  1792 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1793 ;; Tracked objects:
  1794 ;;		On entry : 0/0
  1795 ;;		On exit  : 0/0
  1796 ;;		Unchanged: 0/0
  1797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1798 ;;      Params:         0       0       0       0       0
  1799 ;;      Locals:         1       0       0       0       0
  1800 ;;      Temps:          5       0       0       0       0
  1801 ;;      Totals:         6       0       0       0       0
  1802 ;;Total ram usage:        6 bytes
  1803 ;; Hardware stack levels used: 1
  1804 ;; This function calls:
  1805 ;;		Nothing
  1806 ;; This function is called by:
  1807 ;;		_gpio_pin_initialize
  1808 ;; This function uses a non-reentrant model
  1809 ;;
  1810                           
  1811     0636                     _gpio_pin_direction_initialize:	
  1812                           ;psect for function _gpio_pin_direction_initialize
  1813                           
  1814                           
  1815                           ;incstack = 0
  1816                           ; Regs used in _gpio_pin_direction_initialize: [wreg-fsr0h+status,2+status,0+btemp+1]
  1817                           ;gpio_pin_direction_initialize@pin stored from wreg
  1818     0636  00F5               	movwf	gpio_pin_direction_initialize@pin
  1819     0637                     l1429:
  1820     0637                     l1431:
  1821                           
  1822                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 14:     if (pin == ((void*)0)) {
  1823     0637  0875               	movf	gpio_pin_direction_initialize@pin,w
  1824     0638  1D03               	btfss	3,2
  1825     0639  2E3B               	goto	u1691
  1826     063A  2E3C               	goto	u1690
  1827     063B                     u1691:
  1828     063B  2E3D               	goto	l1435
  1829     063C                     u1690:
  1830     063C                     l1433:
  1831                           
  1832                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 16:     } else {
  1833     063C  2F0D               	goto	l45
  1834     063D                     l1435:
  1835                           
  1836                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 17:         if ((pin->port == PORTA_INDEX && pin->pin < 6)
      +                           || (pin->port == PORTB_INDEX && pin->pin < 8) || (pin->port == PORTC_INDEX && pin->pin 
      +                          < 8) ||
  1837     063D  0875               	movf	gpio_pin_direction_initialize@pin,w
  1838     063E  0084               	movwf	4
  1839     063F  1383               	bcf	3,7	;select IRP bank0
  1840     0640  0800               	movf	0,w
  1841     0641  3907               	andlw	7
  1842     0642  3A00               	xorlw	0
  1843     0643  1D03               	skipz
  1844     0644  2E46               	goto	u1701
  1845     0645  2E47               	goto	u1700
  1846     0646                     u1701:
  1847     0646  2E55               	goto	l1439
  1848     0647                     u1700:
  1849     0647                     l1437:
  1850     0647  0875               	movf	gpio_pin_direction_initialize@pin,w
  1851     0648  0084               	movwf	4
  1852     0649  0C00               	rrf	0,w
  1853     064A  00F0               	movwf	??_gpio_pin_direction_initialize
  1854     064B  0CF0               	rrf	??_gpio_pin_direction_initialize,f
  1855     064C  0C70               	rrf	??_gpio_pin_direction_initialize,w
  1856     064D  3907               	andlw	7
  1857     064E  00F1               	movwf	??_gpio_pin_direction_initialize+1
  1858     064F  3006               	movlw	6
  1859     0650  0271               	subwf	??_gpio_pin_direction_initialize+1,w
  1860     0651  1C03               	skipc
  1861     0652  2E54               	goto	u1711
  1862     0653  2E55               	goto	u1710
  1863     0654                     u1711:
  1864     0654  2F01               	goto	l1461
  1865     0655                     u1710:
  1866     0655                     l1439:
  1867     0655  0875               	movf	gpio_pin_direction_initialize@pin,w
  1868     0656  0084               	movwf	4
  1869     0657  0800               	movf	0,w
  1870     0658  3907               	andlw	7
  1871     0659  3A01               	xorlw	1
  1872     065A  1D03               	skipz
  1873     065B  2E5D               	goto	u1721
  1874     065C  2E5E               	goto	u1720
  1875     065D                     u1721:
  1876     065D  2E6C               	goto	l1443
  1877     065E                     u1720:
  1878     065E                     l1441:
  1879     065E  0875               	movf	gpio_pin_direction_initialize@pin,w
  1880     065F  0084               	movwf	4
  1881     0660  0C00               	rrf	0,w
  1882     0661  00F0               	movwf	??_gpio_pin_direction_initialize
  1883     0662  0CF0               	rrf	??_gpio_pin_direction_initialize,f
  1884     0663  0C70               	rrf	??_gpio_pin_direction_initialize,w
  1885     0664  3907               	andlw	7
  1886     0665  00F1               	movwf	??_gpio_pin_direction_initialize+1
  1887     0666  3008               	movlw	8
  1888     0667  0271               	subwf	??_gpio_pin_direction_initialize+1,w
  1889     0668  1C03               	skipc
  1890     0669  2E6B               	goto	u1731
  1891     066A  2E6C               	goto	u1730
  1892     066B                     u1731:
  1893     066B  2F01               	goto	l1461
  1894     066C                     u1730:
  1895     066C                     l1443:
  1896     066C  0875               	movf	gpio_pin_direction_initialize@pin,w
  1897     066D  0084               	movwf	4
  1898     066E  0800               	movf	0,w
  1899     066F  3907               	andlw	7
  1900     0670  3A02               	xorlw	2
  1901     0671  1D03               	skipz
  1902     0672  2E74               	goto	u1741
  1903     0673  2E75               	goto	u1740
  1904     0674                     u1741:
  1905     0674  2E83               	goto	l1447
  1906     0675                     u1740:
  1907     0675                     l1445:
  1908     0675  0875               	movf	gpio_pin_direction_initialize@pin,w
  1909     0676  0084               	movwf	4
  1910     0677  0C00               	rrf	0,w
  1911     0678  00F0               	movwf	??_gpio_pin_direction_initialize
  1912     0679  0CF0               	rrf	??_gpio_pin_direction_initialize,f
  1913     067A  0C70               	rrf	??_gpio_pin_direction_initialize,w
  1914     067B  3907               	andlw	7
  1915     067C  00F1               	movwf	??_gpio_pin_direction_initialize+1
  1916     067D  3008               	movlw	8
  1917     067E  0271               	subwf	??_gpio_pin_direction_initialize+1,w
  1918     067F  1C03               	skipc
  1919     0680  2E82               	goto	u1751
  1920     0681  2E83               	goto	u1750
  1921     0682                     u1751:
  1922     0682  2F01               	goto	l1461
  1923     0683                     u1750:
  1924     0683                     l1447:
  1925     0683  0875               	movf	gpio_pin_direction_initialize@pin,w
  1926     0684  0084               	movwf	4
  1927     0685  0800               	movf	0,w
  1928     0686  3907               	andlw	7
  1929     0687  3A03               	xorlw	3
  1930     0688  1D03               	skipz
  1931     0689  2E8B               	goto	u1761
  1932     068A  2E8C               	goto	u1760
  1933     068B                     u1761:
  1934     068B  2E9A               	goto	l1451
  1935     068C                     u1760:
  1936     068C                     l1449:
  1937     068C  0875               	movf	gpio_pin_direction_initialize@pin,w
  1938     068D  0084               	movwf	4
  1939     068E  0C00               	rrf	0,w
  1940     068F  00F0               	movwf	??_gpio_pin_direction_initialize
  1941     0690  0CF0               	rrf	??_gpio_pin_direction_initialize,f
  1942     0691  0C70               	rrf	??_gpio_pin_direction_initialize,w
  1943     0692  3907               	andlw	7
  1944     0693  00F1               	movwf	??_gpio_pin_direction_initialize+1
  1945     0694  3008               	movlw	8
  1946     0695  0271               	subwf	??_gpio_pin_direction_initialize+1,w
  1947     0696  1C03               	skipc
  1948     0697  2E99               	goto	u1771
  1949     0698  2E9A               	goto	u1770
  1950     0699                     u1771:
  1951     0699  2F01               	goto	l1461
  1952     069A                     u1770:
  1953     069A                     l1451:
  1954     069A  0875               	movf	gpio_pin_direction_initialize@pin,w
  1955     069B  0084               	movwf	4
  1956     069C  0800               	movf	0,w
  1957     069D  3907               	andlw	7
  1958     069E  3A04               	xorlw	4
  1959     069F  1D03               	skipz
  1960     06A0  2EA2               	goto	u1781
  1961     06A1  2EA3               	goto	u1780
  1962     06A2                     u1781:
  1963     06A2  2E3C               	goto	l1433
  1964     06A3                     u1780:
  1965     06A3                     l1453:
  1966     06A3  0875               	movf	gpio_pin_direction_initialize@pin,w
  1967     06A4  0084               	movwf	4
  1968     06A5  0C00               	rrf	0,w
  1969     06A6  00F0               	movwf	??_gpio_pin_direction_initialize
  1970     06A7  0CF0               	rrf	??_gpio_pin_direction_initialize,f
  1971     06A8  0C70               	rrf	??_gpio_pin_direction_initialize,w
  1972     06A9  3907               	andlw	7
  1973     06AA  00F1               	movwf	??_gpio_pin_direction_initialize+1
  1974     06AB  3003               	movlw	3
  1975     06AC  0271               	subwf	??_gpio_pin_direction_initialize+1,w
  1976     06AD  1803               	skipnc
  1977     06AE  2EB0               	goto	u1791
  1978     06AF  2EB1               	goto	u1790
  1979     06B0                     u1791:
  1980     06B0  2E3C               	goto	l1433
  1981     06B1                     u1790:
  1982     06B1  2F01               	goto	l1461
  1983     06B2                     l1455:
  1984                           
  1985                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 21:                     (*tris_registers[pin->port] &= ~(0
      +                          x01 << pin->pin));
  1986     06B2  3001               	movlw	1
  1987     06B3  00F0               	movwf	??_gpio_pin_direction_initialize
  1988     06B4  0875               	movf	gpio_pin_direction_initialize@pin,w
  1989     06B5  0084               	movwf	4
  1990     06B6  0C00               	rrf	0,w
  1991     06B7  00F1               	movwf	??_gpio_pin_direction_initialize+1
  1992     06B8  0CF1               	rrf	??_gpio_pin_direction_initialize+1,f
  1993     06B9  0C71               	rrf	??_gpio_pin_direction_initialize+1,w
  1994     06BA  3907               	andlw	7
  1995     06BB  3E01               	addlw	1
  1996     06BC  2EBF               	goto	u1804
  1997     06BD                     u1805:
  1998     06BD  1003               	clrc
  1999     06BE  0DF0               	rlf	??_gpio_pin_direction_initialize,f
  2000     06BF                     u1804:
  2001     06BF  3EFF               	addlw	-1
  2002     06C0  1D03               	skipz
  2003     06C1  2EBD               	goto	u1805
  2004     06C2  0870               	movf	??_gpio_pin_direction_initialize,w
  2005     06C3  3AFF               	xorlw	255
  2006     06C4  00FF               	movwf	btemp+1
  2007     06C5  0875               	movf	gpio_pin_direction_initialize@pin,w
  2008     06C6  0084               	movwf	4
  2009     06C7  0800               	movf	0,w
  2010     06C8  3907               	andlw	7
  2011     06C9  00F2               	movwf	??_gpio_pin_direction_initialize+2
  2012     06CA  0772               	addwf	??_gpio_pin_direction_initialize+2,w
  2013     06CB  3E2A               	addlw	(low (_tris_registers| 0))& (0+255)
  2014     06CC  0084               	movwf	4
  2015     06CD  0800               	movf	0,w
  2016     06CE  00F3               	movwf	??_gpio_pin_direction_initialize+3
  2017     06CF  0A84               	incf	4,f
  2018     06D0  0800               	movf	0,w
  2019     06D1  00F4               	movwf	??_gpio_pin_direction_initialize+4
  2020     06D2  0873               	movf	??_gpio_pin_direction_initialize+3,w
  2021     06D3  0084               	movwf	4
  2022     06D4  1783               	bsf	3,7
  2023     06D5  1C74               	btfss	??_gpio_pin_direction_initialize+4,0
  2024     06D6  1383               	bcf	3,7
  2025     06D7  087F               	movf	btemp+1,w
  2026     06D8  0580               	andwf	0,f
  2027                           
  2028                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 22:                     break;
  2029     06D9  2F0D               	goto	l45
  2030     06DA                     l1457:
  2031                           
  2032                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 24:                     (*tris_registers[pin->port] |= (0x
      +                          01 << pin->pin));
  2033     06DA  3001               	movlw	1
  2034     06DB  00F0               	movwf	??_gpio_pin_direction_initialize
  2035     06DC  0875               	movf	gpio_pin_direction_initialize@pin,w
  2036     06DD  0084               	movwf	4
  2037     06DE  0C00               	rrf	0,w
  2038     06DF  00F1               	movwf	??_gpio_pin_direction_initialize+1
  2039     06E0  0CF1               	rrf	??_gpio_pin_direction_initialize+1,f
  2040     06E1  0C71               	rrf	??_gpio_pin_direction_initialize+1,w
  2041     06E2  3907               	andlw	7
  2042     06E3  3E01               	addlw	1
  2043     06E4  2EE7               	goto	u1814
  2044     06E5                     u1815:
  2045     06E5  1003               	clrc
  2046     06E6  0DF0               	rlf	??_gpio_pin_direction_initialize,f
  2047     06E7                     u1814:
  2048     06E7  3EFF               	addlw	-1
  2049     06E8  1D03               	skipz
  2050     06E9  2EE5               	goto	u1815
  2051     06EA  0870               	movf	??_gpio_pin_direction_initialize,w
  2052     06EB  00FF               	movwf	btemp+1
  2053     06EC  0875               	movf	gpio_pin_direction_initialize@pin,w
  2054     06ED  0084               	movwf	4
  2055     06EE  0800               	movf	0,w
  2056     06EF  3907               	andlw	7
  2057     06F0  00F2               	movwf	??_gpio_pin_direction_initialize+2
  2058     06F1  0772               	addwf	??_gpio_pin_direction_initialize+2,w
  2059     06F2  3E2A               	addlw	(low (_tris_registers| 0))& (0+255)
  2060     06F3  0084               	movwf	4
  2061     06F4  0800               	movf	0,w
  2062     06F5  00F3               	movwf	??_gpio_pin_direction_initialize+3
  2063     06F6  0A84               	incf	4,f
  2064     06F7  0800               	movf	0,w
  2065     06F8  00F4               	movwf	??_gpio_pin_direction_initialize+4
  2066     06F9  0873               	movf	??_gpio_pin_direction_initialize+3,w
  2067     06FA  0084               	movwf	4
  2068     06FB  1783               	bsf	3,7
  2069     06FC  1C74               	btfss	??_gpio_pin_direction_initialize+4,0
  2070     06FD  1383               	bcf	3,7
  2071     06FE  087F               	movf	btemp+1,w
  2072     06FF  0480               	iorwf	0,f
  2073                           
  2074                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 25:                     break;
  2075     0700  2F0D               	goto	l45
  2076     0701                     l1461:
  2077     0701  0875               	movf	gpio_pin_direction_initialize@pin,w
  2078     0702  0084               	movwf	4
  2079     0703  0D00               	rlf	0,w
  2080     0704  0D00               	rlf	0,w
  2081     0705  3901               	andlw	1
  2082                           
  2083                           ; Switch size 1, requested type "simple"
  2084                           ; Number of cases is 2, Range of values is 0 to 1
  2085                           ; switch strategies available:
  2086                           ; Name         Instructions Cycles
  2087                           ; simple_byte            7     4 (average)
  2088                           ; direct_byte           14     8 (fixed)
  2089                           ; jumptable            260     6 (fixed)
  2090                           ;	Chosen strategy is simple_byte
  2091     0706  3A00               	xorlw	0	; case 0
  2092     0707  1903               	skipnz
  2093     0708  2EB2               	goto	l1455
  2094     0709  3A01               	xorlw	1	; case 1
  2095     070A  1903               	skipnz
  2096     070B  2EDA               	goto	l1457
  2097     070C  2F0D               	goto	l45
  2098     070D                     l45:
  2099     070D  0008               	return
  2100     070E                     __end_of_gpio_pin_direction_initialize:
  2101     007E                     btemp	set	126	;btemp
  2102     007E                     wtemp0	set	126
  2103                           
  2104                           	psect	config
  2105                           
  2106                           ;Config register CONFIG @ 0x2007
  2107                           ;	Oscillator Selection bits
  2108                           ;	FOSC = HS, HS oscillator
  2109                           ;	Watchdog Timer Enable bit
  2110                           ;	WDTE = OFF, WDT disabled
  2111                           ;	Power-up Timer Enable bit
  2112                           ;	PWRTE = ON, PWRT enabled
  2113                           ;	Brown-out Reset Enable bit
  2114                           ;	BOREN = ON, BOR enabled
  2115                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2116                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  2117                           ;	Data EEPROM Memory Code Protection bit
  2118                           ;	CPD = OFF, Data EEPROM code protection off
  2119                           ;	Flash Program Memory Write Enable bits
  2120                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  2121                           ;	In-Circuit Debugger Mode bit
  2122                           ;	DEBUG = 0x1, unprogrammed default
  2123                           ;	Flash Program Memory Code Protection bit
  2124                           ;	CP = OFF, Code protection off
  2125     2007                     	org	8199
  2126     2007  3F72               	dw	16242

Data Sizes:
    Strings     0
    Constant    0
    Data        24
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      3      27
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    gpio_pin_direction_initialize@pin	PTR const struct . size(1) Largest target is 2
		 -> motor1(BANK0[2]), motor1$pins(BANK0[2]), motor2(BANK0[2]), motor2$pins(BANK0[2]), 

    gpio_pin_initialize@pin	PTR const struct . size(1) Largest target is 2
		 -> motor1(BANK0[2]), motor1$pins(BANK0[2]), motor2(BANK0[2]), motor2$pins(BANK0[2]), 

    gpio_pin_write_logic@pin	PTR const struct . size(1) Largest target is 2
		 -> motor1(BANK0[2]), motor1$pins(BANK0[2]), motor2(BANK0[2]), motor2$pins(BANK0[2]), 

    motor_initialize@motor	PTR const struct . size(1) Largest target is 2
		 -> motor1(BANK0[2]), motor2(BANK0[2]), 

    motor_turn_left@motor	PTR const struct . size(1) Largest target is 2
		 -> motor1(BANK0[2]), motor2(BANK0[2]), 

    motor_turn_off@motor	PTR const struct . size(1) Largest target is 2
		 -> motor1(BANK0[2]), motor2(BANK0[2]), 

    motor_turn_right@motor	PTR const struct . size(1) Largest target is 2
		 -> motor1(BANK0[2]), motor2(BANK0[2]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTB(SFR0[1]), PORTC(SFR0[1]), PORTD(SFR0[1]), 
		 -> PORTE(SFR0[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(SFR1[1]), TRISB(SFR1[1]), TRISC(SFR1[1]), TRISD(SFR1[1]), 
		 -> TRISE(SFR1[1]), 


Critical Paths under _main in COMMON

    _motor_turn_right->_gpio_pin_write_logic
    _motor_turn_off->_gpio_pin_write_logic
    _motor_turn_left->_gpio_pin_write_logic
    _ecu_initialzie->_motor_initialize
    _motor_initialize->_gpio_pin_initialize
    _gpio_pin_initialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    9452
                                              0 BANK0      3     3      0
             _apllication_initilaize
                    _motor_turn_left
                     _motor_turn_off
                   _motor_turn_right
 ---------------------------------------------------------------------------------
 (1) _motor_turn_right                                     2     2      0    2052
                                              8 COMMON     2     2      0
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _motor_turn_off                                       2     2      0    2052
                                              8 COMMON     2     2      0
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _motor_turn_left                                      2     2      0    2052
                                              8 COMMON     2     2      0
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _apllication_initilaize                               0     0      0    3296
                     _ecu_initialzie
 ---------------------------------------------------------------------------------
 (2) _ecu_initialzie                                       0     0      0    3296
                   _motor_initialize
 ---------------------------------------------------------------------------------
 (3) _motor_initialize                                     2     2      0    3296
                                             12 COMMON     2     2      0
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_initialize                                  4     4      0    3012
                                              8 COMMON     4     4      0
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                 8     7      1    1768
                                              0 COMMON     8     7      1
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_initialize                        7     7      0     598
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _apllication_initilaize
     _ecu_initialzie
       _motor_initialize
         _gpio_pin_initialize
           _gpio_pin_direction_initialize
           _gpio_pin_write_logic
   _motor_turn_left
     _gpio_pin_write_logic
   _motor_turn_off
     _gpio_pin_write_logic
   _motor_turn_right
     _gpio_pin_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      3      1B       5       33.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      29      12        0.0%
ABS                  0      0      29       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Jul 08 22:58:14 2024

                                    pc 0002                                     l45 070D  
                                   l85 07ED                                     fsr 0004  
                                  l200 04AC                                    l214 0548  
                                  l224 0514                                    l209 04E3  
                                  l233 04B9                                    l138 0635  
                                  l219 052E                                    l194 0549  
                                  fsr0 0004                                    indf 0000  
                    ?_motor_initialize 0038                     ??_motor_initialize 007C  
                                 l1431 0637                                   l1511 05AD  
                                 l1441 065E                                   l1433 063C  
                                 l1521 05E5                                   l1513 05B7  
                                 l1505 05A4                                   l1451 069A  
                                 l1443 066C                                   l1435 063D  
                                 l1523 05F3                                   l1531 0621  
                                 l1515 05C5                                   l1507 05A5  
                                 l1453 06A3                                   l1445 0675  
                                 l1461 0701                                   l1437 0647  
                                 l1429 0637                                   l1613 07E4  
                                 l1525 05FC                                   l1517 05CE  
                                 l1533 0634                                   l1509 05AA  
                                 l1541 04D3                                   l1455 06B2  
                                 l1447 0683                                   l1439 0655  
                                 l1471 0722                                   l1463 070F  
                                 l1527 060A                                   l1519 05DC  
                                 l1543 04D4                                   l1551 0530  
                                 l1457 06DA                                   l1449 068C  
                                 l1481 075E                                   l1473 0730  
                                 l1465 0710                                   l1529 0613  
                                 l1537 04CE                                   l1561 0516  
                                 l1553 0530                                   l1491 07B4  
                                 l1483 0767                                   l1475 0739  
                                 l1467 0715                                   l1539 04CE  
                                 l1547 04AD                                   l1563 0516  
                                 l1571 04FD                                   l1555 0535  
                                 l1485 0775                                   l1477 0747  
                                 l1469 0718                                   l1549 04A7  
                                 l1565 051B                                   l1573 04FD  
                                 l1557 0536                                   l1581 0549  
                                 l1487 077E                                   l1479 0750  
                                 l1495 07DC                                   l1567 051C  
                                 l1575 0502                                   l1591 0590  
                                 l1583 055A                       ??_motor_turn_off 0078  
                                 l1489 078D                                   l1497 07EC  
                                 l1577 0503                                   l1585 0569  
                                 l1587 056F                                   l1589 0575  
                                 u2000 05E5                                   u2001 05E4  
                                 u2010 05F3                                   u2011 05F2  
                                 u2020 05FC                                   u2021 05FB  
                                 u2030 060A                                   u2031 0609  
                                 u2040 0613                                   u2041 0612  
                                 u2050 0621                                   u2051 0620  
                                 u2107 0562                                   u2060 04D3  
                                 u2061 04D2                                   u2117 057D  
                                 u2070 0535                                   u2071 0534  
                                 u2127 0598                                   u2080 051B  
                                 u2081 051A                                   u2090 0502  
                                 u2091 0501                                   u1700 0647  
                                 u1701 0646                                   u1710 0655  
                                 u1711 0654                                   u1720 065E  
                                 u1721 065D                                   u1730 066C  
                                 u1731 066B                                   u1804 06BF  
                                 u1740 0675                                   u1900 0775  
                                 u1820 0715                                   u1805 06BD  
                                 u1741 0674                                   u1901 0774  
                                 u1821 0714                                   u1814 06E7  
                                 u1750 0683                                   u1910 077E  
                                 u1830 0722                                   u1815 06E5  
                                 u1751 0682                                   u1911 077D  
                                 u1831 0721                                   u1760 068C  
                                 u1920 078C                                   u1840 0730  
                                 u1761 068B                                   u1921 078B  
                                 u1841 072F                                   u1770 069A  
                                 u1690 063C                                   u1850 0739  
                                 u1771 0699                                   u1691 063B  
                                 u1851 0738                                   u1780 06A3  
                                 u1860 0747                                   u1781 06A2  
                                 u1861 0746                                   u1790 06B1  
                                 u1934 079A                                   u1870 0750  
                                 u1950 05AA                                   u1791 06B0  
                                 u1935 0798                                   u1871 074F  
                                 u1951 05A9                                   u1944 07C1  
                                 u1880 075E                                   u1960 05B7  
                                 u1945 07BF                                   u1881 075D  
                                 u1961 05B6                                   u1890 0767  
                                 u1970 05C5                                   u1891 0766  
                                 u1971 05C4                                   u1980 05CE  
                                 u1981 05CD                                   u1990 05DC  
                                 u1991 05DB                                   _main 0549  
                                 btemp 007E                                   start 0000  
                 _gpio_pin_write_logic 070E                      ??_motor_turn_left 0078  
                                ?_main 0070                                  _PORTA 0005  
                                _PORTB 0006                                  _PORTC 0007  
                                _PORTD 0008                                  _PORTE 0009  
                                _TRISA 0085                                  _TRISB 0086  
                                _TRISC 0087                                  _TRISD 0088  
                                _TRISE 0089                                  pclath 000A  
                                status 0003                                  wtemp0 007E  
       ?_gpio_pin_direction_initialize 0070                        __initialization 07EE  
                         __end_of_main 05A3                  ?_gpio_pin_write_logic 0070  
                               ??_main 0038                      ?_motor_turn_right 0079  
                   ??_motor_turn_right 0078                                 _motor1 0036  
                               _motor2 0034                __end_of__initialization 07FC  
               ??_gpio_pin_write_logic 0071                         __pcstackCOMMON 0070  
                         __pidataBANK0 04E4                        _motor_turn_left 0515  
                           __pmaintext 0549                         _tris_registers 002A  
                  _gpio_pin_initialize 05A3                                __ptext1 052F  
                              __ptext2 04FC                                __ptext3 0515  
                              __ptext4 04A7                                __ptext5 04AD  
                              __ptext6 04CD                                __ptext7 05A3  
                              __ptext8 070E                                __ptext9 0636  
             ??_apllication_initilaize 007E        ??_gpio_pin_direction_initialize 0070  
                 ?_gpio_pin_initialize 0079                   end_of_initialization 07FC  
              __end_of_motor_turn_left 052F                  motor_turn_right@motor 0079  
                       _ecu_initialzie 04AD                  ??_gpio_pin_initialize 0078  
                     _motor_initialize 04CD                 __end_of_ecu_initialzie 04BA  
                  start_initialization 07EE  __end_of_gpio_pin_direction_initialize 070E  
        _gpio_pin_direction_initialize 0636                       ?_motor_turn_left 0079  
                           init_fetch0 04BA                            __pdataBANK0 0020  
                      ?_ecu_initialzie 0070                              ___latbits 0002  
                        __pcstackBANK0 0038                 _apllication_initilaize 04A7  
                 motor_turn_left@motor 0079                       _motor_turn_right 052F  
                       _motor_turn_off 04FC              gpio_pin_write_logic@logic 0070  
                  motor_initialize@ret 007C                 __end_of_motor_turn_off 0515  
     gpio_pin_direction_initialize@pin 0075               __end_of_motor_initialize 04E4  
               gpio_pin_initialize@pin 007B                 gpio_pin_initialize@ret 007A  
              gpio_pin_write_logic@pin 0077                gpio_pin_write_logic@ret 0076  
                      ?_motor_turn_off 0079            __end_of_gpio_pin_initialize 0636  
                  motor_turn_off@motor 0079                    motor_turn_right@ret 0078  
                     ??_ecu_initialzie 007E                  motor_initialize@motor 007D  
             __end_of_motor_turn_right 0549                               init_ram0 04BE  
         __end_of_gpio_pin_write_logic 07EE                ?_apllication_initilaize 0070  
                   motor_turn_left@ret 0078                      motor_turn_off@ret 0078  
                       _port_registers 0020         __end_of_apllication_initilaize 04AD  
