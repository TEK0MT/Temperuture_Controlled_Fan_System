

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Jul 14 10:26:21 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2,group=3
    35                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text21,local,class=CODE,merge=1,delta=2,group=3
    38                           	psect	text22,local,class=CODE,merge=1,delta=2,group=3
    39                           	psect	text23,local,class=CODE,merge=1,delta=2,group=3
    40                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2,group=3
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    44                           	dabs	1,0x7E,2
    45     0000                     
    46                           ; Generated 12/10/2023 GMT
    47                           ; 
    48                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution. Publication is not required when
    62                           ;        this file is used in an embedded application.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F877A Definitions
    78                           ; 
    79                           ; SFR Addresses
    80     0000                     	;# 
    81     0001                     	;# 
    82     0002                     	;# 
    83     0003                     	;# 
    84     0004                     	;# 
    85     0005                     	;# 
    86     0006                     	;# 
    87     0007                     	;# 
    88     0008                     	;# 
    89     0009                     	;# 
    90     000A                     	;# 
    91     000B                     	;# 
    92     000C                     	;# 
    93     000D                     	;# 
    94     000E                     	;# 
    95     000E                     	;# 
    96     000F                     	;# 
    97     0010                     	;# 
    98     0011                     	;# 
    99     0012                     	;# 
   100     0013                     	;# 
   101     0014                     	;# 
   102     0015                     	;# 
   103     0015                     	;# 
   104     0016                     	;# 
   105     0017                     	;# 
   106     0018                     	;# 
   107     0019                     	;# 
   108     001A                     	;# 
   109     001B                     	;# 
   110     001B                     	;# 
   111     001C                     	;# 
   112     001D                     	;# 
   113     001E                     	;# 
   114     001F                     	;# 
   115     0081                     	;# 
   116     0085                     	;# 
   117     0086                     	;# 
   118     0087                     	;# 
   119     0088                     	;# 
   120     0089                     	;# 
   121     008C                     	;# 
   122     008D                     	;# 
   123     008E                     	;# 
   124     0091                     	;# 
   125     0092                     	;# 
   126     0093                     	;# 
   127     0094                     	;# 
   128     0098                     	;# 
   129     0099                     	;# 
   130     009C                     	;# 
   131     009D                     	;# 
   132     009E                     	;# 
   133     009F                     	;# 
   134     010C                     	;# 
   135     010D                     	;# 
   136     010E                     	;# 
   137     010F                     	;# 
   138     018C                     	;# 
   139     018D                     	;# 
   140     0000                     	;# 
   141     0001                     	;# 
   142     0002                     	;# 
   143     0003                     	;# 
   144     0004                     	;# 
   145     0005                     	;# 
   146     0006                     	;# 
   147     0007                     	;# 
   148     0008                     	;# 
   149     0009                     	;# 
   150     000A                     	;# 
   151     000B                     	;# 
   152     000C                     	;# 
   153     000D                     	;# 
   154     000E                     	;# 
   155     000E                     	;# 
   156     000F                     	;# 
   157     0010                     	;# 
   158     0011                     	;# 
   159     0012                     	;# 
   160     0013                     	;# 
   161     0014                     	;# 
   162     0015                     	;# 
   163     0015                     	;# 
   164     0016                     	;# 
   165     0017                     	;# 
   166     0018                     	;# 
   167     0019                     	;# 
   168     001A                     	;# 
   169     001B                     	;# 
   170     001B                     	;# 
   171     001C                     	;# 
   172     001D                     	;# 
   173     001E                     	;# 
   174     001F                     	;# 
   175     0081                     	;# 
   176     0085                     	;# 
   177     0086                     	;# 
   178     0087                     	;# 
   179     0088                     	;# 
   180     0089                     	;# 
   181     008C                     	;# 
   182     008D                     	;# 
   183     008E                     	;# 
   184     0091                     	;# 
   185     0092                     	;# 
   186     0093                     	;# 
   187     0094                     	;# 
   188     0098                     	;# 
   189     0099                     	;# 
   190     009C                     	;# 
   191     009D                     	;# 
   192     009E                     	;# 
   193     009F                     	;# 
   194     010C                     	;# 
   195     010D                     	;# 
   196     010E                     	;# 
   197     010F                     	;# 
   198     018C                     	;# 
   199     018D                     	;# 
   200     0000                     	;# 
   201     0001                     	;# 
   202     0002                     	;# 
   203     0003                     	;# 
   204     0004                     	;# 
   205     0005                     	;# 
   206     0006                     	;# 
   207     0007                     	;# 
   208     0008                     	;# 
   209     0009                     	;# 
   210     000A                     	;# 
   211     000B                     	;# 
   212     000C                     	;# 
   213     000D                     	;# 
   214     000E                     	;# 
   215     000E                     	;# 
   216     000F                     	;# 
   217     0010                     	;# 
   218     0011                     	;# 
   219     0012                     	;# 
   220     0013                     	;# 
   221     0014                     	;# 
   222     0015                     	;# 
   223     0015                     	;# 
   224     0016                     	;# 
   225     0017                     	;# 
   226     0018                     	;# 
   227     0019                     	;# 
   228     001A                     	;# 
   229     001B                     	;# 
   230     001B                     	;# 
   231     001C                     	;# 
   232     001D                     	;# 
   233     001E                     	;# 
   234     001F                     	;# 
   235     0081                     	;# 
   236     0085                     	;# 
   237     0086                     	;# 
   238     0087                     	;# 
   239     0088                     	;# 
   240     0089                     	;# 
   241     008C                     	;# 
   242     008D                     	;# 
   243     008E                     	;# 
   244     0091                     	;# 
   245     0092                     	;# 
   246     0093                     	;# 
   247     0094                     	;# 
   248     0098                     	;# 
   249     0099                     	;# 
   250     009C                     	;# 
   251     009D                     	;# 
   252     009E                     	;# 
   253     009F                     	;# 
   254     010C                     	;# 
   255     010D                     	;# 
   256     010E                     	;# 
   257     010F                     	;# 
   258     018C                     	;# 
   259     018D                     	;# 
   260     0000                     	;# 
   261     0001                     	;# 
   262     0002                     	;# 
   263     0003                     	;# 
   264     0004                     	;# 
   265     0005                     	;# 
   266     0006                     	;# 
   267     0007                     	;# 
   268     0008                     	;# 
   269     0009                     	;# 
   270     000A                     	;# 
   271     000B                     	;# 
   272     000C                     	;# 
   273     000D                     	;# 
   274     000E                     	;# 
   275     000E                     	;# 
   276     000F                     	;# 
   277     0010                     	;# 
   278     0011                     	;# 
   279     0012                     	;# 
   280     0013                     	;# 
   281     0014                     	;# 
   282     0015                     	;# 
   283     0015                     	;# 
   284     0016                     	;# 
   285     0017                     	;# 
   286     0018                     	;# 
   287     0019                     	;# 
   288     001A                     	;# 
   289     001B                     	;# 
   290     001B                     	;# 
   291     001C                     	;# 
   292     001D                     	;# 
   293     001E                     	;# 
   294     001F                     	;# 
   295     0081                     	;# 
   296     0085                     	;# 
   297     0086                     	;# 
   298     0087                     	;# 
   299     0088                     	;# 
   300     0089                     	;# 
   301     008C                     	;# 
   302     008D                     	;# 
   303     008E                     	;# 
   304     0091                     	;# 
   305     0092                     	;# 
   306     0093                     	;# 
   307     0094                     	;# 
   308     0098                     	;# 
   309     0099                     	;# 
   310     009C                     	;# 
   311     009D                     	;# 
   312     009E                     	;# 
   313     009F                     	;# 
   314     010C                     	;# 
   315     010D                     	;# 
   316     010E                     	;# 
   317     010F                     	;# 
   318     018C                     	;# 
   319     018D                     	;# 
   320     0000                     	;# 
   321     0001                     	;# 
   322     0002                     	;# 
   323     0003                     	;# 
   324     0004                     	;# 
   325     0005                     	;# 
   326     0006                     	;# 
   327     0007                     	;# 
   328     0008                     	;# 
   329     0009                     	;# 
   330     000A                     	;# 
   331     000B                     	;# 
   332     000C                     	;# 
   333     000D                     	;# 
   334     000E                     	;# 
   335     000E                     	;# 
   336     000F                     	;# 
   337     0010                     	;# 
   338     0011                     	;# 
   339     0012                     	;# 
   340     0013                     	;# 
   341     0014                     	;# 
   342     0015                     	;# 
   343     0015                     	;# 
   344     0016                     	;# 
   345     0017                     	;# 
   346     0018                     	;# 
   347     0019                     	;# 
   348     001A                     	;# 
   349     001B                     	;# 
   350     001B                     	;# 
   351     001C                     	;# 
   352     001D                     	;# 
   353     001E                     	;# 
   354     001F                     	;# 
   355     0081                     	;# 
   356     0085                     	;# 
   357     0086                     	;# 
   358     0087                     	;# 
   359     0088                     	;# 
   360     0089                     	;# 
   361     008C                     	;# 
   362     008D                     	;# 
   363     008E                     	;# 
   364     0091                     	;# 
   365     0092                     	;# 
   366     0093                     	;# 
   367     0094                     	;# 
   368     0098                     	;# 
   369     0099                     	;# 
   370     009C                     	;# 
   371     009D                     	;# 
   372     009E                     	;# 
   373     009F                     	;# 
   374     010C                     	;# 
   375     010D                     	;# 
   376     010E                     	;# 
   377     010F                     	;# 
   378     018C                     	;# 
   379     018D                     	;# 
   380     0000                     	;# 
   381     0001                     	;# 
   382     0002                     	;# 
   383     0003                     	;# 
   384     0004                     	;# 
   385     0005                     	;# 
   386     0006                     	;# 
   387     0007                     	;# 
   388     0008                     	;# 
   389     0009                     	;# 
   390     000A                     	;# 
   391     000B                     	;# 
   392     000C                     	;# 
   393     000D                     	;# 
   394     000E                     	;# 
   395     000E                     	;# 
   396     000F                     	;# 
   397     0010                     	;# 
   398     0011                     	;# 
   399     0012                     	;# 
   400     0013                     	;# 
   401     0014                     	;# 
   402     0015                     	;# 
   403     0015                     	;# 
   404     0016                     	;# 
   405     0017                     	;# 
   406     0018                     	;# 
   407     0019                     	;# 
   408     001A                     	;# 
   409     001B                     	;# 
   410     001B                     	;# 
   411     001C                     	;# 
   412     001D                     	;# 
   413     001E                     	;# 
   414     001F                     	;# 
   415     0081                     	;# 
   416     0085                     	;# 
   417     0086                     	;# 
   418     0087                     	;# 
   419     0088                     	;# 
   420     0089                     	;# 
   421     008C                     	;# 
   422     008D                     	;# 
   423     008E                     	;# 
   424     0091                     	;# 
   425     0092                     	;# 
   426     0093                     	;# 
   427     0094                     	;# 
   428     0098                     	;# 
   429     0099                     	;# 
   430     009C                     	;# 
   431     009D                     	;# 
   432     009E                     	;# 
   433     009F                     	;# 
   434     010C                     	;# 
   435     010D                     	;# 
   436     010E                     	;# 
   437     010F                     	;# 
   438     018C                     	;# 
   439     018D                     	;# 
   440     0000                     	;# 
   441     0001                     	;# 
   442     0002                     	;# 
   443     0003                     	;# 
   444     0004                     	;# 
   445     0005                     	;# 
   446     0006                     	;# 
   447     0007                     	;# 
   448     0008                     	;# 
   449     0009                     	;# 
   450     000A                     	;# 
   451     000B                     	;# 
   452     000C                     	;# 
   453     000D                     	;# 
   454     000E                     	;# 
   455     000E                     	;# 
   456     000F                     	;# 
   457     0010                     	;# 
   458     0011                     	;# 
   459     0012                     	;# 
   460     0013                     	;# 
   461     0014                     	;# 
   462     0015                     	;# 
   463     0015                     	;# 
   464     0016                     	;# 
   465     0017                     	;# 
   466     0018                     	;# 
   467     0019                     	;# 
   468     001A                     	;# 
   469     001B                     	;# 
   470     001B                     	;# 
   471     001C                     	;# 
   472     001D                     	;# 
   473     001E                     	;# 
   474     001F                     	;# 
   475     0081                     	;# 
   476     0085                     	;# 
   477     0086                     	;# 
   478     0087                     	;# 
   479     0088                     	;# 
   480     0089                     	;# 
   481     008C                     	;# 
   482     008D                     	;# 
   483     008E                     	;# 
   484     0091                     	;# 
   485     0092                     	;# 
   486     0093                     	;# 
   487     0094                     	;# 
   488     0098                     	;# 
   489     0099                     	;# 
   490     009C                     	;# 
   491     009D                     	;# 
   492     009E                     	;# 
   493     009F                     	;# 
   494     010C                     	;# 
   495     010D                     	;# 
   496     010E                     	;# 
   497     010F                     	;# 
   498     018C                     	;# 
   499     018D                     	;# 
   500                           
   501                           	psect	idataBANK0
   502     0FB7                     __pidataBANK0:
   503                           
   504                           ;initializer for _port_registers
   505     0FB7  3405               	retlw	5
   506     0FB8  3400               	retlw	0
   507     0FB9  3406               	retlw	6
   508     0FBA  3400               	retlw	0
   509     0FBB  3407               	retlw	7
   510     0FBC  3400               	retlw	0
   511     0FBD  3408               	retlw	8
   512     0FBE  3400               	retlw	0
   513     0FBF  3409               	retlw	9
   514     0FC0  3400               	retlw	0
   515                           
   516                           ;initializer for _motor2
   517     0FC1  3411               	retlw	17
   518     0FC2  3419               	retlw	25
   519                           
   520                           ;initializer for _motor1
   521     0FC3  3401               	retlw	1
   522     0FC4  3409               	retlw	9
   523                           
   524                           ;initializer for _pin8
   525     0FC5  343B               	retlw	59
   526                           
   527                           ;initializer for _pin7
   528     0FC6  3433               	retlw	51
   529                           
   530                           ;initializer for _pin6
   531     0FC7  342B               	retlw	43
   532                           
   533                           ;initializer for _pin5
   534     0FC8  3423               	retlw	35
   535                           
   536                           ;initializer for _pin4
   537     0FC9  341B               	retlw	27
   538                           
   539                           ;initializer for _pin3
   540     0FCA  3413               	retlw	19
   541                           
   542                           ;initializer for _pin2
   543     0FCB  340B               	retlw	11
   544                           
   545                           ;initializer for _pin1
   546     0FCC  3403               	retlw	3
   547                           
   548                           	psect	idataBANK1
   549     0F83                     __pidataBANK1:
   550                           
   551                           ;initializer for _tris_registers
   552     0F83  3485               	retlw	133
   553     0F84  3400               	retlw	0
   554     0F85  3486               	retlw	134
   555     0F86  3400               	retlw	0
   556     0F87  3487               	retlw	135
   557     0F88  3400               	retlw	0
   558     0F89  3488               	retlw	136
   559     0F8A  3400               	retlw	0
   560     0F8B  3489               	retlw	137
   561     0F8C  3400               	retlw	0
   562                           
   563                           ;initializer for _lcd
   564     0F8D  3402               	retlw	2
   565     0F8E  340A               	retlw	10
   566     0F8F  3412               	retlw	18
   567     0F90  341A               	retlw	26
   568     0F91  3422               	retlw	34
   569     0F92  342A               	retlw	42
   570                           
   571                           	psect	strings
   572     0800                     __pstrings:
   573     0800                     stringtab:
   574     0800                     __stringtab:
   575     0800                     stringcode:	
   576                           ;	String table - string pointers are 1 byte each
   577                           
   578     0800                     stringdir:
   579     0800  3008               	movlw	high stringdir
   580     0801  008A               	movwf	10
   581     0802  0804               	movf	4,w
   582     0803  0A84               	incf	4,f
   583     0804  0782               	addwf	2,f
   584     0805                     __stringbase:
   585     0805  3400               	retlw	0
   586     0806                     __end_of__stringtab:
   587     0806                     _customChar:
   588     0806  3400               	retlw	0
   589     0807  340E               	retlw	14
   590     0808  3411               	retlw	17
   591     0809  3411               	retlw	17
   592     080A  340E               	retlw	14
   593     080B  3400               	retlw	0
   594     080C  3400               	retlw	0
   595     080D  3400               	retlw	0
   596     080E                     __end_of_customChar:
   597     0009                     _PORTE	set	9
   598     0008                     _PORTD	set	8
   599     0007                     _PORTC	set	7
   600     0006                     _PORTB	set	6
   601     0005                     _PORTA	set	5
   602     0089                     _TRISE	set	137
   603     0088                     _TRISD	set	136
   604     0087                     _TRISC	set	135
   605     0086                     _TRISB	set	134
   606     0085                     _TRISA	set	133
   607     080E                     STR_1:
   608     080E  3425               	retlw	37	;'%'
   609     080F  3469               	retlw	105	;'i'
   610     0810  3400               	retlw	0
   611     080E                     
   612                           	psect	cinit
   613     07D4                     start_initialization:	
   614                           ; #config settings
   615                           
   616     07D4                     __initialization:
   617                           
   618                           ; Initialize objects allocated to BANK1
   619     07D4  1383               	bcf	3,7	;select IRP bank0
   620     07D5  30D0               	movlw	low (__pdataBANK1+16)
   621     07D6  00FD               	movwf	btemp+-1
   622     07D7  300F               	movlw	high __pidataBANK1
   623     07D8  00FE               	movwf	btemp
   624     07D9  3083               	movlw	low __pidataBANK1
   625     07DA  00FF               	movwf	btemp+1
   626     07DB  30C0               	movlw	low __pdataBANK1
   627     07DC  0084               	movwf	4
   628     07DD  120A  158A  27A8  120A  118A  	fcall	init_ram0
   629                           
   630                           ; Initialize objects allocated to BANK0
   631     07E2  3066               	movlw	low (__pdataBANK0+22)
   632     07E3  00FD               	movwf	btemp+-1
   633     07E4  300F               	movlw	high __pidataBANK0
   634     07E5  00FE               	movwf	btemp
   635     07E6  30B7               	movlw	low __pidataBANK0
   636     07E7  00FF               	movwf	btemp+1
   637     07E8  3050               	movlw	low __pdataBANK0
   638     07E9  0084               	movwf	4
   639     07EA  120A  158A  27A8  120A  118A  	fcall	init_ram0
   640                           
   641                           ; Clear objects allocated to BANK1
   642     07EF  30A0               	movlw	low __pbssBANK1
   643     07F0  0084               	movwf	4
   644     07F1  30C0               	movlw	low (__pbssBANK1+32)
   645     07F2  120A  158A  277B  120A  118A  	fcall	clear_ram0
   646                           
   647                           ; Clear objects allocated to BANK0
   648     07F7  01E6               	clrf	__pbssBANK0& (0+127)
   649     07F8  01E7               	clrf	(__pbssBANK0+1)& (0+127)
   650     07F9  01E8               	clrf	(__pbssBANK0+2)& (0+127)
   651     07FA  01E9               	clrf	(__pbssBANK0+3)& (0+127)
   652     07FB  01EA               	clrf	(__pbssBANK0+4)& (0+127)
   653     07FC                     end_of_initialization:	
   654                           ;End of C runtime variable initialization code
   655                           
   656     07FC                     __end_of__initialization:
   657     07FC  0183               	clrf	3
   658     07FD  120A  118A  2A87   	ljmp	_main	;jump to C main() function
   659                           
   660                           	psect	bssBANK0
   661     0066                     __pbssBANK0:
   662     0066                     _width:
   663     0066                     	ds	2
   664     0068                     _prec:
   665     0068                     	ds	2
   666     006A                     _flags:
   667     006A                     	ds	1
   668                           
   669                           	psect	dataBANK0
   670     0050                     __pdataBANK0:
   671     0050                     _port_registers:
   672     0050                     	ds	10
   673     005A                     _motor2:
   674     005A                     	ds	2
   675     005C                     _motor1:
   676     005C                     	ds	2
   677     005E                     _pin8:
   678     005E                     	ds	1
   679     005F                     _pin7:
   680     005F                     	ds	1
   681     0060                     _pin6:
   682     0060                     	ds	1
   683     0061                     _pin5:
   684     0061                     	ds	1
   685     0062                     _pin4:
   686     0062                     	ds	1
   687     0063                     _pin3:
   688     0063                     	ds	1
   689     0064                     _pin2:
   690     0064                     	ds	1
   691     0065                     _pin1:
   692     0065                     	ds	1
   693                           
   694                           	psect	bssBANK1
   695     00A0                     __pbssBANK1:
   696     00A0                     _dbuf:
   697     00A0                     	ds	32
   698                           
   699                           	psect	dataBANK1
   700     00C0                     __pdataBANK1:
   701     00C0                     _tris_registers:
   702     00C0                     	ds	10
   703     00CA                     _lcd:
   704     00CA                     	ds	6
   705                           
   706                           	psect	inittext
   707     0FA4                     init_fetch0:	
   708                           ;	Called with low address in FSR and high address in W
   709                           
   710     0FA4  087E               	movf	btemp,w
   711     0FA5  008A               	movwf	10
   712     0FA6  087F               	movf	btemp+1,w
   713     0FA7  0082               	movwf	2
   714     0FA8                     init_ram0:	
   715                           ;Called with:
   716                           ;	high address of idata address in btemp 
   717                           ;	low address of idata address in btemp+1 
   718                           ;	low address of data in FSR
   719                           ;	high address + 1 of data in btemp-1
   720                           
   721     0FA8  120A  158A  27A4  120A  158A  	fcall	init_fetch0
   722     0FAD  0080               	movwf	0
   723     0FAE  0A84               	incf	4,f
   724     0FAF  0804               	movf	4,w
   725     0FB0  067D               	xorwf	btemp+-1,w
   726     0FB1  1903               	btfsc	3,2
   727     0FB2  3400               	retlw	0
   728     0FB3  0AFF               	incf	btemp+1,f
   729     0FB4  1903               	btfsc	3,2
   730     0FB5  0AFE               	incf	btemp,f
   731     0FB6  2FA8               	goto	init_ram0
   732                           
   733                           	psect	clrtext
   734     0F7B                     clear_ram0:	
   735                           ;	Called with FSR containing the base address, and
   736                           ;	W with the last address+1
   737                           
   738     0F7B  0064               	clrwdt	;clear the watchdog before getting into this loop
   739     0F7C                     clrloop0:
   740     0F7C  0180               	clrf	0	;clear RAM location pointed to by FSR
   741     0F7D  0A84               	incf	4,f	;increment pointer
   742     0F7E  0604               	xorwf	4,w	;XOR with final address
   743     0F7F  1903               	btfsc	3,2	;have we reached the end yet?
   744     0F80  3400               	retlw	0	;all done for this memory range, return
   745     0F81  0604               	xorwf	4,w	;XOR again to restore value
   746     0F82  2F7C               	goto	clrloop0	;do the next byte
   747                           
   748                           	psect	cstackCOMMON
   749     0070                     __pcstackCOMMON:
   750     0070                     ?_gpio_pin_initialize:
   751     0070                     ?_gpio_pin_write_logic:	
   752                           ; 1 bytes @ 0x0
   753                           
   754     0070                     ?_lcd_4bits_initialize:	
   755                           ; 1 bytes @ 0x0
   756                           
   757     0070                     ?_apllication_initilaize:	
   758                           ; 1 bytes @ 0x0
   759                           
   760     0070                     ?_send_enable_signal:	
   761                           ; 1 bytes @ 0x0
   762                           
   763     0070                     ?_memset:	
   764                           ; 1 bytes @ 0x0
   765                           
   766     0070                     ?_putch:	
   767                           ; 1 bytes @ 0x0
   768                           
   769     0070                     ??_putch:	
   770                           ; 1 bytes @ 0x0
   771                           
   772     0070                     ?_motor_initialize:	
   773                           ; 1 bytes @ 0x0
   774                           
   775     0070                     ?_ecu_initialzie:	
   776                           ; 1 bytes @ 0x0
   777                           
   778     0070                     ?_gpio_pin_direction_initialize:	
   779                           ; 1 bytes @ 0x0
   780                           
   781     0070                     ??_gpio_pin_direction_initialize:	
   782                           ; 1 bytes @ 0x0
   783                           
   784     0070                     ?_fputc:	
   785                           ; 1 bytes @ 0x0
   786                           
   787     0070                     ?_main:	
   788                           ; 2 bytes @ 0x0
   789                           
   790     0070                     ?___awdiv:	
   791                           ; 2 bytes @ 0x0
   792                           
   793     0070                     ?___awmod:	
   794                           ; 2 bytes @ 0x0
   795                           
   796     0070                     gpio_pin_write_logic@logic:	
   797                           ; 2 bytes @ 0x0
   798                           
   799     0070                     putch@c:	
   800                           ; 1 bytes @ 0x0
   801                           
   802     0070                     ___awdiv@divisor:	
   803                           ; 1 bytes @ 0x0
   804                           
   805     0070                     ___awmod@divisor:	
   806                           ; 2 bytes @ 0x0
   807                           
   808     0070                     memset@c:	
   809                           ; 2 bytes @ 0x0
   810                           
   811     0070                     fputc@c:	
   812                           ; 2 bytes @ 0x0
   813                           
   814                           
   815                           ; 2 bytes @ 0x0
   816     0070                     	ds	1
   817     0071                     ??_gpio_pin_write_logic:
   818                           
   819                           ; 1 bytes @ 0x1
   820     0071                     	ds	1
   821     0072                     fputc@fp:
   822     0072                     ___awdiv@dividend:	
   823                           ; 1 bytes @ 0x2
   824                           
   825     0072                     ___awmod@dividend:	
   826                           ; 2 bytes @ 0x2
   827                           
   828     0072                     memset@n:	
   829                           ; 2 bytes @ 0x2
   830                           
   831                           
   832                           ; 2 bytes @ 0x2
   833     0072                     	ds	1
   834     0073                     ??_fputc:
   835                           
   836                           ; 1 bytes @ 0x3
   837     0073                     	ds	1
   838     0074                     ??_memset:
   839     0074                     ??___awdiv:	
   840                           ; 1 bytes @ 0x4
   841                           
   842     0074                     ??___awmod:	
   843                           ; 1 bytes @ 0x4
   844                           
   845     0074                     ___awdiv@counter:	
   846                           ; 1 bytes @ 0x4
   847                           
   848     0074                     ___awmod@counter:	
   849                           ; 1 bytes @ 0x4
   850                           
   851     0074                     memset@p:	
   852                           ; 1 bytes @ 0x4
   853                           
   854                           
   855                           ; 1 bytes @ 0x4
   856     0074                     	ds	1
   857     0075                     gpio_pin_direction_initialize@pin:
   858     0075                     ___awdiv@sign:	
   859                           ; 1 bytes @ 0x5
   860                           
   861     0075                     ___awmod@sign:	
   862                           ; 1 bytes @ 0x5
   863                           
   864     0075                     memset@dest:	
   865                           ; 1 bytes @ 0x5
   866                           
   867                           
   868                           ; 1 bytes @ 0x5
   869     0075                     	ds	1
   870     0076                     ?_abs:
   871     0076                     gpio_pin_write_logic@ret:	
   872                           ; 2 bytes @ 0x6
   873                           
   874     0076                     ___awdiv@quotient:	
   875                           ; 1 bytes @ 0x6
   876                           
   877     0076                     abs@a:	
   878                           ; 2 bytes @ 0x6
   879                           
   880                           
   881                           ; 2 bytes @ 0x6
   882     0076                     	ds	1
   883     0077                     gpio_pin_write_logic@pin:
   884                           
   885                           ; 1 bytes @ 0x7
   886     0077                     	ds	1
   887     0078                     ??_gpio_pin_initialize:
   888     0078                     ?_send_4bits:	
   889                           ; 1 bytes @ 0x8
   890                           
   891     0078                     ??_send_enable_signal:	
   892                           ; 1 bytes @ 0x8
   893                           
   894     0078                     ??_abs:	
   895                           ; 1 bytes @ 0x8
   896                           
   897     0078                     send_4bits@command:	
   898                           ; 1 bytes @ 0x8
   899                           
   900                           
   901                           ; 1 bytes @ 0x8
   902     0078                     	ds	1
   903     0079                     ??_send_4bits:
   904     0079                     send_enable_signal@ret:	
   905                           ; 1 bytes @ 0x9
   906                           
   907                           
   908                           ; 1 bytes @ 0x9
   909     0079                     	ds	1
   910     007A                     ?_vfpfcnvrt:
   911     007A                     gpio_pin_initialize@ret:	
   912                           ; 1 bytes @ 0xA
   913                           
   914     007A                     send_4bits@ret:	
   915                           ; 1 bytes @ 0xA
   916                           
   917     007A                     send_enable_signal@lcd:	
   918                           ; 1 bytes @ 0xA
   919                           
   920     007A                     vfpfcnvrt@fmt:	
   921                           ; 1 bytes @ 0xA
   922                           
   923                           
   924                           ; 1 bytes @ 0xA
   925     007A                     	ds	1
   926     007B                     gpio_pin_initialize@pin:
   927     007B                     send_4bits@lcd:	
   928                           ; 1 bytes @ 0xB
   929                           
   930     007B                     vfpfcnvrt@ap:	
   931                           ; 1 bytes @ 0xB
   932                           
   933                           
   934                           ; 1 bytes @ 0xB
   935     007B                     	ds	1
   936     007C                     ?_lcd_4bits_send_command:
   937     007C                     ??_motor_initialize:	
   938                           ; 1 bytes @ 0xC
   939                           
   940     007C                     ?_lcd_4bits_send_char:	
   941                           ; 1 bytes @ 0xC
   942                           
   943     007C                     ??_vfpfcnvrt:	
   944                           ; 1 bytes @ 0xC
   945                           
   946     007C                     motor_initialize@ret:	
   947                           ; 1 bytes @ 0xC
   948                           
   949     007C                     lcd_4bits_send_command@command:	
   950                           ; 1 bytes @ 0xC
   951                           
   952     007C                     lcd_4bits_send_char@data:	
   953                           ; 1 bytes @ 0xC
   954                           
   955                           
   956                           ; 1 bytes @ 0xC
   957     007C                     	ds	1
   958     007D                     ??_lcd_4bits_send_command:
   959     007D                     ??_lcd_4bits_send_char:	
   960                           ; 1 bytes @ 0xD
   961                           
   962     007D                     motor_initialize@motor:	
   963                           ; 1 bytes @ 0xD
   964                           
   965                           
   966                           ; 1 bytes @ 0xD
   967     007D                     	ds	1
   968     007E                     ??_apllication_initilaize:
   969     007E                     ??_Convert_uint32_to_string:	
   970                           ; 1 bytes @ 0xE
   971                           
   972     007E                     ??_lcd_4bits_send_string_pos:	
   973                           ; 1 bytes @ 0xE
   974                           
   975     007E                     ??_set_cursor:	
   976                           ; 1 bytes @ 0xE
   977                           
   978     007E                     ??_vfprintf:	
   979                           ; 1 bytes @ 0xE
   980                           
   981     007E                     ??_ecu_initialzie:	
   982                           ; 1 bytes @ 0xE
   983                           
   984     007E                     ??_lcd_4bits_send_char_pos:	
   985                           ; 1 bytes @ 0xE
   986                           
   987     007E                     ??_lcd_4bits_send_string:	
   988                           ; 1 bytes @ 0xE
   989                           
   990                           
   991                           	psect	cstackBANK0
   992     0020                     __pcstackBANK0:	
   993                           ; 1 bytes @ 0xE
   994                           
   995     0020                     lcd_4bits_send_command@ret:
   996     0020                     lcd_4bits_send_char@ret:	
   997                           ; 1 bytes @ 0x0
   998                           
   999     0020                     vfpfcnvrt@done:	
  1000                           ; 1 bytes @ 0x0
  1001                           
  1002                           
  1003                           ; 1 bytes @ 0x0
  1004     0020                     	ds	1
  1005     0021                     lcd_4bits_send_command@lcd:
  1006     0021                     lcd_4bits_send_char@lcd:	
  1007                           ; 1 bytes @ 0x1
  1008                           
  1009     0021                     vfpfcnvrt@fp:	
  1010                           ; 1 bytes @ 0x1
  1011                           
  1012                           
  1013                           ; 1 bytes @ 0x1
  1014     0021                     	ds	1
  1015     0022                     ??_lcd_4bits_initialize:
  1016     0022                     ?_set_cursor:	
  1017                           ; 1 bytes @ 0x2
  1018                           
  1019     0022                     ?_lcd_4bits_send_string:	
  1020                           ; 1 bytes @ 0x2
  1021                           
  1022     0022                     lcd_4bits_send_string@data:	
  1023                           ; 1 bytes @ 0x2
  1024                           
  1025     0022                     set_cursor@Row:	
  1026                           ; 1 bytes @ 0x2
  1027                           
  1028     0022                     vfpfcnvrt@cp:	
  1029                           ; 1 bytes @ 0x2
  1030                           
  1031                           
  1032                           ; 1 bytes @ 0x2
  1033     0022                     	ds	1
  1034     0023                     lcd_4bits_send_string@ret:
  1035     0023                     set_cursor@coloumn:	
  1036                           ; 1 bytes @ 0x3
  1037                           
  1038     0023                     vfpfcnvrt@convarg:	
  1039                           ; 1 bytes @ 0x3
  1040                           
  1041                           
  1042                           ; 4 bytes @ 0x3
  1043     0023                     	ds	1
  1044     0024                     lcd_4bits_send_string@lcd:
  1045     0024                     set_cursor@ret:	
  1046                           ; 1 bytes @ 0x4
  1047                           
  1048                           
  1049                           ; 1 bytes @ 0x4
  1050     0024                     	ds	1
  1051     0025                     lcd_4bits_initialize@counter:
  1052     0025                     set_cursor@lcd:	
  1053                           ; 1 bytes @ 0x5
  1054                           
  1055                           
  1056                           ; 1 bytes @ 0x5
  1057     0025                     	ds	1
  1058     0026                     ?_lcd_4bits_send_string_pos:
  1059     0026                     ?_lcd_4bits_send_char_pos:	
  1060                           ; 1 bytes @ 0x6
  1061                           
  1062     0026                     lcd_4bits_initialize@ret:	
  1063                           ; 1 bytes @ 0x6
  1064                           
  1065     0026                     lcd_4bits_send_char_pos@Row:	
  1066                           ; 1 bytes @ 0x6
  1067                           
  1068     0026                     lcd_4bits_send_string_pos@Row:	
  1069                           ; 1 bytes @ 0x6
  1070                           
  1071                           
  1072                           ; 1 bytes @ 0x6
  1073     0026                     	ds	1
  1074     0027                     lcd_4bits_initialize@lcd:
  1075     0027                     lcd_4bits_send_char_pos@coloumn:	
  1076                           ; 1 bytes @ 0x7
  1077                           
  1078     0027                     lcd_4bits_send_string_pos@coloumn:	
  1079                           ; 1 bytes @ 0x7
  1080                           
  1081     0027                     vfpfcnvrt@c:	
  1082                           ; 1 bytes @ 0x7
  1083                           
  1084                           
  1085                           ; 1 bytes @ 0x7
  1086     0027                     	ds	1
  1087     0028                     ?_vfprintf:
  1088     0028                     lcd_4bits_send_char_pos@data:	
  1089                           ; 2 bytes @ 0x8
  1090                           
  1091     0028                     lcd_4bits_send_string_pos@data:	
  1092                           ; 1 bytes @ 0x8
  1093                           
  1094     0028                     vfprintf@fmt:	
  1095                           ; 1 bytes @ 0x8
  1096                           
  1097                           
  1098                           ; 1 bytes @ 0x8
  1099     0028                     	ds	1
  1100     0029                     lcd_4bits_send_char_pos@ret:
  1101     0029                     lcd_4bits_send_string_pos@ret:	
  1102                           ; 1 bytes @ 0x9
  1103                           
  1104     0029                     vfprintf@ap:	
  1105                           ; 1 bytes @ 0x9
  1106                           
  1107                           
  1108                           ; 1 bytes @ 0x9
  1109     0029                     	ds	1
  1110     002A                     lcd_4bits_send_char_pos@lcd:
  1111     002A                     lcd_4bits_send_string_pos@lcd:	
  1112                           ; 1 bytes @ 0xA
  1113                           
  1114     002A                     vfprintf@fp:	
  1115                           ; 1 bytes @ 0xA
  1116                           
  1117                           
  1118                           ; 1 bytes @ 0xA
  1119     002A                     	ds	1
  1120     002B                     ?_lcd_4bit_custom_character:
  1121     002B                     lcd_4bit_custom_character@Row:	
  1122                           ; 1 bytes @ 0xB
  1123                           
  1124     002B                     vfprintf@cfmt:	
  1125                           ; 1 bytes @ 0xB
  1126                           
  1127                           
  1128                           ; 1 bytes @ 0xB
  1129     002B                     	ds	1
  1130     002C                     ?_sprintf:
  1131     002C                     lcd_4bit_custom_character@coloumns:	
  1132                           ; 2 bytes @ 0xC
  1133                           
  1134     002C                     sprintf@fmt:	
  1135                           ; 1 bytes @ 0xC
  1136                           
  1137                           
  1138                           ; 1 bytes @ 0xC
  1139     002C                     	ds	1
  1140     002D                     lcd_4bit_custom_character@chr:
  1141                           
  1142                           ; 1 bytes @ 0xD
  1143     002D                     	ds	1
  1144     002E                     lcd_4bit_custom_character@mempos:
  1145                           
  1146                           ; 1 bytes @ 0xE
  1147     002E                     	ds	1
  1148     002F                     ??_lcd_4bit_custom_character:
  1149     002F                     ??_sprintf:	
  1150                           ; 1 bytes @ 0xF
  1151                           
  1152                           
  1153                           ; 1 bytes @ 0xF
  1154     002F                     	ds	1
  1155     0030                     lcd_4bit_custom_character@counter:
  1156     0030                     sprintf@ap:	
  1157                           ; 1 bytes @ 0x10
  1158                           
  1159                           
  1160                           ; 1 bytes @ 0x10
  1161     0030                     	ds	1
  1162     0031                     lcd_4bit_custom_character@lcd:
  1163     0031                     sprintf@s:	
  1164                           ; 1 bytes @ 0x11
  1165                           
  1166                           
  1167                           ; 1 bytes @ 0x11
  1168     0031                     	ds	1
  1169     0032                     sprintf@f:
  1170                           
  1171                           ; 11 bytes @ 0x12
  1172     0032                     	ds	11
  1173     003D                     ?_Convert_uint32_to_string:
  1174     003D                     Convert_uint32_to_string@data:	
  1175                           ; 1 bytes @ 0x1D
  1176                           
  1177                           
  1178                           ; 2 bytes @ 0x1D
  1179     003D                     	ds	2
  1180     003F                     Convert_uint32_to_string@str:
  1181                           
  1182                           ; 1 bytes @ 0x1F
  1183     003F                     	ds	1
  1184     0040                     ??_main:
  1185                           
  1186                           ; 1 bytes @ 0x20
  1187     0040                     	ds	3
  1188     0043                     main@str:
  1189                           
  1190                           ; 11 bytes @ 0x23
  1191     0043                     	ds	11
  1192     004E                     main@counter:
  1193                           
  1194                           ; 2 bytes @ 0x2E
  1195     004E                     	ds	2
  1196                           
  1197                           	psect	maintext
  1198     0287                     __pmaintext:	
  1199 ;;
  1200 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1201 ;;
  1202 ;; *************** function _main *****************
  1203 ;; Defined at:
  1204 ;;		line 18 in file "Temperature_Controlled_Fan_System.c"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;		None
  1207 ;; Auto vars:     Size  Location     Type
  1208 ;;  str            11   35[BANK0 ] unsigned char [11]
  1209 ;;  counter         2   46[BANK0 ] unsigned int 
  1210 ;; Return value:  Size  Location     Type
  1211 ;;                  2  248[None  ] int 
  1212 ;; Registers used:
  1213 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1214 ;; Tracked objects:
  1215 ;;		On entry : B00/0
  1216 ;;		On exit  : 0/0
  1217 ;;		Unchanged: 0/0
  1218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1219 ;;      Params:         0       0       0       0       0
  1220 ;;      Locals:         0      13       0       0       0
  1221 ;;      Temps:          0       3       0       0       0
  1222 ;;      Totals:         0      16       0       0       0
  1223 ;;Total ram usage:       16 bytes
  1224 ;; Hardware stack levels required when called: 6
  1225 ;; This function calls:
  1226 ;;		_Convert_uint32_to_string
  1227 ;;		_apllication_initilaize
  1228 ;;		_lcd_4bit_custom_character
  1229 ;;		_lcd_4bits_send_string_pos
  1230 ;; This function is called by:
  1231 ;;		Startup code after reset
  1232 ;; This function uses a non-reentrant model
  1233 ;;
  1234                           
  1235     0287                     _main:	
  1236                           ;psect for function _main
  1237                           
  1238     0287                     l2345:	
  1239                           ;incstack = 0
  1240                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1241                           
  1242                           
  1243                           ;Temperature_Controlled_Fan_System.c: 19:     apllication_initilaize();
  1244     0287  120A  158A  2775  120A  118A  	fcall	_apllication_initilaize
  1245     028C                     l2347:
  1246                           
  1247                           ;Temperature_Controlled_Fan_System.c: 20:     uint32 counter = 0;
  1248     028C  1283               	bcf	3,5	;RP0=0, select bank0
  1249     028D  1303               	bcf	3,6	;RP1=0, select bank0
  1250     028E  01CE               	clrf	main@counter
  1251     028F  01CF               	clrf	main@counter+1
  1252     0290                     l2349:
  1253                           
  1254                           ;Temperature_Controlled_Fan_System.c: 52:     Convert_uint32_to_string(counter,str);
  1255     0290  084F               	movf	main@counter+1,w
  1256     0291  00BE               	movwf	Convert_uint32_to_string@data+1
  1257     0292  084E               	movf	main@counter,w
  1258     0293  00BD               	movwf	Convert_uint32_to_string@data
  1259     0294  3043               	movlw	(low (main@str| 0))& (0+255)
  1260     0295  00BF               	movwf	Convert_uint32_to_string@str
  1261     0296  120A  118A  2025  120A  118A  	fcall	_Convert_uint32_to_string
  1262     029B                     l2351:
  1263                           
  1264                           ;Temperature_Controlled_Fan_System.c: 53:     lcd_4bits_send_string_pos(&lcd,1,1,str);
  1265     029B  1283               	bcf	3,5	;RP0=0, select bank0
  1266     029C  1303               	bcf	3,6	;RP1=0, select bank0
  1267     029D  01A6               	clrf	lcd_4bits_send_string_pos@Row
  1268     029E  0AA6               	incf	lcd_4bits_send_string_pos@Row,f
  1269     029F  01A7               	clrf	lcd_4bits_send_string_pos@coloumn
  1270     02A0  0AA7               	incf	lcd_4bits_send_string_pos@coloumn,f
  1271     02A1  3043               	movlw	(low (main@str| 0))& (0+255)
  1272     02A2  00A8               	movwf	lcd_4bits_send_string_pos@data
  1273     02A3  30CA               	movlw	(low (_lcd| 0))& (0+255)
  1274     02A4  120A  118A  2086  120A  118A  	fcall	_lcd_4bits_send_string_pos
  1275     02A9                     l2353:
  1276                           
  1277                           ;Temperature_Controlled_Fan_System.c: 54:     lcd_4bit_custom_character(&lcd,1,10,custom
      +                          Char,0);
  1278     02A9  1283               	bcf	3,5	;RP0=0, select bank0
  1279     02AA  1303               	bcf	3,6	;RP1=0, select bank0
  1280     02AB  01AB               	clrf	lcd_4bit_custom_character@Row
  1281     02AC  0AAB               	incf	lcd_4bit_custom_character@Row,f
  1282     02AD  300A               	movlw	10
  1283     02AE  00AC               	movwf	lcd_4bit_custom_character@coloumns
  1284     02AF  3001               	movlw	(low ((_customChar-__stringbase)| (0+32768)))& (0+255)
  1285     02B0  00AD               	movwf	lcd_4bit_custom_character@chr
  1286     02B1  01AE               	clrf	lcd_4bit_custom_character@mempos
  1287     02B2  30CA               	movlw	(low (_lcd| 0))& (0+255)
  1288     02B3  120A  118A  21AE  120A  118A  	fcall	_lcd_4bit_custom_character
  1289     02B8                     l2355:
  1290                           
  1291                           ;Temperature_Controlled_Fan_System.c: 55:     _delay((unsigned long)((500)*(8000000UL/40
      +                          00.0)));
  1292     02B8  3006               	movlw	6
  1293     02B9  1283               	bcf	3,5	;RP0=0, select bank0
  1294     02BA  1303               	bcf	3,6	;RP1=0, select bank0
  1295     02BB  00C2               	movwf	??_main+2
  1296     02BC  3013               	movlw	19
  1297     02BD  00C1               	movwf	??_main+1
  1298     02BE  30AD               	movlw	173
  1299     02BF  00C0               	movwf	??_main
  1300     02C0                     u2777:
  1301     02C0  0BC0               	decfsz	??_main,f
  1302     02C1  2AC0               	goto	u2777
  1303     02C2  0BC1               	decfsz	??_main+1,f
  1304     02C3  2AC0               	goto	u2777
  1305     02C4  0BC2               	decfsz	??_main+2,f
  1306     02C5  2AC0               	goto	u2777
  1307     02C6                     l2357:
  1308                           
  1309                           ;Temperature_Controlled_Fan_System.c: 56:     counter++;
  1310     02C6  3001               	movlw	1
  1311     02C7  1283               	bcf	3,5	;RP0=0, select bank0
  1312     02C8  1303               	bcf	3,6	;RP1=0, select bank0
  1313     02C9  07CE               	addwf	main@counter,f
  1314     02CA  1803               	skipnc
  1315     02CB  0ACF               	incf	main@counter+1,f
  1316     02CC  3000               	movlw	0
  1317     02CD  07CF               	addwf	main@counter+1,f
  1318     02CE  2A90               	goto	l2349
  1319     02CF  120A  118A  2800   	ljmp	start
  1320     02D2                     __end_of_main:
  1321                           
  1322                           	psect	text1
  1323     0086                     __ptext1:	
  1324 ;; *************** function _lcd_4bits_send_string_pos *****************
  1325 ;; Defined at:
  1326 ;;		line 94 in file "ECU_LAYER/LCD/ecu_lcd.c"
  1327 ;; Parameters:    Size  Location     Type
  1328 ;;  lcd             1    wreg     PTR const struct .
  1329 ;;		 -> lcd(6), 
  1330 ;;  Row             1    6[BANK0 ] unsigned char 
  1331 ;;  coloumn         1    7[BANK0 ] unsigned char 
  1332 ;;  data            1    8[BANK0 ] PTR unsigned char 
  1333 ;;		 -> main@str(11), 
  1334 ;; Auto vars:     Size  Location     Type
  1335 ;;  lcd             1   10[BANK0 ] PTR const struct .
  1336 ;;		 -> lcd(6), 
  1337 ;;  ret             1    9[BANK0 ] unsigned char 
  1338 ;; Return value:  Size  Location     Type
  1339 ;;                  1    wreg      unsigned char 
  1340 ;; Registers used:
  1341 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1342 ;; Tracked objects:
  1343 ;;		On entry : 0/0
  1344 ;;		On exit  : 0/0
  1345 ;;		Unchanged: 0/0
  1346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1347 ;;      Params:         0       3       0       0       0
  1348 ;;      Locals:         0       2       0       0       0
  1349 ;;      Temps:          0       0       0       0       0
  1350 ;;      Totals:         0       5       0       0       0
  1351 ;;Total ram usage:        5 bytes
  1352 ;; Hardware stack levels used: 1
  1353 ;; Hardware stack levels required when called: 4
  1354 ;; This function calls:
  1355 ;;		_lcd_4bits_send_string
  1356 ;;		_set_cursor
  1357 ;; This function is called by:
  1358 ;;		_main
  1359 ;; This function uses a non-reentrant model
  1360 ;;
  1361                           
  1362     0086                     _lcd_4bits_send_string_pos:	
  1363                           ;psect for function _lcd_4bits_send_string_pos
  1364                           
  1365                           
  1366                           ;incstack = 0
  1367                           ; Regs used in _lcd_4bits_send_string_pos: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+
      +                          cstack]
  1368                           ;lcd_4bits_send_string_pos@lcd stored from wreg
  1369     0086  1283               	bcf	3,5	;RP0=0, select bank0
  1370     0087  1303               	bcf	3,6	;RP1=0, select bank0
  1371     0088  00AA               	movwf	lcd_4bits_send_string_pos@lcd
  1372     0089                     l2131:
  1373     0089                     l2133:
  1374                           
  1375                           ;ECU_LAYER/LCD/ecu_lcd.c: 96:     if(lcd == ((void*)0)){
  1376     0089  082A               	movf	lcd_4bits_send_string_pos@lcd,w
  1377     008A  1D03               	btfss	3,2
  1378     008B  288D               	goto	u2271
  1379     008C  288E               	goto	u2270
  1380     008D                     u2271:
  1381     008D  288F               	goto	l2137
  1382     008E                     u2270:
  1383     008E                     l2135:
  1384                           
  1385                           ;ECU_LAYER/LCD/ecu_lcd.c: 98:     }
  1386     008E  28A7               	goto	l308
  1387     008F                     l2137:
  1388                           
  1389                           ;ECU_LAYER/LCD/ecu_lcd.c: 100:         ret = set_cursor(lcd,Row,coloumn);
  1390     008F  0826               	movf	lcd_4bits_send_string_pos@Row,w
  1391     0090  00A2               	movwf	set_cursor@Row
  1392     0091  0827               	movf	lcd_4bits_send_string_pos@coloumn,w
  1393     0092  00A3               	movwf	set_cursor@coloumn
  1394     0093  082A               	movf	lcd_4bits_send_string_pos@lcd,w
  1395     0094  120A  118A  20F4  120A  118A  	fcall	_set_cursor
  1396     0099  1283               	bcf	3,5	;RP0=0, select bank0
  1397     009A  1303               	bcf	3,6	;RP1=0, select bank0
  1398     009B  00A9               	movwf	lcd_4bits_send_string_pos@ret
  1399                           
  1400                           ;ECU_LAYER/LCD/ecu_lcd.c: 101:         ret = lcd_4bits_send_string(lcd,data);
  1401     009C  0828               	movf	lcd_4bits_send_string_pos@data,w
  1402     009D  00A2               	movwf	lcd_4bits_send_string@data
  1403     009E  082A               	movf	lcd_4bits_send_string_pos@lcd,w
  1404     009F  120A  118A  20CD  120A  118A  	fcall	_lcd_4bits_send_string
  1405     00A4  1283               	bcf	3,5	;RP0=0, select bank0
  1406     00A5  1303               	bcf	3,6	;RP1=0, select bank0
  1407     00A6  00A9               	movwf	lcd_4bits_send_string_pos@ret
  1408     00A7                     l308:
  1409     00A7  0008               	return
  1410     00A8                     __end_of_lcd_4bits_send_string_pos:
  1411                           
  1412                           	psect	text2
  1413     00CD                     __ptext2:	
  1414 ;; *************** function _lcd_4bits_send_string *****************
  1415 ;; Defined at:
  1416 ;;		line 82 in file "ECU_LAYER/LCD/ecu_lcd.c"
  1417 ;; Parameters:    Size  Location     Type
  1418 ;;  lcd             1    wreg     PTR const struct .
  1419 ;;		 -> lcd(6), 
  1420 ;;  data            1    2[BANK0 ] PTR unsigned char 
  1421 ;;		 -> main@str(11), 
  1422 ;; Auto vars:     Size  Location     Type
  1423 ;;  lcd             1    4[BANK0 ] PTR const struct .
  1424 ;;		 -> lcd(6), 
  1425 ;;  ret             1    3[BANK0 ] unsigned char 
  1426 ;; Return value:  Size  Location     Type
  1427 ;;                  1    wreg      unsigned char 
  1428 ;; Registers used:
  1429 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1430 ;; Tracked objects:
  1431 ;;		On entry : 0/0
  1432 ;;		On exit  : 0/0
  1433 ;;		Unchanged: 0/0
  1434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1435 ;;      Params:         0       1       0       0       0
  1436 ;;      Locals:         0       2       0       0       0
  1437 ;;      Temps:          0       0       0       0       0
  1438 ;;      Totals:         0       3       0       0       0
  1439 ;;Total ram usage:        3 bytes
  1440 ;; Hardware stack levels used: 1
  1441 ;; Hardware stack levels required when called: 3
  1442 ;; This function calls:
  1443 ;;		_lcd_4bits_send_char
  1444 ;; This function is called by:
  1445 ;;		_lcd_4bits_send_string_pos
  1446 ;; This function uses a non-reentrant model
  1447 ;;
  1448                           
  1449     00CD                     _lcd_4bits_send_string:	
  1450                           ;psect for function _lcd_4bits_send_string
  1451                           
  1452                           
  1453                           ;incstack = 0
  1454                           ; Regs used in _lcd_4bits_send_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  1455                           ;lcd_4bits_send_string@lcd stored from wreg
  1456     00CD  1283               	bcf	3,5	;RP0=0, select bank0
  1457     00CE  1303               	bcf	3,6	;RP1=0, select bank0
  1458     00CF  00A4               	movwf	lcd_4bits_send_string@lcd
  1459     00D0                     l2091:
  1460                           
  1461                           ;ECU_LAYER/LCD/ecu_lcd.c: 83:     uint8 ret = 0x00;
  1462     00D0  01A3               	clrf	lcd_4bits_send_string@ret
  1463     00D1                     l2093:
  1464                           
  1465                           ;ECU_LAYER/LCD/ecu_lcd.c: 84:     if(lcd == ((void*)0)){
  1466     00D1  0824               	movf	lcd_4bits_send_string@lcd,w
  1467     00D2  1D03               	btfss	3,2
  1468     00D3  28D5               	goto	u2241
  1469     00D4  28D6               	goto	u2240
  1470     00D5                     u2241:
  1471     00D5  28EA               	goto	l2101
  1472     00D6                     u2240:
  1473     00D6                     l2095:
  1474                           
  1475                           ;ECU_LAYER/LCD/ecu_lcd.c: 85:         ret = 0x01;
  1476     00D6  01A3               	clrf	lcd_4bits_send_string@ret
  1477     00D7  0AA3               	incf	lcd_4bits_send_string@ret,f
  1478                           
  1479                           ;ECU_LAYER/LCD/ecu_lcd.c: 86:     }
  1480     00D8  28F2               	goto	l2103
  1481     00D9                     l2097:
  1482                           
  1483                           ;ECU_LAYER/LCD/ecu_lcd.c: 89:             ret = lcd_4bits_send_char(lcd,*data++);
  1484     00D9  0822               	movf	lcd_4bits_send_string@data,w
  1485     00DA  0084               	movwf	4
  1486     00DB  0800               	movf	0,w
  1487     00DC  00FC               	movwf	lcd_4bits_send_char@data
  1488     00DD  0824               	movf	lcd_4bits_send_string@lcd,w
  1489     00DE  120A  118A  21F5  120A  118A  	fcall	_lcd_4bits_send_char
  1490     00E3  1283               	bcf	3,5	;RP0=0, select bank0
  1491     00E4  1303               	bcf	3,6	;RP1=0, select bank0
  1492     00E5  00A3               	movwf	lcd_4bits_send_string@ret
  1493     00E6                     l2099:
  1494     00E6  3001               	movlw	1
  1495     00E7  00FF               	movwf	btemp+1
  1496     00E8  087F               	movf	btemp+1,w
  1497     00E9  07A2               	addwf	lcd_4bits_send_string@data,f
  1498     00EA                     l2101:
  1499                           
  1500                           ;ECU_LAYER/LCD/ecu_lcd.c: 88:         while(*data){
  1501     00EA  0822               	movf	lcd_4bits_send_string@data,w
  1502     00EB  0084               	movwf	4
  1503     00EC  1383               	bcf	3,7	;select IRP bank0
  1504     00ED  0800               	movf	0,w
  1505     00EE  1D03               	btfss	3,2
  1506     00EF  28F1               	goto	u2251
  1507     00F0  28F2               	goto	u2250
  1508     00F1                     u2251:
  1509     00F1  28D9               	goto	l2097
  1510     00F2                     u2250:
  1511     00F2                     l2103:
  1512                           
  1513                           ;ECU_LAYER/LCD/ecu_lcd.c: 92:     return ret;
  1514     00F2  0823               	movf	lcd_4bits_send_string@ret,w
  1515     00F3                     l303:
  1516     00F3  0008               	return
  1517     00F4                     __end_of_lcd_4bits_send_string:
  1518                           
  1519                           	psect	text3
  1520     01AE                     __ptext3:	
  1521 ;; *************** function _lcd_4bit_custom_character *****************
  1522 ;; Defined at:
  1523 ;;		line 117 in file "ECU_LAYER/LCD/ecu_lcd.c"
  1524 ;; Parameters:    Size  Location     Type
  1525 ;;  lcd             1    wreg     PTR const struct .
  1526 ;;		 -> lcd(6), 
  1527 ;;  Row             1   11[BANK0 ] unsigned char 
  1528 ;;  coloumns        1   12[BANK0 ] unsigned char 
  1529 ;;  chr             1   13[BANK0 ] PTR unsigned char 
  1530 ;;		 -> customChar(8), 
  1531 ;;  mempos          1   14[BANK0 ] unsigned char 
  1532 ;; Auto vars:     Size  Location     Type
  1533 ;;  lcd             1   17[BANK0 ] PTR const struct .
  1534 ;;		 -> lcd(6), 
  1535 ;;  counter         1   16[BANK0 ] unsigned char 
  1536 ;;  ret             1    0        unsigned char 
  1537 ;; Return value:  Size  Location     Type
  1538 ;;                  1    wreg      unsigned char 
  1539 ;; Registers used:
  1540 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1541 ;; Tracked objects:
  1542 ;;		On entry : 0/0
  1543 ;;		On exit  : 0/0
  1544 ;;		Unchanged: 0/0
  1545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1546 ;;      Params:         0       4       0       0       0
  1547 ;;      Locals:         0       2       0       0       0
  1548 ;;      Temps:          0       1       0       0       0
  1549 ;;      Totals:         0       7       0       0       0
  1550 ;;Total ram usage:        7 bytes
  1551 ;; Hardware stack levels used: 1
  1552 ;; Hardware stack levels required when called: 5
  1553 ;; This function calls:
  1554 ;;		_lcd_4bits_send_char
  1555 ;;		_lcd_4bits_send_char_pos
  1556 ;;		_lcd_4bits_send_command
  1557 ;; This function is called by:
  1558 ;;		_main
  1559 ;; This function uses a non-reentrant model
  1560 ;;
  1561                           
  1562     01AE                     _lcd_4bit_custom_character:	
  1563                           ;psect for function _lcd_4bit_custom_character
  1564                           
  1565                           
  1566                           ;incstack = 0
  1567                           ; Regs used in _lcd_4bit_custom_character: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+
      +                          cstack]
  1568                           ;lcd_4bit_custom_character@lcd stored from wreg
  1569     01AE  1283               	bcf	3,5	;RP0=0, select bank0
  1570     01AF  1303               	bcf	3,6	;RP1=0, select bank0
  1571     01B0  00B1               	movwf	lcd_4bit_custom_character@lcd
  1572     01B1                     l2141:
  1573                           
  1574                           ;ECU_LAYER/LCD/ecu_lcd.c: 119:     uint8 counter = 0x00;
  1575     01B1  01B0               	clrf	lcd_4bit_custom_character@counter
  1576     01B2                     l2143:
  1577                           
  1578                           ;ECU_LAYER/LCD/ecu_lcd.c: 120:     if(((void*)0) == lcd){
  1579     01B2  0831               	movf	lcd_4bit_custom_character@lcd,w
  1580     01B3  1D03               	btfss	3,2
  1581     01B4  29B6               	goto	u2281
  1582     01B5  29B7               	goto	u2280
  1583     01B6                     u2281:
  1584     01B6  29B8               	goto	l2147
  1585     01B7                     u2280:
  1586     01B7                     l2145:
  1587                           
  1588                           ;ECU_LAYER/LCD/ecu_lcd.c: 122:     }
  1589     01B7  29F4               	goto	l324
  1590     01B8                     l2147:
  1591     01B8  082E               	movf	lcd_4bit_custom_character@mempos,w
  1592     01B9  00AF               	movwf	??_lcd_4bit_custom_character
  1593     01BA  3002               	movlw	2
  1594     01BB                     u2295:
  1595     01BB  1003               	clrc
  1596     01BC  0DAF               	rlf	??_lcd_4bit_custom_character,f
  1597     01BD  3EFF               	addlw	-1
  1598     01BE  1D03               	skipz
  1599     01BF  29BB               	goto	u2295
  1600     01C0  1003               	clrc
  1601     01C1  0D2F               	rlf	??_lcd_4bit_custom_character,w
  1602     01C2  3E40               	addlw	64
  1603     01C3  00FC               	movwf	lcd_4bits_send_command@command
  1604     01C4  0831               	movf	lcd_4bit_custom_character@lcd,w
  1605     01C5  120A  118A  2167  120A  118A  	fcall	_lcd_4bits_send_command
  1606     01CA                     l2149:
  1607                           
  1608                           ;ECU_LAYER/LCD/ecu_lcd.c: 126:         for(counter = 0;counter <= 7;counter++){
  1609     01CA  1283               	bcf	3,5	;RP0=0, select bank0
  1610     01CB  1303               	bcf	3,6	;RP1=0, select bank0
  1611     01CC  01B0               	clrf	lcd_4bit_custom_character@counter
  1612     01CD                     l2155:
  1613     01CD  0830               	movf	lcd_4bit_custom_character@counter,w
  1614     01CE  072D               	addwf	lcd_4bit_custom_character@chr,w
  1615     01CF  0084               	movwf	4
  1616     01D0  120A  158A  2000  120A  118A  	fcall	stringdir
  1617     01D5  00FC               	movwf	lcd_4bits_send_char@data
  1618     01D6  0831               	movf	lcd_4bit_custom_character@lcd,w
  1619     01D7  120A  118A  21F5  120A  118A  	fcall	_lcd_4bits_send_char
  1620     01DC                     l2157:
  1621                           
  1622                           ;ECU_LAYER/LCD/ecu_lcd.c: 128:         }
  1623     01DC  3001               	movlw	1
  1624     01DD  00FF               	movwf	btemp+1
  1625     01DE  087F               	movf	btemp+1,w
  1626     01DF  1283               	bcf	3,5	;RP0=0, select bank0
  1627     01E0  1303               	bcf	3,6	;RP1=0, select bank0
  1628     01E1  07B0               	addwf	lcd_4bit_custom_character@counter,f
  1629     01E2                     l2159:
  1630     01E2  3008               	movlw	8
  1631     01E3  0230               	subwf	lcd_4bit_custom_character@counter,w
  1632     01E4  1C03               	skipc
  1633     01E5  29E7               	goto	u2301
  1634     01E6  29E8               	goto	u2300
  1635     01E7                     u2301:
  1636     01E7  29CD               	goto	l2155
  1637     01E8                     u2300:
  1638     01E8                     l2161:
  1639     01E8  082B               	movf	lcd_4bit_custom_character@Row,w
  1640     01E9  00A6               	movwf	lcd_4bits_send_char_pos@Row
  1641     01EA  082C               	movf	lcd_4bit_custom_character@coloumns,w
  1642     01EB  00A7               	movwf	lcd_4bits_send_char_pos@coloumn
  1643     01EC  082E               	movf	lcd_4bit_custom_character@mempos,w
  1644     01ED  00A8               	movwf	lcd_4bits_send_char_pos@data
  1645     01EE  0831               	movf	lcd_4bit_custom_character@lcd,w
  1646     01EF  120A  118A  20A8  120A  118A  	fcall	_lcd_4bits_send_char_pos
  1647     01F4                     l324:
  1648     01F4  0008               	return
  1649     01F5                     __end_of_lcd_4bit_custom_character:
  1650                           
  1651                           	psect	text4
  1652     00A8                     __ptext4:	
  1653 ;; *************** function _lcd_4bits_send_char_pos *****************
  1654 ;; Defined at:
  1655 ;;		line 71 in file "ECU_LAYER/LCD/ecu_lcd.c"
  1656 ;; Parameters:    Size  Location     Type
  1657 ;;  lcd             1    wreg     PTR const struct .
  1658 ;;		 -> lcd(6), 
  1659 ;;  Row             1    6[BANK0 ] unsigned char 
  1660 ;;  coloumn         1    7[BANK0 ] unsigned char 
  1661 ;;  data            1    8[BANK0 ] unsigned char 
  1662 ;; Auto vars:     Size  Location     Type
  1663 ;;  lcd             1   10[BANK0 ] PTR const struct .
  1664 ;;		 -> lcd(6), 
  1665 ;;  ret             1    9[BANK0 ] unsigned char 
  1666 ;; Return value:  Size  Location     Type
  1667 ;;                  1    wreg      unsigned char 
  1668 ;; Registers used:
  1669 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1670 ;; Tracked objects:
  1671 ;;		On entry : 0/0
  1672 ;;		On exit  : 0/0
  1673 ;;		Unchanged: 0/0
  1674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1675 ;;      Params:         0       3       0       0       0
  1676 ;;      Locals:         0       2       0       0       0
  1677 ;;      Temps:          0       0       0       0       0
  1678 ;;      Totals:         0       5       0       0       0
  1679 ;;Total ram usage:        5 bytes
  1680 ;; Hardware stack levels used: 1
  1681 ;; Hardware stack levels required when called: 4
  1682 ;; This function calls:
  1683 ;;		_lcd_4bits_send_char
  1684 ;;		_set_cursor
  1685 ;; This function is called by:
  1686 ;;		_lcd_4bit_custom_character
  1687 ;; This function uses a non-reentrant model
  1688 ;;
  1689                           
  1690     00A8                     _lcd_4bits_send_char_pos:	
  1691                           ;psect for function _lcd_4bits_send_char_pos
  1692                           
  1693                           
  1694                           ;incstack = 0
  1695                           ; Regs used in _lcd_4bits_send_char_pos: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
  1696                           ;lcd_4bits_send_char_pos@lcd stored from wreg
  1697     00A8  1283               	bcf	3,5	;RP0=0, select bank0
  1698     00A9  1303               	bcf	3,6	;RP1=0, select bank0
  1699     00AA  00AA               	movwf	lcd_4bits_send_char_pos@lcd
  1700     00AB                     l2079:
  1701     00AB                     l2081:
  1702                           
  1703                           ;ECU_LAYER/LCD/ecu_lcd.c: 73:     if(lcd == ((void*)0)){
  1704     00AB  082A               	movf	lcd_4bits_send_char_pos@lcd,w
  1705     00AC  1D03               	btfss	3,2
  1706     00AD  28AF               	goto	u2231
  1707     00AE  28B0               	goto	u2230
  1708     00AF                     u2231:
  1709     00AF  28B3               	goto	l2085
  1710     00B0                     u2230:
  1711     00B0                     l2083:
  1712                           
  1713                           ;ECU_LAYER/LCD/ecu_lcd.c: 74:         ret = 0x01;
  1714     00B0  01A9               	clrf	lcd_4bits_send_char_pos@ret
  1715     00B1  0AA9               	incf	lcd_4bits_send_char_pos@ret,f
  1716                           
  1717                           ;ECU_LAYER/LCD/ecu_lcd.c: 75:     }
  1718     00B2  28CB               	goto	l2087
  1719     00B3                     l2085:
  1720                           
  1721                           ;ECU_LAYER/LCD/ecu_lcd.c: 77:         ret = set_cursor(lcd,Row,coloumn);
  1722     00B3  0826               	movf	lcd_4bits_send_char_pos@Row,w
  1723     00B4  00A2               	movwf	set_cursor@Row
  1724     00B5  0827               	movf	lcd_4bits_send_char_pos@coloumn,w
  1725     00B6  00A3               	movwf	set_cursor@coloumn
  1726     00B7  082A               	movf	lcd_4bits_send_char_pos@lcd,w
  1727     00B8  120A  118A  20F4  120A  118A  	fcall	_set_cursor
  1728     00BD  1283               	bcf	3,5	;RP0=0, select bank0
  1729     00BE  1303               	bcf	3,6	;RP1=0, select bank0
  1730     00BF  00A9               	movwf	lcd_4bits_send_char_pos@ret
  1731                           
  1732                           ;ECU_LAYER/LCD/ecu_lcd.c: 78:         ret = lcd_4bits_send_char(lcd,data);
  1733     00C0  0828               	movf	lcd_4bits_send_char_pos@data,w
  1734     00C1  00FC               	movwf	lcd_4bits_send_char@data
  1735     00C2  082A               	movf	lcd_4bits_send_char_pos@lcd,w
  1736     00C3  120A  118A  21F5  120A  118A  	fcall	_lcd_4bits_send_char
  1737     00C8  1283               	bcf	3,5	;RP0=0, select bank0
  1738     00C9  1303               	bcf	3,6	;RP1=0, select bank0
  1739     00CA  00A9               	movwf	lcd_4bits_send_char_pos@ret
  1740     00CB                     l2087:
  1741                           
  1742                           ;ECU_LAYER/LCD/ecu_lcd.c: 80:     return ret;
  1743     00CB  0829               	movf	lcd_4bits_send_char_pos@ret,w
  1744     00CC                     l295:
  1745     00CC  0008               	return
  1746     00CD                     __end_of_lcd_4bits_send_char_pos:
  1747                           
  1748                           	psect	text5
  1749     00F4                     __ptext5:	
  1750 ;; *************** function _set_cursor *****************
  1751 ;; Defined at:
  1752 ;;		line 162 in file "ECU_LAYER/LCD/ecu_lcd.c"
  1753 ;; Parameters:    Size  Location     Type
  1754 ;;  lcd             1    wreg     PTR const struct .
  1755 ;;		 -> lcd(6), 
  1756 ;;  Row             1    2[BANK0 ] unsigned char 
  1757 ;;  coloumn         1    3[BANK0 ] unsigned char 
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;  lcd             1    5[BANK0 ] PTR const struct .
  1760 ;;		 -> lcd(6), 
  1761 ;;  ret             1    4[BANK0 ] unsigned char 
  1762 ;; Return value:  Size  Location     Type
  1763 ;;                  1    wreg      unsigned char 
  1764 ;; Registers used:
  1765 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1766 ;; Tracked objects:
  1767 ;;		On entry : 0/0
  1768 ;;		On exit  : 0/0
  1769 ;;		Unchanged: 0/0
  1770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1771 ;;      Params:         0       2       0       0       0
  1772 ;;      Locals:         0       2       0       0       0
  1773 ;;      Temps:          0       0       0       0       0
  1774 ;;      Totals:         0       4       0       0       0
  1775 ;;Total ram usage:        4 bytes
  1776 ;; Hardware stack levels used: 1
  1777 ;; Hardware stack levels required when called: 3
  1778 ;; This function calls:
  1779 ;;		_lcd_4bits_send_command
  1780 ;; This function is called by:
  1781 ;;		_lcd_4bits_send_char_pos
  1782 ;;		_lcd_4bits_send_string_pos
  1783 ;; This function uses a non-reentrant model
  1784 ;;
  1785                           
  1786     00F4                     _set_cursor:	
  1787                           ;psect for function _set_cursor
  1788                           
  1789                           
  1790                           ;incstack = 0
  1791                           ; Regs used in _set_cursor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1792                           ;set_cursor@lcd stored from wreg
  1793     00F4  1283               	bcf	3,5	;RP0=0, select bank0
  1794     00F5  1303               	bcf	3,6	;RP1=0, select bank0
  1795     00F6  00A5               	movwf	set_cursor@lcd
  1796     00F7                     l2049:
  1797                           
  1798                           ;ECU_LAYER/LCD/ecu_lcd.c: 163:     uint8 ret = 0x00;
  1799     00F7  01A4               	clrf	set_cursor@ret
  1800     00F8                     l2051:
  1801                           
  1802                           ;ECU_LAYER/LCD/ecu_lcd.c: 164:     if(lcd == ((void*)0)){
  1803     00F8  0825               	movf	set_cursor@lcd,w
  1804     00F9  1D03               	btfss	3,2
  1805     00FA  28FC               	goto	u2211
  1806     00FB  28FD               	goto	u2210
  1807     00FC                     u2211:
  1808     00FC  291A               	goto	l2061
  1809     00FD                     u2210:
  1810     00FD                     l2053:
  1811                           
  1812                           ;ECU_LAYER/LCD/ecu_lcd.c: 165:         ret = 0x01;
  1813     00FD  01A4               	clrf	set_cursor@ret
  1814     00FE  0AA4               	incf	set_cursor@ret,f
  1815                           
  1816                           ;ECU_LAYER/LCD/ecu_lcd.c: 166:     }
  1817     00FF  2922               	goto	l2063
  1818     0100                     l2055:
  1819                           
  1820                           ;ECU_LAYER/LCD/ecu_lcd.c: 170:                 ret = lcd_4bits_send_command(lcd,(0x80 + 
      +                          coloumn));
  1821     0100  0823               	movf	set_cursor@coloumn,w
  1822     0101  3E80               	addlw	128
  1823     0102  00FC               	movwf	lcd_4bits_send_command@command
  1824     0103  0825               	movf	set_cursor@lcd,w
  1825     0104  120A  118A  2167  120A  118A  	fcall	_lcd_4bits_send_command
  1826     0109  1283               	bcf	3,5	;RP0=0, select bank0
  1827     010A  1303               	bcf	3,6	;RP1=0, select bank0
  1828     010B  00A4               	movwf	set_cursor@ret
  1829                           
  1830                           ;ECU_LAYER/LCD/ecu_lcd.c: 171:                 break;
  1831     010C  2922               	goto	l2063
  1832     010D                     l2057:
  1833                           
  1834                           ;ECU_LAYER/LCD/ecu_lcd.c: 173:                 ret = lcd_4bits_send_command(lcd,(0xC0 + 
      +                          coloumn));
  1835     010D  0823               	movf	set_cursor@coloumn,w
  1836     010E  3EC0               	addlw	192
  1837     010F  00FC               	movwf	lcd_4bits_send_command@command
  1838     0110  0825               	movf	set_cursor@lcd,w
  1839     0111  120A  118A  2167  120A  118A  	fcall	_lcd_4bits_send_command
  1840     0116  1283               	bcf	3,5	;RP0=0, select bank0
  1841     0117  1303               	bcf	3,6	;RP1=0, select bank0
  1842     0118  00A4               	movwf	set_cursor@ret
  1843                           
  1844                           ;ECU_LAYER/LCD/ecu_lcd.c: 174:                 break;
  1845     0119  2922               	goto	l2063
  1846     011A                     l2061:
  1847     011A  0822               	movf	set_cursor@Row,w
  1848                           
  1849                           ; Switch size 1, requested type "simple"
  1850                           ; Number of cases is 2, Range of values is 1 to 2
  1851                           ; switch strategies available:
  1852                           ; Name         Instructions Cycles
  1853                           ; simple_byte            7     4 (average)
  1854                           ; direct_byte           17    11 (fixed)
  1855                           ; jumptable            263     9 (fixed)
  1856                           ;	Chosen strategy is simple_byte
  1857     011B  3A01               	xorlw	1	; case 1
  1858     011C  1903               	skipnz
  1859     011D  2900               	goto	l2055
  1860     011E  3A03               	xorlw	3	; case 2
  1861     011F  1903               	skipnz
  1862     0120  290D               	goto	l2057
  1863     0121  2922               	goto	l2063
  1864     0122                     l2063:
  1865                           
  1866                           ;ECU_LAYER/LCD/ecu_lcd.c: 179:     return ret;
  1867     0122  0824               	movf	set_cursor@ret,w
  1868     0123                     l344:
  1869     0123  0008               	return
  1870     0124                     __end_of_set_cursor:
  1871                           
  1872                           	psect	text6
  1873     01F5                     __ptext6:	
  1874 ;; *************** function _lcd_4bits_send_char *****************
  1875 ;; Defined at:
  1876 ;;		line 57 in file "ECU_LAYER/LCD/ecu_lcd.c"
  1877 ;; Parameters:    Size  Location     Type
  1878 ;;  lcd             1    wreg     PTR const struct .
  1879 ;;		 -> lcd(6), 
  1880 ;;  data            1   12[COMMON] unsigned char 
  1881 ;; Auto vars:     Size  Location     Type
  1882 ;;  lcd             1    1[BANK0 ] PTR const struct .
  1883 ;;		 -> lcd(6), 
  1884 ;;  ret             1    0[BANK0 ] unsigned char 
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  1    wreg      unsigned char 
  1887 ;; Registers used:
  1888 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1894 ;;      Params:         1       0       0       0       0
  1895 ;;      Locals:         0       2       0       0       0
  1896 ;;      Temps:          1       0       0       0       0
  1897 ;;      Totals:         2       2       0       0       0
  1898 ;;Total ram usage:        4 bytes
  1899 ;; Hardware stack levels used: 1
  1900 ;; Hardware stack levels required when called: 2
  1901 ;; This function calls:
  1902 ;;		_gpio_pin_write_logic
  1903 ;;		_send_4bits
  1904 ;;		_send_enable_signal
  1905 ;; This function is called by:
  1906 ;;		_lcd_4bits_send_char_pos
  1907 ;;		_lcd_4bits_send_string
  1908 ;;		_lcd_4bit_custom_character
  1909 ;; This function uses a non-reentrant model
  1910 ;;
  1911                           
  1912     01F5                     _lcd_4bits_send_char:	
  1913                           ;psect for function _lcd_4bits_send_char
  1914                           
  1915                           
  1916                           ;incstack = 0
  1917                           ; Regs used in _lcd_4bits_send_char: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  1918                           ;lcd_4bits_send_char@lcd stored from wreg
  1919     01F5  1283               	bcf	3,5	;RP0=0, select bank0
  1920     01F6  1303               	bcf	3,6	;RP1=0, select bank0
  1921     01F7  00A1               	movwf	lcd_4bits_send_char@lcd
  1922     01F8                     l2037:
  1923     01F8                     l2039:
  1924                           
  1925                           ;ECU_LAYER/LCD/ecu_lcd.c: 59:     if(lcd == ((void*)0)){
  1926     01F8  0821               	movf	lcd_4bits_send_char@lcd,w
  1927     01F9  1D03               	btfss	3,2
  1928     01FA  29FC               	goto	u2191
  1929     01FB  29FD               	goto	u2190
  1930     01FC                     u2191:
  1931     01FC  2A00               	goto	l2043
  1932     01FD                     u2190:
  1933     01FD                     l2041:
  1934                           
  1935                           ;ECU_LAYER/LCD/ecu_lcd.c: 60:         ret = 0x01;
  1936     01FD  01A0               	clrf	lcd_4bits_send_char@ret
  1937     01FE  0AA0               	incf	lcd_4bits_send_char@ret,f
  1938                           
  1939                           ;ECU_LAYER/LCD/ecu_lcd.c: 61:     }
  1940     01FF  2A3B               	goto	l2045
  1941     0200                     l2043:
  1942                           
  1943                           ;ECU_LAYER/LCD/ecu_lcd.c: 63:         ret = gpio_pin_write_logic(&(lcd->rs),GPIO_HIGH);
  1944     0200  01F0               	clrf	gpio_pin_write_logic@logic
  1945     0201  0AF0               	incf	gpio_pin_write_logic@logic,f
  1946     0202  0821               	movf	lcd_4bits_send_char@lcd,w
  1947     0203  120A  118A  2609  120A  118A  	fcall	_gpio_pin_write_logic
  1948     0208  1283               	bcf	3,5	;RP0=0, select bank0
  1949     0209  1303               	bcf	3,6	;RP1=0, select bank0
  1950     020A  00A0               	movwf	lcd_4bits_send_char@ret
  1951                           
  1952                           ;ECU_LAYER/LCD/ecu_lcd.c: 64:         ret = send_4bits(lcd,(data >> 4));
  1953     020B  087C               	movf	lcd_4bits_send_char@data,w
  1954     020C  00FD               	movwf	??_lcd_4bits_send_char
  1955     020D  3004               	movlw	4
  1956     020E                     u2205:
  1957     020E  1003               	clrc
  1958     020F  0CFD               	rrf	??_lcd_4bits_send_char,f
  1959     0210  3EFF               	addlw	-1
  1960     0211  1D03               	skipz
  1961     0212  2A0E               	goto	u2205
  1962     0213  087D               	movf	??_lcd_4bits_send_char,w
  1963     0214  00F8               	movwf	send_4bits@command
  1964     0215  0821               	movf	lcd_4bits_send_char@lcd,w
  1965     0216  120A  118A  223D  120A  118A  	fcall	_send_4bits
  1966     021B  1283               	bcf	3,5	;RP0=0, select bank0
  1967     021C  1303               	bcf	3,6	;RP1=0, select bank0
  1968     021D  00A0               	movwf	lcd_4bits_send_char@ret
  1969                           
  1970                           ;ECU_LAYER/LCD/ecu_lcd.c: 65:          ret = send_enable_signal(lcd);
  1971     021E  0821               	movf	lcd_4bits_send_char@lcd,w
  1972     021F  120A  118A  2065  120A  118A  	fcall	_send_enable_signal
  1973     0224  1283               	bcf	3,5	;RP0=0, select bank0
  1974     0225  1303               	bcf	3,6	;RP1=0, select bank0
  1975     0226  00A0               	movwf	lcd_4bits_send_char@ret
  1976                           
  1977                           ;ECU_LAYER/LCD/ecu_lcd.c: 66:         ret = send_4bits(lcd,data);
  1978     0227  087C               	movf	lcd_4bits_send_char@data,w
  1979     0228  00F8               	movwf	send_4bits@command
  1980     0229  0821               	movf	lcd_4bits_send_char@lcd,w
  1981     022A  120A  118A  223D  120A  118A  	fcall	_send_4bits
  1982     022F  1283               	bcf	3,5	;RP0=0, select bank0
  1983     0230  1303               	bcf	3,6	;RP1=0, select bank0
  1984     0231  00A0               	movwf	lcd_4bits_send_char@ret
  1985                           
  1986                           ;ECU_LAYER/LCD/ecu_lcd.c: 67:         ret = send_enable_signal(lcd);
  1987     0232  0821               	movf	lcd_4bits_send_char@lcd,w
  1988     0233  120A  118A  2065  120A  118A  	fcall	_send_enable_signal
  1989     0238  1283               	bcf	3,5	;RP0=0, select bank0
  1990     0239  1303               	bcf	3,6	;RP1=0, select bank0
  1991     023A  00A0               	movwf	lcd_4bits_send_char@ret
  1992     023B                     l2045:
  1993                           
  1994                           ;ECU_LAYER/LCD/ecu_lcd.c: 69:     return ret;
  1995     023B  0820               	movf	lcd_4bits_send_char@ret,w
  1996     023C                     l290:
  1997     023C  0008               	return
  1998     023D                     __end_of_lcd_4bits_send_char:
  1999                           
  2000                           	psect	text7
  2001     0F75                     __ptext7:	
  2002 ;; *************** function _apllication_initilaize *****************
  2003 ;; Defined at:
  2004 ;;		line 61 in file "Temperature_Controlled_Fan_System.c"
  2005 ;; Parameters:    Size  Location     Type
  2006 ;;		None
  2007 ;; Auto vars:     Size  Location     Type
  2008 ;;		None
  2009 ;; Return value:  Size  Location     Type
  2010 ;;                  1    wreg      void 
  2011 ;; Registers used:
  2012 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2013 ;; Tracked objects:
  2014 ;;		On entry : 0/0
  2015 ;;		On exit  : 0/0
  2016 ;;		Unchanged: 0/0
  2017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2018 ;;      Params:         0       0       0       0       0
  2019 ;;      Locals:         0       0       0       0       0
  2020 ;;      Temps:          0       0       0       0       0
  2021 ;;      Totals:         0       0       0       0       0
  2022 ;;Total ram usage:        0 bytes
  2023 ;; Hardware stack levels used: 1
  2024 ;; Hardware stack levels required when called: 5
  2025 ;; This function calls:
  2026 ;;		_ecu_initialzie
  2027 ;; This function is called by:
  2028 ;;		_main
  2029 ;; This function uses a non-reentrant model
  2030 ;;
  2031                           
  2032     0F75                     _apllication_initilaize:	
  2033                           ;psect for function _apllication_initilaize
  2034                           
  2035     0F75                     l2127:	
  2036                           ;incstack = 0
  2037                           ; Regs used in _apllication_initilaize: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  2038                           
  2039                           
  2040                           ;Temperature_Controlled_Fan_System.c: 62:     ecu_initialzie();
  2041     0F75  120A  118A  2124  120A  158A  	fcall	_ecu_initialzie
  2042     0F7A                     l255:
  2043     0F7A  0008               	return
  2044     0F7B                     __end_of_apllication_initilaize:
  2045                           
  2046                           	psect	text8
  2047     0124                     __ptext8:	
  2048 ;; *************** function _ecu_initialzie *****************
  2049 ;; Defined at:
  2050 ;;		line 29 in file "ECU_LAYER/ECU_LAYER.c"
  2051 ;; Parameters:    Size  Location     Type
  2052 ;;		None
  2053 ;; Auto vars:     Size  Location     Type
  2054 ;;		None
  2055 ;; Return value:  Size  Location     Type
  2056 ;;                  1    wreg      void 
  2057 ;; Registers used:
  2058 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2059 ;; Tracked objects:
  2060 ;;		On entry : 0/0
  2061 ;;		On exit  : 0/0
  2062 ;;		Unchanged: 0/0
  2063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2064 ;;      Params:         0       0       0       0       0
  2065 ;;      Locals:         0       0       0       0       0
  2066 ;;      Temps:          0       0       0       0       0
  2067 ;;      Totals:         0       0       0       0       0
  2068 ;;Total ram usage:        0 bytes
  2069 ;; Hardware stack levels used: 1
  2070 ;; Hardware stack levels required when called: 4
  2071 ;; This function calls:
  2072 ;;		_gpio_pin_initialize
  2073 ;;		_lcd_4bits_initialize
  2074 ;;		_motor_initialize
  2075 ;; This function is called by:
  2076 ;;		_apllication_initilaize
  2077 ;; This function uses a non-reentrant model
  2078 ;;
  2079                           
  2080     0124                     _ecu_initialzie:	
  2081                           ;psect for function _ecu_initialzie
  2082                           
  2083     0124                     l2077:	
  2084                           ;incstack = 0
  2085                           ; Regs used in _ecu_initialzie: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2086                           
  2087                           
  2088                           ;ECU_LAYER/ECU_LAYER.c: 30:     motor_initialize(&motor1);
  2089     0124  305C               	movlw	(low (_motor1| 0))& (0+255)
  2090     0125  120A  158A  27CD  120A  118A  	fcall	_motor_initialize
  2091                           
  2092                           ;ECU_LAYER/ECU_LAYER.c: 31:     motor_initialize(&motor2);
  2093     012A  305A               	movlw	(low (_motor2| 0))& (0+255)
  2094     012B  120A  158A  27CD  120A  118A  	fcall	_motor_initialize
  2095                           
  2096                           ;ECU_LAYER/ECU_LAYER.c: 32:     gpio_pin_initialize(&pin1);
  2097     0130  3065               	movlw	(low (_pin1| 0))& (0+255)
  2098     0131  120A  118A  23E8  120A  118A  	fcall	_gpio_pin_initialize
  2099                           
  2100                           ;ECU_LAYER/ECU_LAYER.c: 33:     gpio_pin_initialize(&pin2);
  2101     0136  3064               	movlw	(low (_pin2| 0))& (0+255)
  2102     0137  120A  118A  23E8  120A  118A  	fcall	_gpio_pin_initialize
  2103                           
  2104                           ;ECU_LAYER/ECU_LAYER.c: 34:     gpio_pin_initialize(&pin3);
  2105     013C  3063               	movlw	(low (_pin3| 0))& (0+255)
  2106     013D  120A  118A  23E8  120A  118A  	fcall	_gpio_pin_initialize
  2107                           
  2108                           ;ECU_LAYER/ECU_LAYER.c: 35:     gpio_pin_initialize(&pin4);
  2109     0142  3062               	movlw	(low (_pin4| 0))& (0+255)
  2110     0143  120A  118A  23E8  120A  118A  	fcall	_gpio_pin_initialize
  2111                           
  2112                           ;ECU_LAYER/ECU_LAYER.c: 36:     gpio_pin_initialize(&pin5);
  2113     0148  3061               	movlw	(low (_pin5| 0))& (0+255)
  2114     0149  120A  118A  23E8  120A  118A  	fcall	_gpio_pin_initialize
  2115                           
  2116                           ;ECU_LAYER/ECU_LAYER.c: 37:     gpio_pin_initialize(&pin6);
  2117     014E  3060               	movlw	(low (_pin6| 0))& (0+255)
  2118     014F  120A  118A  23E8  120A  118A  	fcall	_gpio_pin_initialize
  2119                           
  2120                           ;ECU_LAYER/ECU_LAYER.c: 38:     gpio_pin_initialize(&pin7);
  2121     0154  305F               	movlw	(low (_pin7| 0))& (0+255)
  2122     0155  120A  118A  23E8  120A  118A  	fcall	_gpio_pin_initialize
  2123                           
  2124                           ;ECU_LAYER/ECU_LAYER.c: 39:     gpio_pin_initialize(&pin8);
  2125     015A  305E               	movlw	(low (_pin8| 0))& (0+255)
  2126     015B  120A  118A  23E8  120A  118A  	fcall	_gpio_pin_initialize
  2127                           
  2128                           ;ECU_LAYER/ECU_LAYER.c: 41:     lcd_4bits_initialize(&lcd);
  2129     0160  30CA               	movlw	(low (_lcd| 0))& (0+255)
  2130     0161  120A  118A  247B  120A  118A  	fcall	_lcd_4bits_initialize
  2131     0166                     l55:
  2132     0166  0008               	return
  2133     0167                     __end_of_ecu_initialzie:
  2134                           
  2135                           	psect	text9
  2136     0FCD                     __ptext9:	
  2137 ;; *************** function _motor_initialize *****************
  2138 ;; Defined at:
  2139 ;;		line 8 in file "ECU_LAYER/Motor/ecu_motor_driver.c"
  2140 ;; Parameters:    Size  Location     Type
  2141 ;;  motor           1    wreg     PTR const struct .
  2142 ;;		 -> motor2(2), motor1(2), 
  2143 ;; Auto vars:     Size  Location     Type
  2144 ;;  motor           1   13[COMMON] PTR const struct .
  2145 ;;		 -> motor2(2), motor1(2), 
  2146 ;;  ret             1   12[COMMON] unsigned char 
  2147 ;; Return value:  Size  Location     Type
  2148 ;;                  1    wreg      unsigned char 
  2149 ;; Registers used:
  2150 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2151 ;; Tracked objects:
  2152 ;;		On entry : 0/0
  2153 ;;		On exit  : 0/0
  2154 ;;		Unchanged: 0/0
  2155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2156 ;;      Params:         0       0       0       0       0
  2157 ;;      Locals:         2       0       0       0       0
  2158 ;;      Temps:          0       0       0       0       0
  2159 ;;      Totals:         2       0       0       0       0
  2160 ;;Total ram usage:        2 bytes
  2161 ;; Hardware stack levels used: 1
  2162 ;; Hardware stack levels required when called: 2
  2163 ;; This function calls:
  2164 ;;		_gpio_pin_initialize
  2165 ;; This function is called by:
  2166 ;;		_ecu_initialzie
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170     0FCD                     _motor_initialize:	
  2171                           ;psect for function _motor_initialize
  2172                           
  2173                           
  2174                           ;incstack = 0
  2175                           ; Regs used in _motor_initialize: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2176                           ;motor_initialize@motor stored from wreg
  2177     0FCD  00FD               	movwf	motor_initialize@motor
  2178     0FCE                     l1981:
  2179     0FCE                     l1983:
  2180                           
  2181                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 10:     if(motor == ((void*)0)){
  2182     0FCE  087D               	movf	motor_initialize@motor,w
  2183     0FCF  1D03               	btfss	3,2
  2184     0FD0  2FD2               	goto	u2161
  2185     0FD1  2FD3               	goto	u2160
  2186     0FD2                     u2161:
  2187     0FD2  2FD4               	goto	l1987
  2188     0FD3                     u2160:
  2189     0FD3                     l1985:
  2190                           
  2191                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 12:     }
  2192     0FD3  2FE3               	goto	l9
  2193     0FD4                     l1987:
  2194                           
  2195                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 14:         ret = gpio_pin_initialize(&(motor->pins
      +                          [0]));
  2196     0FD4  087D               	movf	motor_initialize@motor,w
  2197     0FD5  120A  118A  23E8  120A  158A  	fcall	_gpio_pin_initialize
  2198     0FDA  00FC               	movwf	motor_initialize@ret
  2199                           
  2200                           ;ECU_LAYER/Motor/ecu_motor_driver.c: 15:         ret = gpio_pin_initialize(&(motor->pins
      +                          [1]));
  2201     0FDB  087D               	movf	motor_initialize@motor,w
  2202     0FDC  3E01               	addlw	1
  2203     0FDD  120A  118A  23E8  120A  158A  	fcall	_gpio_pin_initialize
  2204     0FE2  00FC               	movwf	motor_initialize@ret
  2205     0FE3                     l9:
  2206     0FE3  0008               	return
  2207     0FE4                     __end_of_motor_initialize:
  2208                           
  2209                           	psect	text10
  2210     047B                     __ptext10:	
  2211 ;; *************** function _lcd_4bits_initialize *****************
  2212 ;; Defined at:
  2213 ;;		line 14 in file "ECU_LAYER/LCD/ecu_lcd.c"
  2214 ;; Parameters:    Size  Location     Type
  2215 ;;  lcd             1    wreg     PTR const struct .
  2216 ;;		 -> lcd(6), 
  2217 ;; Auto vars:     Size  Location     Type
  2218 ;;  lcd             1    7[BANK0 ] PTR const struct .
  2219 ;;		 -> lcd(6), 
  2220 ;;  ret             1    6[BANK0 ] unsigned char 
  2221 ;;  counter         1    5[BANK0 ] unsigned char 
  2222 ;; Return value:  Size  Location     Type
  2223 ;;                  1    wreg      unsigned char 
  2224 ;; Registers used:
  2225 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2231 ;;      Params:         0       0       0       0       0
  2232 ;;      Locals:         0       3       0       0       0
  2233 ;;      Temps:          0       3       0       0       0
  2234 ;;      Totals:         0       6       0       0       0
  2235 ;;Total ram usage:        6 bytes
  2236 ;; Hardware stack levels used: 1
  2237 ;; Hardware stack levels required when called: 3
  2238 ;; This function calls:
  2239 ;;		_gpio_pin_initialize
  2240 ;;		_lcd_4bits_send_command
  2241 ;; This function is called by:
  2242 ;;		_ecu_initialzie
  2243 ;; This function uses a non-reentrant model
  2244 ;;
  2245                           
  2246     047B                     _lcd_4bits_initialize:	
  2247                           ;psect for function _lcd_4bits_initialize
  2248                           
  2249                           
  2250                           ;incstack = 0
  2251                           ; Regs used in _lcd_4bits_initialize: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  2252                           ;lcd_4bits_initialize@lcd stored from wreg
  2253     047B  1283               	bcf	3,5	;RP0=0, select bank0
  2254     047C  1303               	bcf	3,6	;RP1=0, select bank0
  2255     047D  00A7               	movwf	lcd_4bits_initialize@lcd
  2256     047E                     l1991:
  2257                           
  2258                           ;ECU_LAYER/LCD/ecu_lcd.c: 16:     uint8 counter = 0x00;
  2259     047E  01A5               	clrf	lcd_4bits_initialize@counter
  2260     047F                     l1993:
  2261                           
  2262                           ;ECU_LAYER/LCD/ecu_lcd.c: 17:     if(lcd == ((void*)0)){
  2263     047F  0827               	movf	lcd_4bits_initialize@lcd,w
  2264     0480  1D03               	btfss	3,2
  2265     0481  2C83               	goto	u2171
  2266     0482  2C84               	goto	u2170
  2267     0483                     u2171:
  2268     0483  2C85               	goto	l1997
  2269     0484                     u2170:
  2270     0484                     l1995:
  2271                           
  2272                           ;ECU_LAYER/LCD/ecu_lcd.c: 19:     }
  2273     0484  2D30               	goto	l280
  2274     0485                     l1997:
  2275                           
  2276                           ;ECU_LAYER/LCD/ecu_lcd.c: 21:         ret = gpio_pin_initialize(&(lcd->rs));
  2277     0485  0827               	movf	lcd_4bits_initialize@lcd,w
  2278     0486  120A  118A  23E8  120A  118A  	fcall	_gpio_pin_initialize
  2279     048B  1283               	bcf	3,5	;RP0=0, select bank0
  2280     048C  1303               	bcf	3,6	;RP1=0, select bank0
  2281     048D  00A6               	movwf	lcd_4bits_initialize@ret
  2282                           
  2283                           ;ECU_LAYER/LCD/ecu_lcd.c: 22:         ret = gpio_pin_initialize(&(lcd->en));
  2284     048E  0827               	movf	lcd_4bits_initialize@lcd,w
  2285     048F  3E01               	addlw	1
  2286     0490  120A  118A  23E8  120A  118A  	fcall	_gpio_pin_initialize
  2287     0495  1283               	bcf	3,5	;RP0=0, select bank0
  2288     0496  1303               	bcf	3,6	;RP1=0, select bank0
  2289     0497  00A6               	movwf	lcd_4bits_initialize@ret
  2290     0498                     l1999:
  2291                           
  2292                           ;ECU_LAYER/LCD/ecu_lcd.c: 23:         for(counter = 0x00;counter < 4;counter++){
  2293     0498  01A5               	clrf	lcd_4bits_initialize@counter
  2294     0499                     l2005:
  2295     0499  0825               	movf	lcd_4bits_initialize@counter,w
  2296     049A  0727               	addwf	lcd_4bits_initialize@lcd,w
  2297     049B  3E02               	addlw	2
  2298     049C  120A  118A  23E8  120A  118A  	fcall	_gpio_pin_initialize
  2299     04A1                     l2007:
  2300                           
  2301                           ;ECU_LAYER/LCD/ecu_lcd.c: 25:         }
  2302     04A1  3001               	movlw	1
  2303     04A2  00FF               	movwf	btemp+1
  2304     04A3  087F               	movf	btemp+1,w
  2305     04A4  1283               	bcf	3,5	;RP0=0, select bank0
  2306     04A5  1303               	bcf	3,6	;RP1=0, select bank0
  2307     04A6  07A5               	addwf	lcd_4bits_initialize@counter,f
  2308     04A7                     l2009:
  2309     04A7  3004               	movlw	4
  2310     04A8  0225               	subwf	lcd_4bits_initialize@counter,w
  2311     04A9  1C03               	skipc
  2312     04AA  2CAC               	goto	u2181
  2313     04AB  2CAD               	goto	u2180
  2314     04AC                     u2181:
  2315     04AC  2C99               	goto	l2005
  2316     04AD                     u2180:
  2317     04AD                     l2011:
  2318                           
  2319                           ;ECU_LAYER/LCD/ecu_lcd.c: 26:         _delay((unsigned long)((150)*(8000000UL/4000.0)));
  2320     04AD  3002               	movlw	2
  2321     04AE  1283               	bcf	3,5	;RP0=0, select bank0
  2322     04AF  1303               	bcf	3,6	;RP1=0, select bank0
  2323     04B0  00A4               	movwf	??_lcd_4bits_initialize+2
  2324     04B1  3086               	movlw	134
  2325     04B2  00A3               	movwf	??_lcd_4bits_initialize+1
  2326     04B3  3098               	movlw	152
  2327     04B4  00A2               	movwf	??_lcd_4bits_initialize
  2328     04B5                     u2787:
  2329     04B5  0BA2               	decfsz	??_lcd_4bits_initialize,f
  2330     04B6  2CB5               	goto	u2787
  2331     04B7  0BA3               	decfsz	??_lcd_4bits_initialize+1,f
  2332     04B8  2CB5               	goto	u2787
  2333     04B9  0BA4               	decfsz	??_lcd_4bits_initialize+2,f
  2334     04BA  2CB5               	goto	u2787
  2335     04BB  0000               	nop
  2336     04BC                     l2013:
  2337     04BC  3038               	movlw	56
  2338     04BD  00FC               	movwf	lcd_4bits_send_command@command
  2339     04BE  1283               	bcf	3,5	;RP0=0, select bank0
  2340     04BF  1303               	bcf	3,6	;RP1=0, select bank0
  2341     04C0  0827               	movf	lcd_4bits_initialize@lcd,w
  2342     04C1  120A  118A  2167  120A  118A  	fcall	_lcd_4bits_send_command
  2343     04C6                     l2015:
  2344                           
  2345                           ;ECU_LAYER/LCD/ecu_lcd.c: 28:         _delay((unsigned long)((50)*(8000000UL/4000.0)));
  2346     04C6  3082               	movlw	130
  2347     04C7  1283               	bcf	3,5	;RP0=0, select bank0
  2348     04C8  1303               	bcf	3,6	;RP1=0, select bank0
  2349     04C9  00A3               	movwf	??_lcd_4bits_initialize+1
  2350     04CA  30DD               	movlw	221
  2351     04CB  00A2               	movwf	??_lcd_4bits_initialize
  2352     04CC                     u2797:
  2353     04CC  0BA2               	decfsz	??_lcd_4bits_initialize,f
  2354     04CD  2CCC               	goto	u2797
  2355     04CE  0BA3               	decfsz	??_lcd_4bits_initialize+1,f
  2356     04CF  2CCC               	goto	u2797
  2357     04D0  3038               	movlw	56
  2358     04D1  00FC               	movwf	lcd_4bits_send_command@command
  2359     04D2  1283               	bcf	3,5	;RP0=0, select bank0
  2360     04D3  1303               	bcf	3,6	;RP1=0, select bank0
  2361     04D4  0827               	movf	lcd_4bits_initialize@lcd,w
  2362     04D5  120A  118A  2167  120A  118A  	fcall	_lcd_4bits_send_command
  2363     04DA                     l2017:
  2364                           
  2365                           ;ECU_LAYER/LCD/ecu_lcd.c: 30:         _delay((unsigned long)((150)*(8000000UL/4000000.0)
      +                          ));
  2366     04DA  3063               	movlw	99
  2367     04DB  1283               	bcf	3,5	;RP0=0, select bank0
  2368     04DC  1303               	bcf	3,6	;RP1=0, select bank0
  2369     04DD  00A2               	movwf	??_lcd_4bits_initialize
  2370     04DE                     u2807:
  2371     04DE  0BA2               	decfsz	??_lcd_4bits_initialize,f
  2372     04DF  2CDE               	goto	u2807
  2373     04E0                     l2019:
  2374     04E0  3038               	movlw	56
  2375     04E1  00FC               	movwf	lcd_4bits_send_command@command
  2376     04E2  1283               	bcf	3,5	;RP0=0, select bank0
  2377     04E3  1303               	bcf	3,6	;RP1=0, select bank0
  2378     04E4  0827               	movf	lcd_4bits_initialize@lcd,w
  2379     04E5  120A  118A  2167  120A  118A  	fcall	_lcd_4bits_send_command
  2380     04EA                     l2021:
  2381     04EA  01FC               	clrf	lcd_4bits_send_command@command
  2382     04EB  0AFC               	incf	lcd_4bits_send_command@command,f
  2383     04EC  1283               	bcf	3,5	;RP0=0, select bank0
  2384     04ED  1303               	bcf	3,6	;RP1=0, select bank0
  2385     04EE  0827               	movf	lcd_4bits_initialize@lcd,w
  2386     04EF  120A  118A  2167  120A  118A  	fcall	_lcd_4bits_send_command
  2387     04F4                     l2023:
  2388     04F4  3002               	movlw	2
  2389     04F5  00FC               	movwf	lcd_4bits_send_command@command
  2390     04F6  1283               	bcf	3,5	;RP0=0, select bank0
  2391     04F7  1303               	bcf	3,6	;RP1=0, select bank0
  2392     04F8  0827               	movf	lcd_4bits_initialize@lcd,w
  2393     04F9  120A  118A  2167  120A  118A  	fcall	_lcd_4bits_send_command
  2394     04FE                     l2025:
  2395     04FE  3006               	movlw	6
  2396     04FF  00FC               	movwf	lcd_4bits_send_command@command
  2397     0500  1283               	bcf	3,5	;RP0=0, select bank0
  2398     0501  1303               	bcf	3,6	;RP1=0, select bank0
  2399     0502  0827               	movf	lcd_4bits_initialize@lcd,w
  2400     0503  120A  118A  2167  120A  118A  	fcall	_lcd_4bits_send_command
  2401     0508                     l2027:
  2402     0508  300C               	movlw	12
  2403     0509  00FC               	movwf	lcd_4bits_send_command@command
  2404     050A  1283               	bcf	3,5	;RP0=0, select bank0
  2405     050B  1303               	bcf	3,6	;RP1=0, select bank0
  2406     050C  0827               	movf	lcd_4bits_initialize@lcd,w
  2407     050D  120A  118A  2167  120A  118A  	fcall	_lcd_4bits_send_command
  2408     0512                     l2029:
  2409     0512  3010               	movlw	16
  2410     0513  00FC               	movwf	lcd_4bits_send_command@command
  2411     0514  1283               	bcf	3,5	;RP0=0, select bank0
  2412     0515  1303               	bcf	3,6	;RP1=0, select bank0
  2413     0516  0827               	movf	lcd_4bits_initialize@lcd,w
  2414     0517  120A  118A  2167  120A  118A  	fcall	_lcd_4bits_send_command
  2415     051C                     l2031:
  2416     051C  3028               	movlw	40
  2417     051D  00FC               	movwf	lcd_4bits_send_command@command
  2418     051E  1283               	bcf	3,5	;RP0=0, select bank0
  2419     051F  1303               	bcf	3,6	;RP1=0, select bank0
  2420     0520  0827               	movf	lcd_4bits_initialize@lcd,w
  2421     0521  120A  118A  2167  120A  118A  	fcall	_lcd_4bits_send_command
  2422     0526                     l2033:
  2423     0526  3080               	movlw	128
  2424     0527  00FC               	movwf	lcd_4bits_send_command@command
  2425     0528  1283               	bcf	3,5	;RP0=0, select bank0
  2426     0529  1303               	bcf	3,6	;RP1=0, select bank0
  2427     052A  0827               	movf	lcd_4bits_initialize@lcd,w
  2428     052B  120A  118A  2167  120A  118A  	fcall	_lcd_4bits_send_command
  2429     0530                     l280:
  2430     0530  0008               	return
  2431     0531                     __end_of_lcd_4bits_initialize:
  2432                           
  2433                           	psect	text11
  2434     0167                     __ptext11:	
  2435 ;; *************** function _lcd_4bits_send_command *****************
  2436 ;; Defined at:
  2437 ;;		line 43 in file "ECU_LAYER/LCD/ecu_lcd.c"
  2438 ;; Parameters:    Size  Location     Type
  2439 ;;  lcd             1    wreg     PTR const struct .
  2440 ;;		 -> lcd(6), 
  2441 ;;  command         1   12[COMMON] unsigned char 
  2442 ;; Auto vars:     Size  Location     Type
  2443 ;;  lcd             1    1[BANK0 ] PTR const struct .
  2444 ;;		 -> lcd(6), 
  2445 ;;  ret             1    0[BANK0 ] unsigned char 
  2446 ;; Return value:  Size  Location     Type
  2447 ;;                  1    wreg      unsigned char 
  2448 ;; Registers used:
  2449 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2450 ;; Tracked objects:
  2451 ;;		On entry : 0/0
  2452 ;;		On exit  : 0/0
  2453 ;;		Unchanged: 0/0
  2454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2455 ;;      Params:         1       0       0       0       0
  2456 ;;      Locals:         0       2       0       0       0
  2457 ;;      Temps:          1       0       0       0       0
  2458 ;;      Totals:         2       2       0       0       0
  2459 ;;Total ram usage:        4 bytes
  2460 ;; Hardware stack levels used: 1
  2461 ;; Hardware stack levels required when called: 2
  2462 ;; This function calls:
  2463 ;;		_gpio_pin_write_logic
  2464 ;;		_send_4bits
  2465 ;;		_send_enable_signal
  2466 ;; This function is called by:
  2467 ;;		_lcd_4bits_initialize
  2468 ;;		_lcd_4bit_custom_character
  2469 ;;		_set_cursor
  2470 ;; This function uses a non-reentrant model
  2471 ;;
  2472                           
  2473     0167                     _lcd_4bits_send_command:	
  2474                           ;psect for function _lcd_4bits_send_command
  2475                           
  2476                           
  2477                           ;incstack = 0
  2478                           ; Regs used in _lcd_4bits_send_command: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  2479                           ;lcd_4bits_send_command@lcd stored from wreg
  2480     0167  1283               	bcf	3,5	;RP0=0, select bank0
  2481     0168  1303               	bcf	3,6	;RP1=0, select bank0
  2482     0169  00A1               	movwf	lcd_4bits_send_command@lcd
  2483     016A                     l1917:
  2484     016A                     l1919:
  2485                           
  2486                           ;ECU_LAYER/LCD/ecu_lcd.c: 45:     if(lcd == ((void*)0)){
  2487     016A  0821               	movf	lcd_4bits_send_command@lcd,w
  2488     016B  1D03               	btfss	3,2
  2489     016C  296E               	goto	u2041
  2490     016D  296F               	goto	u2040
  2491     016E                     u2041:
  2492     016E  2972               	goto	l1923
  2493     016F                     u2040:
  2494     016F                     l1921:
  2495                           
  2496                           ;ECU_LAYER/LCD/ecu_lcd.c: 46:         ret = 0x01;
  2497     016F  01A0               	clrf	lcd_4bits_send_command@ret
  2498     0170  0AA0               	incf	lcd_4bits_send_command@ret,f
  2499                           
  2500                           ;ECU_LAYER/LCD/ecu_lcd.c: 47:     }
  2501     0171  29AC               	goto	l1925
  2502     0172                     l1923:
  2503                           
  2504                           ;ECU_LAYER/LCD/ecu_lcd.c: 49:         ret = gpio_pin_write_logic(&(lcd->rs),GPIO_LOW);
  2505     0172  01F0               	clrf	gpio_pin_write_logic@logic
  2506     0173  0821               	movf	lcd_4bits_send_command@lcd,w
  2507     0174  120A  118A  2609  120A  118A  	fcall	_gpio_pin_write_logic
  2508     0179  1283               	bcf	3,5	;RP0=0, select bank0
  2509     017A  1303               	bcf	3,6	;RP1=0, select bank0
  2510     017B  00A0               	movwf	lcd_4bits_send_command@ret
  2511                           
  2512                           ;ECU_LAYER/LCD/ecu_lcd.c: 50:         ret = send_4bits(lcd,(command >> 4));
  2513     017C  087C               	movf	lcd_4bits_send_command@command,w
  2514     017D  00FD               	movwf	??_lcd_4bits_send_command
  2515     017E  3004               	movlw	4
  2516     017F                     u2055:
  2517     017F  1003               	clrc
  2518     0180  0CFD               	rrf	??_lcd_4bits_send_command,f
  2519     0181  3EFF               	addlw	-1
  2520     0182  1D03               	skipz
  2521     0183  297F               	goto	u2055
  2522     0184  087D               	movf	??_lcd_4bits_send_command,w
  2523     0185  00F8               	movwf	send_4bits@command
  2524     0186  0821               	movf	lcd_4bits_send_command@lcd,w
  2525     0187  120A  118A  223D  120A  118A  	fcall	_send_4bits
  2526     018C  1283               	bcf	3,5	;RP0=0, select bank0
  2527     018D  1303               	bcf	3,6	;RP1=0, select bank0
  2528     018E  00A0               	movwf	lcd_4bits_send_command@ret
  2529                           
  2530                           ;ECU_LAYER/LCD/ecu_lcd.c: 51:         ret = send_enable_signal(lcd);
  2531     018F  0821               	movf	lcd_4bits_send_command@lcd,w
  2532     0190  120A  118A  2065  120A  118A  	fcall	_send_enable_signal
  2533     0195  1283               	bcf	3,5	;RP0=0, select bank0
  2534     0196  1303               	bcf	3,6	;RP1=0, select bank0
  2535     0197  00A0               	movwf	lcd_4bits_send_command@ret
  2536                           
  2537                           ;ECU_LAYER/LCD/ecu_lcd.c: 52:         ret = send_4bits(lcd,command);
  2538     0198  087C               	movf	lcd_4bits_send_command@command,w
  2539     0199  00F8               	movwf	send_4bits@command
  2540     019A  0821               	movf	lcd_4bits_send_command@lcd,w
  2541     019B  120A  118A  223D  120A  118A  	fcall	_send_4bits
  2542     01A0  1283               	bcf	3,5	;RP0=0, select bank0
  2543     01A1  1303               	bcf	3,6	;RP1=0, select bank0
  2544     01A2  00A0               	movwf	lcd_4bits_send_command@ret
  2545                           
  2546                           ;ECU_LAYER/LCD/ecu_lcd.c: 53:         ret = send_enable_signal(lcd);
  2547     01A3  0821               	movf	lcd_4bits_send_command@lcd,w
  2548     01A4  120A  118A  2065  120A  118A  	fcall	_send_enable_signal
  2549     01A9  1283               	bcf	3,5	;RP0=0, select bank0
  2550     01AA  1303               	bcf	3,6	;RP1=0, select bank0
  2551     01AB  00A0               	movwf	lcd_4bits_send_command@ret
  2552     01AC                     l1925:
  2553                           
  2554                           ;ECU_LAYER/LCD/ecu_lcd.c: 55:     return ret;
  2555     01AC  0820               	movf	lcd_4bits_send_command@ret,w
  2556     01AD                     l285:
  2557     01AD  0008               	return
  2558     01AE                     __end_of_lcd_4bits_send_command:
  2559                           
  2560                           	psect	text12
  2561     0065                     __ptext12:	
  2562 ;; *************** function _send_enable_signal *****************
  2563 ;; Defined at:
  2564 ;;		line 150 in file "ECU_LAYER/LCD/ecu_lcd.c"
  2565 ;; Parameters:    Size  Location     Type
  2566 ;;  lcd             1    wreg     PTR const struct .
  2567 ;;		 -> lcd(6), 
  2568 ;; Auto vars:     Size  Location     Type
  2569 ;;  lcd             1   10[COMMON] PTR const struct .
  2570 ;;		 -> lcd(6), 
  2571 ;;  ret             1    9[COMMON] unsigned char 
  2572 ;; Return value:  Size  Location     Type
  2573 ;;                  1    wreg      unsigned char 
  2574 ;; Registers used:
  2575 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2576 ;; Tracked objects:
  2577 ;;		On entry : 0/0
  2578 ;;		On exit  : 0/0
  2579 ;;		Unchanged: 0/0
  2580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2581 ;;      Params:         0       0       0       0       0
  2582 ;;      Locals:         2       0       0       0       0
  2583 ;;      Temps:          1       0       0       0       0
  2584 ;;      Totals:         3       0       0       0       0
  2585 ;;Total ram usage:        3 bytes
  2586 ;; Hardware stack levels used: 1
  2587 ;; Hardware stack levels required when called: 1
  2588 ;; This function calls:
  2589 ;;		_gpio_pin_write_logic
  2590 ;; This function is called by:
  2591 ;;		_lcd_4bits_send_command
  2592 ;;		_lcd_4bits_send_char
  2593 ;; This function uses a non-reentrant model
  2594 ;;
  2595                           
  2596     0065                     _send_enable_signal:	
  2597                           ;psect for function _send_enable_signal
  2598                           
  2599                           
  2600                           ;incstack = 0
  2601                           ; Regs used in _send_enable_signal: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2602                           ;send_enable_signal@lcd stored from wreg
  2603     0065  00FA               	movwf	send_enable_signal@lcd
  2604     0066                     l1767:
  2605     0066                     l1769:
  2606                           
  2607                           ;ECU_LAYER/LCD/ecu_lcd.c: 152:     if(lcd == ((void*)0)){
  2608     0066  087A               	movf	send_enable_signal@lcd,w
  2609     0067  1D03               	btfss	3,2
  2610     0068  286A               	goto	u1681
  2611     0069  286B               	goto	u1680
  2612     006A                     u1681:
  2613     006A  286E               	goto	l1773
  2614     006B                     u1680:
  2615     006B                     l1771:
  2616                           
  2617                           ;ECU_LAYER/LCD/ecu_lcd.c: 153:         ret = 0x01;
  2618     006B  01F9               	clrf	send_enable_signal@ret
  2619     006C  0AF9               	incf	send_enable_signal@ret,f
  2620                           
  2621                           ;ECU_LAYER/LCD/ecu_lcd.c: 154:     }
  2622     006D  2884               	goto	l333
  2623     006E                     l1773:
  2624     006E  01F0               	clrf	gpio_pin_write_logic@logic
  2625     006F  0AF0               	incf	gpio_pin_write_logic@logic,f
  2626     0070  087A               	movf	send_enable_signal@lcd,w
  2627     0071  3E01               	addlw	1
  2628     0072  120A  118A  2609  120A  118A  	fcall	_gpio_pin_write_logic
  2629     0077                     l1775:
  2630                           
  2631                           ;ECU_LAYER/LCD/ecu_lcd.c: 157:         _delay((unsigned long)((5)*(8000000UL/4000000.0))
      +                          );
  2632     0077  3003               	movlw	3
  2633     0078  00F8               	movwf	??_send_enable_signal
  2634     0079                     u2817:
  2635     0079  0BF8               	decfsz	??_send_enable_signal,f
  2636     007A  2879               	goto	u2817
  2637     007B                     l1777:
  2638                           
  2639                           ;ECU_LAYER/LCD/ecu_lcd.c: 158:         ret = gpio_pin_write_logic(&(lcd->en),GPIO_LOW);
  2640     007B  01F0               	clrf	gpio_pin_write_logic@logic
  2641     007C  087A               	movf	send_enable_signal@lcd,w
  2642     007D  3E01               	addlw	1
  2643     007E  120A  118A  2609  120A  118A  	fcall	_gpio_pin_write_logic
  2644     0083  00F9               	movwf	send_enable_signal@ret
  2645     0084                     l333:	
  2646                           ;ECU_LAYER/LCD/ecu_lcd.c: 159:     }
  2647                           
  2648                           
  2649                           ;ECU_LAYER/LCD/ecu_lcd.c: 160:     return ret;
  2650     0084  0879               	movf	send_enable_signal@ret,w
  2651     0085                     l334:
  2652     0085  0008               	return
  2653     0086                     __end_of_send_enable_signal:
  2654                           
  2655                           	psect	text13
  2656     023D                     __ptext13:	
  2657 ;; *************** function _send_4bits *****************
  2658 ;; Defined at:
  2659 ;;		line 136 in file "ECU_LAYER/LCD/ecu_lcd.c"
  2660 ;; Parameters:    Size  Location     Type
  2661 ;;  lcd             1    wreg     PTR struct .
  2662 ;;		 -> lcd(6), 
  2663 ;;  command         1    8[COMMON] unsigned char 
  2664 ;; Auto vars:     Size  Location     Type
  2665 ;;  lcd             1   11[COMMON] PTR struct .
  2666 ;;		 -> lcd(6), 
  2667 ;;  ret             1   10[COMMON] unsigned char 
  2668 ;; Return value:  Size  Location     Type
  2669 ;;                  1    wreg      unsigned char 
  2670 ;; Registers used:
  2671 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2672 ;; Tracked objects:
  2673 ;;		On entry : 0/0
  2674 ;;		On exit  : 0/0
  2675 ;;		Unchanged: 0/0
  2676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2677 ;;      Params:         1       0       0       0       0
  2678 ;;      Locals:         2       0       0       0       0
  2679 ;;      Temps:          1       0       0       0       0
  2680 ;;      Totals:         4       0       0       0       0
  2681 ;;Total ram usage:        4 bytes
  2682 ;; Hardware stack levels used: 1
  2683 ;; Hardware stack levels required when called: 1
  2684 ;; This function calls:
  2685 ;;		_gpio_pin_write_logic
  2686 ;; This function is called by:
  2687 ;;		_lcd_4bits_send_command
  2688 ;;		_lcd_4bits_send_char
  2689 ;; This function uses a non-reentrant model
  2690 ;;
  2691                           
  2692     023D                     _send_4bits:	
  2693                           ;psect for function _send_4bits
  2694                           
  2695                           
  2696                           ;incstack = 0
  2697                           ; Regs used in _send_4bits: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2698                           ;send_4bits@lcd stored from wreg
  2699     023D  00FB               	movwf	send_4bits@lcd
  2700     023E                     l1755:
  2701     023E                     l1757:
  2702                           
  2703                           ;ECU_LAYER/LCD/ecu_lcd.c: 138:     if(lcd == ((void*)0)){
  2704     023E  087B               	movf	send_4bits@lcd,w
  2705     023F  1D03               	btfss	3,2
  2706     0240  2A42               	goto	u1651
  2707     0241  2A43               	goto	u1650
  2708     0242                     u1651:
  2709     0242  2A46               	goto	l1761
  2710     0243                     u1650:
  2711     0243                     l1759:
  2712                           
  2713                           ;ECU_LAYER/LCD/ecu_lcd.c: 139:         ret = 0x01;
  2714     0243  01FA               	clrf	send_4bits@ret
  2715     0244  0AFA               	incf	send_4bits@ret,f
  2716                           
  2717                           ;ECU_LAYER/LCD/ecu_lcd.c: 140:     }
  2718     0245  2A85               	goto	l1763
  2719     0246                     l1761:
  2720                           
  2721                           ;ECU_LAYER/LCD/ecu_lcd.c: 142:         ret = gpio_pin_write_logic(&(lcd->pins[0]),((comm
      +                          and >> 0) & 0x01));
  2722     0246  0878               	movf	send_4bits@command,w
  2723     0247  3901               	andlw	1
  2724     0248  00F0               	movwf	gpio_pin_write_logic@logic
  2725     0249  087B               	movf	send_4bits@lcd,w
  2726     024A  3E02               	addlw	2
  2727     024B  120A  118A  2609  120A  118A  	fcall	_gpio_pin_write_logic
  2728     0250  00FA               	movwf	send_4bits@ret
  2729                           
  2730                           ;ECU_LAYER/LCD/ecu_lcd.c: 143:         ret = gpio_pin_write_logic(&(lcd->pins[1]),((comm
      +                          and >> 1) & 0x01));
  2731     0251  0878               	movf	send_4bits@command,w
  2732     0252  00F9               	movwf	??_send_4bits
  2733     0253  1003               	clrc
  2734     0254  0C79               	rrf	??_send_4bits,w
  2735     0255  3901               	andlw	1
  2736     0256  00F0               	movwf	gpio_pin_write_logic@logic
  2737     0257  087B               	movf	send_4bits@lcd,w
  2738     0258  3E03               	addlw	3
  2739     0259  120A  118A  2609  120A  118A  	fcall	_gpio_pin_write_logic
  2740     025E  00FA               	movwf	send_4bits@ret
  2741                           
  2742                           ;ECU_LAYER/LCD/ecu_lcd.c: 144:         ret = gpio_pin_write_logic(&(lcd->pins[2]),((comm
      +                          and >> 2) & 0x01));
  2743     025F  0878               	movf	send_4bits@command,w
  2744     0260  00F9               	movwf	??_send_4bits
  2745     0261  3002               	movlw	2
  2746     0262                     u1665:
  2747     0262  1003               	clrc
  2748     0263  0CF9               	rrf	??_send_4bits,f
  2749     0264  3EFF               	addlw	-1
  2750     0265  1D03               	skipz
  2751     0266  2A62               	goto	u1665
  2752     0267  0879               	movf	??_send_4bits,w
  2753     0268  3901               	andlw	1
  2754     0269  00F0               	movwf	gpio_pin_write_logic@logic
  2755     026A  087B               	movf	send_4bits@lcd,w
  2756     026B  3E04               	addlw	4
  2757     026C  120A  118A  2609  120A  118A  	fcall	_gpio_pin_write_logic
  2758     0271  00FA               	movwf	send_4bits@ret
  2759                           
  2760                           ;ECU_LAYER/LCD/ecu_lcd.c: 145:         ret = gpio_pin_write_logic(&(lcd->pins[3]),((comm
      +                          and >> 3) & 0x01));
  2761     0272  0878               	movf	send_4bits@command,w
  2762     0273  00F9               	movwf	??_send_4bits
  2763     0274  3003               	movlw	3
  2764     0275                     u1675:
  2765     0275  1003               	clrc
  2766     0276  0CF9               	rrf	??_send_4bits,f
  2767     0277  3EFF               	addlw	-1
  2768     0278  1D03               	skipz
  2769     0279  2A75               	goto	u1675
  2770     027A  0879               	movf	??_send_4bits,w
  2771     027B  3901               	andlw	1
  2772     027C  00F0               	movwf	gpio_pin_write_logic@logic
  2773     027D  087B               	movf	send_4bits@lcd,w
  2774     027E  3E05               	addlw	5
  2775     027F  120A  118A  2609  120A  118A  	fcall	_gpio_pin_write_logic
  2776     0284  00FA               	movwf	send_4bits@ret
  2777     0285                     l1763:
  2778                           
  2779                           ;ECU_LAYER/LCD/ecu_lcd.c: 147:     return ret;
  2780     0285  087A               	movf	send_4bits@ret,w
  2781     0286                     l329:
  2782     0286  0008               	return
  2783     0287                     __end_of_send_4bits:
  2784                           
  2785                           	psect	text14
  2786     03E8                     __ptext14:	
  2787 ;; *************** function _gpio_pin_initialize *****************
  2788 ;; Defined at:
  2789 ;;		line 103 in file "MCAL_LAYER/GPIO/mcal_gpio.c"
  2790 ;; Parameters:    Size  Location     Type
  2791 ;;  pin             1    wreg     PTR const struct .
  2792 ;;		 -> pin8(1), pin7(1), pin6(1), pin5(1), 
  2793 ;;		 -> pin4(1), pin3(1), pin2(1), pin1(1), 
  2794 ;;		 -> lcd$pins(4), lcd(6), motor2$pins(2), motor2(2), 
  2795 ;;		 -> motor1$pins(2), motor1(2), 
  2796 ;; Auto vars:     Size  Location     Type
  2797 ;;  pin             1   11[COMMON] PTR const struct .
  2798 ;;		 -> pin8(1), pin7(1), pin6(1), pin5(1), 
  2799 ;;		 -> pin4(1), pin3(1), pin2(1), pin1(1), 
  2800 ;;		 -> lcd$pins(4), lcd(6), motor2$pins(2), motor2(2), 
  2801 ;;		 -> motor1$pins(2), motor1(2), 
  2802 ;;  ret             1   10[COMMON] unsigned char 
  2803 ;; Return value:  Size  Location     Type
  2804 ;;                  1    wreg      unsigned char 
  2805 ;; Registers used:
  2806 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2807 ;; Tracked objects:
  2808 ;;		On entry : 0/0
  2809 ;;		On exit  : 0/0
  2810 ;;		Unchanged: 0/0
  2811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2812 ;;      Params:         0       0       0       0       0
  2813 ;;      Locals:         2       0       0       0       0
  2814 ;;      Temps:          2       0       0       0       0
  2815 ;;      Totals:         4       0       0       0       0
  2816 ;;Total ram usage:        4 bytes
  2817 ;; Hardware stack levels used: 1
  2818 ;; Hardware stack levels required when called: 1
  2819 ;; This function calls:
  2820 ;;		_gpio_pin_direction_initialize
  2821 ;;		_gpio_pin_write_logic
  2822 ;; This function is called by:
  2823 ;;		_motor_initialize
  2824 ;;		_ecu_initialzie
  2825 ;;		_lcd_4bits_initialize
  2826 ;; This function uses a non-reentrant model
  2827 ;;
  2828                           
  2829     03E8                     _gpio_pin_initialize:	
  2830                           ;psect for function _gpio_pin_initialize
  2831                           
  2832                           
  2833                           ;incstack = 0
  2834                           ; Regs used in _gpio_pin_initialize: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  2835                           ;gpio_pin_initialize@pin stored from wreg
  2836     03E8  00FB               	movwf	gpio_pin_initialize@pin
  2837     03E9                     l1885:
  2838                           
  2839                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 104:     uint8 ret = 0x00;
  2840     03E9  01FA               	clrf	gpio_pin_initialize@ret
  2841     03EA                     l1887:
  2842                           
  2843                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 105:     if (pin == ((void*)0)) {
  2844     03EA  087B               	movf	gpio_pin_initialize@pin,w
  2845     03EB  1D03               	btfss	3,2
  2846     03EC  2BEE               	goto	u1931
  2847     03ED  2BEF               	goto	u1930
  2848     03EE                     u1931:
  2849     03EE  2BF2               	goto	l1891
  2850     03EF                     u1930:
  2851     03EF                     l1889:
  2852                           
  2853                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 106:         ret = 0x01;
  2854     03EF  01FA               	clrf	gpio_pin_initialize@ret
  2855     03F0  0AFA               	incf	gpio_pin_initialize@ret,f
  2856                           
  2857                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 107:     } else {
  2858     03F1  2C79               	goto	l1913
  2859     03F2                     l1891:
  2860                           
  2861                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 108:         if ((pin->port == PORTA_INDEX && pin->pin < 6
      +                          ) || (pin->port == PORTB_INDEX && pin->pin < 8) || (pin->port == PORTC_INDEX && pin->pin
      +                           < 8) ||
  2862     03F2  087B               	movf	gpio_pin_initialize@pin,w
  2863     03F3  0084               	movwf	4
  2864     03F4  1383               	bcf	3,7	;select IRP bank0
  2865     03F5  0800               	movf	0,w
  2866     03F6  3907               	andlw	7
  2867     03F7  3A00               	xorlw	0
  2868     03F8  1D03               	skipz
  2869     03F9  2BFB               	goto	u1941
  2870     03FA  2BFC               	goto	u1940
  2871     03FB                     u1941:
  2872     03FB  2C0A               	goto	l1895
  2873     03FC                     u1940:
  2874     03FC                     l1893:
  2875     03FC  087B               	movf	gpio_pin_initialize@pin,w
  2876     03FD  0084               	movwf	4
  2877     03FE  0C00               	rrf	0,w
  2878     03FF  00F8               	movwf	??_gpio_pin_initialize
  2879     0400  0CF8               	rrf	??_gpio_pin_initialize,f
  2880     0401  0C78               	rrf	??_gpio_pin_initialize,w
  2881     0402  3907               	andlw	7
  2882     0403  00F9               	movwf	??_gpio_pin_initialize+1
  2883     0404  3006               	movlw	6
  2884     0405  0279               	subwf	??_gpio_pin_initialize+1,w
  2885     0406  1C03               	skipc
  2886     0407  2C09               	goto	u1951
  2887     0408  2C0A               	goto	u1950
  2888     0409                     u1951:
  2889     0409  2C66               	goto	l1911
  2890     040A                     u1950:
  2891     040A                     l1895:
  2892     040A  087B               	movf	gpio_pin_initialize@pin,w
  2893     040B  0084               	movwf	4
  2894     040C  0800               	movf	0,w
  2895     040D  3907               	andlw	7
  2896     040E  3A01               	xorlw	1
  2897     040F  1D03               	skipz
  2898     0410  2C12               	goto	u1961
  2899     0411  2C13               	goto	u1960
  2900     0412                     u1961:
  2901     0412  2C21               	goto	l1899
  2902     0413                     u1960:
  2903     0413                     l1897:
  2904     0413  087B               	movf	gpio_pin_initialize@pin,w
  2905     0414  0084               	movwf	4
  2906     0415  0C00               	rrf	0,w
  2907     0416  00F8               	movwf	??_gpio_pin_initialize
  2908     0417  0CF8               	rrf	??_gpio_pin_initialize,f
  2909     0418  0C78               	rrf	??_gpio_pin_initialize,w
  2910     0419  3907               	andlw	7
  2911     041A  00F9               	movwf	??_gpio_pin_initialize+1
  2912     041B  3008               	movlw	8
  2913     041C  0279               	subwf	??_gpio_pin_initialize+1,w
  2914     041D  1C03               	skipc
  2915     041E  2C20               	goto	u1971
  2916     041F  2C21               	goto	u1970
  2917     0420                     u1971:
  2918     0420  2C66               	goto	l1911
  2919     0421                     u1970:
  2920     0421                     l1899:
  2921     0421  087B               	movf	gpio_pin_initialize@pin,w
  2922     0422  0084               	movwf	4
  2923     0423  0800               	movf	0,w
  2924     0424  3907               	andlw	7
  2925     0425  3A02               	xorlw	2
  2926     0426  1D03               	skipz
  2927     0427  2C29               	goto	u1981
  2928     0428  2C2A               	goto	u1980
  2929     0429                     u1981:
  2930     0429  2C38               	goto	l1903
  2931     042A                     u1980:
  2932     042A                     l1901:
  2933     042A  087B               	movf	gpio_pin_initialize@pin,w
  2934     042B  0084               	movwf	4
  2935     042C  0C00               	rrf	0,w
  2936     042D  00F8               	movwf	??_gpio_pin_initialize
  2937     042E  0CF8               	rrf	??_gpio_pin_initialize,f
  2938     042F  0C78               	rrf	??_gpio_pin_initialize,w
  2939     0430  3907               	andlw	7
  2940     0431  00F9               	movwf	??_gpio_pin_initialize+1
  2941     0432  3008               	movlw	8
  2942     0433  0279               	subwf	??_gpio_pin_initialize+1,w
  2943     0434  1C03               	skipc
  2944     0435  2C37               	goto	u1991
  2945     0436  2C38               	goto	u1990
  2946     0437                     u1991:
  2947     0437  2C66               	goto	l1911
  2948     0438                     u1990:
  2949     0438                     l1903:
  2950     0438  087B               	movf	gpio_pin_initialize@pin,w
  2951     0439  0084               	movwf	4
  2952     043A  0800               	movf	0,w
  2953     043B  3907               	andlw	7
  2954     043C  3A03               	xorlw	3
  2955     043D  1D03               	skipz
  2956     043E  2C40               	goto	u2001
  2957     043F  2C41               	goto	u2000
  2958     0440                     u2001:
  2959     0440  2C4F               	goto	l1907
  2960     0441                     u2000:
  2961     0441                     l1905:
  2962     0441  087B               	movf	gpio_pin_initialize@pin,w
  2963     0442  0084               	movwf	4
  2964     0443  0C00               	rrf	0,w
  2965     0444  00F8               	movwf	??_gpio_pin_initialize
  2966     0445  0CF8               	rrf	??_gpio_pin_initialize,f
  2967     0446  0C78               	rrf	??_gpio_pin_initialize,w
  2968     0447  3907               	andlw	7
  2969     0448  00F9               	movwf	??_gpio_pin_initialize+1
  2970     0449  3008               	movlw	8
  2971     044A  0279               	subwf	??_gpio_pin_initialize+1,w
  2972     044B  1C03               	skipc
  2973     044C  2C4E               	goto	u2011
  2974     044D  2C4F               	goto	u2010
  2975     044E                     u2011:
  2976     044E  2C66               	goto	l1911
  2977     044F                     u2010:
  2978     044F                     l1907:
  2979     044F  087B               	movf	gpio_pin_initialize@pin,w
  2980     0450  0084               	movwf	4
  2981     0451  0800               	movf	0,w
  2982     0452  3907               	andlw	7
  2983     0453  3A04               	xorlw	4
  2984     0454  1D03               	skipz
  2985     0455  2C57               	goto	u2021
  2986     0456  2C58               	goto	u2020
  2987     0457                     u2021:
  2988     0457  2BEF               	goto	l1889
  2989     0458                     u2020:
  2990     0458                     l1909:
  2991     0458  087B               	movf	gpio_pin_initialize@pin,w
  2992     0459  0084               	movwf	4
  2993     045A  0C00               	rrf	0,w
  2994     045B  00F8               	movwf	??_gpio_pin_initialize
  2995     045C  0CF8               	rrf	??_gpio_pin_initialize,f
  2996     045D  0C78               	rrf	??_gpio_pin_initialize,w
  2997     045E  3907               	andlw	7
  2998     045F  00F9               	movwf	??_gpio_pin_initialize+1
  2999     0460  3003               	movlw	3
  3000     0461  0279               	subwf	??_gpio_pin_initialize+1,w
  3001     0462  1803               	skipnc
  3002     0463  2C65               	goto	u2031
  3003     0464  2C66               	goto	u2030
  3004     0465                     u2031:
  3005     0465  2BEF               	goto	l1889
  3006     0466                     u2030:
  3007     0466                     l1911:
  3008                           
  3009                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 109:                 (pin->port == PORTD_INDEX && pin->pin
      +                           < 8) || (pin->port == PORTE_INDEX && pin->pin < 3)) {;MCAL_LAYER/GPIO/mcal_gpio.c: 110:
      +                                       gpio_pin_direction_initialize(pin);
  3010     0466  087B               	movf	gpio_pin_initialize@pin,w
  3011     0467  120A  118A  2531  120A  118A  	fcall	_gpio_pin_direction_initialize
  3012                           
  3013                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 111:             gpio_pin_write_logic(pin, pin->logic);
  3014     046C  087B               	movf	gpio_pin_initialize@pin,w
  3015     046D  0084               	movwf	4
  3016     046E  3000               	movlw	0
  3017     046F  1383               	bcf	3,7	;select IRP bank0
  3018     0470  1B00               	btfsc	0,6
  3019     0471  3001               	movlw	1
  3020     0472  00F0               	movwf	gpio_pin_write_logic@logic
  3021     0473  087B               	movf	gpio_pin_initialize@pin,w
  3022     0474  120A  118A  2609  120A  118A  	fcall	_gpio_pin_write_logic
  3023     0479                     l1913:	
  3024                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 112:         } else {
  3025                           
  3026                           
  3027                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 116:     return ret;
  3028     0479  087A               	movf	gpio_pin_initialize@ret,w
  3029     047A                     l193:
  3030     047A  0008               	return
  3031     047B                     __end_of_gpio_pin_initialize:
  3032                           
  3033                           	psect	text15
  3034     0609                     __ptext15:	
  3035 ;; *************** function _gpio_pin_write_logic *****************
  3036 ;; Defined at:
  3037 ;;		line 50 in file "MCAL_LAYER/GPIO/mcal_gpio.c"
  3038 ;; Parameters:    Size  Location     Type
  3039 ;;  pin             1    wreg     PTR const struct .
  3040 ;;		 -> pin8(1), pin7(1), pin6(1), pin5(1), 
  3041 ;;		 -> pin4(1), pin3(1), pin2(1), pin1(1), 
  3042 ;;		 -> lcd$pins(4), lcd(6), motor2$pins(2), motor2(2), 
  3043 ;;		 -> motor1$pins(2), motor1(2), 
  3044 ;;  logic           1    0[COMMON] enum E1519
  3045 ;; Auto vars:     Size  Location     Type
  3046 ;;  pin             1    7[COMMON] PTR const struct .
  3047 ;;		 -> pin8(1), pin7(1), pin6(1), pin5(1), 
  3048 ;;		 -> pin4(1), pin3(1), pin2(1), pin1(1), 
  3049 ;;		 -> lcd$pins(4), lcd(6), motor2$pins(2), motor2(2), 
  3050 ;;		 -> motor1$pins(2), motor1(2), 
  3051 ;;  ret             1    6[COMMON] unsigned char 
  3052 ;; Return value:  Size  Location     Type
  3053 ;;                  1    wreg      unsigned char 
  3054 ;; Registers used:
  3055 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3056 ;; Tracked objects:
  3057 ;;		On entry : 0/0
  3058 ;;		On exit  : 0/0
  3059 ;;		Unchanged: 0/0
  3060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3061 ;;      Params:         1       0       0       0       0
  3062 ;;      Locals:         2       0       0       0       0
  3063 ;;      Temps:          5       0       0       0       0
  3064 ;;      Totals:         8       0       0       0       0
  3065 ;;Total ram usage:        8 bytes
  3066 ;; Hardware stack levels used: 1
  3067 ;; This function calls:
  3068 ;;		Nothing
  3069 ;; This function is called by:
  3070 ;;		_gpio_pin_initialize
  3071 ;;		_lcd_4bits_send_command
  3072 ;;		_lcd_4bits_send_char
  3073 ;;		_send_4bits
  3074 ;;		_send_enable_signal
  3075 ;;		_motor_turn_right
  3076 ;;		_motor_turn_left
  3077 ;;		_motor_turn_off
  3078 ;; This function uses a non-reentrant model
  3079 ;;
  3080                           
  3081     0609                     _gpio_pin_write_logic:	
  3082                           ;psect for function _gpio_pin_write_logic
  3083                           
  3084                           
  3085                           ;incstack = 0
  3086                           ; Regs used in _gpio_pin_write_logic: [wreg-fsr0h+status,2+status,0+btemp+1]
  3087                           ;gpio_pin_write_logic@pin stored from wreg
  3088     0609  00F7               	movwf	gpio_pin_write_logic@pin
  3089     060A                     l1679:
  3090                           
  3091                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 51:     uint8 ret = 0x00;
  3092     060A  01F6               	clrf	gpio_pin_write_logic@ret
  3093     060B                     l1681:
  3094                           
  3095                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 52:     if (pin == ((void*)0)) {
  3096     060B  0877               	movf	gpio_pin_write_logic@pin,w
  3097     060C  1D03               	btfss	3,2
  3098     060D  2E0F               	goto	u1391
  3099     060E  2E10               	goto	u1390
  3100     060F                     u1391:
  3101     060F  2E13               	goto	l1685
  3102     0610                     u1390:
  3103     0610                     l1683:
  3104                           
  3105                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 53:         ret = 0x01;
  3106     0610  01F6               	clrf	gpio_pin_write_logic@ret
  3107     0611  0AF6               	incf	gpio_pin_write_logic@ret,f
  3108                           
  3109                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 54:     } else {
  3110     0612  2EE7               	goto	l1713
  3111     0613                     l1685:
  3112                           
  3113                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 55:         if ((pin->port == PORTA_INDEX && pin->pin < 6)
      +                           || (pin->port == PORTB_INDEX && pin->pin < 8) || (pin->port == PORTC_INDEX && pin->pin 
      +                          < 8) ||
  3114     0613  0877               	movf	gpio_pin_write_logic@pin,w
  3115     0614  0084               	movwf	4
  3116     0615  1383               	bcf	3,7	;select IRP bank0
  3117     0616  0800               	movf	0,w
  3118     0617  3907               	andlw	7
  3119     0618  3A00               	xorlw	0
  3120     0619  1D03               	skipz
  3121     061A  2E1C               	goto	u1401
  3122     061B  2E1D               	goto	u1400
  3123     061C                     u1401:
  3124     061C  2E2B               	goto	l1689
  3125     061D                     u1400:
  3126     061D                     l1687:
  3127     061D  0877               	movf	gpio_pin_write_logic@pin,w
  3128     061E  0084               	movwf	4
  3129     061F  0C00               	rrf	0,w
  3130     0620  00F1               	movwf	??_gpio_pin_write_logic
  3131     0621  0CF1               	rrf	??_gpio_pin_write_logic,f
  3132     0622  0C71               	rrf	??_gpio_pin_write_logic,w
  3133     0623  3907               	andlw	7
  3134     0624  00F2               	movwf	??_gpio_pin_write_logic+1
  3135     0625  3006               	movlw	6
  3136     0626  0272               	subwf	??_gpio_pin_write_logic+1,w
  3137     0627  1C03               	skipc
  3138     0628  2E2A               	goto	u1411
  3139     0629  2E2B               	goto	u1410
  3140     062A                     u1411:
  3141     062A  2ED7               	goto	l1711
  3142     062B                     u1410:
  3143     062B                     l1689:
  3144     062B  0877               	movf	gpio_pin_write_logic@pin,w
  3145     062C  0084               	movwf	4
  3146     062D  0800               	movf	0,w
  3147     062E  3907               	andlw	7
  3148     062F  3A01               	xorlw	1
  3149     0630  1D03               	skipz
  3150     0631  2E33               	goto	u1421
  3151     0632  2E34               	goto	u1420
  3152     0633                     u1421:
  3153     0633  2E42               	goto	l1693
  3154     0634                     u1420:
  3155     0634                     l1691:
  3156     0634  0877               	movf	gpio_pin_write_logic@pin,w
  3157     0635  0084               	movwf	4
  3158     0636  0C00               	rrf	0,w
  3159     0637  00F1               	movwf	??_gpio_pin_write_logic
  3160     0638  0CF1               	rrf	??_gpio_pin_write_logic,f
  3161     0639  0C71               	rrf	??_gpio_pin_write_logic,w
  3162     063A  3907               	andlw	7
  3163     063B  00F2               	movwf	??_gpio_pin_write_logic+1
  3164     063C  3008               	movlw	8
  3165     063D  0272               	subwf	??_gpio_pin_write_logic+1,w
  3166     063E  1C03               	skipc
  3167     063F  2E41               	goto	u1431
  3168     0640  2E42               	goto	u1430
  3169     0641                     u1431:
  3170     0641  2ED7               	goto	l1711
  3171     0642                     u1430:
  3172     0642                     l1693:
  3173     0642  0877               	movf	gpio_pin_write_logic@pin,w
  3174     0643  0084               	movwf	4
  3175     0644  0800               	movf	0,w
  3176     0645  3907               	andlw	7
  3177     0646  3A02               	xorlw	2
  3178     0647  1D03               	skipz
  3179     0648  2E4A               	goto	u1441
  3180     0649  2E4B               	goto	u1440
  3181     064A                     u1441:
  3182     064A  2E59               	goto	l1697
  3183     064B                     u1440:
  3184     064B                     l1695:
  3185     064B  0877               	movf	gpio_pin_write_logic@pin,w
  3186     064C  0084               	movwf	4
  3187     064D  0C00               	rrf	0,w
  3188     064E  00F1               	movwf	??_gpio_pin_write_logic
  3189     064F  0CF1               	rrf	??_gpio_pin_write_logic,f
  3190     0650  0C71               	rrf	??_gpio_pin_write_logic,w
  3191     0651  3907               	andlw	7
  3192     0652  00F2               	movwf	??_gpio_pin_write_logic+1
  3193     0653  3008               	movlw	8
  3194     0654  0272               	subwf	??_gpio_pin_write_logic+1,w
  3195     0655  1C03               	skipc
  3196     0656  2E58               	goto	u1451
  3197     0657  2E59               	goto	u1450
  3198     0658                     u1451:
  3199     0658  2ED7               	goto	l1711
  3200     0659                     u1450:
  3201     0659                     l1697:
  3202     0659  0877               	movf	gpio_pin_write_logic@pin,w
  3203     065A  0084               	movwf	4
  3204     065B  0800               	movf	0,w
  3205     065C  3907               	andlw	7
  3206     065D  3A03               	xorlw	3
  3207     065E  1D03               	skipz
  3208     065F  2E61               	goto	u1461
  3209     0660  2E62               	goto	u1460
  3210     0661                     u1461:
  3211     0661  2E70               	goto	l1701
  3212     0662                     u1460:
  3213     0662                     l1699:
  3214     0662  0877               	movf	gpio_pin_write_logic@pin,w
  3215     0663  0084               	movwf	4
  3216     0664  0C00               	rrf	0,w
  3217     0665  00F1               	movwf	??_gpio_pin_write_logic
  3218     0666  0CF1               	rrf	??_gpio_pin_write_logic,f
  3219     0667  0C71               	rrf	??_gpio_pin_write_logic,w
  3220     0668  3907               	andlw	7
  3221     0669  00F2               	movwf	??_gpio_pin_write_logic+1
  3222     066A  3008               	movlw	8
  3223     066B  0272               	subwf	??_gpio_pin_write_logic+1,w
  3224     066C  1C03               	skipc
  3225     066D  2E6F               	goto	u1471
  3226     066E  2E70               	goto	u1470
  3227     066F                     u1471:
  3228     066F  2ED7               	goto	l1711
  3229     0670                     u1470:
  3230     0670                     l1701:
  3231     0670  0877               	movf	gpio_pin_write_logic@pin,w
  3232     0671  0084               	movwf	4
  3233     0672  0800               	movf	0,w
  3234     0673  3907               	andlw	7
  3235     0674  3A04               	xorlw	4
  3236     0675  1D03               	skipz
  3237     0676  2E78               	goto	u1481
  3238     0677  2E79               	goto	u1480
  3239     0678                     u1481:
  3240     0678  2E10               	goto	l1683
  3241     0679                     u1480:
  3242     0679                     l1703:
  3243     0679  0877               	movf	gpio_pin_write_logic@pin,w
  3244     067A  0084               	movwf	4
  3245     067B  0C00               	rrf	0,w
  3246     067C  00F1               	movwf	??_gpio_pin_write_logic
  3247     067D  0CF1               	rrf	??_gpio_pin_write_logic,f
  3248     067E  0C71               	rrf	??_gpio_pin_write_logic,w
  3249     067F  3907               	andlw	7
  3250     0680  00F2               	movwf	??_gpio_pin_write_logic+1
  3251     0681  3003               	movlw	3
  3252     0682  0272               	subwf	??_gpio_pin_write_logic+1,w
  3253     0683  1803               	skipnc
  3254     0684  2E86               	goto	u1491
  3255     0685  2E87               	goto	u1490
  3256     0686                     u1491:
  3257     0686  2E10               	goto	l1683
  3258     0687                     u1490:
  3259     0687  2ED7               	goto	l1711
  3260     0688                     l1705:
  3261                           
  3262                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 60:                     (*port_registers[pin->port] |= (0x
      +                          01 << pin->pin));
  3263     0688  3001               	movlw	1
  3264     0689  00F1               	movwf	??_gpio_pin_write_logic
  3265     068A  0877               	movf	gpio_pin_write_logic@pin,w
  3266     068B  0084               	movwf	4
  3267     068C  0C00               	rrf	0,w
  3268     068D  00F2               	movwf	??_gpio_pin_write_logic+1
  3269     068E  0CF2               	rrf	??_gpio_pin_write_logic+1,f
  3270     068F  0C72               	rrf	??_gpio_pin_write_logic+1,w
  3271     0690  3907               	andlw	7
  3272     0691  3E01               	addlw	1
  3273     0692  2E95               	goto	u1504
  3274     0693                     u1505:
  3275     0693  1003               	clrc
  3276     0694  0DF1               	rlf	??_gpio_pin_write_logic,f
  3277     0695                     u1504:
  3278     0695  3EFF               	addlw	-1
  3279     0696  1D03               	skipz
  3280     0697  2E93               	goto	u1505
  3281     0698  0871               	movf	??_gpio_pin_write_logic,w
  3282     0699  00FF               	movwf	btemp+1
  3283     069A  0877               	movf	gpio_pin_write_logic@pin,w
  3284     069B  0084               	movwf	4
  3285     069C  0800               	movf	0,w
  3286     069D  3907               	andlw	7
  3287     069E  00F3               	movwf	??_gpio_pin_write_logic+2
  3288     069F  0773               	addwf	??_gpio_pin_write_logic+2,w
  3289     06A0  3E50               	addlw	(low (_port_registers| 0))& (0+255)
  3290     06A1  0084               	movwf	4
  3291     06A2  0800               	movf	0,w
  3292     06A3  00F4               	movwf	??_gpio_pin_write_logic+3
  3293     06A4  0A84               	incf	4,f
  3294     06A5  0800               	movf	0,w
  3295     06A6  00F5               	movwf	??_gpio_pin_write_logic+4
  3296     06A7  0874               	movf	??_gpio_pin_write_logic+3,w
  3297     06A8  0084               	movwf	4
  3298     06A9  1783               	bsf	3,7
  3299     06AA  1C75               	btfss	??_gpio_pin_write_logic+4,0
  3300     06AB  1383               	bcf	3,7
  3301     06AC  087F               	movf	btemp+1,w
  3302     06AD  0480               	iorwf	0,f
  3303                           
  3304                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 61:                     break;
  3305     06AE  2EE7               	goto	l1713
  3306     06AF                     l1707:
  3307                           
  3308                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 63:                     (*port_registers[pin->port] &= ~(0
      +                          x01 << pin->pin));
  3309     06AF  3001               	movlw	1
  3310     06B0  00F1               	movwf	??_gpio_pin_write_logic
  3311     06B1  0877               	movf	gpio_pin_write_logic@pin,w
  3312     06B2  0084               	movwf	4
  3313     06B3  0C00               	rrf	0,w
  3314     06B4  00F2               	movwf	??_gpio_pin_write_logic+1
  3315     06B5  0CF2               	rrf	??_gpio_pin_write_logic+1,f
  3316     06B6  0C72               	rrf	??_gpio_pin_write_logic+1,w
  3317     06B7  3907               	andlw	7
  3318     06B8  3E01               	addlw	1
  3319     06B9  2EBC               	goto	u1514
  3320     06BA                     u1515:
  3321     06BA  1003               	clrc
  3322     06BB  0DF1               	rlf	??_gpio_pin_write_logic,f
  3323     06BC                     u1514:
  3324     06BC  3EFF               	addlw	-1
  3325     06BD  1D03               	skipz
  3326     06BE  2EBA               	goto	u1515
  3327     06BF  0871               	movf	??_gpio_pin_write_logic,w
  3328     06C0  3AFF               	xorlw	255
  3329     06C1  00FF               	movwf	btemp+1
  3330     06C2  0877               	movf	gpio_pin_write_logic@pin,w
  3331     06C3  0084               	movwf	4
  3332     06C4  0800               	movf	0,w
  3333     06C5  3907               	andlw	7
  3334     06C6  00F3               	movwf	??_gpio_pin_write_logic+2
  3335     06C7  0773               	addwf	??_gpio_pin_write_logic+2,w
  3336     06C8  3E50               	addlw	(low (_port_registers| 0))& (0+255)
  3337     06C9  0084               	movwf	4
  3338     06CA  0800               	movf	0,w
  3339     06CB  00F4               	movwf	??_gpio_pin_write_logic+3
  3340     06CC  0A84               	incf	4,f
  3341     06CD  0800               	movf	0,w
  3342     06CE  00F5               	movwf	??_gpio_pin_write_logic+4
  3343     06CF  0874               	movf	??_gpio_pin_write_logic+3,w
  3344     06D0  0084               	movwf	4
  3345     06D1  1783               	bsf	3,7
  3346     06D2  1C75               	btfss	??_gpio_pin_write_logic+4,0
  3347     06D3  1383               	bcf	3,7
  3348     06D4  087F               	movf	btemp+1,w
  3349     06D5  0580               	andwf	0,f
  3350                           
  3351                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 64:                     break;
  3352     06D6  2EE7               	goto	l1713
  3353     06D7                     l1711:
  3354     06D7  0870               	movf	gpio_pin_write_logic@logic,w
  3355     06D8  00F1               	movwf	??_gpio_pin_write_logic
  3356     06D9  01F2               	clrf	??_gpio_pin_write_logic+1
  3357                           
  3358                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3359                           ; Switch size 1, requested type "simple"
  3360                           ; Number of cases is 1, Range of values is 0 to 0
  3361                           ; switch strategies available:
  3362                           ; Name         Instructions Cycles
  3363                           ; simple_byte            4     3 (average)
  3364                           ; direct_byte           11     8 (fixed)
  3365                           ; jumptable            260     6 (fixed)
  3366                           ;	Chosen strategy is simple_byte
  3367     06DA  0872               	movf	??_gpio_pin_write_logic+1,w
  3368     06DB  3A00               	xorlw	0	; case 0
  3369     06DC  1903               	skipnz
  3370     06DD  2EDF               	goto	l2383
  3371     06DE  2EE7               	goto	l1713
  3372     06DF                     l2383:
  3373                           
  3374                           ; Switch size 1, requested type "simple"
  3375                           ; Number of cases is 2, Range of values is 0 to 1
  3376                           ; switch strategies available:
  3377                           ; Name         Instructions Cycles
  3378                           ; simple_byte            7     4 (average)
  3379                           ; direct_byte           14     8 (fixed)
  3380                           ; jumptable            260     6 (fixed)
  3381                           ;	Chosen strategy is simple_byte
  3382     06DF  0871               	movf	??_gpio_pin_write_logic,w
  3383     06E0  3A00               	xorlw	0	; case 0
  3384     06E1  1903               	skipnz
  3385     06E2  2EAF               	goto	l1707
  3386     06E3  3A01               	xorlw	1	; case 1
  3387     06E4  1903               	skipnz
  3388     06E5  2E88               	goto	l1705
  3389     06E6  2EE7               	goto	l1713
  3390     06E7                     l1713:
  3391                           
  3392                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 70:     return ret;
  3393     06E7  0876               	movf	gpio_pin_write_logic@ret,w
  3394     06E8                     l140:
  3395     06E8  0008               	return
  3396     06E9                     __end_of_gpio_pin_write_logic:
  3397                           
  3398                           	psect	text16
  3399     0531                     __ptext16:	
  3400 ;; *************** function _gpio_pin_direction_initialize *****************
  3401 ;; Defined at:
  3402 ;;		line 12 in file "MCAL_LAYER/GPIO/mcal_gpio.c"
  3403 ;; Parameters:    Size  Location     Type
  3404 ;;  pin             1    wreg     PTR const struct .
  3405 ;;		 -> pin8(1), pin7(1), pin6(1), pin5(1), 
  3406 ;;		 -> pin4(1), pin3(1), pin2(1), pin1(1), 
  3407 ;;		 -> lcd$pins(4), lcd(6), motor2$pins(2), motor2(2), 
  3408 ;;		 -> motor1$pins(2), motor1(2), 
  3409 ;; Auto vars:     Size  Location     Type
  3410 ;;  pin             1    5[COMMON] PTR const struct .
  3411 ;;		 -> pin8(1), pin7(1), pin6(1), pin5(1), 
  3412 ;;		 -> pin4(1), pin3(1), pin2(1), pin1(1), 
  3413 ;;		 -> lcd$pins(4), lcd(6), motor2$pins(2), motor2(2), 
  3414 ;;		 -> motor1$pins(2), motor1(2), 
  3415 ;;  ret             1    0        unsigned char 
  3416 ;; Return value:  Size  Location     Type
  3417 ;;                  1    wreg      unsigned char 
  3418 ;; Registers used:
  3419 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3420 ;; Tracked objects:
  3421 ;;		On entry : 0/0
  3422 ;;		On exit  : 0/0
  3423 ;;		Unchanged: 0/0
  3424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3425 ;;      Params:         0       0       0       0       0
  3426 ;;      Locals:         1       0       0       0       0
  3427 ;;      Temps:          5       0       0       0       0
  3428 ;;      Totals:         6       0       0       0       0
  3429 ;;Total ram usage:        6 bytes
  3430 ;; Hardware stack levels used: 1
  3431 ;; This function calls:
  3432 ;;		Nothing
  3433 ;; This function is called by:
  3434 ;;		_gpio_pin_initialize
  3435 ;; This function uses a non-reentrant model
  3436 ;;
  3437                           
  3438     0531                     _gpio_pin_direction_initialize:	
  3439                           ;psect for function _gpio_pin_direction_initialize
  3440                           
  3441                           
  3442                           ;incstack = 0
  3443                           ; Regs used in _gpio_pin_direction_initialize: [wreg-fsr0h+status,2+status,0+btemp+1]
  3444                           ;gpio_pin_direction_initialize@pin stored from wreg
  3445     0531  00F5               	movwf	gpio_pin_direction_initialize@pin
  3446     0532                     l1721:
  3447     0532                     l1723:
  3448                           
  3449                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 14:     if (pin == ((void*)0)) {
  3450     0532  0875               	movf	gpio_pin_direction_initialize@pin,w
  3451     0533  1D03               	btfss	3,2
  3452     0534  2D36               	goto	u1521
  3453     0535  2D37               	goto	u1520
  3454     0536                     u1521:
  3455     0536  2D38               	goto	l1727
  3456     0537                     u1520:
  3457     0537                     l1725:
  3458                           
  3459                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 16:     } else {
  3460     0537  2E08               	goto	l100
  3461     0538                     l1727:
  3462                           
  3463                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 17:         if ((pin->port == PORTA_INDEX && pin->pin < 6)
      +                           || (pin->port == PORTB_INDEX && pin->pin < 8) || (pin->port == PORTC_INDEX && pin->pin 
      +                          < 8) ||
  3464     0538  0875               	movf	gpio_pin_direction_initialize@pin,w
  3465     0539  0084               	movwf	4
  3466     053A  1383               	bcf	3,7	;select IRP bank0
  3467     053B  0800               	movf	0,w
  3468     053C  3907               	andlw	7
  3469     053D  3A00               	xorlw	0
  3470     053E  1D03               	skipz
  3471     053F  2D41               	goto	u1531
  3472     0540  2D42               	goto	u1530
  3473     0541                     u1531:
  3474     0541  2D50               	goto	l1731
  3475     0542                     u1530:
  3476     0542                     l1729:
  3477     0542  0875               	movf	gpio_pin_direction_initialize@pin,w
  3478     0543  0084               	movwf	4
  3479     0544  0C00               	rrf	0,w
  3480     0545  00F0               	movwf	??_gpio_pin_direction_initialize
  3481     0546  0CF0               	rrf	??_gpio_pin_direction_initialize,f
  3482     0547  0C70               	rrf	??_gpio_pin_direction_initialize,w
  3483     0548  3907               	andlw	7
  3484     0549  00F1               	movwf	??_gpio_pin_direction_initialize+1
  3485     054A  3006               	movlw	6
  3486     054B  0271               	subwf	??_gpio_pin_direction_initialize+1,w
  3487     054C  1C03               	skipc
  3488     054D  2D4F               	goto	u1541
  3489     054E  2D50               	goto	u1540
  3490     054F                     u1541:
  3491     054F  2DFC               	goto	l1753
  3492     0550                     u1540:
  3493     0550                     l1731:
  3494     0550  0875               	movf	gpio_pin_direction_initialize@pin,w
  3495     0551  0084               	movwf	4
  3496     0552  0800               	movf	0,w
  3497     0553  3907               	andlw	7
  3498     0554  3A01               	xorlw	1
  3499     0555  1D03               	skipz
  3500     0556  2D58               	goto	u1551
  3501     0557  2D59               	goto	u1550
  3502     0558                     u1551:
  3503     0558  2D67               	goto	l1735
  3504     0559                     u1550:
  3505     0559                     l1733:
  3506     0559  0875               	movf	gpio_pin_direction_initialize@pin,w
  3507     055A  0084               	movwf	4
  3508     055B  0C00               	rrf	0,w
  3509     055C  00F0               	movwf	??_gpio_pin_direction_initialize
  3510     055D  0CF0               	rrf	??_gpio_pin_direction_initialize,f
  3511     055E  0C70               	rrf	??_gpio_pin_direction_initialize,w
  3512     055F  3907               	andlw	7
  3513     0560  00F1               	movwf	??_gpio_pin_direction_initialize+1
  3514     0561  3008               	movlw	8
  3515     0562  0271               	subwf	??_gpio_pin_direction_initialize+1,w
  3516     0563  1C03               	skipc
  3517     0564  2D66               	goto	u1561
  3518     0565  2D67               	goto	u1560
  3519     0566                     u1561:
  3520     0566  2DFC               	goto	l1753
  3521     0567                     u1560:
  3522     0567                     l1735:
  3523     0567  0875               	movf	gpio_pin_direction_initialize@pin,w
  3524     0568  0084               	movwf	4
  3525     0569  0800               	movf	0,w
  3526     056A  3907               	andlw	7
  3527     056B  3A02               	xorlw	2
  3528     056C  1D03               	skipz
  3529     056D  2D6F               	goto	u1571
  3530     056E  2D70               	goto	u1570
  3531     056F                     u1571:
  3532     056F  2D7E               	goto	l1739
  3533     0570                     u1570:
  3534     0570                     l1737:
  3535     0570  0875               	movf	gpio_pin_direction_initialize@pin,w
  3536     0571  0084               	movwf	4
  3537     0572  0C00               	rrf	0,w
  3538     0573  00F0               	movwf	??_gpio_pin_direction_initialize
  3539     0574  0CF0               	rrf	??_gpio_pin_direction_initialize,f
  3540     0575  0C70               	rrf	??_gpio_pin_direction_initialize,w
  3541     0576  3907               	andlw	7
  3542     0577  00F1               	movwf	??_gpio_pin_direction_initialize+1
  3543     0578  3008               	movlw	8
  3544     0579  0271               	subwf	??_gpio_pin_direction_initialize+1,w
  3545     057A  1C03               	skipc
  3546     057B  2D7D               	goto	u1581
  3547     057C  2D7E               	goto	u1580
  3548     057D                     u1581:
  3549     057D  2DFC               	goto	l1753
  3550     057E                     u1580:
  3551     057E                     l1739:
  3552     057E  0875               	movf	gpio_pin_direction_initialize@pin,w
  3553     057F  0084               	movwf	4
  3554     0580  0800               	movf	0,w
  3555     0581  3907               	andlw	7
  3556     0582  3A03               	xorlw	3
  3557     0583  1D03               	skipz
  3558     0584  2D86               	goto	u1591
  3559     0585  2D87               	goto	u1590
  3560     0586                     u1591:
  3561     0586  2D95               	goto	l1743
  3562     0587                     u1590:
  3563     0587                     l1741:
  3564     0587  0875               	movf	gpio_pin_direction_initialize@pin,w
  3565     0588  0084               	movwf	4
  3566     0589  0C00               	rrf	0,w
  3567     058A  00F0               	movwf	??_gpio_pin_direction_initialize
  3568     058B  0CF0               	rrf	??_gpio_pin_direction_initialize,f
  3569     058C  0C70               	rrf	??_gpio_pin_direction_initialize,w
  3570     058D  3907               	andlw	7
  3571     058E  00F1               	movwf	??_gpio_pin_direction_initialize+1
  3572     058F  3008               	movlw	8
  3573     0590  0271               	subwf	??_gpio_pin_direction_initialize+1,w
  3574     0591  1C03               	skipc
  3575     0592  2D94               	goto	u1601
  3576     0593  2D95               	goto	u1600
  3577     0594                     u1601:
  3578     0594  2DFC               	goto	l1753
  3579     0595                     u1600:
  3580     0595                     l1743:
  3581     0595  0875               	movf	gpio_pin_direction_initialize@pin,w
  3582     0596  0084               	movwf	4
  3583     0597  0800               	movf	0,w
  3584     0598  3907               	andlw	7
  3585     0599  3A04               	xorlw	4
  3586     059A  1D03               	skipz
  3587     059B  2D9D               	goto	u1611
  3588     059C  2D9E               	goto	u1610
  3589     059D                     u1611:
  3590     059D  2D37               	goto	l1725
  3591     059E                     u1610:
  3592     059E                     l1745:
  3593     059E  0875               	movf	gpio_pin_direction_initialize@pin,w
  3594     059F  0084               	movwf	4
  3595     05A0  0C00               	rrf	0,w
  3596     05A1  00F0               	movwf	??_gpio_pin_direction_initialize
  3597     05A2  0CF0               	rrf	??_gpio_pin_direction_initialize,f
  3598     05A3  0C70               	rrf	??_gpio_pin_direction_initialize,w
  3599     05A4  3907               	andlw	7
  3600     05A5  00F1               	movwf	??_gpio_pin_direction_initialize+1
  3601     05A6  3003               	movlw	3
  3602     05A7  0271               	subwf	??_gpio_pin_direction_initialize+1,w
  3603     05A8  1803               	skipnc
  3604     05A9  2DAB               	goto	u1621
  3605     05AA  2DAC               	goto	u1620
  3606     05AB                     u1621:
  3607     05AB  2D37               	goto	l1725
  3608     05AC                     u1620:
  3609     05AC  2DFC               	goto	l1753
  3610     05AD                     l1747:
  3611                           
  3612                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 21:                     (*tris_registers[pin->port] &= ~(0
      +                          x01 << pin->pin));
  3613     05AD  3001               	movlw	1
  3614     05AE  00F0               	movwf	??_gpio_pin_direction_initialize
  3615     05AF  0875               	movf	gpio_pin_direction_initialize@pin,w
  3616     05B0  0084               	movwf	4
  3617     05B1  0C00               	rrf	0,w
  3618     05B2  00F1               	movwf	??_gpio_pin_direction_initialize+1
  3619     05B3  0CF1               	rrf	??_gpio_pin_direction_initialize+1,f
  3620     05B4  0C71               	rrf	??_gpio_pin_direction_initialize+1,w
  3621     05B5  3907               	andlw	7
  3622     05B6  3E01               	addlw	1
  3623     05B7  2DBA               	goto	u1634
  3624     05B8                     u1635:
  3625     05B8  1003               	clrc
  3626     05B9  0DF0               	rlf	??_gpio_pin_direction_initialize,f
  3627     05BA                     u1634:
  3628     05BA  3EFF               	addlw	-1
  3629     05BB  1D03               	skipz
  3630     05BC  2DB8               	goto	u1635
  3631     05BD  0870               	movf	??_gpio_pin_direction_initialize,w
  3632     05BE  3AFF               	xorlw	255
  3633     05BF  00FF               	movwf	btemp+1
  3634     05C0  0875               	movf	gpio_pin_direction_initialize@pin,w
  3635     05C1  0084               	movwf	4
  3636     05C2  0800               	movf	0,w
  3637     05C3  3907               	andlw	7
  3638     05C4  00F2               	movwf	??_gpio_pin_direction_initialize+2
  3639     05C5  0772               	addwf	??_gpio_pin_direction_initialize+2,w
  3640     05C6  3EC0               	addlw	(low (_tris_registers| 0))& (0+255)
  3641     05C7  0084               	movwf	4
  3642     05C8  0800               	movf	0,w
  3643     05C9  00F3               	movwf	??_gpio_pin_direction_initialize+3
  3644     05CA  0A84               	incf	4,f
  3645     05CB  0800               	movf	0,w
  3646     05CC  00F4               	movwf	??_gpio_pin_direction_initialize+4
  3647     05CD  0873               	movf	??_gpio_pin_direction_initialize+3,w
  3648     05CE  0084               	movwf	4
  3649     05CF  1783               	bsf	3,7
  3650     05D0  1C74               	btfss	??_gpio_pin_direction_initialize+4,0
  3651     05D1  1383               	bcf	3,7
  3652     05D2  087F               	movf	btemp+1,w
  3653     05D3  0580               	andwf	0,f
  3654                           
  3655                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 22:                     break;
  3656     05D4  2E08               	goto	l100
  3657     05D5                     l1749:
  3658                           
  3659                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 24:                     (*tris_registers[pin->port] |= (0x
      +                          01 << pin->pin));
  3660     05D5  3001               	movlw	1
  3661     05D6  00F0               	movwf	??_gpio_pin_direction_initialize
  3662     05D7  0875               	movf	gpio_pin_direction_initialize@pin,w
  3663     05D8  0084               	movwf	4
  3664     05D9  0C00               	rrf	0,w
  3665     05DA  00F1               	movwf	??_gpio_pin_direction_initialize+1
  3666     05DB  0CF1               	rrf	??_gpio_pin_direction_initialize+1,f
  3667     05DC  0C71               	rrf	??_gpio_pin_direction_initialize+1,w
  3668     05DD  3907               	andlw	7
  3669     05DE  3E01               	addlw	1
  3670     05DF  2DE2               	goto	u1644
  3671     05E0                     u1645:
  3672     05E0  1003               	clrc
  3673     05E1  0DF0               	rlf	??_gpio_pin_direction_initialize,f
  3674     05E2                     u1644:
  3675     05E2  3EFF               	addlw	-1
  3676     05E3  1D03               	skipz
  3677     05E4  2DE0               	goto	u1645
  3678     05E5  0870               	movf	??_gpio_pin_direction_initialize,w
  3679     05E6  00FF               	movwf	btemp+1
  3680     05E7  0875               	movf	gpio_pin_direction_initialize@pin,w
  3681     05E8  0084               	movwf	4
  3682     05E9  0800               	movf	0,w
  3683     05EA  3907               	andlw	7
  3684     05EB  00F2               	movwf	??_gpio_pin_direction_initialize+2
  3685     05EC  0772               	addwf	??_gpio_pin_direction_initialize+2,w
  3686     05ED  3EC0               	addlw	(low (_tris_registers| 0))& (0+255)
  3687     05EE  0084               	movwf	4
  3688     05EF  0800               	movf	0,w
  3689     05F0  00F3               	movwf	??_gpio_pin_direction_initialize+3
  3690     05F1  0A84               	incf	4,f
  3691     05F2  0800               	movf	0,w
  3692     05F3  00F4               	movwf	??_gpio_pin_direction_initialize+4
  3693     05F4  0873               	movf	??_gpio_pin_direction_initialize+3,w
  3694     05F5  0084               	movwf	4
  3695     05F6  1783               	bsf	3,7
  3696     05F7  1C74               	btfss	??_gpio_pin_direction_initialize+4,0
  3697     05F8  1383               	bcf	3,7
  3698     05F9  087F               	movf	btemp+1,w
  3699     05FA  0480               	iorwf	0,f
  3700                           
  3701                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 25:                     break;
  3702     05FB  2E08               	goto	l100
  3703     05FC                     l1753:
  3704     05FC  0875               	movf	gpio_pin_direction_initialize@pin,w
  3705     05FD  0084               	movwf	4
  3706     05FE  0D00               	rlf	0,w
  3707     05FF  0D00               	rlf	0,w
  3708     0600  3901               	andlw	1
  3709                           
  3710                           ; Switch size 1, requested type "simple"
  3711                           ; Number of cases is 2, Range of values is 0 to 1
  3712                           ; switch strategies available:
  3713                           ; Name         Instructions Cycles
  3714                           ; simple_byte            7     4 (average)
  3715                           ; direct_byte           14     8 (fixed)
  3716                           ; jumptable            260     6 (fixed)
  3717                           ;	Chosen strategy is simple_byte
  3718     0601  3A00               	xorlw	0	; case 0
  3719     0602  1903               	skipnz
  3720     0603  2DAD               	goto	l1747
  3721     0604  3A01               	xorlw	1	; case 1
  3722     0605  1903               	skipnz
  3723     0606  2DD5               	goto	l1749
  3724     0607  2E08               	goto	l100
  3725     0608                     l100:
  3726     0608  0008               	return
  3727     0609                     __end_of_gpio_pin_direction_initialize:
  3728                           
  3729                           	psect	text17
  3730     0025                     __ptext17:	
  3731 ;; *************** function _Convert_uint32_to_string *****************
  3732 ;; Defined at:
  3733 ;;		line 113 in file "ECU_LAYER/LCD/ecu_lcd.c"
  3734 ;; Parameters:    Size  Location     Type
  3735 ;;  data            2   29[BANK0 ] unsigned int 
  3736 ;;  str             1   31[BANK0 ] PTR unsigned char 
  3737 ;;		 -> main@str(11), 
  3738 ;; Auto vars:     Size  Location     Type
  3739 ;;		None
  3740 ;; Return value:  Size  Location     Type
  3741 ;;                  1    wreg      void 
  3742 ;; Registers used:
  3743 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3744 ;; Tracked objects:
  3745 ;;		On entry : 0/0
  3746 ;;		On exit  : 0/0
  3747 ;;		Unchanged: 0/0
  3748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3749 ;;      Params:         0       3       0       0       0
  3750 ;;      Locals:         0       0       0       0       0
  3751 ;;      Temps:          0       0       0       0       0
  3752 ;;      Totals:         0       3       0       0       0
  3753 ;;Total ram usage:        3 bytes
  3754 ;; Hardware stack levels used: 1
  3755 ;; Hardware stack levels required when called: 5
  3756 ;; This function calls:
  3757 ;;		_memset
  3758 ;;		_sprintf
  3759 ;; This function is called by:
  3760 ;;		_main
  3761 ;; This function uses a non-reentrant model
  3762 ;;
  3763                           
  3764     0025                     _Convert_uint32_to_string:	
  3765                           ;psect for function _Convert_uint32_to_string
  3766                           
  3767     0025                     l2129:	
  3768                           ;incstack = 0
  3769                           ; Regs used in _Convert_uint32_to_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
  3770                           
  3771                           
  3772                           ;ECU_LAYER/LCD/ecu_lcd.c: 114:     memset(str,'/0',11);
  3773     0025  3030               	movlw	48
  3774     0026  00F0               	movwf	memset@c
  3775     0027  302F               	movlw	47
  3776     0028  00F1               	movwf	memset@c+1
  3777     0029  300B               	movlw	11
  3778     002A  00F2               	movwf	memset@n
  3779     002B  3000               	movlw	0
  3780     002C  00F3               	movwf	memset@n+1
  3781     002D  1283               	bcf	3,5	;RP0=0, select bank0
  3782     002E  1303               	bcf	3,6	;RP1=0, select bank0
  3783     002F  083F               	movf	Convert_uint32_to_string@str,w
  3784     0030  120A  158A  27E4  120A  118A  	fcall	_memset
  3785                           
  3786                           ;ECU_LAYER/LCD/ecu_lcd.c: 115:     sprintf(str,"%i",data);
  3787     0035  3009               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  3788     0036  1283               	bcf	3,5	;RP0=0, select bank0
  3789     0037  1303               	bcf	3,6	;RP1=0, select bank0
  3790     0038  00AC               	movwf	sprintf@fmt
  3791     0039  083E               	movf	Convert_uint32_to_string@data+1,w
  3792     003A  00AE               	movwf	?_sprintf+2
  3793     003B  083D               	movf	Convert_uint32_to_string@data,w
  3794     003C  00AD               	movwf	?_sprintf+1
  3795     003D  083F               	movf	Convert_uint32_to_string@str,w
  3796     003E  120A  118A  2006  120A  118A  	fcall	_sprintf
  3797     0043                     l317:
  3798     0043  0008               	return
  3799     0044                     __end_of_Convert_uint32_to_string:
  3800                           
  3801                           	psect	text18
  3802     0006                     __ptext18:	
  3803 ;; *************** function _sprintf *****************
  3804 ;; Defined at:
  3805 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  3806 ;; Parameters:    Size  Location     Type
  3807 ;;  s               1    wreg     PTR unsigned char 
  3808 ;;		 -> main@str(11), 
  3809 ;;  fmt             1   12[BANK0 ] PTR const unsigned char 
  3810 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  3811 ;; Auto vars:     Size  Location     Type
  3812 ;;  s               1   17[BANK0 ] PTR unsigned char 
  3813 ;;		 -> main@str(11), 
  3814 ;;  f              11   18[BANK0 ] struct _IO_FILE
  3815 ;;  ret             2    0        int 
  3816 ;;  ap              1   16[BANK0 ] PTR void [1]
  3817 ;;		 -> ?_sprintf(2), 
  3818 ;; Return value:  Size  Location     Type
  3819 ;;                  2   12[BANK0 ] int 
  3820 ;; Registers used:
  3821 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3822 ;; Tracked objects:
  3823 ;;		On entry : 0/0
  3824 ;;		On exit  : 0/0
  3825 ;;		Unchanged: 0/0
  3826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3827 ;;      Params:         0       3       0       0       0
  3828 ;;      Locals:         0      13       0       0       0
  3829 ;;      Temps:          0       1       0       0       0
  3830 ;;      Totals:         0      17       0       0       0
  3831 ;;Total ram usage:       17 bytes
  3832 ;; Hardware stack levels used: 1
  3833 ;; Hardware stack levels required when called: 4
  3834 ;; This function calls:
  3835 ;;		_vfprintf
  3836 ;; This function is called by:
  3837 ;;		_Convert_uint32_to_string
  3838 ;;		_Convert_uint8_to_string
  3839 ;;		_Convert_uint16_to_string
  3840 ;; This function uses a non-reentrant model
  3841 ;;
  3842                           
  3843     0006                     _sprintf:	
  3844                           ;psect for function _sprintf
  3845                           
  3846                           
  3847                           ;incstack = 0
  3848                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3849                           ;sprintf@s stored from wreg
  3850     0006  1283               	bcf	3,5	;RP0=0, select bank0
  3851     0007  1303               	bcf	3,6	;RP1=0, select bank0
  3852     0008  00B1               	movwf	sprintf@s
  3853     0009                     l2115:
  3854     0009  302D               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  3855     000A  00B0               	movwf	sprintf@ap
  3856     000B  0831               	movf	sprintf@s,w
  3857     000C  00B2               	movwf	sprintf@f
  3858     000D                     l2117:
  3859     000D  01B4               	clrf	sprintf@f+2
  3860     000E  01B5               	clrf	sprintf@f+3
  3861     000F                     l2119:
  3862     000F  01BB               	clrf	sprintf@f+9
  3863     0010  01BC               	clrf	sprintf@f+10
  3864     0011                     l2121:
  3865     0011  082C               	movf	sprintf@fmt,w
  3866     0012  00A8               	movwf	vfprintf@fmt
  3867     0013  3030               	movlw	(low (sprintf@ap| 0))& (0+255)
  3868     0014  00A9               	movwf	vfprintf@ap
  3869     0015  3032               	movlw	(low (sprintf@f| 0))& (0+255)
  3870     0016  120A  118A  2044  120A  118A  	fcall	_vfprintf
  3871     001B                     l2123:
  3872     001B  1283               	bcf	3,5	;RP0=0, select bank0
  3873     001C  1303               	bcf	3,6	;RP1=0, select bank0
  3874     001D  0834               	movf	sprintf@f+2,w
  3875     001E  0731               	addwf	sprintf@s,w
  3876     001F  00AF               	movwf	??_sprintf
  3877     0020  082F               	movf	??_sprintf,w
  3878     0021  0084               	movwf	4
  3879     0022  1383               	bcf	3,7	;select IRP bank0
  3880     0023  0180               	clrf	0
  3881     0024                     l899:
  3882     0024  0008               	return
  3883     0025                     __end_of_sprintf:
  3884                           
  3885                           	psect	text19
  3886     0044                     __ptext19:	
  3887 ;; *************** function _vfprintf *****************
  3888 ;; Defined at:
  3889 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  3890 ;; Parameters:    Size  Location     Type
  3891 ;;  fp              1    wreg     PTR struct _IO_FILE
  3892 ;;		 -> sprintf@f(11), 
  3893 ;;  fmt             1    8[BANK0 ] PTR const unsigned char 
  3894 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  3895 ;;  ap              1    9[BANK0 ] PTR PTR void 
  3896 ;;		 -> sprintf@ap(1), 
  3897 ;; Auto vars:     Size  Location     Type
  3898 ;;  fp              1   10[BANK0 ] PTR struct _IO_FILE
  3899 ;;		 -> sprintf@f(11), 
  3900 ;;  cfmt            1   11[BANK0 ] PTR unsigned char 
  3901 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  3902 ;; Return value:  Size  Location     Type
  3903 ;;                  2    8[BANK0 ] int 
  3904 ;; Registers used:
  3905 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3906 ;; Tracked objects:
  3907 ;;		On entry : 0/0
  3908 ;;		On exit  : 0/0
  3909 ;;		Unchanged: 0/0
  3910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3911 ;;      Params:         0       2       0       0       0
  3912 ;;      Locals:         0       2       0       0       0
  3913 ;;      Temps:          0       0       0       0       0
  3914 ;;      Totals:         0       4       0       0       0
  3915 ;;Total ram usage:        4 bytes
  3916 ;; Hardware stack levels used: 1
  3917 ;; Hardware stack levels required when called: 3
  3918 ;; This function calls:
  3919 ;;		_vfpfcnvrt
  3920 ;; This function is called by:
  3921 ;;		_sprintf
  3922 ;; This function uses a non-reentrant model
  3923 ;;
  3924                           
  3925     0044                     _vfprintf:	
  3926                           ;psect for function _vfprintf
  3927                           
  3928                           
  3929                           ;incstack = 0
  3930                           ; Regs used in _vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3931                           ;vfprintf@fp stored from wreg
  3932     0044  1283               	bcf	3,5	;RP0=0, select bank0
  3933     0045  1303               	bcf	3,6	;RP1=0, select bank0
  3934     0046  00AA               	movwf	vfprintf@fp
  3935     0047                     l2067:
  3936                           
  3937                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  3938     0047  0828               	movf	vfprintf@fmt,w
  3939     0048  00AB               	movwf	vfprintf@cfmt
  3940                           
  3941                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3942     0049  2854               	goto	l2071
  3943     004A                     l2069:
  3944                           
  3945                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3946     004A  302B               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  3947     004B  00FA               	movwf	vfpfcnvrt@fmt
  3948     004C  0829               	movf	vfprintf@ap,w
  3949     004D  00FB               	movwf	vfpfcnvrt@ap
  3950     004E  082A               	movf	vfprintf@fp,w
  3951     004F  120A  118A  26E9  120A  118A  	fcall	_vfpfcnvrt
  3952     0054                     l2071:
  3953                           
  3954                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3955     0054  1283               	bcf	3,5	;RP0=0, select bank0
  3956     0055  1303               	bcf	3,6	;RP1=0, select bank0
  3957     0056  082B               	movf	vfprintf@cfmt,w
  3958     0057  0084               	movwf	4
  3959     0058  120A  158A  2000  120A  118A  	fcall	stringdir
  3960     005D  3A00               	xorlw	0
  3961     005E  1D03               	skipz
  3962     005F  2861               	goto	u2221
  3963     0060  2862               	goto	u2220
  3964     0061                     u2221:
  3965     0061  284A               	goto	l2069
  3966     0062                     u2220:
  3967     0062                     l2073:
  3968                           
  3969                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  3970     0062  01A8               	clrf	?_vfprintf
  3971     0063  01A9               	clrf	?_vfprintf+1
  3972     0064                     l943:
  3973     0064  0008               	return
  3974     0065                     __end_of_vfprintf:
  3975                           
  3976                           	psect	text20
  3977     06E9                     __ptext20:	
  3978 ;; *************** function _vfpfcnvrt *****************
  3979 ;; Defined at:
  3980 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  3981 ;; Parameters:    Size  Location     Type
  3982 ;;  fp              1    wreg     PTR struct _IO_FILE
  3983 ;;		 -> sprintf@f(11), 
  3984 ;;  fmt             1   10[COMMON] PTR PTR unsigned char 
  3985 ;;		 -> vfprintf@cfmt(1), 
  3986 ;;  ap              1   11[COMMON] PTR PTR void 
  3987 ;;		 -> sprintf@ap(1), 
  3988 ;; Auto vars:     Size  Location     Type
  3989 ;;  fp              1    1[BANK0 ] PTR struct _IO_FILE
  3990 ;;		 -> sprintf@f(11), 
  3991 ;;  convarg         4    3[BANK0 ] struct .
  3992 ;;  c               1    7[BANK0 ] unsigned char 
  3993 ;;  cp              1    2[BANK0 ] PTR unsigned char 
  3994 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  3995 ;;  done            1    0[BANK0 ] _Bool 
  3996 ;; Return value:  Size  Location     Type
  3997 ;;                  1    wreg      void 
  3998 ;; Registers used:
  3999 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4000 ;; Tracked objects:
  4001 ;;		On entry : 0/0
  4002 ;;		On exit  : 0/0
  4003 ;;		Unchanged: 0/0
  4004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4005 ;;      Params:         2       0       0       0       0
  4006 ;;      Locals:         0       8       0       0       0
  4007 ;;      Temps:          2       0       0       0       0
  4008 ;;      Totals:         4       8       0       0       0
  4009 ;;Total ram usage:       12 bytes
  4010 ;; Hardware stack levels used: 1
  4011 ;; Hardware stack levels required when called: 2
  4012 ;; This function calls:
  4013 ;;		___awdiv
  4014 ;;		___awmod
  4015 ;;		_abs
  4016 ;;		_fputc
  4017 ;; This function is called by:
  4018 ;;		_vfprintf
  4019 ;; This function uses a non-reentrant model
  4020 ;;
  4021                           
  4022     06E9                     _vfpfcnvrt:	
  4023                           ;psect for function _vfpfcnvrt
  4024                           
  4025                           
  4026                           ;incstack = 0
  4027                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4028                           ;vfpfcnvrt@fp stored from wreg
  4029     06E9  1283               	bcf	3,5	;RP0=0, select bank0
  4030     06EA  1303               	bcf	3,6	;RP1=0, select bank0
  4031     06EB  00A1               	movwf	vfpfcnvrt@fp
  4032     06EC                     l1929:
  4033                           
  4034                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  4035     06EC  087A               	movf	vfpfcnvrt@fmt,w
  4036     06ED  0084               	movwf	4
  4037     06EE  1383               	bcf	3,7	;select IRP bank0
  4038     06EF  0800               	movf	0,w
  4039     06F0  0084               	movwf	4
  4040     06F1  120A  158A  2000  120A  118A  	fcall	stringdir
  4041     06F6  3A25               	xorlw	37
  4042     06F7  1D03               	skipz
  4043     06F8  2EFA               	goto	u2061
  4044     06F9  2EFB               	goto	u2060
  4045     06FA                     u2061:
  4046     06FA  2FBC               	goto	l1975
  4047     06FB                     u2060:
  4048     06FB                     l1931:
  4049                           
  4050                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  4051     06FB  3001               	movlw	1
  4052     06FC  00FF               	movwf	btemp+1
  4053     06FD  087A               	movf	vfpfcnvrt@fmt,w
  4054     06FE  0084               	movwf	4
  4055     06FF  087F               	movf	btemp+1,w
  4056     0700  0780               	addwf	0,f
  4057     0701                     l1933:
  4058                           
  4059                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  4060     0701  01E6               	clrf	_width
  4061     0702  01E7               	clrf	_width+1
  4062     0703  1003               	clrc
  4063     0704  3000               	movlw	0
  4064     0705  1803               	btfsc	3,0
  4065     0706  3001               	movlw	1
  4066     0707  00EA               	movwf	_flags
  4067     0708                     l1935:
  4068                           
  4069                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  4070     0708  30FF               	movlw	255
  4071     0709  00E8               	movwf	_prec
  4072     070A  30FF               	movlw	255
  4073     070B  00E9               	movwf	_prec+1
  4074     070C                     l1937:
  4075                           
  4076                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  4077     070C  087A               	movf	vfpfcnvrt@fmt,w
  4078     070D  0084               	movwf	4
  4079     070E  0800               	movf	0,w
  4080     070F  00A2               	movwf	vfpfcnvrt@cp
  4081     0710                     l1939:
  4082                           
  4083                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  4084     0710  0822               	movf	vfpfcnvrt@cp,w
  4085     0711  0084               	movwf	4
  4086     0712  120A  158A  2000  120A  118A  	fcall	stringdir
  4087     0717  3A64               	xorlw	100
  4088     0718  1903               	skipnz
  4089     0719  2F1B               	goto	u2071
  4090     071A  2F1C               	goto	u2070
  4091     071B                     u2071:
  4092     071B  2F28               	goto	l1943
  4093     071C                     u2070:
  4094     071C                     l1941:
  4095     071C  0822               	movf	vfpfcnvrt@cp,w
  4096     071D  0084               	movwf	4
  4097     071E  120A  158A  2000  120A  118A  	fcall	stringdir
  4098     0723  3A69               	xorlw	105
  4099     0724  1D03               	skipz
  4100     0725  2F27               	goto	u2081
  4101     0726  2F28               	goto	u2080
  4102     0727                     u2081:
  4103     0727  2FB4               	goto	l1971
  4104     0728                     u2080:
  4105     0728                     l1943:
  4106                           
  4107                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  4108     0728  087B               	movf	vfpfcnvrt@ap,w
  4109     0729  0084               	movwf	4
  4110     072A  0800               	movf	0,w
  4111     072B  00FF               	movwf	btemp+1
  4112     072C  3002               	movlw	2
  4113     072D  0780               	addwf	0,f
  4114     072E  087F               	movf	btemp+1,w
  4115     072F  0084               	movwf	4
  4116     0730  0800               	movf	0,w
  4117     0731  00A3               	movwf	vfpfcnvrt@convarg
  4118     0732  0A84               	incf	4,f
  4119     0733  0800               	movf	0,w
  4120     0734  00A4               	movwf	vfpfcnvrt@convarg+1
  4121     0735                     l1945:
  4122                           
  4123                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  4124     0735  087A               	movf	vfpfcnvrt@fmt,w
  4125     0736  0084               	movwf	4
  4126     0737  0822               	movf	vfpfcnvrt@cp,w
  4127     0738  3E01               	addlw	1
  4128     0739  0080               	movwf	0
  4129     073A                     l1947:
  4130                           
  4131                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  4132     073A  3020               	movlw	32
  4133     073B  00A7               	movwf	vfpfcnvrt@c
  4134     073C                     l1949:
  4135                           
  4136                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  4137     073C  1BA4               	btfsc	vfpfcnvrt@convarg+1,7
  4138     073D  2F3F               	goto	u2091
  4139     073E  2F41               	goto	u2090
  4140     073F                     u2091:
  4141     073F  3001               	movlw	1
  4142     0740  2F42               	goto	u2100
  4143     0741                     u2090:
  4144     0741  3000               	movlw	0
  4145     0742                     u2100:
  4146     0742  00A0               	movwf	vfpfcnvrt@done
  4147     0743                     l1951:
  4148                           
  4149                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  4150     0743  3001               	movlw	1
  4151     0744  02A7               	subwf	vfpfcnvrt@c,f
  4152     0745  0827               	movf	vfpfcnvrt@c,w
  4153     0746  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  4154     0747  0084               	movwf	4
  4155     0748  300A               	movlw	10
  4156     0749  00F0               	movwf	___awmod@divisor
  4157     074A  3000               	movlw	0
  4158     074B  00F1               	movwf	___awmod@divisor+1
  4159     074C  0824               	movf	vfpfcnvrt@convarg+1,w
  4160     074D  00F3               	movwf	___awmod@dividend+1
  4161     074E  0823               	movf	vfpfcnvrt@convarg,w
  4162     074F  00F2               	movwf	___awmod@dividend
  4163     0750  120A  118A  2328  120A  118A  	fcall	___awmod
  4164     0755  0871               	movf	?___awmod+1,w
  4165     0756  00F7               	movwf	abs@a+1
  4166     0757  0870               	movf	?___awmod,w
  4167     0758  00F6               	movwf	abs@a
  4168     0759  120A  158A  2793  120A  118A  	fcall	_abs
  4169     075E  0876               	movf	?_abs,w
  4170     075F  3E30               	addlw	48
  4171     0760  1383               	bcf	3,7	;select IRP bank1
  4172     0761  0080               	movwf	0
  4173     0762                     l1953:
  4174                           
  4175                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  4176     0762  300A               	movlw	10
  4177     0763  00F0               	movwf	___awdiv@divisor
  4178     0764  3000               	movlw	0
  4179     0765  00F1               	movwf	___awdiv@divisor+1
  4180     0766  1283               	bcf	3,5	;RP0=0, select bank0
  4181     0767  1303               	bcf	3,6	;RP1=0, select bank0
  4182     0768  0824               	movf	vfpfcnvrt@convarg+1,w
  4183     0769  00F3               	movwf	___awdiv@dividend+1
  4184     076A  0823               	movf	vfpfcnvrt@convarg,w
  4185     076B  00F2               	movwf	___awdiv@dividend
  4186     076C  120A  118A  2381  120A  118A  	fcall	___awdiv
  4187     0771  0871               	movf	?___awdiv+1,w
  4188     0772  1283               	bcf	3,5	;RP0=0, select bank0
  4189     0773  1303               	bcf	3,6	;RP1=0, select bank0
  4190     0774  00A4               	movwf	vfpfcnvrt@convarg+1
  4191     0775  0870               	movf	?___awdiv,w
  4192     0776  00A3               	movwf	vfpfcnvrt@convarg
  4193     0777                     l1955:
  4194                           
  4195                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  4196     0777  0823               	movf	vfpfcnvrt@convarg,w
  4197     0778  0424               	iorwf	vfpfcnvrt@convarg+1,w
  4198     0779  1903               	btfsc	3,2
  4199     077A  2F7C               	goto	u2111
  4200     077B  2F7D               	goto	u2110
  4201     077C                     u2111:
  4202     077C  2F82               	goto	l1959
  4203     077D                     u2110:
  4204     077D                     l1957:
  4205     077D  0827               	movf	vfpfcnvrt@c,w
  4206     077E  1D03               	btfss	3,2
  4207     077F  2F81               	goto	u2121
  4208     0780  2F82               	goto	u2120
  4209     0781                     u2121:
  4210     0781  2F43               	goto	l1951
  4211     0782                     u2120:
  4212     0782                     l1959:
  4213                           
  4214                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  4215     0782  0827               	movf	vfpfcnvrt@c,w
  4216     0783  1903               	btfsc	3,2
  4217     0784  2F86               	goto	u2131
  4218     0785  2F87               	goto	u2130
  4219     0786                     u2131:
  4220     0786  2FAD               	goto	l1969
  4221     0787                     u2130:
  4222     0787                     l1961:
  4223     0787  0820               	movf	vfpfcnvrt@done,w
  4224     0788  1903               	btfsc	3,2
  4225     0789  2F8B               	goto	u2141
  4226     078A  2F8C               	goto	u2140
  4227     078B                     u2141:
  4228     078B  2FAD               	goto	l1969
  4229     078C                     u2140:
  4230     078C                     l1963:
  4231                           
  4232                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  4233     078C  3001               	movlw	1
  4234     078D  02A7               	subwf	vfpfcnvrt@c,f
  4235     078E  0827               	movf	vfpfcnvrt@c,w
  4236     078F  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  4237     0790  0084               	movwf	4
  4238     0791  302D               	movlw	45
  4239     0792  1383               	bcf	3,7	;select IRP bank1
  4240     0793  0080               	movwf	0
  4241     0794  2FAD               	goto	l1969
  4242     0795                     l1965:
  4243                           
  4244                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  4245     0795  0827               	movf	vfpfcnvrt@c,w
  4246     0796  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  4247     0797  0084               	movwf	4
  4248     0798  1383               	bcf	3,7	;select IRP bank1
  4249     0799  0800               	movf	0,w
  4250     079A  00FC               	movwf	??_vfpfcnvrt
  4251     079B  01FD               	clrf	??_vfpfcnvrt+1
  4252     079C  087C               	movf	??_vfpfcnvrt,w
  4253     079D  00F0               	movwf	fputc@c
  4254     079E  087D               	movf	??_vfpfcnvrt+1,w
  4255     079F  00F1               	movwf	fputc@c+1
  4256     07A0  0821               	movf	vfpfcnvrt@fp,w
  4257     07A1  00F2               	movwf	fputc@fp
  4258     07A2  120A  118A  22D2  120A  118A  	fcall	_fputc
  4259     07A7                     l1967:
  4260     07A7  3001               	movlw	1
  4261     07A8  00FF               	movwf	btemp+1
  4262     07A9  087F               	movf	btemp+1,w
  4263     07AA  1283               	bcf	3,5	;RP0=0, select bank0
  4264     07AB  1303               	bcf	3,6	;RP1=0, select bank0
  4265     07AC  07A7               	addwf	vfpfcnvrt@c,f
  4266     07AD                     l1969:
  4267                           
  4268                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  4269     07AD  3020               	movlw	32
  4270     07AE  0627               	xorwf	vfpfcnvrt@c,w
  4271     07AF  1D03               	btfss	3,2
  4272     07B0  2FB2               	goto	u2151
  4273     07B1  2FB3               	goto	u2150
  4274     07B2                     u2151:
  4275     07B2  2F95               	goto	l1965
  4276     07B3                     u2150:
  4277     07B3  2FD3               	goto	l937
  4278     07B4                     l1971:
  4279                           
  4280                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  4281     07B4  3001               	movlw	1
  4282     07B5  00FF               	movwf	btemp+1
  4283     07B6  087A               	movf	vfpfcnvrt@fmt,w
  4284     07B7  0084               	movwf	4
  4285     07B8  087F               	movf	btemp+1,w
  4286     07B9  1383               	bcf	3,7	;select IRP bank0
  4287     07BA  0780               	addwf	0,f
  4288     07BB  2FD3               	goto	l937
  4289     07BC                     l1975:
  4290                           
  4291                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  4292     07BC  087A               	movf	vfpfcnvrt@fmt,w
  4293     07BD  0084               	movwf	4
  4294     07BE  0800               	movf	0,w
  4295     07BF  0084               	movwf	4
  4296     07C0  120A  158A  2000  120A  118A  	fcall	stringdir
  4297     07C5  00FC               	movwf	??_vfpfcnvrt
  4298     07C6  01FD               	clrf	??_vfpfcnvrt+1
  4299     07C7  087C               	movf	??_vfpfcnvrt,w
  4300     07C8  00F0               	movwf	fputc@c
  4301     07C9  087D               	movf	??_vfpfcnvrt+1,w
  4302     07CA  00F1               	movwf	fputc@c+1
  4303     07CB  0821               	movf	vfpfcnvrt@fp,w
  4304     07CC  00F2               	movwf	fputc@fp
  4305     07CD  120A  118A  22D2  120A  118A  	fcall	_fputc
  4306     07D2  2FB4               	goto	l1971
  4307     07D3                     l937:
  4308     07D3  0008               	return
  4309     07D4                     __end_of_vfpfcnvrt:
  4310                           
  4311                           	psect	text21
  4312     02D2                     __ptext21:	
  4313 ;; *************** function _fputc *****************
  4314 ;; Defined at:
  4315 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  4316 ;; Parameters:    Size  Location     Type
  4317 ;;  c               2    0[COMMON] int 
  4318 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  4319 ;;		 -> sprintf@f(11), 
  4320 ;; Auto vars:     Size  Location     Type
  4321 ;;		None
  4322 ;; Return value:  Size  Location     Type
  4323 ;;                  2    0[COMMON] int 
  4324 ;; Registers used:
  4325 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4326 ;; Tracked objects:
  4327 ;;		On entry : 0/0
  4328 ;;		On exit  : 0/0
  4329 ;;		Unchanged: 0/0
  4330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4331 ;;      Params:         3       0       0       0       0
  4332 ;;      Locals:         0       0       0       0       0
  4333 ;;      Temps:          5       0       0       0       0
  4334 ;;      Totals:         8       0       0       0       0
  4335 ;;Total ram usage:        8 bytes
  4336 ;; Hardware stack levels used: 1
  4337 ;; Hardware stack levels required when called: 1
  4338 ;; This function calls:
  4339 ;;		_putch
  4340 ;; This function is called by:
  4341 ;;		_vfpfcnvrt
  4342 ;; This function uses a non-reentrant model
  4343 ;;
  4344                           
  4345     02D2                     _fputc:	
  4346                           ;psect for function _fputc
  4347                           
  4348     02D2                     l1863:	
  4349                           ;incstack = 0
  4350                           ; Regs used in _fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4351                           
  4352     02D2  0872               	movf	fputc@fp,w
  4353     02D3  1903               	btfsc	3,2
  4354     02D4  2AD6               	goto	u1881
  4355     02D5  2AD7               	goto	u1880
  4356     02D6                     u1881:
  4357     02D6  2ADC               	goto	l1867
  4358     02D7                     u1880:
  4359     02D7                     l1865:
  4360     02D7  0872               	movf	fputc@fp,w
  4361     02D8  1D03               	btfss	3,2
  4362     02D9  2ADB               	goto	u1891
  4363     02DA  2ADC               	goto	u1890
  4364     02DB                     u1891:
  4365     02DB  2AE3               	goto	l1869
  4366     02DC                     u1890:
  4367     02DC                     l1867:
  4368     02DC  0870               	movf	fputc@c,w
  4369     02DD  120A  118A  2005  120A  118A  	fcall	_putch
  4370     02E2  2B27               	goto	l962
  4371     02E3                     l1869:
  4372     02E3  0872               	movf	fputc@fp,w
  4373     02E4  3E09               	addlw	9
  4374     02E5  0084               	movwf	4
  4375     02E6  1383               	bcf	3,7	;select IRP bank0
  4376     02E7  0800               	movf	0,w
  4377     02E8  00F3               	movwf	??_fputc
  4378     02E9  0A84               	incf	4,f
  4379     02EA  0800               	movf	0,w
  4380     02EB  00F4               	movwf	??_fputc+1
  4381     02EC  0873               	movf	??_fputc,w
  4382     02ED  0474               	iorwf	??_fputc+1,w
  4383     02EE  1903               	btfsc	3,2
  4384     02EF  2AF1               	goto	u1901
  4385     02F0  2AF2               	goto	u1900
  4386     02F1                     u1901:
  4387     02F1  2B10               	goto	l1873
  4388     02F2                     u1900:
  4389     02F2                     l1871:
  4390     02F2  0872               	movf	fputc@fp,w
  4391     02F3  3E09               	addlw	9
  4392     02F4  0084               	movwf	4
  4393     02F5  0800               	movf	0,w
  4394     02F6  00F3               	movwf	??_fputc
  4395     02F7  0A84               	incf	4,f
  4396     02F8  0800               	movf	0,w
  4397     02F9  00F4               	movwf	??_fputc+1
  4398     02FA  0872               	movf	fputc@fp,w
  4399     02FB  3E02               	addlw	2
  4400     02FC  0084               	movwf	4
  4401     02FD  0800               	movf	0,w
  4402     02FE  00F5               	movwf	??_fputc+2
  4403     02FF  0A84               	incf	4,f
  4404     0300  0800               	movf	0,w
  4405     0301  00F6               	movwf	??_fputc+3
  4406     0302  0876               	movf	??_fputc+3,w
  4407     0303  3A80               	xorlw	128
  4408     0304  00F7               	movwf	??_fputc+4
  4409     0305  0874               	movf	??_fputc+1,w
  4410     0306  3A80               	xorlw	128
  4411     0307  0277               	subwf	??_fputc+4,w
  4412     0308  1D03               	skipz
  4413     0309  2B0C               	goto	u1915
  4414     030A  0873               	movf	??_fputc,w
  4415     030B  0275               	subwf	??_fputc+2,w
  4416     030C                     u1915:
  4417     030C  1803               	skipnc
  4418     030D  2B0F               	goto	u1911
  4419     030E  2B10               	goto	u1910
  4420     030F                     u1911:
  4421     030F  2B27               	goto	l962
  4422     0310                     u1910:
  4423     0310                     l1873:
  4424     0310  0872               	movf	fputc@fp,w
  4425     0311  3E02               	addlw	2
  4426     0312  0084               	movwf	4
  4427     0313  1383               	bcf	3,7	;select IRP bank0
  4428     0314  0800               	movf	0,w
  4429     0315  00F3               	movwf	??_fputc
  4430     0316  0872               	movf	fputc@fp,w
  4431     0317  0084               	movwf	4
  4432     0318  0800               	movf	0,w
  4433     0319  0773               	addwf	??_fputc,w
  4434     031A  00F4               	movwf	??_fputc+1
  4435     031B  0874               	movf	??_fputc+1,w
  4436     031C  0084               	movwf	4
  4437     031D  0870               	movf	fputc@c,w
  4438     031E  0080               	movwf	0
  4439     031F  0872               	movf	fputc@fp,w
  4440     0320  3E02               	addlw	2
  4441     0321  0084               	movwf	4
  4442     0322  3001               	movlw	1
  4443     0323  0780               	addwf	0,f
  4444     0324  0A84               	incf	4,f
  4445     0325  1803               	skipnc
  4446     0326  0A80               	incf	0,f
  4447     0327                     l962:
  4448     0327  0008               	return
  4449     0328                     __end_of_fputc:
  4450                           
  4451                           	psect	text22
  4452     0005                     __ptext22:	
  4453 ;; *************** function _putch *****************
  4454 ;; Defined at:
  4455 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  4456 ;; Parameters:    Size  Location     Type
  4457 ;;  c               1    wreg     unsigned char 
  4458 ;; Auto vars:     Size  Location     Type
  4459 ;;  c               1    0[COMMON] unsigned char 
  4460 ;; Return value:  Size  Location     Type
  4461 ;;                  1    wreg      void 
  4462 ;; Registers used:
  4463 ;;		wreg
  4464 ;; Tracked objects:
  4465 ;;		On entry : 0/0
  4466 ;;		On exit  : 0/0
  4467 ;;		Unchanged: 0/0
  4468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4469 ;;      Params:         0       0       0       0       0
  4470 ;;      Locals:         0       0       0       0       0
  4471 ;;      Temps:          0       0       0       0       0
  4472 ;;      Totals:         0       0       0       0       0
  4473 ;;Total ram usage:        0 bytes
  4474 ;; Hardware stack levels used: 1
  4475 ;; This function calls:
  4476 ;;		Nothing
  4477 ;; This function is called by:
  4478 ;;		_fputc
  4479 ;; This function uses a non-reentrant model
  4480 ;;
  4481                           
  4482     0005                     _putch:	
  4483                           ;psect for function _putch
  4484                           
  4485     0005                     l973:	
  4486                           ;incstack = 0
  4487                           ; Regs used in _putch: [wreg]
  4488                           
  4489     0005  0008               	return
  4490     0006                     __end_of_putch:
  4491                           
  4492                           	psect	text23
  4493     0F93                     __ptext23:	
  4494 ;; *************** function _abs *****************
  4495 ;; Defined at:
  4496 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  4497 ;; Parameters:    Size  Location     Type
  4498 ;;  a               2    6[COMMON] int 
  4499 ;; Auto vars:     Size  Location     Type
  4500 ;;		None
  4501 ;; Return value:  Size  Location     Type
  4502 ;;                  2    6[COMMON] int 
  4503 ;; Registers used:
  4504 ;;		wreg, status,2, status,0
  4505 ;; Tracked objects:
  4506 ;;		On entry : 0/0
  4507 ;;		On exit  : 0/0
  4508 ;;		Unchanged: 0/0
  4509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4510 ;;      Params:         2       0       0       0       0
  4511 ;;      Locals:         0       0       0       0       0
  4512 ;;      Temps:          2       0       0       0       0
  4513 ;;      Totals:         4       0       0       0       0
  4514 ;;Total ram usage:        4 bytes
  4515 ;; Hardware stack levels used: 1
  4516 ;; This function calls:
  4517 ;;		Nothing
  4518 ;; This function is called by:
  4519 ;;		_vfpfcnvrt
  4520 ;; This function uses a non-reentrant model
  4521 ;;
  4522                           
  4523     0F93                     _abs:	
  4524                           ;psect for function _abs
  4525                           
  4526     0F93                     l1877:	
  4527                           ;incstack = 0
  4528                           ; Regs used in _abs: [wreg+status,2+status,0]
  4529                           
  4530     0F93  1BF7               	btfsc	abs@a+1,7
  4531     0F94  2F96               	goto	u1921
  4532     0F95  2F97               	goto	u1920
  4533     0F96                     u1921:
  4534     0F96  2F98               	goto	l1881
  4535     0F97                     u1920:
  4536     0F97                     l1879:
  4537     0F97  2FA3               	goto	l950
  4538     0F98                     l1881:
  4539     0F98  0976               	comf	abs@a,w
  4540     0F99  00F8               	movwf	??_abs
  4541     0F9A  0977               	comf	abs@a+1,w
  4542     0F9B  00F9               	movwf	??_abs+1
  4543     0F9C  0AF8               	incf	??_abs,f
  4544     0F9D  1903               	skipnz
  4545     0F9E  0AF9               	incf	??_abs+1,f
  4546     0F9F  0878               	movf	??_abs,w
  4547     0FA0  00F6               	movwf	?_abs
  4548     0FA1  0879               	movf	??_abs+1,w
  4549     0FA2  00F7               	movwf	?_abs+1
  4550     0FA3                     l950:
  4551     0FA3  0008               	return
  4552     0FA4                     __end_of_abs:
  4553                           
  4554                           	psect	text24
  4555     0328                     __ptext24:	
  4556 ;; *************** function ___awmod *****************
  4557 ;; Defined at:
  4558 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  4559 ;; Parameters:    Size  Location     Type
  4560 ;;  divisor         2    0[COMMON] int 
  4561 ;;  dividend        2    2[COMMON] int 
  4562 ;; Auto vars:     Size  Location     Type
  4563 ;;  sign            1    5[COMMON] unsigned char 
  4564 ;;  counter         1    4[COMMON] unsigned char 
  4565 ;; Return value:  Size  Location     Type
  4566 ;;                  2    0[COMMON] int 
  4567 ;; Registers used:
  4568 ;;		wreg, status,2, status,0, btemp+1
  4569 ;; Tracked objects:
  4570 ;;		On entry : 0/0
  4571 ;;		On exit  : 0/0
  4572 ;;		Unchanged: 0/0
  4573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4574 ;;      Params:         4       0       0       0       0
  4575 ;;      Locals:         2       0       0       0       0
  4576 ;;      Temps:          0       0       0       0       0
  4577 ;;      Totals:         6       0       0       0       0
  4578 ;;Total ram usage:        6 bytes
  4579 ;; Hardware stack levels used: 1
  4580 ;; This function calls:
  4581 ;;		Nothing
  4582 ;; This function is called by:
  4583 ;;		_vfpfcnvrt
  4584 ;; This function uses a non-reentrant model
  4585 ;;
  4586                           
  4587     0328                     ___awmod:	
  4588                           ;psect for function ___awmod
  4589                           
  4590     0328                     l1825:	
  4591                           ;incstack = 0
  4592                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  4593                           
  4594     0328  01F5               	clrf	___awmod@sign
  4595     0329                     l1827:
  4596     0329  1FF3               	btfss	___awmod@dividend+1,7
  4597     032A  2B2C               	goto	u1791
  4598     032B  2B2D               	goto	u1790
  4599     032C                     u1791:
  4600     032C  2B34               	goto	l1833
  4601     032D                     u1790:
  4602     032D                     l1829:
  4603     032D  09F2               	comf	___awmod@dividend,f
  4604     032E  09F3               	comf	___awmod@dividend+1,f
  4605     032F  0AF2               	incf	___awmod@dividend,f
  4606     0330  1903               	skipnz
  4607     0331  0AF3               	incf	___awmod@dividend+1,f
  4608     0332                     l1831:
  4609     0332  01F5               	clrf	___awmod@sign
  4610     0333  0AF5               	incf	___awmod@sign,f
  4611     0334                     l1833:
  4612     0334  1FF1               	btfss	___awmod@divisor+1,7
  4613     0335  2B37               	goto	u1801
  4614     0336  2B38               	goto	u1800
  4615     0337                     u1801:
  4616     0337  2B3D               	goto	l1837
  4617     0338                     u1800:
  4618     0338                     l1835:
  4619     0338  09F0               	comf	___awmod@divisor,f
  4620     0339  09F1               	comf	___awmod@divisor+1,f
  4621     033A  0AF0               	incf	___awmod@divisor,f
  4622     033B  1903               	skipnz
  4623     033C  0AF1               	incf	___awmod@divisor+1,f
  4624     033D                     l1837:
  4625     033D  0870               	movf	___awmod@divisor,w
  4626     033E  0471               	iorwf	___awmod@divisor+1,w
  4627     033F  1903               	btfsc	3,2
  4628     0340  2B42               	goto	u1811
  4629     0341  2B43               	goto	u1810
  4630     0342                     u1811:
  4631     0342  2B72               	goto	l1855
  4632     0343                     u1810:
  4633     0343                     l1839:
  4634     0343  01F4               	clrf	___awmod@counter
  4635     0344  0AF4               	incf	___awmod@counter,f
  4636     0345  2B51               	goto	l1845
  4637     0346                     l1841:
  4638     0346  3001               	movlw	1
  4639     0347                     u1825:
  4640     0347  1003               	clrc
  4641     0348  0DF0               	rlf	___awmod@divisor,f
  4642     0349  0DF1               	rlf	___awmod@divisor+1,f
  4643     034A  3EFF               	addlw	-1
  4644     034B  1D03               	skipz
  4645     034C  2B47               	goto	u1825
  4646     034D                     l1843:
  4647     034D  3001               	movlw	1
  4648     034E  00FF               	movwf	btemp+1
  4649     034F  087F               	movf	btemp+1,w
  4650     0350  07F4               	addwf	___awmod@counter,f
  4651     0351                     l1845:
  4652     0351  1FF1               	btfss	___awmod@divisor+1,7
  4653     0352  2B54               	goto	u1831
  4654     0353  2B55               	goto	u1830
  4655     0354                     u1831:
  4656     0354  2B46               	goto	l1841
  4657     0355                     u1830:
  4658     0355                     l1847:
  4659     0355  0871               	movf	___awmod@divisor+1,w
  4660     0356  0273               	subwf	___awmod@dividend+1,w
  4661     0357  1D03               	skipz
  4662     0358  2B5B               	goto	u1845
  4663     0359  0870               	movf	___awmod@divisor,w
  4664     035A  0272               	subwf	___awmod@dividend,w
  4665     035B                     u1845:
  4666     035B  1C03               	skipc
  4667     035C  2B5E               	goto	u1841
  4668     035D  2B5F               	goto	u1840
  4669     035E                     u1841:
  4670     035E  2B65               	goto	l1851
  4671     035F                     u1840:
  4672     035F                     l1849:
  4673     035F  0870               	movf	___awmod@divisor,w
  4674     0360  02F2               	subwf	___awmod@dividend,f
  4675     0361  0871               	movf	___awmod@divisor+1,w
  4676     0362  1C03               	skipc
  4677     0363  03F3               	decf	___awmod@dividend+1,f
  4678     0364  02F3               	subwf	___awmod@dividend+1,f
  4679     0365                     l1851:
  4680     0365  3001               	movlw	1
  4681     0366                     u1855:
  4682     0366  1003               	clrc
  4683     0367  0CF1               	rrf	___awmod@divisor+1,f
  4684     0368  0CF0               	rrf	___awmod@divisor,f
  4685     0369  3EFF               	addlw	-1
  4686     036A  1D03               	skipz
  4687     036B  2B66               	goto	u1855
  4688     036C                     l1853:
  4689     036C  3001               	movlw	1
  4690     036D  02F4               	subwf	___awmod@counter,f
  4691     036E  1D03               	btfss	3,2
  4692     036F  2B71               	goto	u1861
  4693     0370  2B72               	goto	u1860
  4694     0371                     u1861:
  4695     0371  2B55               	goto	l1847
  4696     0372                     u1860:
  4697     0372                     l1855:
  4698     0372  0875               	movf	___awmod@sign,w
  4699     0373  1903               	btfsc	3,2
  4700     0374  2B76               	goto	u1871
  4701     0375  2B77               	goto	u1870
  4702     0376                     u1871:
  4703     0376  2B7C               	goto	l1859
  4704     0377                     u1870:
  4705     0377                     l1857:
  4706     0377  09F2               	comf	___awmod@dividend,f
  4707     0378  09F3               	comf	___awmod@dividend+1,f
  4708     0379  0AF2               	incf	___awmod@dividend,f
  4709     037A  1903               	skipnz
  4710     037B  0AF3               	incf	___awmod@dividend+1,f
  4711     037C                     l1859:
  4712     037C  0873               	movf	___awmod@dividend+1,w
  4713     037D  00F1               	movwf	?___awmod+1
  4714     037E  0872               	movf	___awmod@dividend,w
  4715     037F  00F0               	movwf	?___awmod
  4716     0380                     l596:
  4717     0380  0008               	return
  4718     0381                     __end_of___awmod:
  4719                           
  4720                           	psect	text25
  4721     0381                     __ptext25:	
  4722 ;; *************** function ___awdiv *****************
  4723 ;; Defined at:
  4724 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  4725 ;; Parameters:    Size  Location     Type
  4726 ;;  divisor         2    0[COMMON] int 
  4727 ;;  dividend        2    2[COMMON] int 
  4728 ;; Auto vars:     Size  Location     Type
  4729 ;;  quotient        2    6[COMMON] int 
  4730 ;;  sign            1    5[COMMON] unsigned char 
  4731 ;;  counter         1    4[COMMON] unsigned char 
  4732 ;; Return value:  Size  Location     Type
  4733 ;;                  2    0[COMMON] int 
  4734 ;; Registers used:
  4735 ;;		wreg, status,2, status,0, btemp+1
  4736 ;; Tracked objects:
  4737 ;;		On entry : 0/0
  4738 ;;		On exit  : 0/0
  4739 ;;		Unchanged: 0/0
  4740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4741 ;;      Params:         4       0       0       0       0
  4742 ;;      Locals:         4       0       0       0       0
  4743 ;;      Temps:          0       0       0       0       0
  4744 ;;      Totals:         8       0       0       0       0
  4745 ;;Total ram usage:        8 bytes
  4746 ;; Hardware stack levels used: 1
  4747 ;; This function calls:
  4748 ;;		Nothing
  4749 ;; This function is called by:
  4750 ;;		_vfpfcnvrt
  4751 ;; This function uses a non-reentrant model
  4752 ;;
  4753                           
  4754     0381                     ___awdiv:	
  4755                           ;psect for function ___awdiv
  4756                           
  4757     0381                     l1781:	
  4758                           ;incstack = 0
  4759                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  4760                           
  4761     0381  01F5               	clrf	___awdiv@sign
  4762     0382                     l1783:
  4763     0382  1FF1               	btfss	___awdiv@divisor+1,7
  4764     0383  2B85               	goto	u1691
  4765     0384  2B86               	goto	u1690
  4766     0385                     u1691:
  4767     0385  2B8D               	goto	l1789
  4768     0386                     u1690:
  4769     0386                     l1785:
  4770     0386  09F0               	comf	___awdiv@divisor,f
  4771     0387  09F1               	comf	___awdiv@divisor+1,f
  4772     0388  0AF0               	incf	___awdiv@divisor,f
  4773     0389  1903               	skipnz
  4774     038A  0AF1               	incf	___awdiv@divisor+1,f
  4775     038B                     l1787:
  4776     038B  01F5               	clrf	___awdiv@sign
  4777     038C  0AF5               	incf	___awdiv@sign,f
  4778     038D                     l1789:
  4779     038D  1FF3               	btfss	___awdiv@dividend+1,7
  4780     038E  2B90               	goto	u1701
  4781     038F  2B91               	goto	u1700
  4782     0390                     u1701:
  4783     0390  2B9A               	goto	l1795
  4784     0391                     u1700:
  4785     0391                     l1791:
  4786     0391  09F2               	comf	___awdiv@dividend,f
  4787     0392  09F3               	comf	___awdiv@dividend+1,f
  4788     0393  0AF2               	incf	___awdiv@dividend,f
  4789     0394  1903               	skipnz
  4790     0395  0AF3               	incf	___awdiv@dividend+1,f
  4791     0396                     l1793:
  4792     0396  3001               	movlw	1
  4793     0397  00FF               	movwf	btemp+1
  4794     0398  087F               	movf	btemp+1,w
  4795     0399  06F5               	xorwf	___awdiv@sign,f
  4796     039A                     l1795:
  4797     039A  01F6               	clrf	___awdiv@quotient
  4798     039B  01F7               	clrf	___awdiv@quotient+1
  4799     039C                     l1797:
  4800     039C  0870               	movf	___awdiv@divisor,w
  4801     039D  0471               	iorwf	___awdiv@divisor+1,w
  4802     039E  1903               	btfsc	3,2
  4803     039F  2BA1               	goto	u1711
  4804     03A0  2BA2               	goto	u1710
  4805     03A1                     u1711:
  4806     03A1  2BD9               	goto	l1817
  4807     03A2                     u1710:
  4808     03A2                     l1799:
  4809     03A2  01F4               	clrf	___awdiv@counter
  4810     03A3  0AF4               	incf	___awdiv@counter,f
  4811     03A4  2BB0               	goto	l1805
  4812     03A5                     l1801:
  4813     03A5  3001               	movlw	1
  4814     03A6                     u1725:
  4815     03A6  1003               	clrc
  4816     03A7  0DF0               	rlf	___awdiv@divisor,f
  4817     03A8  0DF1               	rlf	___awdiv@divisor+1,f
  4818     03A9  3EFF               	addlw	-1
  4819     03AA  1D03               	skipz
  4820     03AB  2BA6               	goto	u1725
  4821     03AC                     l1803:
  4822     03AC  3001               	movlw	1
  4823     03AD  00FF               	movwf	btemp+1
  4824     03AE  087F               	movf	btemp+1,w
  4825     03AF  07F4               	addwf	___awdiv@counter,f
  4826     03B0                     l1805:
  4827     03B0  1FF1               	btfss	___awdiv@divisor+1,7
  4828     03B1  2BB3               	goto	u1731
  4829     03B2  2BB4               	goto	u1730
  4830     03B3                     u1731:
  4831     03B3  2BA5               	goto	l1801
  4832     03B4                     u1730:
  4833     03B4                     l1807:
  4834     03B4  3001               	movlw	1
  4835     03B5                     u1745:
  4836     03B5  1003               	clrc
  4837     03B6  0DF6               	rlf	___awdiv@quotient,f
  4838     03B7  0DF7               	rlf	___awdiv@quotient+1,f
  4839     03B8  3EFF               	addlw	-1
  4840     03B9  1D03               	skipz
  4841     03BA  2BB5               	goto	u1745
  4842     03BB  0871               	movf	___awdiv@divisor+1,w
  4843     03BC  0273               	subwf	___awdiv@dividend+1,w
  4844     03BD  1D03               	skipz
  4845     03BE  2BC1               	goto	u1755
  4846     03BF  0870               	movf	___awdiv@divisor,w
  4847     03C0  0272               	subwf	___awdiv@dividend,w
  4848     03C1                     u1755:
  4849     03C1  1C03               	skipc
  4850     03C2  2BC4               	goto	u1751
  4851     03C3  2BC5               	goto	u1750
  4852     03C4                     u1751:
  4853     03C4  2BCC               	goto	l1813
  4854     03C5                     u1750:
  4855     03C5                     l1809:
  4856     03C5  0870               	movf	___awdiv@divisor,w
  4857     03C6  02F2               	subwf	___awdiv@dividend,f
  4858     03C7  0871               	movf	___awdiv@divisor+1,w
  4859     03C8  1C03               	skipc
  4860     03C9  03F3               	decf	___awdiv@dividend+1,f
  4861     03CA  02F3               	subwf	___awdiv@dividend+1,f
  4862     03CB                     l1811:
  4863     03CB  1476               	bsf	___awdiv@quotient,0
  4864     03CC                     l1813:
  4865     03CC  3001               	movlw	1
  4866     03CD                     u1765:
  4867     03CD  1003               	clrc
  4868     03CE  0CF1               	rrf	___awdiv@divisor+1,f
  4869     03CF  0CF0               	rrf	___awdiv@divisor,f
  4870     03D0  3EFF               	addlw	-1
  4871     03D1  1D03               	skipz
  4872     03D2  2BCD               	goto	u1765
  4873     03D3                     l1815:
  4874     03D3  3001               	movlw	1
  4875     03D4  02F4               	subwf	___awdiv@counter,f
  4876     03D5  1D03               	btfss	3,2
  4877     03D6  2BD8               	goto	u1771
  4878     03D7  2BD9               	goto	u1770
  4879     03D8                     u1771:
  4880     03D8  2BB4               	goto	l1807
  4881     03D9                     u1770:
  4882     03D9                     l1817:
  4883     03D9  0875               	movf	___awdiv@sign,w
  4884     03DA  1903               	btfsc	3,2
  4885     03DB  2BDD               	goto	u1781
  4886     03DC  2BDE               	goto	u1780
  4887     03DD                     u1781:
  4888     03DD  2BE3               	goto	l1821
  4889     03DE                     u1780:
  4890     03DE                     l1819:
  4891     03DE  09F6               	comf	___awdiv@quotient,f
  4892     03DF  09F7               	comf	___awdiv@quotient+1,f
  4893     03E0  0AF6               	incf	___awdiv@quotient,f
  4894     03E1  1903               	skipnz
  4895     03E2  0AF7               	incf	___awdiv@quotient+1,f
  4896     03E3                     l1821:
  4897     03E3  0877               	movf	___awdiv@quotient+1,w
  4898     03E4  00F1               	movwf	?___awdiv+1
  4899     03E5  0876               	movf	___awdiv@quotient,w
  4900     03E6  00F0               	movwf	?___awdiv
  4901     03E7                     l583:
  4902     03E7  0008               	return
  4903     03E8                     __end_of___awdiv:
  4904                           
  4905                           	psect	text26
  4906     0FE4                     __ptext26:	
  4907 ;; *************** function _memset *****************
  4908 ;; Defined at:
  4909 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memset.c"
  4910 ;; Parameters:    Size  Location     Type
  4911 ;;  dest            1    wreg     PTR void 
  4912 ;;		 -> main@str(11), 
  4913 ;;  c               2    0[COMMON] int 
  4914 ;;  n               2    2[COMMON] unsigned int 
  4915 ;; Auto vars:     Size  Location     Type
  4916 ;;  dest            1    5[COMMON] PTR void 
  4917 ;;		 -> main@str(11), 
  4918 ;;  p               1    4[COMMON] PTR unsigned char 
  4919 ;;		 -> main@str(11), 
  4920 ;; Return value:  Size  Location     Type
  4921 ;;                  1    wreg      PTR void 
  4922 ;; Registers used:
  4923 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4924 ;; Tracked objects:
  4925 ;;		On entry : 0/0
  4926 ;;		On exit  : 0/0
  4927 ;;		Unchanged: 0/0
  4928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4929 ;;      Params:         4       0       0       0       0
  4930 ;;      Locals:         2       0       0       0       0
  4931 ;;      Temps:          0       0       0       0       0
  4932 ;;      Totals:         6       0       0       0       0
  4933 ;;Total ram usage:        6 bytes
  4934 ;; Hardware stack levels used: 1
  4935 ;; This function calls:
  4936 ;;		Nothing
  4937 ;; This function is called by:
  4938 ;;		_Convert_uint32_to_string
  4939 ;;		_Convert_uint8_to_string
  4940 ;;		_Convert_uint16_to_string
  4941 ;; This function uses a non-reentrant model
  4942 ;;
  4943                           
  4944     0FE4                     _memset:	
  4945                           ;psect for function _memset
  4946                           
  4947                           
  4948                           ;incstack = 0
  4949                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0+btemp+1]
  4950                           ;memset@dest stored from wreg
  4951     0FE4  00F5               	movwf	memset@dest
  4952     0FE5                     l2107:
  4953     0FE5  0875               	movf	memset@dest,w
  4954     0FE6  00F4               	movwf	memset@p
  4955     0FE7  2FF1               	goto	l2113
  4956     0FE8                     l2109:
  4957     0FE8  0874               	movf	memset@p,w
  4958     0FE9  0084               	movwf	4
  4959     0FEA  0870               	movf	memset@c,w
  4960     0FEB  1383               	bcf	3,7	;select IRP bank0
  4961     0FEC  0080               	movwf	0
  4962     0FED                     l2111:
  4963     0FED  3001               	movlw	1
  4964     0FEE  00FF               	movwf	btemp+1
  4965     0FEF  087F               	movf	btemp+1,w
  4966     0FF0  07F4               	addwf	memset@p,f
  4967     0FF1                     l2113:
  4968     0FF1  3001               	movlw	1
  4969     0FF2  02F2               	subwf	memset@n,f
  4970     0FF3  3000               	movlw	0
  4971     0FF4  1C03               	skipc
  4972     0FF5  03F3               	decf	memset@n+1,f
  4973     0FF6  02F3               	subwf	memset@n+1,f
  4974     0FF7  0A72               	incf	memset@n,w
  4975     0FF8  1D03               	skipz
  4976     0FF9  2FFE               	goto	u2261
  4977     0FFA  0A73               	incf	memset@n+1,w
  4978     0FFB  1D03               	btfss	3,2
  4979     0FFC  2FFE               	goto	u2261
  4980     0FFD  2FFF               	goto	u2260
  4981     0FFE                     u2261:
  4982     0FFE  2FE8               	goto	l2109
  4983     0FFF                     u2260:
  4984     0FFF                     l892:
  4985     0FFF  0008               	return
  4986     1000                     __end_of_memset:
  4987     007E                     btemp	set	126	;btemp
  4988     007E                     wtemp0	set	126
  4989                           
  4990                           	psect	config
  4991                           
  4992                           ;Config register CONFIG @ 0x2007
  4993                           ;	Oscillator Selection bits
  4994                           ;	FOSC = EXTRC, RC oscillator
  4995                           ;	Watchdog Timer Enable bit
  4996                           ;	WDTE = OFF, WDT disabled
  4997                           ;	Power-up Timer Enable bit
  4998                           ;	PWRTE = OFF, PWRT disabled
  4999                           ;	Brown-out Reset Enable bit
  5000                           ;	BOREN = OFF, BOR disabled
  5001                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  5002                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  5003                           ;	Data EEPROM Memory Code Protection bit
  5004                           ;	CPD = OFF, Data EEPROM code protection off
  5005                           ;	Flash Program Memory Write Enable bits
  5006                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  5007                           ;	In-Circuit Debugger Mode bit
  5008                           ;	DEBUG = 0x1, unprogrammed default
  5009                           ;	Flash Program Memory Code Protection bit
  5010                           ;	CP = OFF, Code protection off
  5011     2007                     	org	8199
  5012     2007  3F3B               	dw	16187

Data Sizes:
    Strings     3
    Constant    8
    Data        38
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     48      75
    BANK1            80      0      48
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Convert_uint32_to_string@str	PTR unsigned char  size(1) Largest target is 11
		 -> main@str(BANK0[11]), 

    f$.$buffer	PTR unsigned char  size(1) Largest target is 0

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    gpio_pin_direction_initialize@pin	PTR const struct . size(1) Largest target is 6
		 -> lcd(BANK1[6]), lcd$pins(BANK1[4]), motor1(BANK0[2]), motor1$pins(BANK0[2]), 
		 -> motor2(BANK0[2]), motor2$pins(BANK0[2]), pin1(BANK0[1]), pin2(BANK0[1]), 
		 -> pin3(BANK0[1]), pin4(BANK0[1]), pin5(BANK0[1]), pin6(BANK0[1]), 
		 -> pin7(BANK0[1]), pin8(BANK0[1]), 

    gpio_pin_initialize@pin	PTR const struct . size(1) Largest target is 6
		 -> lcd(BANK1[6]), lcd$pins(BANK1[4]), motor1(BANK0[2]), motor1$pins(BANK0[2]), 
		 -> motor2(BANK0[2]), motor2$pins(BANK0[2]), pin1(BANK0[1]), pin2(BANK0[1]), 
		 -> pin3(BANK0[1]), pin4(BANK0[1]), pin5(BANK0[1]), pin6(BANK0[1]), 
		 -> pin7(BANK0[1]), pin8(BANK0[1]), 

    gpio_pin_write_logic@pin	PTR const struct . size(1) Largest target is 6
		 -> lcd(BANK1[6]), lcd$pins(BANK1[4]), motor1(BANK0[2]), motor1$pins(BANK0[2]), 
		 -> motor2(BANK0[2]), motor2$pins(BANK0[2]), pin1(BANK0[1]), pin2(BANK0[1]), 
		 -> pin3(BANK0[1]), pin4(BANK0[1]), pin5(BANK0[1]), pin6(BANK0[1]), 
		 -> pin7(BANK0[1]), pin8(BANK0[1]), 

    lcd_4bit_custom_character@chr	PTR unsigned char  size(1) Largest target is 8
		 -> customChar(CODE[8]), 

    lcd_4bit_custom_character@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd(BANK1[6]), 

    lcd_4bits_initialize@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd(BANK1[6]), 

    lcd_4bits_send_char@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd(BANK1[6]), 

    lcd_4bits_send_char_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd(BANK1[6]), 

    lcd_4bits_send_command@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd(BANK1[6]), 

    lcd_4bits_send_string@data	PTR unsigned char  size(1) Largest target is 11
		 -> main@str(BANK0[11]), 

    lcd_4bits_send_string@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd(BANK1[6]), 

    lcd_4bits_send_string_pos@data	PTR unsigned char  size(1) Largest target is 11
		 -> main@str(BANK0[11]), 

    lcd_4bits_send_string_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd(BANK1[6]), 

    memset@dest	PTR void  size(1) Largest target is 11
		 -> main@str(BANK0[11]), 

    memset@p	PTR unsigned char  size(1) Largest target is 11
		 -> main@str(BANK0[11]), 

    motor_initialize@motor	PTR const struct . size(1) Largest target is 2
		 -> motor1(BANK0[2]), motor2(BANK0[2]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTB(SFR0[1]), PORTC(SFR0[1]), PORTD(SFR0[1]), 
		 -> PORTE(SFR0[1]), 

    S922$buffer	PTR unsigned char  size(1) Largest target is 0

    S922$source	PTR const unsigned char  size(1) Largest target is 0

    send_4bits@lcd	PTR struct . size(1) Largest target is 6
		 -> lcd(BANK1[6]), 

    send_enable_signal@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd(BANK1[6]), 

    set_cursor@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd(BANK1[6]), 

    sp__memset	PTR void  size(1) Largest target is 11
		 -> main@str(BANK0[11]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 11
		 -> main@str(BANK0[11]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(SFR1[1]), TRISB(SFR1[1]), TRISC(SFR1[1]), TRISD(SFR1[1]), 
		 -> TRISE(SFR1[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    _lcd_4bits_send_string->_lcd_4bits_send_char
    _lcd_4bit_custom_character->_lcd_4bits_send_char
    _lcd_4bit_custom_character->_lcd_4bits_send_command
    _lcd_4bits_send_char_pos->_lcd_4bits_send_char
    _set_cursor->_lcd_4bits_send_command
    _lcd_4bits_send_char->_send_4bits
    _ecu_initialzie->_motor_initialize
    _motor_initialize->_gpio_pin_initialize
    _lcd_4bits_initialize->_lcd_4bits_send_command
    _lcd_4bits_send_command->_send_4bits
    _send_enable_signal->_gpio_pin_write_logic
    _send_4bits->_gpio_pin_write_logic
    _gpio_pin_initialize->_gpio_pin_write_logic
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod

Critical Paths under _main in BANK0

    _main->_Convert_uint32_to_string
    _lcd_4bits_send_string_pos->_set_cursor
    _lcd_4bits_send_string->_lcd_4bits_send_char
    _lcd_4bit_custom_character->_lcd_4bits_send_char_pos
    _lcd_4bits_send_char_pos->_set_cursor
    _set_cursor->_lcd_4bits_send_command
    _ecu_initialzie->_lcd_4bits_initialize
    _lcd_4bits_initialize->_lcd_4bits_send_command
    _Convert_uint32_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0   73652
                                             32 BANK0     16    16      0
           _Convert_uint32_to_string
             _apllication_initilaize
          _lcd_4bit_custom_character
          _lcd_4bits_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_4bits_send_string_pos                            5     2      3   17152
                                              6 BANK0      5     2      3
              _lcd_4bits_send_string
                         _set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bits_send_string                                3     2      1    7677
                                              2 BANK0      3     2      1
                _lcd_4bits_send_char
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_custom_character                            8     4      4   33558
                                             11 BANK0      7     3      4
                _lcd_4bits_send_char
            _lcd_4bits_send_char_pos
             _lcd_4bits_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bits_send_char_pos                              5     2      3   16945
                                              6 BANK0      5     2      3
                _lcd_4bits_send_char
                         _set_cursor
 ---------------------------------------------------------------------------------
 (2) _set_cursor                                           4     2      2    9072
                                              2 BANK0      4     2      2
             _lcd_4bits_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bits_send_char                                  4     3      1    7454
                                             12 COMMON     2     1      1
                                              0 BANK0      2     2      0
               _gpio_pin_write_logic
                         _send_4bits
                 _send_enable_signal
 ---------------------------------------------------------------------------------
 (1) _apllication_initilaize                               0     0      0   18621
                     _ecu_initialzie
 ---------------------------------------------------------------------------------
 (2) _ecu_initialzie                                       0     0      0   18621
                _gpio_pin_initialize
               _lcd_4bits_initialize
                   _motor_initialize
 ---------------------------------------------------------------------------------
 (3) _motor_initialize                                     2     2      0    3310
                                             12 COMMON     2     2      0
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (3) _lcd_4bits_initialize                                 6     6      0   12143
                                              2 BANK0      6     6      0
                _gpio_pin_initialize
             _lcd_4bits_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bits_send_command                               4     3      1    8544
                                             12 COMMON     2     1      1
                                              0 BANK0      2     2      0
               _gpio_pin_write_logic
                         _send_4bits
                 _send_enable_signal
 ---------------------------------------------------------------------------------
 (4) _send_enable_signal                                   3     3      0    2236
                                              8 COMMON     3     3      0
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _send_4bits                                           4     3      1    2674
                                              8 COMMON     4     3      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_initialize                                  4     4      0    3168
                                              8 COMMON     4     4      0
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                 8     7      1    2012
                                              0 COMMON     8     7      1
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_initialize                        7     7      0     394
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (1) _Convert_uint32_to_string                             3     0      3    4245
                                             29 BANK0      3     0      3
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             19    16      3    3376
                                             12 BANK0     17    14      3
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     2      2    2850
                                              8 BANK0      4     2      2
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           12    10      2    2543
                                             10 COMMON     4     2      2
                                              0 BANK0      8     8      0
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     782
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMMON     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                               6     2      4     651
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Convert_uint32_to_string
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _apllication_initilaize
     _ecu_initialzie
       _gpio_pin_initialize
         _gpio_pin_direction_initialize
         _gpio_pin_write_logic
       _lcd_4bits_initialize
         _gpio_pin_initialize
         _lcd_4bits_send_command
           _gpio_pin_write_logic
           _send_4bits
             _gpio_pin_write_logic
           _send_enable_signal
             _gpio_pin_write_logic
       _motor_initialize
         _gpio_pin_initialize
   _lcd_4bit_custom_character
     _lcd_4bits_send_char
       _gpio_pin_write_logic
       _send_4bits
       _send_enable_signal
     _lcd_4bits_send_char_pos
       _lcd_4bits_send_char
       _set_cursor
         _lcd_4bits_send_command
     _lcd_4bits_send_command
   _lcd_4bits_send_string_pos
     _lcd_4bits_send_string
       _lcd_4bits_send_char
     _set_cursor

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      30       7       60.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     30      4B       5       93.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      89      12        0.0%
ABS                  0      0      89       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Jul 14 10:26:21 2024

                                    l9 0FE3                                      pc 0002  
                                   l55 0166                           ___awdiv@sign 0075  
                                   fsr 0004                                    l100 0608  
                                  l140 06E8                                    l303 00F3  
            _lcd_4bits_send_string_pos 0086                                    l324 01F4  
                                  l308 00A7                                    l317 0043  
                                  l333 0084                                    l334 0085  
                                  l255 0F7A                                    l280 0530  
                                  l344 0123                                    l193 047A  
                                  l329 0286                                    l290 023C  
                                  l285 01AD                                    l295 00CC  
                                  l583 03E7                                    l596 0380  
                                  l950 0FA3                                    l943 0064  
                                  l937 07D3                                    l962 0327  
                                  l892 0FFF                                    l973 0005  
                                  l899 0024        __end_of_lcd_4bits_send_char_pos 00CD  
                                  _abs 0F93                                    _lcd 00CA  
                                  fsr0 0004                                    indf 0000  
                         ___awmod@sign 0075                      ?_motor_initialize 0070  
                   ??_motor_initialize 007C                                   l2011 04AD  
                                 ?_abs 0076                                   l2021 04EA  
                                 l2013 04BC                                   l2005 0499  
                                 l2101 00EA                                   l2111 0FED  
                                 l2031 051C                                   l2023 04F4  
                                 l2015 04C6                                   l2007 04A1  
                                 l2103 00F2                                   l2113 0FF1  
                                 l2121 0011                                   l2033 0526  
                                 l2025 04FE                                   l2017 04DA  
                                 l2009 04A7                                   l2041 01FD  
                                 l2107 0FE5                                   l2123 001B  
                                 l2115 0009                                   l2027 0508  
                                 l2019 04E0                                   l2043 0200  
                                 l2051 00F8                                   l2131 0089  
                                 l2109 0FE8                                   l2117 000D  
                                 l2029 0512                                   l2045 023B  
                                 l2037 01F8                                   l2053 00FD  
                                 l2061 011A                                   l2141 01B1  
                                 l2133 0089                                   l2071 0054  
                                 l2119 000F                                   l2127 0F75  
                                 l2039 01F8                                   l2055 0100  
                                 l2063 0122                                   l2143 01B2  
                                 l2135 008E                                   l2073 0062  
                                 l2129 0025                                   l2057 010D  
                                 l2049 00F7                                   l2081 00AB  
                                 l2161 01E8                                   l2145 01B7  
                                 l2137 008F                                   l2067 0047  
                                 l2083 00B0                                   l2155 01CD  
                                 l2147 01B8                                   l2091 00D0  
                                 l2069 004A                                   l1701 0670  
                                 l2077 0124                                   l2085 00B3  
                                 l2157 01DC                                   l2149 01CA  
                                 l2093 00D1                                   l1703 0679  
                                 l1711 06D7                                   l2087 00CB  
                                 l2079 00AB                                   l2159 01E2  
                                 l2095 00D6                                   l2351 029B  
                                 l1801 03A5                                   l1721 0532  
                                 l1705 0688                                   l1713 06E7  
                                 l2097 00D9                                   l2353 02A9  
                                 l2345 0287                                   l1811 03CB  
                                 l1803 03AC                                   l1731 0550  
                                 l1723 0532                                   l1707 06AF  
                                 l2099 00E6                                   l2355 02B8  
                                 l2347 028C                                   l1821 03E3  
                                 l1813 03CC                                   l1805 03B0  
                                 l1741 0587                                   l1733 0559  
                                 l1725 0537                                   l1901 042A  
                                 l2357 02C6                                   l2349 0290  
                                 l1815 03D3                                   l1807 03B4  
                                 l1831 0332                                   l1743 0595  
                                 l1735 0567                                   l1727 0538  
                                 l2383 06DF                                   l1903 0438  
                                 l1911 0466                                   l1809 03C5  
                                 l1817 03D9                                   l1841 0346  
                                 l1833 0334                                   l1825 0328  
                                 l1745 059E                                   l1737 0570  
                                 l1753 05FC                                   l1729 0542  
                                 l1681 060B                                   l1905 0441  
                                 l1913 0479                                   l1761 0246  
                                 l1921 016F                                   l1819 03DE  
                                 l1851 0365                                   l1843 034D  
                                 l1835 0338                                   l1827 0329  
                                 l1931 06FB                                   l1747 05AD  
                                 l1739 057E                                   l1691 0634  
                                 l1683 0610                                   l1907 044F  
                                 l1763 0285                                   l1755 023E  
                                 l1771 006B                                   l1923 0172  
                                 l1781 0381                                   l1853 036C  
                                 l1845 0351                                   l1837 033D  
                                 l1829 032D                                   l1941 071C  
                                 l1933 0701                                   l1749 05D5  
                                 l1693 0642                                   l1685 0613  
                                 l1909 0458                                   l1757 023E  
                                 l1773 006E                                   l1925 01AC  
                                 l1917 016A                                   l1791 0391  
                                 l1783 0382                                   l1847 0355  
                                 l1839 0343                                   l1855 0372  
                                 l1871 02F2                                   l1863 02D2  
                                 l1951 0743                                   l1943 0728  
                                 l1935 0708                                   l1695 064B  
                                 l1687 061D                                   l1679 060A  
                                 l1759 0243                                   l1775 0077  
                                 l1767 0066                                   l1919 016A  
                                 l1793 0396                                   l1785 0386  
                                 l1857 0377                                   l1849 035F  
                                 l1881 0F98                                   l1873 0310  
                                 l1865 02D7                                   l1961 0787  
                                 l1953 0762                                   l1945 0735  
                                 l1937 070C                                   l1929 06EC  
                                 l1697 0659                                   l1689 062B  
                                 l1777 007B                                   l1769 0066  
                                 l1795 039A                                   l1787 038B  
                                 l1859 037C                                   l1867 02DC  
                                 l1963 078C                                   l1955 0777  
                                 l1947 073A                                   l1971 07B4  
                                 l1939 0710                                   l1699 0662  
                                 l1891 03F2                                   l1797 039C  
                                 l1789 038D                                   l1877 0F93  
                                 l1869 02E3                                   l1965 0795  
                                 l1957 077D                                   l1949 073C  
                                 l1893 03FC                                   l1885 03E9  
                                 l1981 0FCE                                   l1799 03A2  
                                 l1879 0F97                                   l1967 07A7  
                                 l1959 0782                                   l1975 07BC  
                                 l1895 040A                                   l1887 03EA  
                                 l1991 047E                                   l1983 0FCE  
                                 l1969 07AD                                   l1897 0413  
                                 l1889 03EF                                   l1993 047F  
                                 l1985 0FD3                                   l1899 0421  
                                 l1995 0484                                   l1987 0FD4  
                                 l1997 0485                                   l1999 0498  
                                 STR_1 080E                                   STR_3 080E  
                                 u2000 0441                                   u2001 0440  
                                 u2010 044F                                   u2011 044E  
                                 u2100 0742                                   u2020 0458  
                                 u2021 0457                                   u2110 077D  
                                 u2030 0466                                   u2111 077C  
                                 u2031 0465                                   u2120 0782  
                                 u1400 061D                                   u2040 016F  
                                 u2121 0781                                   u1401 061C  
                                 u2041 016E                                   u2130 0787  
                                 u1410 062B                                   u2210 00FD  
                                 u2131 0786                                   u1411 062A  
                                 u2211 00FC                                   u2140 078C  
                                 u2060 06FB                                   u2220 0062  
                                 u1420 0634                                   u2300 01E8  
                                 u2141 078B                                   u2061 06FA  
                                 u2221 0061                                   u1421 0633  
                                 u2205 020E                                   u2301 01E7  
                                 u2150 07B3                                   u2070 071C  
                                 u1430 0642                                   u2230 00B0  
                                 u2151 07B2                                   u2071 071B  
                                 u1431 0641                                   u2055 017F  
                                 u2231 00AF                                   u2080 0728  
                                 u1600 0595                                   u1520 0537  
                                 u1504 0695                                   u1440 064B  
                                 u2160 0FD3                                   u2240 00D6  
                                 u2081 0727                                   u1601 0594  
                                 u1521 0536                                   u1505 0693  
                                 u1441 064A                                   u2161 0FD2  
                                 u2241 00D5                                   u2090 0741  
                                 u1610 059E                                   u1530 0542  
                                 u1514 06BC                                   u1450 0659  
                                 u2170 0484                                   u2250 00F2  
                                 u2091 073F                                   u1611 059D  
                                 u1531 0541                                   u1515 06BA  
                                 u1451 0658                                   u2171 0483  
                                 u2251 00F1                                   u2260 0FFF  
                                 u1700 0391                                   u1620 05AC  
                                 u1540 0550                                   u1460 0662  
                                 u2180 04AD                                   u2261 0FFE  
                                 u1701 0390                                   u1621 05AB  
                                 u1541 054F                                   u1461 0661  
                                 u2181 04AC                                   u1710 03A2  
                                 u1550 0559                                   u1470 0670  
                                 u1390 0610                                   u2190 01FD  
                                 u2270 008E                                   u1711 03A1  
                                 u1551 0558                                   u1471 066F  
                                 u1391 060F                                   u2191 01FC  
                                 u2271 008D                                   u1800 0338  
                                 u1560 0567                                   u1480 0679  
                                 u2280 01B7                                   u1801 0337  
                                 u1561 0566                                   u1481 0678  
                                 u2281 01B6                                   u1730 03B4  
                                 u1810 0343                                   u1634 05BA  
                                 u1570 0570                                   u1490 0687  
                                 u1650 0243                                   u1731 03B3  
                                 u1811 0342                                   u1635 05B8  
                                 u1571 056F                                   u1491 0686  
                                 u1651 0242                                   u1900 02F2  
                                 u1644 05E2                                   u1580 057E  
                                 u1725 03A6                                   u1901 02F1  
                                 u1645 05E0                                   u1581 057D  
                                 u1750 03C5                                   u1830 0355  
                                 u1910 0310                                   u1590 0587  
                                 u1751 03C4                                   u1831 0354  
                                 u1911 030F                                   u1591 0586  
                                 u2295 01BB                                   u1840 035F  
                                 u1920 0F97                                   u1680 006B  
                                 u1745 03B5                                   u1841 035E  
                                 u1825 0347                                   u1921 0F96  
                                 u1665 0262                                   u1681 006A  
                          main@counter 004E                                   u1770 03D9  
                                 u1690 0386                                   u1930 03EF  
                                 u1771 03D8                                   u1755 03C1  
                                 u1691 0385                                   u1915 030C  
                                 u1931 03EE                                   u1675 0275  
                                 u1780 03DE                                   u1860 0372  
                                 u1940 03FC                                   u1781 03DD  
                                 u1765 03CD                                   u1861 0371  
                                 u1845 035B                                   u1941 03FB  
                                 u1870 0377                                   u1790 032D  
                                 u1950 040A                                   u1871 0376  
                                 u1855 0366                                   u1791 032C  
                                 u1951 0409                                   u2807 04DE  
                                 u1880 02D7                                   u1960 0413  
                                 u1881 02D6                                   u1961 0412  
                                 u2817 0079                                   u1890 02DC  
                                 u1970 0421                                   u1891 02DB  
                                 u1971 0420                                   u1980 042A  
                                 u1981 0429                                   u1990 0438  
                                 u1991 0437                                   u2777 02C0  
                                 u2787 04B5                                   u2797 04CC  
                                 abs@a 0076                                   _dbuf 00A0  
                                 _main 0287                                   _pin1 0065  
                                 _pin2 0064                                   _pin3 0063  
                                 _pin4 0062                                   _pin5 0061  
                                 _pin6 0060                                   _pin7 005F  
                                 _pin8 005E                                   _prec 0068  
                                 btemp 007E                                   start 0000  
                    set_cursor@coloumn 0023                                  ??_abs 0078  
                 _gpio_pin_write_logic 0609                 lcd_4bits_send_char@lcd 0021  
               lcd_4bits_send_char@ret 0020                                  ?_main 0070  
                      __end_of___awdiv 03E8                        __end_of___awmod 0381  
                      ___awdiv@divisor 0070                        ___awdiv@counter 0074  
                         vfpfcnvrt@fmt 007A                 ?_lcd_4bits_send_string 0022  
                                _PORTA 0005                                  _PORTB 0006  
                                _PORTC 0007                                  _PORTD 0008  
                                _PORTE 0009                                  _TRISA 0085  
                                _TRISB 0086                                  _TRISC 0087  
                                _TRISD 0088                                  _TRISE 0089  
                                _flags 006A                                  _fputc 02D2  
                                _width 0066                                  _putch 0005  
                                pclath 000A          lcd_4bits_send_command@command 007C  
                                status 0003                                  wtemp0 007E  
                      __end_of_sprintf 0025             lcd_4bits_send_char_pos@Row 0026  
           lcd_4bits_send_char_pos@lcd 002A         ?_gpio_pin_direction_initialize 0070  
           lcd_4bits_send_char_pos@ret 0029                        __initialization 07D4  
                         __end_of_main 02D2                  ?_gpio_pin_write_logic 0070  
          __end_of_lcd_4bits_send_char 023D                                 ??_main 0040  
              lcd_4bits_send_char@data 007C                ?_lcd_4bits_send_command 007C  
                               ?_fputc 0070                       ___awdiv@dividend 0072  
                               ?_putch 0070                          vfpfcnvrt@done 0020  
                         vfprintf@cfmt 002B                              ??___awdiv 0074  
                            ??___awmod 0074             ??_Convert_uint32_to_string 007E  
                               _memset 0FE4                       ___awdiv@quotient 0076  
                      ___awmod@divisor 0070                                 _motor1 005C  
                               _motor2 005A                        ___awmod@counter 0074  
       __end_of_lcd_4bits_send_command 01AE                                 fputc@c 0070  
                               putch@c 0070                       __end_of_vfprintf 0065  
                            ??_sprintf 002F                __end_of__initialization 07FC  
          lcd_4bits_send_char_pos@data 0028                 ??_gpio_pin_write_logic 0071  
                       __pcstackCOMMON 0070           __end_of_lcd_4bits_initialize 0531  
                         __pidataBANK0 0FB7                           __pidataBANK1 0F83  
                        __end_of_fputc 0328                          __end_of_putch 0006  
         Convert_uint32_to_string@data 003D                          send_4bits@lcd 007B  
                        send_4bits@ret 007A                                ??_fputc 0073  
                              ??_putch 0070                             __pbssBANK0 0066  
                           __pbssBANK1 00A0               ?_lcd_4bits_send_char_pos 0026  
    __end_of_lcd_4bits_send_string_pos 00A8                             __pmaintext 0287  
           ?_lcd_4bit_custom_character 002B            Convert_uint32_to_string@str 003F  
                              ?_memset 0070                ??_lcd_4bits_send_string 007E  
            lcd_4bits_send_command@lcd 0021              lcd_4bits_send_command@ret 0020  
                           __stringtab 0800                         _tris_registers 00C0  
                  _gpio_pin_initialize 03E8                                ___awdiv 0381  
                              ___awmod 0328                              ?_vfprintf 0028  
                           _customChar 0806                                __ptext1 0086  
                              __ptext2 00CD                                __ptext3 01AE  
                              __ptext4 00A8                                __ptext5 00F4  
                              __ptext6 01F5                                __ptext7 0F75  
                              __ptext8 0124                                __ptext9 0FCD  
             ??_apllication_initilaize 007E        ??_gpio_pin_direction_initialize 0070  
                     ___awmod@dividend 0072             __end_of_send_enable_signal 0086  
                 ?_gpio_pin_initialize 0070                             _send_4bits 023D  
                              _sprintf 0006                                clrloop0 0F7C  
                 _lcd_4bits_initialize 047B                                main@str 0043  
                 end_of_initialization 07FC            lcd_4bits_initialize@counter 0025  
                              fputc@fp 0072                                memset@c 0070  
                              memset@n 0072                                memset@p 0074  
                           _set_cursor 00F4                      __end_of_vfpfcnvrt 07D4  
                     vfpfcnvrt@convarg 0023                             ??_vfprintf 007E  
                       _ecu_initialzie 0124                  ??_gpio_pin_initialize 0078  
    lcd_4bit_custom_character@coloumns 002C                  ?_lcd_4bits_initialize 0070  
                     _motor_initialize 0FCD                            vfpfcnvrt@ap 007B  
                          vfpfcnvrt@cp 0022                            vfpfcnvrt@fp 0021  
               __end_of_ecu_initialzie 0167               lcd_4bits_send_string@lcd 0024  
             lcd_4bits_send_string@ret 0023                         __end_of_memset 1000  
                  start_initialization 07D4                      send_4bits@command 0078  
                          __end_of_abs 0FA4                            ?_send_4bits 0078  
__end_of_gpio_pin_direction_initialize 0609          _gpio_pin_direction_initialize 0531  
        lcd_4bits_send_string_pos@data 0028              ?_Convert_uint32_to_string 003D  
                          ?_set_cursor 0022                            vfprintf@fmt 0028  
                           init_fetch0 0FA4            ??_lcd_4bit_custom_character 002F  
                          __pdataBANK0 0050                            __pdataBANK1 00C0  
                             ??_memset 0074                        ?_ecu_initialzie 0070  
                           memset@dest 0075                lcd_4bits_initialize@lcd 0027  
              lcd_4bits_initialize@ret 0026          __end_of_lcd_4bits_send_string 00F4  
                            ___latbits 0002                          __pcstackBANK0 0020  
               ??_lcd_4bits_initialize 0022                 _apllication_initilaize 0F75  
           ?_lcd_4bits_send_string_pos 0026                               ?___awdiv 0070  
                             ?___awmod 0070               ??_lcd_4bits_send_command 007D  
            gpio_pin_write_logic@logic 0070                              __pstrings 0800  
            lcd_4bits_send_string@data 0022              _lcd_4bit_custom_character 01AE  
                             ?_sprintf 002C                    motor_initialize@ret 007C  
                            clear_ram0 0F7B                     _send_enable_signal 0065  
                  _lcd_4bits_send_char 01F5       gpio_pin_direction_initialize@pin 0075  
                  ?_send_enable_signal 0070                              _vfpfcnvrt 06E9  
                          __stringbase 0805       lcd_4bit_custom_character@counter 0030  
                        set_cursor@Row 0022                          set_cursor@lcd 0025  
                        set_cursor@ret 0024               __end_of_motor_initialize 0FE4  
               gpio_pin_initialize@pin 007B                 gpio_pin_initialize@ret 007A  
                 ?_lcd_4bits_send_char 007C                             vfpfcnvrt@c 0027  
              gpio_pin_write_logic@pin 0077                gpio_pin_write_logic@ret 0076  
                 ??_send_enable_signal 0078                  send_enable_signal@lcd 007A  
                send_enable_signal@ret 0079                             vfprintf@ap 0029  
                           vfprintf@fp 002A                _lcd_4bits_send_char_pos 00A8  
                           ?_vfpfcnvrt 007A       __end_of_Convert_uint32_to_string 0044  
                   __end_of__stringtab 0806            __end_of_gpio_pin_initialize 047B  
                           sprintf@fmt 002C         lcd_4bits_send_char_pos@coloumn 0027  
                ??_lcd_4bits_send_char 007D                               __ptext10 047B  
                             __ptext11 0167                               __ptext20 06E9  
                             __ptext12 0065                               __ptext21 02D2  
                             __ptext13 023D                               __ptext22 0005  
                             __ptext14 03E8                               __ptext23 0F93  
                             __ptext15 0609                               __ptext24 0328  
                             __ptext16 0531                               __ptext25 0381  
                             __ptext17 0025                               __ptext26 0FE4  
                             __ptext18 0006                           ??_send_4bits 0079  
                             __ptext19 0044                     __end_of_customChar 080E  
                         ??_set_cursor 007E                       ??_ecu_initialzie 007E  
                             _vfprintf 0044        lcd_4bit_custom_character@mempos 002E  
                   __end_of_send_4bits 0287                  motor_initialize@motor 007D  
                             init_ram0 0FA8           __end_of_gpio_pin_write_logic 06E9  
               _lcd_4bits_send_command 0167                ?_apllication_initilaize 0070  
                   __end_of_set_cursor 0124                              sprintf@ap 0030  
         lcd_4bit_custom_character@Row 002B           lcd_4bit_custom_character@chr 002D  
         lcd_4bit_custom_character@lcd 0031            ??_lcd_4bits_send_string_pos 007E  
            ??_lcd_4bits_send_char_pos 007E                              stringcode 0800  
                          ??_vfpfcnvrt 007C                               sprintf@f 0032  
                             sprintf@s 0031       lcd_4bits_send_string_pos@coloumn 0027  
                       _port_registers 0050               _Convert_uint32_to_string 0025  
                _lcd_4bits_send_string 00CD                               stringdir 0800  
                             stringtab 0800         __end_of_apllication_initilaize 0F7B  
         lcd_4bits_send_string_pos@Row 0026           lcd_4bits_send_string_pos@lcd 002A  
         lcd_4bits_send_string_pos@ret 0029      __end_of_lcd_4bit_custom_character 01F5  
