

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Jul 08 07:41:37 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19     0000                     
    20                           ; Generated 12/10/2023 GMT
    21                           ; 
    22                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F877A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54     0000                     	;# 
    55     0001                     	;# 
    56     0002                     	;# 
    57     0003                     	;# 
    58     0004                     	;# 
    59     0005                     	;# 
    60     0006                     	;# 
    61     0007                     	;# 
    62     0008                     	;# 
    63     0009                     	;# 
    64     000A                     	;# 
    65     000B                     	;# 
    66     000C                     	;# 
    67     000D                     	;# 
    68     000E                     	;# 
    69     000E                     	;# 
    70     000F                     	;# 
    71     0010                     	;# 
    72     0011                     	;# 
    73     0012                     	;# 
    74     0013                     	;# 
    75     0014                     	;# 
    76     0015                     	;# 
    77     0015                     	;# 
    78     0016                     	;# 
    79     0017                     	;# 
    80     0018                     	;# 
    81     0019                     	;# 
    82     001A                     	;# 
    83     001B                     	;# 
    84     001B                     	;# 
    85     001C                     	;# 
    86     001D                     	;# 
    87     001E                     	;# 
    88     001F                     	;# 
    89     0081                     	;# 
    90     0085                     	;# 
    91     0086                     	;# 
    92     0087                     	;# 
    93     0088                     	;# 
    94     0089                     	;# 
    95     008C                     	;# 
    96     008D                     	;# 
    97     008E                     	;# 
    98     0091                     	;# 
    99     0092                     	;# 
   100     0093                     	;# 
   101     0094                     	;# 
   102     0098                     	;# 
   103     0099                     	;# 
   104     009C                     	;# 
   105     009D                     	;# 
   106     009E                     	;# 
   107     009F                     	;# 
   108     010C                     	;# 
   109     010D                     	;# 
   110     010E                     	;# 
   111     010F                     	;# 
   112     018C                     	;# 
   113     018D                     	;# 
   114     0000                     	;# 
   115     0001                     	;# 
   116     0002                     	;# 
   117     0003                     	;# 
   118     0004                     	;# 
   119     0005                     	;# 
   120     0006                     	;# 
   121     0007                     	;# 
   122     0008                     	;# 
   123     0009                     	;# 
   124     000A                     	;# 
   125     000B                     	;# 
   126     000C                     	;# 
   127     000D                     	;# 
   128     000E                     	;# 
   129     000E                     	;# 
   130     000F                     	;# 
   131     0010                     	;# 
   132     0011                     	;# 
   133     0012                     	;# 
   134     0013                     	;# 
   135     0014                     	;# 
   136     0015                     	;# 
   137     0015                     	;# 
   138     0016                     	;# 
   139     0017                     	;# 
   140     0018                     	;# 
   141     0019                     	;# 
   142     001A                     	;# 
   143     001B                     	;# 
   144     001B                     	;# 
   145     001C                     	;# 
   146     001D                     	;# 
   147     001E                     	;# 
   148     001F                     	;# 
   149     0081                     	;# 
   150     0085                     	;# 
   151     0086                     	;# 
   152     0087                     	;# 
   153     0088                     	;# 
   154     0089                     	;# 
   155     008C                     	;# 
   156     008D                     	;# 
   157     008E                     	;# 
   158     0091                     	;# 
   159     0092                     	;# 
   160     0093                     	;# 
   161     0094                     	;# 
   162     0098                     	;# 
   163     0099                     	;# 
   164     009C                     	;# 
   165     009D                     	;# 
   166     009E                     	;# 
   167     009F                     	;# 
   168     010C                     	;# 
   169     010D                     	;# 
   170     010E                     	;# 
   171     010F                     	;# 
   172     018C                     	;# 
   173     018D                     	;# 
   174     0000                     	;# 
   175     0001                     	;# 
   176     0002                     	;# 
   177     0003                     	;# 
   178     0004                     	;# 
   179     0005                     	;# 
   180     0006                     	;# 
   181     0007                     	;# 
   182     0008                     	;# 
   183     0009                     	;# 
   184     000A                     	;# 
   185     000B                     	;# 
   186     000C                     	;# 
   187     000D                     	;# 
   188     000E                     	;# 
   189     000E                     	;# 
   190     000F                     	;# 
   191     0010                     	;# 
   192     0011                     	;# 
   193     0012                     	;# 
   194     0013                     	;# 
   195     0014                     	;# 
   196     0015                     	;# 
   197     0015                     	;# 
   198     0016                     	;# 
   199     0017                     	;# 
   200     0018                     	;# 
   201     0019                     	;# 
   202     001A                     	;# 
   203     001B                     	;# 
   204     001B                     	;# 
   205     001C                     	;# 
   206     001D                     	;# 
   207     001E                     	;# 
   208     001F                     	;# 
   209     0081                     	;# 
   210     0085                     	;# 
   211     0086                     	;# 
   212     0087                     	;# 
   213     0088                     	;# 
   214     0089                     	;# 
   215     008C                     	;# 
   216     008D                     	;# 
   217     008E                     	;# 
   218     0091                     	;# 
   219     0092                     	;# 
   220     0093                     	;# 
   221     0094                     	;# 
   222     0098                     	;# 
   223     0099                     	;# 
   224     009C                     	;# 
   225     009D                     	;# 
   226     009E                     	;# 
   227     009F                     	;# 
   228     010C                     	;# 
   229     010D                     	;# 
   230     010E                     	;# 
   231     010F                     	;# 
   232     018C                     	;# 
   233     018D                     	;# 
   234     0000                     	;# 
   235     0001                     	;# 
   236     0002                     	;# 
   237     0003                     	;# 
   238     0004                     	;# 
   239     0005                     	;# 
   240     0006                     	;# 
   241     0007                     	;# 
   242     0008                     	;# 
   243     0009                     	;# 
   244     000A                     	;# 
   245     000B                     	;# 
   246     000C                     	;# 
   247     000D                     	;# 
   248     000E                     	;# 
   249     000E                     	;# 
   250     000F                     	;# 
   251     0010                     	;# 
   252     0011                     	;# 
   253     0012                     	;# 
   254     0013                     	;# 
   255     0014                     	;# 
   256     0015                     	;# 
   257     0015                     	;# 
   258     0016                     	;# 
   259     0017                     	;# 
   260     0018                     	;# 
   261     0019                     	;# 
   262     001A                     	;# 
   263     001B                     	;# 
   264     001B                     	;# 
   265     001C                     	;# 
   266     001D                     	;# 
   267     001E                     	;# 
   268     001F                     	;# 
   269     0081                     	;# 
   270     0085                     	;# 
   271     0086                     	;# 
   272     0087                     	;# 
   273     0088                     	;# 
   274     0089                     	;# 
   275     008C                     	;# 
   276     008D                     	;# 
   277     008E                     	;# 
   278     0091                     	;# 
   279     0092                     	;# 
   280     0093                     	;# 
   281     0094                     	;# 
   282     0098                     	;# 
   283     0099                     	;# 
   284     009C                     	;# 
   285     009D                     	;# 
   286     009E                     	;# 
   287     009F                     	;# 
   288     010C                     	;# 
   289     010D                     	;# 
   290     010E                     	;# 
   291     010F                     	;# 
   292     018C                     	;# 
   293     018D                     	;# 
   294                           
   295                           	psect	idataCOMMON
   296     067A                     __pidataCOMMON:
   297                           
   298                           ;initializer for _pin2
   299     067A  348A               	retlw	138
   300                           
   301                           ;initializer for _pin
   302     067B  3442               	retlw	66
   303                           
   304                           	psect	idataBANK0
   305     068F                     __pidataBANK0:
   306                           
   307                           ;initializer for _port_registers
   308     068F  3405               	retlw	5
   309     0690  3400               	retlw	0
   310     0691  3406               	retlw	6
   311     0692  3400               	retlw	0
   312     0693  3407               	retlw	7
   313     0694  3400               	retlw	0
   314     0695  3408               	retlw	8
   315     0696  3400               	retlw	0
   316     0697  3409               	retlw	9
   317     0698  3400               	retlw	0
   318                           
   319                           ;initializer for _tris_registers
   320     0699  3485               	retlw	133
   321     069A  3400               	retlw	0
   322     069B  3486               	retlw	134
   323     069C  3400               	retlw	0
   324     069D  3487               	retlw	135
   325     069E  3400               	retlw	0
   326     069F  3488               	retlw	136
   327     06A0  3400               	retlw	0
   328     06A1  3489               	retlw	137
   329     06A2  3400               	retlw	0
   330     0009                     _PORTE	set	9
   331     0008                     _PORTD	set	8
   332     0007                     _PORTC	set	7
   333     0006                     _PORTB	set	6
   334     0005                     _PORTA	set	5
   335     0089                     _TRISE	set	137
   336     0088                     _TRISD	set	136
   337     0087                     _TRISC	set	135
   338     0086                     _TRISB	set	134
   339     0085                     _TRISA	set	133
   340                           
   341                           	psect	cinit
   342     07E0                     start_initialization:	
   343                           ; #config settings
   344                           
   345     07E0                     __initialization:
   346                           
   347                           ; Initialize objects allocated to BANK0
   348     07E0  1383               	bcf	3,7	;select IRP bank0
   349     07E1  3034               	movlw	low (__pdataBANK0+20)
   350     07E2  00FD               	movwf	btemp+-1
   351     07E3  3006               	movlw	high __pidataBANK0
   352     07E4  00FE               	movwf	btemp
   353     07E5  308F               	movlw	low __pidataBANK0
   354     07E6  00FF               	movwf	btemp+1
   355     07E7  3020               	movlw	low __pdataBANK0
   356     07E8  0084               	movwf	4
   357     07E9  120A  118A  2680  120A  118A  	fcall	init_ram0
   358                           
   359                           ; Initialize objects allocated to COMMON
   360     07EE  120A  118A  267A  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   361     07F3  00FA               	movwf	__pdataCOMMON& (0+127)
   362     07F4  120A  118A  267B  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   363     07F9  00FB               	movwf	(__pdataCOMMON+1)& (0+127)
   364                           
   365                           ; Clear objects allocated to COMMON
   366     07FA  01F8               	clrf	__pbssCOMMON& (0+127)
   367     07FB  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   368     07FC                     end_of_initialization:	
   369                           ;End of C runtime variable initialization code
   370                           
   371     07FC                     __end_of__initialization:
   372     07FC  0183               	clrf	3
   373     07FD  120A  118A  2F83   	ljmp	_main	;jump to C main() function
   374                           
   375                           	psect	bssCOMMON
   376     0078                     __pbssCOMMON:
   377     0078                     _direction:
   378     0078                     	ds	1
   379     0079                     _logic:
   380     0079                     	ds	1
   381                           
   382                           	psect	dataCOMMON
   383     007A                     __pdataCOMMON:
   384     007A                     _pin2:
   385     007A                     	ds	1
   386     007B                     _pin:
   387     007B                     	ds	1
   388                           
   389                           	psect	dataBANK0
   390     0020                     __pdataBANK0:
   391     0020                     _port_registers:
   392     0020                     	ds	10
   393     002A                     _tris_registers:
   394     002A                     	ds	10
   395                           
   396                           	psect	inittext
   397     067C                     init_fetch0:	
   398                           ;	Called with low address in FSR and high address in W
   399                           
   400     067C  087E               	movf	btemp,w
   401     067D  008A               	movwf	10
   402     067E  087F               	movf	btemp+1,w
   403     067F  0082               	movwf	2
   404     0680                     init_ram0:	
   405                           ;Called with:
   406                           ;	high address of idata address in btemp 
   407                           ;	low address of idata address in btemp+1 
   408                           ;	low address of data in FSR
   409                           ;	high address + 1 of data in btemp-1
   410                           
   411     0680  120A  118A  267C  120A  118A  	fcall	init_fetch0
   412     0685  0080               	movwf	0
   413     0686  0A84               	incf	4,f
   414     0687  0804               	movf	4,w
   415     0688  067D               	xorwf	btemp+-1,w
   416     0689  1903               	btfsc	3,2
   417     068A  3400               	retlw	0
   418     068B  0AFF               	incf	btemp+1,f
   419     068C  1903               	btfsc	3,2
   420     068D  0AFE               	incf	btemp,f
   421     068E  2E80               	goto	init_ram0
   422                           
   423                           	psect	cstackCOMMON
   424     0070                     __pcstackCOMMON:
   425     0070                     ?_gpio_port_direction_initialize:
   426     0070                     ?_gpio_port_write_logic:	
   427                           ; 1 bytes @ 0x0
   428                           
   429     0070                     ?_gpio_port_read_logic:	
   430                           ; 1 bytes @ 0x0
   431                           
   432     0070                     ?_gpio_get_port_direction:	
   433                           ; 1 bytes @ 0x0
   434                           
   435     0070                     ?_main:	
   436                           ; 1 bytes @ 0x0
   437                           
   438     0070                     gpio_port_direction_initialize@direction:	
   439                           ; 2 bytes @ 0x0
   440                           
   441     0070                     gpio_get_port_direction@direction:	
   442                           ; 1 bytes @ 0x0
   443                           
   444     0070                     gpio_port_write_logic@logic:	
   445                           ; 1 bytes @ 0x0
   446                           
   447     0070                     gpio_port_read_logic@logic:	
   448                           ; 1 bytes @ 0x0
   449                           
   450                           
   451                           ; 1 bytes @ 0x0
   452     0070                     	ds	1
   453     0071                     ??_gpio_port_direction_initialize:
   454     0071                     ??_gpio_port_write_logic:	
   455                           ; 1 bytes @ 0x1
   456                           
   457     0071                     ??_gpio_port_read_logic:	
   458                           ; 1 bytes @ 0x1
   459                           
   460     0071                     ??_gpio_get_port_direction:	
   461                           ; 1 bytes @ 0x1
   462                           
   463                           
   464                           ; 1 bytes @ 0x1
   465     0071                     	ds	3
   466     0074                     gpio_port_direction_initialize@port:
   467     0074                     gpio_get_port_direction@port:	
   468                           ; 1 bytes @ 0x4
   469                           
   470     0074                     gpio_port_write_logic@port:	
   471                           ; 1 bytes @ 0x4
   472                           
   473     0074                     gpio_port_read_logic@port:	
   474                           ; 1 bytes @ 0x4
   475                           
   476                           
   477                           ; 1 bytes @ 0x4
   478     0074                     	ds	1
   479     0075                     ??_main:
   480                           
   481                           ; 1 bytes @ 0x5
   482     0075                     	ds	3
   483                           
   484                           	psect	maintext
   485     0783                     __pmaintext:	
   486 ;;
   487 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   488 ;;
   489 ;; *************** function _main *****************
   490 ;; Defined at:
   491 ;;		line 12 in file "Temperature_Controlled_Fan_System.c"
   492 ;; Parameters:    Size  Location     Type
   493 ;;		None
   494 ;; Auto vars:     Size  Location     Type
   495 ;;		None
   496 ;; Return value:  Size  Location     Type
   497 ;;                  2   22[None  ] int 
   498 ;; Registers used:
   499 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   500 ;; Tracked objects:
   501 ;;		On entry : B00/0
   502 ;;		On exit  : 0/0
   503 ;;		Unchanged: 0/0
   504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   505 ;;      Params:         0       0       0       0       0
   506 ;;      Locals:         0       0       0       0       0
   507 ;;      Temps:          3       0       0       0       0
   508 ;;      Totals:         3       0       0       0       0
   509 ;;Total ram usage:        3 bytes
   510 ;; Hardware stack levels required when called: 1
   511 ;; This function calls:
   512 ;;		_gpio_get_port_direction
   513 ;;		_gpio_port_direction_initialize
   514 ;;		_gpio_port_read_logic
   515 ;;		_gpio_port_write_logic
   516 ;; This function is called by:
   517 ;;		Startup code after reset
   518 ;; This function uses a non-reentrant model
   519 ;;
   520                           
   521     0783                     _main:	
   522                           ;psect for function _main
   523                           
   524     0783                     l921:	
   525                           ;incstack = 0
   526                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   527                           
   528                           
   529                           ;Temperature_Controlled_Fan_System.c: 13: gpio_port_direction_initialize(PORTC_INDEX,0xe
      +                          d);
   530     0783  30ED               	movlw	237
   531     0784  00F0               	movwf	gpio_port_direction_initialize@direction
   532     0785  3002               	movlw	2
   533     0786  120A  118A  26E1  120A  118A  	fcall	_gpio_port_direction_initialize
   534                           
   535                           ;Temperature_Controlled_Fan_System.c: 14: gpio_port_direction_initialize(PORTD_INDEX,GPI
      +                          O_DIRECTION_INPUT);
   536     078B  01F0               	clrf	gpio_port_direction_initialize@direction
   537     078C  0AF0               	incf	gpio_port_direction_initialize@direction,f
   538     078D  3003               	movlw	3
   539     078E  120A  118A  26E1  120A  118A  	fcall	_gpio_port_direction_initialize
   540     0793                     l923:
   541                           
   542                           ;Temperature_Controlled_Fan_System.c: 16:     _delay((unsigned long)((1000)*(8000000UL/4
      +                          000.0)));
   543     0793  300B               	movlw	11
   544     0794  00F7               	movwf	??_main+2
   545     0795  3026               	movlw	38
   546     0796  00F6               	movwf	??_main+1
   547     0797  305D               	movlw	93
   548     0798  00F5               	movwf	??_main
   549     0799                     u417:
   550     0799  0BF5               	decfsz	??_main,f
   551     079A  2F99               	goto	u417
   552     079B  0BF6               	decfsz	??_main+1,f
   553     079C  2F99               	goto	u417
   554     079D  0BF7               	decfsz	??_main+2,f
   555     079E  2F99               	goto	u417
   556     079F  2FA0               	nop2
   557     07A0                     l925:
   558                           
   559                           ;Temperature_Controlled_Fan_System.c: 17: gpio_port_write_logic(PORTC_INDEX,0xed);
   560     07A0  30ED               	movlw	237
   561     07A1  00F0               	movwf	gpio_port_write_logic@logic
   562     07A2  3002               	movlw	2
   563     07A3  120A  118A  2732  120A  118A  	fcall	_gpio_port_write_logic
   564     07A8                     l927:
   565                           
   566                           ;Temperature_Controlled_Fan_System.c: 18: gpio_port_read_logic(PORTC_INDEX,&logic);
   567     07A8  3079               	movlw	(low (_logic| 0))& (0+255)
   568     07A9  00F0               	movwf	gpio_port_read_logic@logic
   569     07AA  3002               	movlw	2
   570     07AB  120A  118A  26C2  120A  118A  	fcall	_gpio_port_read_logic
   571     07B0                     l929:
   572                           
   573                           ;Temperature_Controlled_Fan_System.c: 19: gpio_get_port_direction(PORTC_INDEX,&direction
      +                          );
   574     07B0  3078               	movlw	(low (_direction| 0))& (0+255)
   575     07B1  00F0               	movwf	gpio_get_port_direction@direction
   576     07B2  3002               	movlw	2
   577     07B3  120A  118A  26A3  120A  118A  	fcall	_gpio_get_port_direction
   578                           
   579                           ;Temperature_Controlled_Fan_System.c: 20:    _delay((unsigned long)((1000)*(8000000UL/40
      +                          00.0)));
   580     07B8  300B               	movlw	11
   581     07B9  00F7               	movwf	??_main+2
   582     07BA  3026               	movlw	38
   583     07BB  00F6               	movwf	??_main+1
   584     07BC  305D               	movlw	93
   585     07BD  00F5               	movwf	??_main
   586     07BE                     u427:
   587     07BE  0BF5               	decfsz	??_main,f
   588     07BF  2FBE               	goto	u427
   589     07C0  0BF6               	decfsz	??_main+1,f
   590     07C1  2FBE               	goto	u427
   591     07C2  0BF7               	decfsz	??_main+2,f
   592     07C3  2FBE               	goto	u427
   593     07C4  2FC5               	nop2
   594     07C5                     l931:
   595                           
   596                           ;Temperature_Controlled_Fan_System.c: 21: gpio_port_write_logic(PORTC_INDEX,GPIO_LOW);
   597     07C5  01F0               	clrf	gpio_port_write_logic@logic
   598     07C6  3002               	movlw	2
   599     07C7  120A  118A  2732  120A  118A  	fcall	_gpio_port_write_logic
   600     07CC                     l933:
   601                           
   602                           ;Temperature_Controlled_Fan_System.c: 22: gpio_port_read_logic(PORTC_INDEX,&logic);
   603     07CC  3079               	movlw	(low (_logic| 0))& (0+255)
   604     07CD  00F0               	movwf	gpio_port_read_logic@logic
   605     07CE  3002               	movlw	2
   606     07CF  120A  118A  26C2  120A  118A  	fcall	_gpio_port_read_logic
   607     07D4                     l935:
   608                           
   609                           ;Temperature_Controlled_Fan_System.c: 23: gpio_get_port_direction(PORTC_INDEX,&direction
      +                          );
   610     07D4  3078               	movlw	(low (_direction| 0))& (0+255)
   611     07D5  00F0               	movwf	gpio_get_port_direction@direction
   612     07D6  3002               	movlw	2
   613     07D7  120A  118A  26A3  120A  118A  	fcall	_gpio_get_port_direction
   614     07DC  2F93               	goto	l923
   615     07DD  120A  118A  2800   	ljmp	start
   616     07E0                     __end_of_main:
   617                           
   618                           	psect	text1
   619     0732                     __ptext1:	
   620 ;; *************** function _gpio_port_write_logic *****************
   621 ;; Defined at:
   622 ;;		line 125 in file "MCAL_LAYER/GPIO/mcal_gpio.c"
   623 ;; Parameters:    Size  Location     Type
   624 ;;  port            1    wreg     const enum E1345
   625 ;;  logic           1    0[COMMON] enum E1352
   626 ;; Auto vars:     Size  Location     Type
   627 ;;  port            1    4[COMMON] const enum E1345
   628 ;;  ret             1    0        unsigned char 
   629 ;; Return value:  Size  Location     Type
   630 ;;                  1    wreg      unsigned char 
   631 ;; Registers used:
   632 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   633 ;; Tracked objects:
   634 ;;		On entry : 0/0
   635 ;;		On exit  : 0/0
   636 ;;		Unchanged: 0/0
   637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   638 ;;      Params:         1       0       0       0       0
   639 ;;      Locals:         1       0       0       0       0
   640 ;;      Temps:          3       0       0       0       0
   641 ;;      Totals:         5       0       0       0       0
   642 ;;Total ram usage:        5 bytes
   643 ;; Hardware stack levels used: 1
   644 ;; This function calls:
   645 ;;		Nothing
   646 ;; This function is called by:
   647 ;;		_main
   648 ;; This function uses a non-reentrant model
   649 ;;
   650                           
   651     0732                     _gpio_port_write_logic:	
   652                           ;psect for function _gpio_port_write_logic
   653                           
   654                           
   655                           ;incstack = 0
   656                           ; Regs used in _gpio_port_write_logic: [wreg-fsr0h+status,2+status,0]
   657                           ;gpio_port_write_logic@port stored from wreg
   658     0732  00F4               	movwf	gpio_port_write_logic@port
   659     0733                     l851:
   660     0733                     l853:
   661                           
   662                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 127:     if(port > 5 -1){
   663     0733  3005               	movlw	5
   664     0734  0274               	subwf	gpio_port_write_logic@port,w
   665     0735  1C03               	skipc
   666     0736  2F38               	goto	u221
   667     0737  2F39               	goto	u220
   668     0738                     u221:
   669     0738  2F72               	goto	l863
   670     0739                     u220:
   671     0739                     l855:
   672                           
   673                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 129:     }
   674     0739  2F82               	goto	l117
   675     073A                     l857:
   676                           
   677                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 133:                 *port_registers[port] = 0xFF;
   678     073A  0874               	movf	gpio_port_write_logic@port,w
   679     073B  00F1               	movwf	??_gpio_port_write_logic
   680     073C  0771               	addwf	??_gpio_port_write_logic,w
   681     073D  3E20               	addlw	(low (_port_registers| 0))& (0+255)
   682     073E  0084               	movwf	4
   683     073F  1383               	bcf	3,7	;select IRP bank0
   684     0740  0800               	movf	0,w
   685     0741  00F2               	movwf	??_gpio_port_write_logic+1
   686     0742  0A84               	incf	4,f
   687     0743  0800               	movf	0,w
   688     0744  00F3               	movwf	??_gpio_port_write_logic+2
   689     0745  0872               	movf	??_gpio_port_write_logic+1,w
   690     0746  0084               	movwf	4
   691     0747  1783               	bsf	3,7
   692     0748  1C73               	btfss	??_gpio_port_write_logic+2,0
   693     0749  1383               	bcf	3,7
   694     074A  30FF               	movlw	255
   695     074B  0080               	movwf	0
   696                           
   697                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 134:                 break;
   698     074C  2F82               	goto	l117
   699     074D                     l859:
   700                           
   701                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 136:                 *port_registers[port] = 0x00;
   702     074D  0874               	movf	gpio_port_write_logic@port,w
   703     074E  00F1               	movwf	??_gpio_port_write_logic
   704     074F  0771               	addwf	??_gpio_port_write_logic,w
   705     0750  3E20               	addlw	(low (_port_registers| 0))& (0+255)
   706     0751  0084               	movwf	4
   707     0752  1383               	bcf	3,7	;select IRP bank0
   708     0753  0800               	movf	0,w
   709     0754  00F2               	movwf	??_gpio_port_write_logic+1
   710     0755  0A84               	incf	4,f
   711     0756  0800               	movf	0,w
   712     0757  00F3               	movwf	??_gpio_port_write_logic+2
   713     0758  0872               	movf	??_gpio_port_write_logic+1,w
   714     0759  0084               	movwf	4
   715     075A  1783               	bsf	3,7
   716     075B  1C73               	btfss	??_gpio_port_write_logic+2,0
   717     075C  1383               	bcf	3,7
   718     075D  0180               	clrf	0
   719                           
   720                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 137:                 break;
   721     075E  2F82               	goto	l117
   722     075F                     l861:
   723                           
   724                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 139:                 *port_registers[port] = logic;
   725     075F  0874               	movf	gpio_port_write_logic@port,w
   726     0760  00F1               	movwf	??_gpio_port_write_logic
   727     0761  0771               	addwf	??_gpio_port_write_logic,w
   728     0762  3E20               	addlw	(low (_port_registers| 0))& (0+255)
   729     0763  0084               	movwf	4
   730     0764  1383               	bcf	3,7	;select IRP bank0
   731     0765  0800               	movf	0,w
   732     0766  00F2               	movwf	??_gpio_port_write_logic+1
   733     0767  0A84               	incf	4,f
   734     0768  0800               	movf	0,w
   735     0769  00F3               	movwf	??_gpio_port_write_logic+2
   736     076A  0872               	movf	??_gpio_port_write_logic+1,w
   737     076B  0084               	movwf	4
   738     076C  1783               	bsf	3,7
   739     076D  1C73               	btfss	??_gpio_port_write_logic+2,0
   740     076E  1383               	bcf	3,7
   741     076F  0870               	movf	gpio_port_write_logic@logic,w
   742     0770  0080               	movwf	0
   743                           
   744                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 140:         }
   745     0771  2F82               	goto	l117
   746     0772                     l863:
   747     0772  0870               	movf	gpio_port_write_logic@logic,w
   748     0773  00F1               	movwf	??_gpio_port_write_logic
   749     0774  01F2               	clrf	??_gpio_port_write_logic+1
   750                           
   751                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   752                           ; Switch size 1, requested type "simple"
   753                           ; Number of cases is 1, Range of values is 0 to 0
   754                           ; switch strategies available:
   755                           ; Name         Instructions Cycles
   756                           ; simple_byte            4     3 (average)
   757                           ; direct_byte           11     8 (fixed)
   758                           ; jumptable            260     6 (fixed)
   759                           ;	Chosen strategy is simple_byte
   760     0775  0872               	movf	??_gpio_port_write_logic+1,w
   761     0776  3A00               	xorlw	0	; case 0
   762     0777  1903               	skipnz
   763     0778  2F7A               	goto	l995
   764     0779  2F5F               	goto	l861
   765     077A                     l995:
   766                           
   767                           ; Switch size 1, requested type "simple"
   768                           ; Number of cases is 2, Range of values is 0 to 1
   769                           ; switch strategies available:
   770                           ; Name         Instructions Cycles
   771                           ; simple_byte            7     4 (average)
   772                           ; direct_byte           14     8 (fixed)
   773                           ; jumptable            260     6 (fixed)
   774                           ;	Chosen strategy is simple_byte
   775     077A  0871               	movf	??_gpio_port_write_logic,w
   776     077B  3A00               	xorlw	0	; case 0
   777     077C  1903               	skipnz
   778     077D  2F4D               	goto	l859
   779     077E  3A01               	xorlw	1	; case 1
   780     077F  1903               	skipnz
   781     0780  2F3A               	goto	l857
   782     0781  2F5F               	goto	l861
   783     0782                     l117:
   784     0782  0008               	return
   785     0783                     __end_of_gpio_port_write_logic:
   786                           
   787                           	psect	text2
   788     06C2                     __ptext2:	
   789 ;; *************** function _gpio_port_read_logic *****************
   790 ;; Defined at:
   791 ;;		line 145 in file "MCAL_LAYER/GPIO/mcal_gpio.c"
   792 ;; Parameters:    Size  Location     Type
   793 ;;  port            1    wreg     const enum E1345
   794 ;;  logic           1    0[COMMON] PTR enum E1352
   795 ;;		 -> logic(1), 
   796 ;; Auto vars:     Size  Location     Type
   797 ;;  port            1    4[COMMON] const enum E1345
   798 ;;  ret             1    0        unsigned char 
   799 ;; Return value:  Size  Location     Type
   800 ;;                  1    wreg      unsigned char 
   801 ;; Registers used:
   802 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   803 ;; Tracked objects:
   804 ;;		On entry : 0/0
   805 ;;		On exit  : 0/0
   806 ;;		Unchanged: 0/0
   807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   808 ;;      Params:         1       0       0       0       0
   809 ;;      Locals:         1       0       0       0       0
   810 ;;      Temps:          3       0       0       0       0
   811 ;;      Totals:         5       0       0       0       0
   812 ;;Total ram usage:        5 bytes
   813 ;; Hardware stack levels used: 1
   814 ;; This function calls:
   815 ;;		Nothing
   816 ;; This function is called by:
   817 ;;		_main
   818 ;; This function uses a non-reentrant model
   819 ;;
   820                           
   821     06C2                     _gpio_port_read_logic:	
   822                           ;psect for function _gpio_port_read_logic
   823                           
   824                           
   825                           ;incstack = 0
   826                           ; Regs used in _gpio_port_read_logic: [wreg-fsr0h+status,2+status,0+btemp+1]
   827                           ;gpio_port_read_logic@port stored from wreg
   828     06C2  00F4               	movwf	gpio_port_read_logic@port
   829     06C3                     l869:
   830     06C3                     l871:
   831                           
   832                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 147:     if(port > 5 -1){
   833     06C3  3005               	movlw	5
   834     06C4  0274               	subwf	gpio_port_read_logic@port,w
   835     06C5  1C03               	skipc
   836     06C6  2EC8               	goto	u231
   837     06C7  2EC9               	goto	u230
   838     06C8                     u231:
   839     06C8  2ECA               	goto	l875
   840     06C9                     u230:
   841     06C9                     l873:
   842                           
   843                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 149:     }
   844     06C9  2EE0               	goto	l122
   845     06CA                     l875:
   846                           
   847                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 151:         *logic = *port_registers[port];
   848     06CA  0874               	movf	gpio_port_read_logic@port,w
   849     06CB  00F1               	movwf	??_gpio_port_read_logic
   850     06CC  0771               	addwf	??_gpio_port_read_logic,w
   851     06CD  3E20               	addlw	(low (_port_registers| 0))& (0+255)
   852     06CE  0084               	movwf	4
   853     06CF  1383               	bcf	3,7	;select IRP bank0
   854     06D0  0800               	movf	0,w
   855     06D1  00F2               	movwf	??_gpio_port_read_logic+1
   856     06D2  0A84               	incf	4,f
   857     06D3  0800               	movf	0,w
   858     06D4  00F3               	movwf	??_gpio_port_read_logic+2
   859     06D5  0872               	movf	??_gpio_port_read_logic+1,w
   860     06D6  0084               	movwf	4
   861     06D7  1783               	bsf	3,7
   862     06D8  1C73               	btfss	??_gpio_port_read_logic+2,0
   863     06D9  1383               	bcf	3,7
   864     06DA  0800               	movf	0,w
   865     06DB  00FF               	movwf	btemp+1
   866     06DC  0870               	movf	gpio_port_read_logic@logic,w
   867     06DD  0084               	movwf	4
   868     06DE  087F               	movf	btemp+1,w
   869     06DF  0080               	movwf	0
   870     06E0                     l122:
   871     06E0  0008               	return
   872     06E1                     __end_of_gpio_port_read_logic:
   873                           
   874                           	psect	text3
   875     06E1                     __ptext3:	
   876 ;; *************** function _gpio_port_direction_initialize *****************
   877 ;; Defined at:
   878 ;;		line 95 in file "MCAL_LAYER/GPIO/mcal_gpio.c"
   879 ;; Parameters:    Size  Location     Type
   880 ;;  port            1    wreg     const enum E1345
   881 ;;  direction       1    0[COMMON] enum E1356
   882 ;; Auto vars:     Size  Location     Type
   883 ;;  port            1    4[COMMON] const enum E1345
   884 ;;  ret             1    0        unsigned char 
   885 ;; Return value:  Size  Location     Type
   886 ;;                  1    wreg      unsigned char 
   887 ;; Registers used:
   888 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   889 ;; Tracked objects:
   890 ;;		On entry : 0/0
   891 ;;		On exit  : 0/0
   892 ;;		Unchanged: 0/0
   893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   894 ;;      Params:         1       0       0       0       0
   895 ;;      Locals:         1       0       0       0       0
   896 ;;      Temps:          3       0       0       0       0
   897 ;;      Totals:         5       0       0       0       0
   898 ;;Total ram usage:        5 bytes
   899 ;; Hardware stack levels used: 1
   900 ;; This function calls:
   901 ;;		Nothing
   902 ;; This function is called by:
   903 ;;		_main
   904 ;; This function uses a non-reentrant model
   905 ;;
   906                           
   907     06E1                     _gpio_port_direction_initialize:	
   908                           ;psect for function _gpio_port_direction_initialize
   909                           
   910                           
   911                           ;incstack = 0
   912                           ; Regs used in _gpio_port_direction_initialize: [wreg-fsr0h+status,2+status,0]
   913                           ;gpio_port_direction_initialize@port stored from wreg
   914     06E1  00F4               	movwf	gpio_port_direction_initialize@port
   915     06E2                     l833:
   916     06E2                     l835:
   917                           
   918                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 97:     if(port > 5 -1){
   919     06E2  3005               	movlw	5
   920     06E3  0274               	subwf	gpio_port_direction_initialize@port,w
   921     06E4  1C03               	skipc
   922     06E5  2EE7               	goto	u211
   923     06E6  2EE8               	goto	u210
   924     06E7                     u211:
   925     06E7  2F21               	goto	l845
   926     06E8                     u210:
   927     06E8                     l837:
   928                           
   929                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 99:     }
   930     06E8  2F31               	goto	l102
   931     06E9                     l839:
   932                           
   933                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 103:                 *tris_registers[port] = 0xFF;
   934     06E9  0874               	movf	gpio_port_direction_initialize@port,w
   935     06EA  00F1               	movwf	??_gpio_port_direction_initialize
   936     06EB  0771               	addwf	??_gpio_port_direction_initialize,w
   937     06EC  3E2A               	addlw	(low (_tris_registers| 0))& (0+255)
   938     06ED  0084               	movwf	4
   939     06EE  1383               	bcf	3,7	;select IRP bank0
   940     06EF  0800               	movf	0,w
   941     06F0  00F2               	movwf	??_gpio_port_direction_initialize+1
   942     06F1  0A84               	incf	4,f
   943     06F2  0800               	movf	0,w
   944     06F3  00F3               	movwf	??_gpio_port_direction_initialize+2
   945     06F4  0872               	movf	??_gpio_port_direction_initialize+1,w
   946     06F5  0084               	movwf	4
   947     06F6  1783               	bsf	3,7
   948     06F7  1C73               	btfss	??_gpio_port_direction_initialize+2,0
   949     06F8  1383               	bcf	3,7
   950     06F9  30FF               	movlw	255
   951     06FA  0080               	movwf	0
   952                           
   953                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 104:                 break;
   954     06FB  2F31               	goto	l102
   955     06FC                     l841:
   956                           
   957                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 106:                 *tris_registers[port] = 0x00;
   958     06FC  0874               	movf	gpio_port_direction_initialize@port,w
   959     06FD  00F1               	movwf	??_gpio_port_direction_initialize
   960     06FE  0771               	addwf	??_gpio_port_direction_initialize,w
   961     06FF  3E2A               	addlw	(low (_tris_registers| 0))& (0+255)
   962     0700  0084               	movwf	4
   963     0701  1383               	bcf	3,7	;select IRP bank0
   964     0702  0800               	movf	0,w
   965     0703  00F2               	movwf	??_gpio_port_direction_initialize+1
   966     0704  0A84               	incf	4,f
   967     0705  0800               	movf	0,w
   968     0706  00F3               	movwf	??_gpio_port_direction_initialize+2
   969     0707  0872               	movf	??_gpio_port_direction_initialize+1,w
   970     0708  0084               	movwf	4
   971     0709  1783               	bsf	3,7
   972     070A  1C73               	btfss	??_gpio_port_direction_initialize+2,0
   973     070B  1383               	bcf	3,7
   974     070C  0180               	clrf	0
   975                           
   976                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 107:                 break;
   977     070D  2F31               	goto	l102
   978     070E                     l843:
   979                           
   980                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 109:                 *tris_registers[port] = direction;
   981     070E  0874               	movf	gpio_port_direction_initialize@port,w
   982     070F  00F1               	movwf	??_gpio_port_direction_initialize
   983     0710  0771               	addwf	??_gpio_port_direction_initialize,w
   984     0711  3E2A               	addlw	(low (_tris_registers| 0))& (0+255)
   985     0712  0084               	movwf	4
   986     0713  1383               	bcf	3,7	;select IRP bank0
   987     0714  0800               	movf	0,w
   988     0715  00F2               	movwf	??_gpio_port_direction_initialize+1
   989     0716  0A84               	incf	4,f
   990     0717  0800               	movf	0,w
   991     0718  00F3               	movwf	??_gpio_port_direction_initialize+2
   992     0719  0872               	movf	??_gpio_port_direction_initialize+1,w
   993     071A  0084               	movwf	4
   994     071B  1783               	bsf	3,7
   995     071C  1C73               	btfss	??_gpio_port_direction_initialize+2,0
   996     071D  1383               	bcf	3,7
   997     071E  0870               	movf	gpio_port_direction_initialize@direction,w
   998     071F  0080               	movwf	0
   999                           
  1000                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 110:         }
  1001     0720  2F31               	goto	l102
  1002     0721                     l845:
  1003     0721  0870               	movf	gpio_port_direction_initialize@direction,w
  1004     0722  00F1               	movwf	??_gpio_port_direction_initialize
  1005     0723  01F2               	clrf	??_gpio_port_direction_initialize+1
  1006                           
  1007                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1008                           ; Switch size 1, requested type "simple"
  1009                           ; Number of cases is 1, Range of values is 0 to 0
  1010                           ; switch strategies available:
  1011                           ; Name         Instructions Cycles
  1012                           ; simple_byte            4     3 (average)
  1013                           ; direct_byte           11     8 (fixed)
  1014                           ; jumptable            260     6 (fixed)
  1015                           ;	Chosen strategy is simple_byte
  1016     0724  0872               	movf	??_gpio_port_direction_initialize+1,w
  1017     0725  3A00               	xorlw	0	; case 0
  1018     0726  1903               	skipnz
  1019     0727  2F29               	goto	l997
  1020     0728  2F0E               	goto	l843
  1021     0729                     l997:
  1022                           
  1023                           ; Switch size 1, requested type "simple"
  1024                           ; Number of cases is 2, Range of values is 0 to 1
  1025                           ; switch strategies available:
  1026                           ; Name         Instructions Cycles
  1027                           ; simple_byte            7     4 (average)
  1028                           ; direct_byte           14     8 (fixed)
  1029                           ; jumptable            260     6 (fixed)
  1030                           ;	Chosen strategy is simple_byte
  1031     0729  0871               	movf	??_gpio_port_direction_initialize,w
  1032     072A  3A00               	xorlw	0	; case 0
  1033     072B  1903               	skipnz
  1034     072C  2EFC               	goto	l841
  1035     072D  3A01               	xorlw	1	; case 1
  1036     072E  1903               	skipnz
  1037     072F  2EE9               	goto	l839
  1038     0730  2F0E               	goto	l843
  1039     0731                     l102:
  1040     0731  0008               	return
  1041     0732                     __end_of_gpio_port_direction_initialize:
  1042                           
  1043                           	psect	text4
  1044     06A3                     __ptext4:	
  1045 ;; *************** function _gpio_get_port_direction *****************
  1046 ;; Defined at:
  1047 ;;		line 115 in file "MCAL_LAYER/GPIO/mcal_gpio.c"
  1048 ;; Parameters:    Size  Location     Type
  1049 ;;  port            1    wreg     const enum E1345
  1050 ;;  direction       1    0[COMMON] PTR enum E1356
  1051 ;;		 -> direction(1), 
  1052 ;; Auto vars:     Size  Location     Type
  1053 ;;  port            1    4[COMMON] const enum E1345
  1054 ;;  ret             1    0        unsigned char 
  1055 ;; Return value:  Size  Location     Type
  1056 ;;                  1    wreg      unsigned char 
  1057 ;; Registers used:
  1058 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1059 ;; Tracked objects:
  1060 ;;		On entry : 0/0
  1061 ;;		On exit  : 0/0
  1062 ;;		Unchanged: 0/0
  1063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1064 ;;      Params:         1       0       0       0       0
  1065 ;;      Locals:         1       0       0       0       0
  1066 ;;      Temps:          3       0       0       0       0
  1067 ;;      Totals:         5       0       0       0       0
  1068 ;;Total ram usage:        5 bytes
  1069 ;; Hardware stack levels used: 1
  1070 ;; This function calls:
  1071 ;;		Nothing
  1072 ;; This function is called by:
  1073 ;;		_main
  1074 ;; This function uses a non-reentrant model
  1075 ;;
  1076                           
  1077     06A3                     _gpio_get_port_direction:	
  1078                           ;psect for function _gpio_get_port_direction
  1079                           
  1080                           
  1081                           ;incstack = 0
  1082                           ; Regs used in _gpio_get_port_direction: [wreg-fsr0h+status,2+status,0+btemp+1]
  1083                           ;gpio_get_port_direction@port stored from wreg
  1084     06A3  00F4               	movwf	gpio_get_port_direction@port
  1085     06A4                     l879:
  1086     06A4                     l881:
  1087                           
  1088                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 117:     if(port > 5 -1){
  1089     06A4  3005               	movlw	5
  1090     06A5  0274               	subwf	gpio_get_port_direction@port,w
  1091     06A6  1C03               	skipc
  1092     06A7  2EA9               	goto	u241
  1093     06A8  2EAA               	goto	u240
  1094     06A9                     u241:
  1095     06A9  2EAB               	goto	l885
  1096     06AA                     u240:
  1097     06AA                     l883:
  1098                           
  1099                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 119:     }
  1100     06AA  2EC1               	goto	l107
  1101     06AB                     l885:
  1102                           
  1103                           ;MCAL_LAYER/GPIO/mcal_gpio.c: 121:         *direction = *tris_registers[port];
  1104     06AB  0874               	movf	gpio_get_port_direction@port,w
  1105     06AC  00F1               	movwf	??_gpio_get_port_direction
  1106     06AD  0771               	addwf	??_gpio_get_port_direction,w
  1107     06AE  3E2A               	addlw	(low (_tris_registers| 0))& (0+255)
  1108     06AF  0084               	movwf	4
  1109     06B0  1383               	bcf	3,7	;select IRP bank0
  1110     06B1  0800               	movf	0,w
  1111     06B2  00F2               	movwf	??_gpio_get_port_direction+1
  1112     06B3  0A84               	incf	4,f
  1113     06B4  0800               	movf	0,w
  1114     06B5  00F3               	movwf	??_gpio_get_port_direction+2
  1115     06B6  0872               	movf	??_gpio_get_port_direction+1,w
  1116     06B7  0084               	movwf	4
  1117     06B8  1783               	bsf	3,7
  1118     06B9  1C73               	btfss	??_gpio_get_port_direction+2,0
  1119     06BA  1383               	bcf	3,7
  1120     06BB  0800               	movf	0,w
  1121     06BC  00FF               	movwf	btemp+1
  1122     06BD  0870               	movf	gpio_get_port_direction@direction,w
  1123     06BE  0084               	movwf	4
  1124     06BF  087F               	movf	btemp+1,w
  1125     06C0  0080               	movwf	0
  1126     06C1                     l107:
  1127     06C1  0008               	return
  1128     06C2                     __end_of_gpio_get_port_direction:
  1129     007E                     btemp	set	126	;btemp
  1130     007E                     wtemp0	set	126
  1131                           
  1132                           	psect	config
  1133                           
  1134                           ;Config register CONFIG @ 0x2007
  1135                           ;	Oscillator Selection bits
  1136                           ;	FOSC = HS, HS oscillator
  1137                           ;	Watchdog Timer Enable bit
  1138                           ;	WDTE = OFF, WDT disabled
  1139                           ;	Power-up Timer Enable bit
  1140                           ;	PWRTE = ON, PWRT enabled
  1141                           ;	Brown-out Reset Enable bit
  1142                           ;	BOREN = ON, BOR enabled
  1143                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1144                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1145                           ;	Data EEPROM Memory Code Protection bit
  1146                           ;	CPD = OFF, Data EEPROM code protection off
  1147                           ;	Flash Program Memory Write Enable bits
  1148                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1149                           ;	In-Circuit Debugger Mode bit
  1150                           ;	DEBUG = 0x1, unprogrammed default
  1151                           ;	Flash Program Memory Code Protection bit
  1152                           ;	CP = OFF, Code protection off
  1153     2007                     	org	8199
  1154     2007  3F72               	dw	16242

Data Sizes:
    Strings     0
    Constant    0
    Data        22
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      12
    BANK0            80      0      20
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    gpio_get_port_direction@direction	PTR enum E1356 size(1) Largest target is 1
		 -> direction(COMMON[1]), 

    gpio_port_read_logic@logic	PTR enum E1352 size(1) Largest target is 1
		 -> logic(COMMON[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTB(SFR0[1]), PORTC(SFR0[1]), PORTD(SFR0[1]), 
		 -> PORTE(SFR0[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(SFR1[1]), TRISB(SFR1[1]), TRISC(SFR1[1]), TRISD(SFR1[1]), 
		 -> TRISE(SFR1[1]), 


Critical Paths under _main in COMMON

    _main->_gpio_get_port_direction
    _main->_gpio_port_direction_initialize
    _main->_gpio_port_read_logic
    _main->_gpio_port_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1036
                                              5 COMMON     3     3      0
            _gpio_get_port_direction
     _gpio_port_direction_initialize
               _gpio_port_read_logic
              _gpio_port_write_logic
 ---------------------------------------------------------------------------------
 (1) _gpio_port_write_logic                                6     5      1     292
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (1) _gpio_port_read_logic                                 6     5      1     226
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (1) _gpio_port_direction_initialize                       6     5      1     292
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (1) _gpio_get_port_direction                              6     5      1     226
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _gpio_get_port_direction
   _gpio_port_direction_initialize
   _gpio_port_read_logic
   _gpio_port_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      14       5       25.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      20      12        0.0%
ABS                  0      0      20       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Jul 08 07:41:37 2024

                                      pc 0002                                       fsr 0004  
                                    l102 0731                                      l122 06E0  
                                    l107 06C1                                      l117 0782  
                                    l841 06FC                                      l833 06E2  
                                    l921 0783                                      l843 070E  
                                    l835 06E2                                      l851 0733  
                                    l931 07C5                                      l923 0793  
                                    l837 06E8                                      l845 0721  
                                    l861 075F                                      l853 0733  
                                    l933 07CC                                      l925 07A0  
                                    l839 06E9                                      l871 06C3  
                                    l855 0739                                      l863 0772  
                                    l935 07D4                                      l927 07A8  
                                    l881 06A4                                      l873 06C9  
                                    l857 073A                                      l929 07B0  
                                    l883 06AA                                      l875 06CA  
                                    l859 074D                                      l885 06AB  
                                    l869 06C3                                      l879 06A4  
                                    l995 077A                                      l997 0729  
                                    u210 06E8                                      u211 06E7  
                                    u220 0739                                      u221 0738  
                                    u230 06C9                                      u231 06C8  
                                    u240 06AA                                      u241 06A9  
                                    u417 0799                                      u427 07BE  
                                    _pin 007B                                      fsr0 0004  
                                    indf 0000                                     _main 0783  
                                   _pin2 007A                                     btemp 007E  
                                   start 0000                    _gpio_port_write_logic 0732  
                                  ?_main 0070                                    _PORTA 0005  
                                  _PORTB 0006                                    _PORTC 0007  
                                  _PORTD 0008                                    _PORTE 0009  
                                  _TRISA 0085                                    _TRISB 0086  
                                  _TRISC 0087                                    _TRISD 0088  
                                  _TRISE 0089                 gpio_port_read_logic@port 0074  
                                  _logic 0079                                    pclath 000A  
                                  status 0003                                    wtemp0 007E  
                        __initialization 07E0                             __end_of_main 07E0  
                _gpio_get_port_direction 06A3                                   ??_main 0075  
            gpio_get_port_direction@port 0074                gpio_port_write_logic@port 0074  
 __end_of_gpio_port_direction_initialize 0732           _gpio_port_direction_initialize 06E1  
                 ?_gpio_port_write_logic 0070                             __pdataCOMMON 007A  
       gpio_get_port_direction@direction 0070             __end_of_gpio_port_read_logic 06E1  
                __end_of__initialization 07FC                ??_gpio_get_port_direction 0071  
                         __pcstackCOMMON 0070                             __pidataBANK0 068F  
                             __pmaintext 0783          __end_of_gpio_get_port_direction 06C2  
                         _tris_registers 002A                     _gpio_port_read_logic 06C2  
                                __ptext1 0732                                  __ptext2 06C2  
                                __ptext3 06E1                                  __ptext4 06A3  
                   end_of_initialization 07FC                  ??_gpio_port_write_logic 0071  
                  ?_gpio_port_read_logic 0070  gpio_port_direction_initialize@direction 0070  
                          __pidataCOMMON 067A                      start_initialization 07E0  
                 ??_gpio_port_read_logic 0071                               init_fetch0 067C  
                            __pdataBANK0 0020                              __pbssCOMMON 0078  
                              ___latbits 0002                 ?_gpio_get_port_direction 0070  
                              _direction 0078            __end_of_gpio_port_write_logic 0783  
              gpio_port_read_logic@logic 0070         ??_gpio_port_direction_initialize 0071  
        ?_gpio_port_direction_initialize 0070       gpio_port_direction_initialize@port 0074  
                               init_ram0 0680                           _port_registers 0020  
             gpio_port_write_logic@logic 0070  
